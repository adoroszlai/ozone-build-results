2024-11-16 17:33:54,866 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:33:55,140 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:33:55,145 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:33:55,156 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:55,158 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:55,222 [setup] WARN  impl.MetricsConfig (MetricsConfig.java:loadFirst(136)) - Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
2024-11-16 17:33:55,341 [setup] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:getMetricsSystem(250)) - Metrics system inited org.apache.hadoop.metrics2.impl.MetricsSystemImpl@38643920
2024-11-16 17:33:55,350 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:33:55,351 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:33:55,352 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:33:55,353 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:33:55,353 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:33:55,353 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:33:55,354 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:33:55,357 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:33:55,357 [setup] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:33:55,362 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:33:55,369 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:55,369 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:55,370 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:33:55,370 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:33:55,370 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:33:55,382 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:33:55,382 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:33:55,383 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:33:55,383 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:33:55,636 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8]
2024-11-16 17:33:55,636 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8]
2024-11-16 17:33:55,651 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:33:55,863 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:33:55,864 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:33:55,864 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:33:55,867 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:33:55,867 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:33:55,873 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:33:55,877 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:55,953 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:33:55,955 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:33:55,971 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:33:55,972 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:33:56,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:33:56,139 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:33:56,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:33:56,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:33:56,146 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:33:56,147 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:33:56,150 [setup] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:33:56,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:33:56,150 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:33:56,150 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:33:56,151 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:33:56,152 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:33:56,152 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:33:56,152 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:33:56,152 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:33:56,153 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:33:56,178 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8], delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_mkdirs=0) (committer_commits_reverted=0) (stream_read_opened=0) (stream_read_total_bytes=0) (committer_commits_aborted=0) (stream_read_closed=0) (stream_read_seek_policy_changed=0) (op_copy_from_local_file=0) (committer_bytes_uploaded=0) (stream_read_fully_operations=0) (op_list_located_status=0) (action_http_get_request.failures=0) (op_createfile.failures=0) (op_abort.failures=0) (directories_deleted=0) (op_get_file_checksum.failures=0) (object_bulk_delete_request.failures=0) (stream_read_exceptions=0) (object_put_request_completed=0) (stream_read_seek_bytes_discarded=0) (object_delete_request=0) (committer_jobs_failed=0) (committer_stage_file_upload.failures=0) (committer_jobs_completed=0) (object_continue_list_request.failures=0) (object_put_request.failures=0) (stream_read_seek_forward_operations=0) (op_get_delegation_token.failures=0) (action_file_opened=0) (stream_write_total_data=0) (multipart_upload_started=0) (action_http_head_request.failures=0) (stream_write_queue_duration.failures=0) (stream_write_exceptions_completing_upload=0) (object_list_request.failures=0) (op_get_content_summary=0) (object_multipart_aborted.failures=0) (delegation_tokens_issued=0) (op_abort=0) (stream_read_bytes_discarded_in_abort=0) (committer_tasks_completed=0) (op_list_files.failures=0) (object_continue_list_request=0) (directories_created=0) (op_rename=0) (action_file_opened.failures=0) (object_copy_requests=0) (op_delete=0) (object_select_requests=0) (files_deleted=0) (op_xattr_get_named.failures=0) (op_xattr_get_map.failures=0) (committer_bytes_committed=0) (stream_read_remote_stream_aborted.failures=0) (fake_directories_created=0) (object_multipart_aborted=0) (stream_write_block_uploads_aborted=0) (multipart_upload_list.failures=0) (op_createfile=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain=0) (op_delete.failures=0) (committer_materialize_file=0) (action_executor_acquired=0) (committer_commit_job=0) (object_delete_request.failures=0) (op_get_file_status.failures=0) (files_delete_rejected=0) (stream_write_queue_duration=0) (stream_write_block_uploads_committed=0) (op_glob_status.failures=0) (store_exists_probe.failures=0) (files_copied=0) (stream_read_seek_operations=0) (op_create=0) (op_xattr_list=0) (committer_stage_file_upload=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain.failures=0) (committer_magic_marker_put=0) (object_metadata_request=0) (op_rename.failures=0) (committer_commits_created=0) (store_exists_probe=0) (stream_read_vectored_incoming_ranges=0) (stream_read_operations_incomplete=0) (stream_read_close_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_write_exceptions=0) (store_io_request=0) (op_access.failures=0) (op_is_directory=0) (committer_magic_marker_put.failures=0) (op_is_file.failures=0) (multipart_upload_part_put=0) (op_xattr_get_named_map=0) (stream_aborted=0) (committer_magic_files_created=0) (op_open=0) (action_executor_acquired.failures=0) (op_hsync=0) (fake_directories_deleted=0) (multipart_upload_part_put_bytes=0) (op_xattr_list.failures=0) (op_is_file=0) (stream_read_vectored_combined_ranges=0) (object_list_request=0) (op_access=0) (op_list_status=0) (stream_read_remote_stream_aborted=0) (op_create.failures=0) (files_copied_bytes=0) (files_created=0) (stream_read_operations=0) (stream_read_bytes=0) (op_xattr_get_named=0) (op_copy_from_local_file.failures=0) (committer_materialize_file.failures=0) (audit_span_creation=1) (stream_read_seek_bytes_skipped=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_map=0) (op_xattr_get_named_map.failures=0) (op_hflush=0) (object_multipart_initiated=0) (op_get_file_checksum=0) (multipart_upload_completed=0) (op_list_status.failures=0) (object_put_bytes=0) (op_glob_status=0) (object_bulk_delete_request=0) (stream_read_seek_backward_operations=0) (stream_read_version_mismatches=0) (committer_commit_job.failures=0) (audit_access_check_failure=0) (stream_read_bytes_backwards_on_seek=0) (audit_failure=0) (stream_read_unbuffered=0) (ignored_errors=0) (op_get_file_status=0) (store_io_retry=0) (object_put_request=0) (op_get_delegation_token=0) (store_io_throttled=0) (delegation_tokens_issued.failures=0) (stream_read_vectored_read_bytes_discarded=0) (object_delete_objects=0) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads=0) (action_http_get_request=0) (multipart_instantiated=0) (multipart_upload_aborted=0) (committer_load_single_pending_file=0) (op_openfile=0) (committer_commits_completed=0) (op_is_directory.failures=0) (action_http_head_request=0) (op_create_non_recursive=0) (committer_commits.failures=0) (audit_request_execution=0) (op_get_content_summary.failures=0) (object_multipart_initiated.failures=0) (op_list_files=0) (op_exists=0) (stream_write_total_time=0) (stream_write_bytes=0) (committer_tasks_failed=0) (op_exists.failures=0) (multipart_upload_list=0));
gauges=((stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((object_put_request.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_access.failures.min=-1) (committer_magic_marker_put.min=-1) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_create.failures.min=-1) (committer_materialize_file.min=-1) (store_exists_probe.min=-1) (object_continue_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_mkdirs.min=-1) (object_put_request.failures.min=-1) (op_list_status.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (op_is_file.min=-1) (op_get_file_checksum.failures.min=-1) (action_http_head_request.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_map.min=-1) (op_get_file_checksum.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.min=-1) (op_exists.min=-1) (committer_stage_file_upload.failures.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (object_continue_list_request.min=-1) (committer_commit_job.failures.min=-1) (op_createfile.failures.min=-1) (op_createfile.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_list.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_status.failures.min=-1) (object_bulk_delete_request.min=-1) (object_delete_request.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.min=-1) (op_access.min=-1) (op_get_delegation_token.min=-1) (op_delete.min=-1) (delegation_tokens_issued.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_commit_job.min=-1) (action_file_opened.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_delete.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.failures.min=-1) (op_abort.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named_map.min=-1) (multipart_upload_list.min=-1) (action_http_get_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_rename.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_write_queue_duration.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_aborted.min=-1) (op_is_directory.min=-1) (op_list_files.min=-1) (object_list_request.min=-1));
maximums=((committer_materialize_file.max=-1) (op_is_directory.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_content_summary.max=-1) (op_get_file_status.max=-1) (op_xattr_get_named.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.failures.max=-1) (op_is_directory.max=-1) (object_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (action_file_opened.failures.max=-1) (op_createfile.max=-1) (action_file_opened.max=-1) (op_mkdirs.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.failures.max=-1) (op_create.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_glob_status.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=-1) (object_continue_list_request.failures.max=-1) (op_list_status.max=-1) (object_multipart_aborted.failures.max=-1) (object_delete_request.max=-1) (op_delete.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.max=-1) (action_http_get_request.failures.max=-1) (op_create.max=-1) (op_rename.failures.max=-1) (op_copy_from_local_file.max=-1) (object_put_request.max=-1) (multipart_upload_list.failures.max=-1) (action_executor_acquired.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (store_exists_probe.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_files.max=-1) (object_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_bulk_delete_request.max=-1) (committer_commit_job.max=-1) (op_list_files.failures.max=-1) (op_is_file.failures.max=-1) (op_access.max=-1) (op_list_status.failures.max=-1) (op_abort.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.max=-1) (committer_commit_job.failures.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (op_delete.max=-1) (object_continue_list_request.max=-1) (op_get_file_checksum.failures.max=-1) (op_access.failures.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_list.max=-1) (op_get_content_summary.failures.max=-1) (op_exists.max=-1) (object_list_request.max=-1));
means=((op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:33:56,187 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:33:56,188 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:56,189 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:56,192 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:56,192 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:56,193 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000005 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000005&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=16&ts=1731778436186
2024-11-16 17:33:56,207 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:33:56,227 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.020s
2024-11-16 17:33:56,228 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:33:56,230 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:33:56,436 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.244s
2024-11-16 17:33:56,436 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:56,437 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:56,437 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:56,440 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:56,440 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000005 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000005&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=16&ts=1731778436186
2024-11-16 17:33:56,453 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:56,455 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:33:56,458 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:33:56,458 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:33:56,459 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000005 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000005&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=16&ts=1731778436186
2024-11-16 17:33:56,579 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:33:56,580 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:33:56,580 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.125s
2024-11-16 17:33:56,581 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:33:56,589 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:56,589 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:56,590 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:56,590 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:56,593 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000006 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000006&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=16&ts=1731778436587
2024-11-16 17:33:56,614 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.024s
2024-11-16 17:33:56,615 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:56,621 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:56,651 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5616928598058354028.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:33:56,656 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5616928598058354028.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (stream_write_total_data=0) (committer_magic_marker_put=0) (op_abort=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (op_hsync=0) (object_put_request=0) (op_hflush=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5616928598058354028.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:33:56,657 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:56,657 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:33:56,657 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5616928598058354028.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:33:56,665 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:33:56,666 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:33:56,667 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:33:56,667 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:33:56,668 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000006 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000006&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=31&ts=1731778436587
2024-11-16 17:33:56,769 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:33:56,769 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:33:56,769 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.103s
2024-11-16 17:33:56,771 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5616928598058354028.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:33:56,773 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5616928598058354028.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:56,773 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5616928598058354028.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:56,773 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:33:56,775 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:56,787 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_queue_duration=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (op_abort=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (stream_write_exceptions=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=98) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=98) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=98, mean=98.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:33:56,789 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:33:56,792 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:33:56,792 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:33:56,795 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:56,796 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:56,801 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:33:56,802 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:33:56,802 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:33:56,802 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:33:56,802 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:33:56,802 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:33:56,803 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:33:56,803 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:33:56,803 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:33:56,803 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:33:56,804 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='ecefc7eb-1594-4b76-88b5-934768786768', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:56,804 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='ecefc7eb-1594-4b76-88b5-934768786768', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:56,804 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='ecefc7eb-1594-4b76-88b5-934768786768', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:33:56,804 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:33:56,804 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:33:56,805 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:33:56,805 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:33:56,806 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:33:56,806 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:33:56,806 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@772b8fab]
2024-11-16 17:33:56,806 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@772b8fab]
2024-11-16 17:33:56,807 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:33:56,807 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:33:56,807 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:33:56,807 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:33:56,807 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:33:56,808 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:33:56,808 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:33:56,808 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:56,808 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:33:56,809 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:33:56,809 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:33:56,809 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:33:56,811 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:33:56,811 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:33:56,812 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:33:56,812 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:33:56,812 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:33:56,812 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:33:56,812 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:33:56,812 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:33:56,813 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:33:56,813 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:33:56,813 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:33:56,813 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:33:56,813 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:33:56,814 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:33:56,814 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:33:56,814 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:33:56,819 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:56,819 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:56,819 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:33:56,820 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] ecefc7eb-1594-4b76-88b5-934768786768-00000009 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/ecefc7eb-1594-4b76-88b5-934768786768-00000009/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=ecefc7eb-1594-4b76-88b5-934768786768-00000009&t0=16&fs=ecefc7eb-1594-4b76-88b5-934768786768&t1=16&ts=1731778436818
2024-11-16 17:33:56,820 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:33:56,821 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:33:56,821 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:33:56,821 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:33:56,832 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:33:56,835 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:56,838 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:56,882 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_unbuffered=0) (stream_read_vectored_operations=0) (action_http_get_request=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_prefetch_operations=0) (stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_closed=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_read=0) (stream_read_bytes=0) (stream_read_block_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_total_bytes=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_opened=0) (action_executor_acquired=0) (stream_read_fully_operations=0) (stream_read_close_operations=1) (stream_read_seek_forward_operations=0) (action_file_opened.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=15) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=15) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=15, mean=15.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:56,887 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:33:56,888 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:33:56,889 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:33:56,889 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@1232b3d[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:33:56,889 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:33:56,889 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics2-obs-bucket
2024-11-16 17:33:56,891 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:33:56,892 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@772b8fab] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:33:56,893 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@772b8fab] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:33:56,902 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((multipart_instantiated=0) (stream_read_exceptions=0) (op_xattr_get_map=0) (stream_write_block_uploads_committed=0) (fake_directories_deleted=0) (object_delete_request.failures=0) (op_is_directory.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_list.failures=0) (multipart_upload_started=0) (op_get_file_status.failures=0) (op_access.failures=0) (op_list_located_status=0) (committer_bytes_uploaded=0) (store_io_request=1) (object_continue_list_request=0) (multipart_upload_aborted=0) (committer_load_single_pending_file.failures=0) (action_http_head_request=1) (committer_commit_job=0) (object_bulk_delete_request.failures=0) (op_list_status.failures=0) (op_is_file.failures=0) (op_mkdirs.failures=0) (committer_tasks_completed=0) (stream_write_total_time=0) (op_get_content_summary=0) (store_exists_probe.failures=0) (object_copy_requests=0) (committer_load_single_pending_file=0) (op_copy_from_local_file.failures=0) (object_delete_objects=0) (stream_read_bytes_discarded_in_abort=0) (committer_tasks_failed=0) (files_copied_bytes=0) (committer_commits_completed=0) (op_xattr_list.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_hflush=0) (object_multipart_initiated=0) (op_get_file_checksum.failures=0) (files_deleted=0) (stream_write_exceptions_completing_upload=0) (committer_stage_file_upload=0) (op_hsync=0) (object_metadata_request=1) (stream_read_unbuffered=0) (committer_commits_reverted=0) (op_createfile.failures=0) (op_glob_status.failures=0) (stream_read_seek_policy_changed=1) (op_create_non_recursive=0) (op_openfile=0) (stream_read_seek_bytes_discarded=0) (object_put_request_completed=0) (committer_magic_files_created=0) (store_io_retry=0) (op_create.failures=0) (op_exists.failures=0) (stream_write_block_uploads_aborted=0) (committer_magic_marker_put=0) (action_file_opened=1) (stream_write_block_uploads=0) (stream_read_version_mismatches=0) (directories_deleted=0) (files_created=0) (audit_span_creation=2) (stream_read_bytes=0) (op_mkdirs=0) (stream_read_remote_stream_drain=0) (op_rename=0) (stream_read_opened=0) (stream_write_queue_duration.failures=0) (object_multipart_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_total_bytes=0) (op_create=0) (op_get_file_checksum=0) (stream_write_bytes=0) (op_copy_from_local_file=0) (op_get_content_summary.failures=0) (store_io_throttled=0) (action_http_head_request.failures=0) (stream_aborted=0) (committer_commit_job.failures=0) (committer_commits.failures=0) (object_put_request=0) (delegation_tokens_issued.failures=0) (object_multipart_aborted.failures=0) (audit_failure=0) (op_xattr_get_named=0) (audit_access_check_failure=0) (op_xattr_list=0) (action_file_opened.failures=0) (stream_read_operations=0) (op_xattr_get_named.failures=0) (multipart_upload_abort_under_path_invoked=0) (ignored_errors=0) (committer_bytes_committed=0) (stream_read_seek_operations=0) (stream_write_exceptions=0) (committer_jobs_failed=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (object_put_bytes=0) (audit_request_execution=1) (object_list_request.failures=0) (store_exists_probe=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (files_copied=0) (op_get_delegation_token.failures=0) (directories_created=0) (op_is_file=0) (op_get_delegation_token=0) (action_executor_acquired.failures=0) (op_delete=0) (op_list_status=0) (op_xattr_get_named_map.failures=0) (stream_read_vectored_operations=0) (files_delete_rejected=0) (op_abort=0) (stream_read_closed=0) (action_http_get_request=0) (op_list_files=0) (op_xattr_get_map.failures=0) (stream_read_seek_forward_operations=0) (object_delete_request=0) (object_continue_list_request.failures=0) (delegation_tokens_issued=0) (stream_read_vectored_incoming_ranges=0) (object_put_request.failures=0) (committer_commits_created=0) (op_glob_status=0) (fake_directories_created=0) (committer_materialize_file.failures=0) (op_delete.failures=0) (op_access=0) (op_list_files.failures=0) (multipart_upload_list=0) (stream_read_seek_backward_operations=0) (op_open=1) (stream_read_close_operations=1) (multipart_upload_completed=0) (committer_commits_aborted=0) (op_is_directory=0) (committer_jobs_completed=0) (object_select_requests=0) (stream_write_queue_duration=0) (multipart_upload_part_put_bytes=0) (stream_read_vectored_combined_ranges=0) (object_bulk_delete_request=0) (stream_read_bytes_discarded_in_close=0) (op_createfile=0) (committer_materialize_file=0) (op_get_file_status=0) (op_rename.failures=0) (committer_stage_file_upload.failures=0) (stream_write_total_data=0) (stream_read_remote_stream_drain.failures=0) (op_exists=0) (stream_read_fully_operations=0) (multipart_upload_part_put=0) (object_list_request=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (op_xattr_get_named_map=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((op_xattr_get_map.failures.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_list.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.min=-1) (action_http_head_request.min=13) (op_is_directory.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_list.failures.min=-1) (op_abort.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (op_access.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.min=-1) (stream_write_queue_duration.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_put_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_exists.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_status.failures.min=-1) (op_is_file.min=-1) (op_copy_from_local_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_bulk_delete_request.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_get_request.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_delegation_token.min=-1) (op_is_file.failures.min=-1) (op_exists.min=-1) (op_list_files.min=-1) (op_create.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1) (op_list_status.min=-1) (op_abort.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.min=-1) (op_get_file_status.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_directory.min=-1) (op_get_content_summary.failures.min=-1) (op_rename.min=-1) (multipart_upload_list.min=-1) (op_delete.failures.min=-1) (op_glob_status.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (object_list_request.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_createfile.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_rename.failures.min=-1) (object_put_request.min=-1) (op_xattr_get_named.min=-1) (op_get_content_summary.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.min=-1) (op_access.min=-1) (action_file_opened.min=15) (op_get_file_checksum.failures.min=-1) (object_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_stage_file_upload.min=-1));
maximums=((store_exists_probe.max=-1) (object_delete_request.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_checksum.max=-1) (op_abort.max=-1) (object_bulk_delete_request.failures.max=-1) (object_list_request.max=-1) (object_multipart_aborted.max=-1) (op_mkdirs.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_copy_from_local_file.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_access.max=-1) (op_xattr_get_named.failures.max=-1) (committer_commit_job.failures.max=-1) (op_access.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=15) (op_copy_from_local_file.failures.max=-1) (op_is_file.max=-1) (object_put_request.failures.max=-1) (op_exists.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.max=13) (op_xattr_get_named_map.failures.max=-1) (op_delete.max=-1) (op_xattr_get_named.max=-1) (op_abort.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_content_summary.max=-1) (object_bulk_delete_request.max=-1) (op_delete.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (multipart_upload_list.max=-1) (op_exists.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.failures.max=-1) (op_is_directory.max=-1) (op_createfile.max=-1) (op_list_files.failures.max=-1) (op_is_directory.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_rename.failures.max=-1) (delegation_tokens_issued.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.max=-1) (action_http_head_request.failures.max=-1) (op_list_files.max=-1) (object_continue_list_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.failures.max=-1) (committer_materialize_file.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (op_get_file_status.max=-1) (op_create.failures.max=-1) (object_put_request.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.max=-1) (op_list_status.max=-1) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_stage_file_upload.failures.max=-1) (op_rename.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.max=-1) (op_create.max=-1) (action_http_get_request.max=-1));
means=((op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=13, mean=13.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=15, mean=15.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:56,905 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:33:56,905 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:56,906 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:56,906 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=16&ts=1731778436904
2024-11-16 17:33:56,913 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:56,913 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:56,914 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=16&ts=1731778436904
2024-11-16 17:33:56,930 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:33:56,932 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:33:56,932 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:33:56,932 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:33:56,932 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:33:56,933 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:33:56,933 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:33:56,933 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:33:56,934 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:33:56,934 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:33:56,936 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:33:56,937 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:33:56,939 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:33:56,940 [s3a-transfer-obs-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:33:56,941 [s3a-transfer-obs-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:56,942 [s3a-transfer-obs-bucket-unbounded-pool2-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [35] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=35&ts=1731778436904
2024-11-16 17:33:56,958 [s3a-transfer-obs-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:33:56,958 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.019s
2024-11-16 17:33:56,959 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:33:56,959 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:33:56,959 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:33:56,960 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778436750; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:33:56,960 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:33:56,962 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:33:56,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:33:56,964 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:33:56,965 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:33:56,965 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:33:56,966 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:33:56,967 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:33:56,967 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:56,967 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:56,967 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:33:56,968 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:56,970 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=36&ts=1731778436904
2024-11-16 17:33:56,991 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.023s
2024-11-16 17:33:56,992 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.025s
2024-11-16 17:33:56,992 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.025s
2024-11-16 17:33:56,993 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:33:56,993 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:33:56,993 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:56,995 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:56,995 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:33:56,995 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:56,996 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000010&t0=16&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=36&ts=1731778436904
2024-11-16 17:33:57,019 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.024s
2024-11-16 17:33:57,019 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.026s
2024-11-16 17:33:57,019 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.026s
2024-11-16 17:33:57,019 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.054s
2024-11-16 17:33:57,019 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.054s
2024-11-16 17:33:57,020 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.086s
2024-11-16 17:33:57,021 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:33:57,021 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:33:57,026 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:33:57,068 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe=0) (op_exists=0) (stream_write_total_time=0) (action_http_head_request=2) (op_hflush=0) (stream_read_fully_operations=0) (committer_commits_created=0) (files_deleted=1) (stream_read_bytes_discarded_in_close=0) (multipart_instantiated=0) (stream_read_version_mismatches=0) (files_copied_bytes=0) (stream_read_total_bytes=0) (object_continue_list_request.failures=0) (stream_read_seek_policy_changed=0) (multipart_upload_completed=0) (object_put_bytes=65536) (op_create_non_recursive=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_map.failures=0) (multipart_upload_list=0) (delegation_tokens_issued.failures=0) (op_rename.failures=0) (op_get_delegation_token.failures=0) (action_http_get_request.failures=0) (op_createfile.failures=0) (op_get_file_status.failures=0) (op_is_directory=0) (op_exists.failures=0) (stream_write_exceptions_completing_upload=0) (audit_access_check_failure=0) (store_exists_probe.failures=0) (op_get_content_summary.failures=0) (op_glob_status.failures=0) (committer_load_single_pending_file.failures=0) (committer_commits_aborted=0) (op_list_files.failures=0) (op_list_located_status=0) (op_list_files=0) (op_access.failures=0) (op_mkdirs=1) (op_copy_from_local_file.failures=0) (stream_read_seek_bytes_discarded=0) (committer_commits.failures=0) (op_is_file=0) (audit_failure=0) (object_multipart_aborted.failures=0) (action_file_opened.failures=0) (op_hsync=0) (stream_read_bytes_discarded_in_abort=0) (op_create=1) (object_list_request.failures=0) (object_put_request=2) (multipart_upload_list.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_exceptions=0) (committer_jobs_completed=0) (stream_write_bytes=65536) (files_created=1) (op_createfile=0) (object_list_request=4) (stream_read_seek_forward_operations=0) (op_glob_status=0) (directories_created=1) (stream_read_remote_stream_aborted.failures=0) (stream_write_block_uploads_aborted=0) (committer_materialize_file.failures=0) (object_bulk_delete_request=2) (directories_deleted=0) (op_create.failures=0) (committer_commit_job.failures=0) (committer_bytes_uploaded=0) (op_get_delegation_token=0) (stream_write_total_data=131072) (op_abort=0) (stream_write_exceptions=0) (store_io_throttled=0) (op_delete=1) (files_copied=0) (stream_read_operations=0) (stream_read_seek_operations=0) (committer_stage_file_upload.failures=0) (stream_read_remote_stream_aborted=0) (multipart_upload_aborted=0) (op_xattr_get_map=0) (stream_write_block_uploads_committed=0) (op_xattr_list=0) (fake_directories_created=0) (committer_load_single_pending_file=0) (committer_magic_marker_put.failures=0) (object_copy_requests=0) (action_executor_acquired.failures=0) (action_http_head_request.failures=0) (stream_read_operations_incomplete=0) (committer_stage_file_upload=0) (multipart_upload_started=0) (multipart_upload_part_put_bytes=0) (object_metadata_request=2) (op_copy_from_local_file=0) (committer_tasks_completed=0) (stream_read_close_operations=0) (op_rename=0) (object_bulk_delete_request.failures=0) (committer_materialize_file=0) (op_get_file_checksum.failures=0) (op_mkdirs.failures=0) (audit_span_creation=4) (action_http_get_request=0) (stream_read_vectored_read_bytes_discarded=0) (op_xattr_list.failures=0) (stream_read_unbuffered=0) (op_abort.failures=0) (object_put_request.failures=0) (object_continue_list_request=0) (stream_write_queue_duration.failures=0) (committer_commits_completed=0) (op_is_directory.failures=0) (op_is_file.failures=0) (action_file_opened=0) (op_list_status=0) (op_list_status.failures=0) (multipart_upload_part_put=0) (op_xattr_get_named=0) (stream_read_remote_stream_drain.failures=0) (op_get_file_status=0) (stream_read_seek_backward_operations=0) (op_get_file_checksum=0) (op_access=0) (stream_read_vectored_operations=0) (op_xattr_get_named_map.failures=0) (stream_read_bytes=0) (object_multipart_aborted=0) (action_executor_acquired=0) (op_openfile=0) (stream_write_queue_duration=0) (op_get_content_summary=0) (committer_commits_reverted=0) (object_put_request_completed=2) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (stream_read_bytes_backwards_on_seek=0) (store_io_request=10) (stream_write_block_uploads=1) (store_io_retry=0) (committer_commit_job=0) (op_delete.failures=0) (object_delete_request.failures=0) (object_delete_request=0) (delegation_tokens_issued=0) (object_select_requests=0) (object_multipart_initiated.failures=0) (stream_read_opened=0) (committer_magic_marker_put=0) (stream_read_vectored_incoming_ranges=0) (object_delete_objects=2) (committer_tasks_failed=0) (stream_aborted=0) (op_open=0) (audit_request_execution=10) (committer_magic_files_created=0) (op_xattr_get_named.failures=0) (op_xattr_get_named_map=0) (ignored_errors=0) (files_delete_rejected=0) (stream_read_seek_bytes_skipped=0) (committer_jobs_failed=0) (fake_directories_deleted=1) (committer_bytes_committed=0) (object_multipart_initiated=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_write_block_uploads_pending=1) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0));
minimums=((object_multipart_aborted.min=-1) (action_http_head_request.min=7) (op_rename.failures.min=-1) (object_delete_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_status.failures.min=-1) (op_mkdirs.min=395) (object_delete_request.min=-1) (op_glob_status.min=-1) (op_list_files.min=-1) (op_createfile.failures.min=-1) (store_exists_probe.failures.min=-1) (op_delete.min=88) (delegation_tokens_issued.failures.min=-1) (op_list_files.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.min=16) (delegation_tokens_issued.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_delete.failures.min=-1) (op_get_file_checksum.min=-1) (committer_load_single_pending_file.min=-1) (op_create.min=63) (op_xattr_get_named_map.min=-1) (op_get_content_summary.failures.min=-1) (op_createfile.min=-1) (object_bulk_delete_request.min=21) (op_abort.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_list.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.min=-1) (action_http_get_request.failures.min=-1) (object_put_request.failures.min=-1) (op_access.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_named.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_exists.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_mkdirs.failures.min=-1) (op_rename.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_map.min=-1) (store_exists_probe.min=-1) (op_get_content_summary.min=-1) (committer_stage_file_upload.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.min=-1) (op_access.failures.min=-1) (op_is_file.min=-1) (op_get_delegation_token.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_status.min=-1) (object_put_request.min=98) (committer_load_single_pending_file.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_list.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_directory.min=-1) (op_is_directory.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.failures.min=-1) (action_http_get_request.min=-1) (op_get_file_status.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_write_queue_duration.min=-1));
maximums=((op_xattr_list.max=-1) (store_exists_probe.failures.max=-1) (committer_commit_job.max=-1) (multipart_upload_list.failures.max=-1) (object_put_request.max=121) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_file.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.max=24) (op_list_status.failures.max=-1) (action_file_opened.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_create.max=63) (action_executor_acquired.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_create.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_checksum.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_exists.failures.max=-1) (object_list_request.max=243) (action_http_head_request.max=12) (committer_load_single_pending_file.max=-1) (object_delete_request.max=-1) (committer_commit_job.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.max=-1) (committer_materialize_file.failures.max=-1) (op_mkdirs.max=395) (object_multipart_aborted.failures.max=-1) (op_is_directory.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_rename.max=-1) (op_delete.max=88) (op_is_directory.failures.max=-1) (action_http_get_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_checksum.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_status.max=-1) (op_xattr_get_map.failures.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_drain.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_list_request.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.failures.max=-1) (multipart_upload_list.max=-1) (op_access.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_status.max=-1) (op_xattr_get_named_map.max=-1) (op_access.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=-1) (op_xattr_list.failures.max=-1) (object_delete_request.failures.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.max=-1) (op_rename.failures.max=-1) (op_list_files.failures.max=-1));
means=((op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=1, sum=395, mean=395.0000)) (op_create.mean=(samples=1, sum=63, mean=63.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=2, sum=219, mean=109.5000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=2, sum=45, mean=22.5000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=1, sum=88, mean=88.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=2, sum=19, mean=9.5000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=4, sum=297, mean=74.2500)));
}}, ClientSideEncryption=false}
2024-11-16 17:33:57,074 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:33:57,075 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:57,075 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:57,076 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:57,077 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:57,078 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000011 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000011&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=37&ts=1731778437073
2024-11-16 17:33:57,091 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:33:57,093 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:57,093 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:57,096 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:57,097 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:57,098 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000011 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000011&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=37&ts=1731778437073
2024-11-16 17:33:57,109 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:57,110 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:33:57,111 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:33:57,111 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:33:57,112 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000011 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000011&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=37&ts=1731778437073
2024-11-16 17:33:57,155 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:33:57,156 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:33:57,156 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.046s
2024-11-16 17:33:57,156 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:33:57,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:57,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:57,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:57,158 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:57,159 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000012 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000012&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=37&ts=1731778437157
2024-11-16 17:33:57,174 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:33:57,175 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:57,176 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:57,177 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14315968782991562706.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:33:57,179 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14315968782991562706.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (op_abort.failures=0) (action_executor_acquired=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (op_hflush=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (object_put_request=0) (stream_write_total_data=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (op_abort=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1));
maximums=((committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14315968782991562706.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:33:57,180 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:57,180 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:33:57,181 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14315968782991562706.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:33:57,185 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:33:57,186 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:33:57,187 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:33:57,187 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:33:57,188 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000012 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000012&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=38&ts=1731778437157
2024-11-16 17:33:57,255 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:33:57,256 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:33:57,256 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.070s
2024-11-16 17:33:57,257 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14315968782991562706.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:33:57,257 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14315968782991562706.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:57,258 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14315968782991562706.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:57,263 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:33:57,264 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:57,267 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (op_abort=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (object_put_request=1) (stream_write_total_time=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (stream_write_total_data=65536) (object_multipart_initiated=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_put_request.failures=0) (op_abort.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=67) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=67) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=67, mean=67.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:33:57,270 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:33:57,277 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:33:57,277 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:33:57,281 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:57,281 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:57,288 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:33:57,294 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:33:57,295 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:33:57,296 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:33:57,296 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:33:57,296 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:33:57,297 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:33:57,297 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:33:57,298 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:33:57,298 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:33:57,301 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='7fd5312c-3d71-490c-914b-7c9035d7d33a', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:57,306 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='7fd5312c-3d71-490c-914b-7c9035d7d33a', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:57,306 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='7fd5312c-3d71-490c-914b-7c9035d7d33a', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:33:57,307 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:33:57,307 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:33:57,308 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:33:57,309 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:33:57,309 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:33:57,310 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:33:57,310 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@61cd1a83]
2024-11-16 17:33:57,311 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@61cd1a83]
2024-11-16 17:33:57,312 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:33:57,312 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:33:57,313 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:33:57,313 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:33:57,314 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:33:57,314 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:33:57,315 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:33:57,315 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:57,316 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:33:57,317 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:33:57,317 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:33:57,318 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:33:57,321 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:33:57,321 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:33:57,321 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:33:57,322 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:33:57,322 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:33:57,323 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:33:57,323 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:33:57,325 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:33:57,327 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:33:57,328 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:33:57,328 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:33:57,328 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:33:57,328 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:33:57,331 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:33:57,331 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:33:57,331 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:33:57,339 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:57,342 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:57,342 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:33:57,343 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 7fd5312c-3d71-490c-914b-7c9035d7d33a-00000015 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/7fd5312c-3d71-490c-914b-7c9035d7d33a-00000015/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=7fd5312c-3d71-490c-914b-7c9035d7d33a-00000015&t0=37&fs=7fd5312c-3d71-490c-914b-7c9035d7d33a&t1=37&ts=1731778437339
2024-11-16 17:33:57,343 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:33:57,344 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:33:57,345 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:33:57,345 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:33:57,354 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:33:57,355 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:57,355 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:57,358 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_backward_operations=0) (action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_exceptions=0) (stream_read_opened=0) (stream_read_block_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (stream_read_operations=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_total_bytes=0) (action_http_get_request=0) (action_executor_acquired=0) (action_file_opened=1) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes=0) (stream_aborted=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_closed=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((action_http_get_request.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=16) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=16));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=16, mean=16.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:57,360 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:33:57,361 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:33:57,362 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:33:57,362 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@48f6e4a2[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:33:57,363 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:33:57,363 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics3-obs-bucket
2024-11-16 17:33:57,363 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:33:57,364 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@61cd1a83] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:33:57,364 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@61cd1a83] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:33:57,370 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_closed=0) (object_multipart_aborted=0) (op_is_file=0) (files_created=0) (object_list_request.failures=0) (action_http_head_request.failures=0) (committer_commits_created=0) (committer_stage_file_upload.failures=0) (action_http_head_request=1) (op_xattr_get_named.failures=0) (op_get_content_summary=0) (directories_deleted=0) (stream_read_total_bytes=0) (op_get_content_summary.failures=0) (files_deleted=0) (audit_access_check_failure=0) (fake_directories_deleted=0) (op_access.failures=0) (stream_read_exceptions=0) (committer_magic_marker_put=0) (multipart_upload_list.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (op_list_status=0) (committer_jobs_completed=0) (op_createfile.failures=0) (action_http_get_request=0) (multipart_upload_started=0) (audit_span_creation=2) (object_multipart_initiated=0) (fake_directories_created=0) (committer_magic_marker_put.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (op_get_delegation_token.failures=0) (stream_read_operations=0) (committer_load_single_pending_file.failures=0) (op_is_directory.failures=0) (stream_write_bytes=0) (op_is_directory=0) (stream_read_seek_backward_operations=0) (committer_commits_reverted=0) (object_delete_objects=0) (directories_created=0) (object_delete_request.failures=0) (multipart_upload_part_put_bytes=0) (committer_commit_job.failures=0) (op_list_files=0) (object_bulk_delete_request.failures=0) (stream_read_close_operations=1) (op_get_delegation_token=0) (stream_read_version_mismatches=0) (object_continue_list_request.failures=0) (object_put_request=0) (op_abort.failures=0) (op_copy_from_local_file=0) (op_get_file_checksum.failures=0) (object_list_request=0) (op_access=0) (committer_tasks_completed=0) (committer_commits_aborted=0) (object_bulk_delete_request=0) (op_list_files.failures=0) (committer_bytes_committed=0) (stream_read_remote_stream_aborted.failures=0) (store_exists_probe.failures=0) (op_exists=0) (op_glob_status.failures=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=0) (object_copy_requests=0) (op_create=0) (op_rename=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_operations=0) (action_http_get_request.failures=0) (object_put_request_completed=0) (store_io_request=1) (op_create_non_recursive=0) (files_delete_rejected=0) (stream_read_vectored_operations=0) (op_abort=0) (stream_write_block_uploads=0) (stream_write_queue_duration.failures=0) (op_exists.failures=0) (action_file_opened=1) (files_copied_bytes=0) (object_put_bytes=0) (committer_load_single_pending_file=0) (object_metadata_request=1) (committer_bytes_uploaded=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (committer_materialize_file.failures=0) (multipart_upload_part_put=0) (stream_write_block_uploads_aborted=0) (store_io_retry=0) (stream_aborted=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (audit_request_execution=1) (multipart_instantiated=0) (op_glob_status=0) (op_hflush=0) (op_mkdirs=0) (object_multipart_initiated.failures=0) (op_list_status.failures=0) (committer_commits_completed=0) (op_is_file.failures=0) (op_get_file_checksum=0) (ignored_errors=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (stream_read_bytes=0) (store_io_throttled=0) (object_put_request.failures=0) (op_createfile=0) (committer_magic_files_created=0) (committer_tasks_failed=0) (stream_write_queue_duration=0) (op_xattr_list=0) (committer_stage_file_upload=0) (op_get_file_status=0) (op_hsync=0) (stream_read_vectored_combined_ranges=0) (committer_jobs_failed=0) (stream_write_block_uploads_committed=0) (multipart_upload_completed=0) (committer_commits.failures=0) (op_xattr_get_named_map=0) (op_mkdirs.failures=0) (multipart_upload_aborted=0) (op_openfile=0) (stream_read_vectored_incoming_ranges=0) (op_xattr_get_named=0) (stream_write_exceptions=0) (op_rename.failures=0) (stream_read_remote_stream_drain.failures=0) (store_exists_probe=0) (stream_write_total_data=0) (op_xattr_list.failures=0) (audit_failure=0) (committer_materialize_file=0) (stream_read_seek_forward_operations=0) (stream_write_total_time=0) (object_continue_list_request=0) (multipart_upload_abort_under_path_invoked=0) (delegation_tokens_issued.failures=0) (action_executor_acquired=0) (op_open=1) (stream_read_bytes_backwards_on_seek=0) (op_delete.failures=0) (delegation_tokens_issued=0) (op_list_located_status=0) (op_copy_from_local_file.failures=0) (files_copied=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (committer_commit_job=0) (object_select_requests=0) (object_delete_request=0) (op_xattr_get_map=0) (op_create.failures=0) (op_delete=0) (op_get_file_status.failures=0) (op_xattr_get_named_map.failures=0) (op_xattr_get_map.failures=0) (multipart_upload_list=0) (stream_read_seek_policy_changed=1));
gauges=((stream_write_block_uploads_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0));
minimums=((stream_write_queue_duration.min=-1) (action_file_opened.min=16) (object_continue_list_request.min=-1) (op_glob_status.failures.min=-1) (op_is_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_files.failures.min=-1) (op_exists.min=-1) (op_mkdirs.failures.min=-1) (op_createfile.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.min=-1) (op_list_status.failures.min=-1) (committer_commit_job.min=-1) (object_put_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (multipart_upload_list.min=-1) (action_http_get_request.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.failures.min=-1) (op_list_files.min=-1) (object_put_request.min=-1) (action_http_head_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_file_status.min=-1) (op_glob_status.min=-1) (op_xattr_get_map.min=-1) (op_access.failures.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (op_rename.min=-1) (op_list_status.min=-1) (op_is_file.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_abort.min=-1) (object_list_request.min=-1) (op_xattr_list.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_list.min=-1) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.min=-1) (op_mkdirs.min=-1) (action_http_get_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_directory.min=-1) (committer_stage_file_upload.min=-1) (op_get_delegation_token.min=-1) (op_delete.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_materialize_file.min=-1) (action_http_head_request.min=12) (object_delete_request.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_create.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_create.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (op_exists.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.min=-1) (op_access.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_abort.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_rename.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (op_copy_from_local_file.max=-1) (op_create.failures.max=-1) (op_is_file.failures.max=-1) (op_glob_status.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.max=-1) (op_mkdirs.failures.max=-1) (op_access.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_map.max=-1) (object_list_request.failures.max=-1) (op_glob_status.failures.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_initiated.max=-1) (op_delete.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (op_list_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.max=-1) (action_file_opened.max=16) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_createfile.failures.max=-1) (op_is_directory.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_delete_request.failures.max=-1) (op_delete.max=-1) (committer_stage_file_upload.max=-1) (op_copy_from_local_file.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_exists.max=-1) (op_xattr_list.failures.max=-1) (op_create.max=-1) (op_rename.max=-1) (object_continue_list_request.failures.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_status.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.failures.max=-1) (op_access.failures.max=-1) (action_http_get_request.max=-1) (op_is_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.max=-1) (object_list_request.max=-1) (op_list_files.failures.max=-1) (op_abort.max=-1) (committer_commit_job.max=-1) (op_rename.failures.max=-1) (object_put_request.max=-1) (object_continue_list_request.max=-1) (committer_load_single_pending_file.max=-1) (op_list_status.max=-1) (action_http_head_request.max=12) (op_xattr_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_checksum.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_directory.max=-1) (multipart_upload_list.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=12, mean=12.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=16, mean=16.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:57,371 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:33:57,371 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:57,372 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:57,372 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=37&ts=1731778437371
2024-11-16 17:33:57,382 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:57,382 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:57,382 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=37&ts=1731778437371
2024-11-16 17:33:57,403 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.021s
2024-11-16 17:33:57,404 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:33:57,404 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:33:57,404 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:33:57,404 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:33:57,404 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:33:57,404 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:33:57,404 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:33:57,405 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:33:57,405 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:33:57,405 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:33:57,405 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:33:57,409 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:33:57,409 [s3a-transfer-obs-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:33:57,410 [s3a-transfer-obs-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:57,410 [s3a-transfer-obs-bucket-unbounded-pool2-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [40] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=40&ts=1731778437371
2024-11-16 17:33:57,422 [s3a-transfer-obs-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:33:57,422 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:33:57,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:33:57,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:33:57,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:33:57,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778437237; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:33:57,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:33:57,427 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:33:57,427 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:33:57,428 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:33:57,433 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:33:57,435 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:33:57,435 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:33:57,435 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:33:57,435 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:57,435 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:57,435 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:33:57,435 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:57,436 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=41&ts=1731778437371
2024-11-16 17:33:57,458 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.023s
2024-11-16 17:33:57,458 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:33:57,458 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.023s
2024-11-16 17:33:57,458 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:33:57,458 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:33:57,458 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:57,458 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:57,458 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:33:57,459 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:57,459 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000016&t0=37&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=41&ts=1731778437371
2024-11-16 17:33:57,479 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.020s
2024-11-16 17:33:57,480 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.022s
2024-11-16 17:33:57,480 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.022s
2024-11-16 17:33:57,480 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.045s
2024-11-16 17:33:57,480 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.047s
2024-11-16 17:33:57,484 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.079s
2024-11-16 17:33:57,484 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:33:57,484 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:33:57,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:33:57,504 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_stage_file_upload=0) (fake_directories_created=0) (op_mkdirs=2) (op_abort.failures=0) (object_delete_request=0) (op_get_file_status.failures=0) (object_multipart_initiated.failures=0) (committer_tasks_completed=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (committer_commits_aborted=0) (op_copy_from_local_file=0) (committer_commits_completed=0) (object_delete_objects=4) (stream_read_vectored_operations=0) (op_exists=0) (multipart_upload_aborted=0) (action_executor_acquired.failures=0) (committer_commits_created=0) (store_exists_probe.failures=0) (op_delete.failures=0) (committer_jobs_completed=0) (stream_read_bytes=0) (stream_read_operations=0) (op_get_file_checksum.failures=0) (stream_aborted=0) (committer_bytes_uploaded=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named_map=0) (stream_read_opened=0) (op_is_file=0) (op_list_files.failures=0) (multipart_upload_completed=0) (stream_read_closed=0) (op_openfile=0) (op_list_located_status=0) (multipart_upload_started=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_incoming_ranges=0) (committer_materialize_file=0) (op_xattr_get_named_map.failures=0) (files_delete_rejected=0) (stream_write_block_uploads=2) (op_create.failures=0) (stream_read_seek_policy_changed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_forward_operations=0) (directories_created=2) (stream_read_remote_stream_drain=0) (action_http_get_request=0) (stream_read_bytes_discarded_in_close=0) (op_glob_status.failures=0) (stream_write_block_uploads_aborted=0) (action_executor_acquired=0) (directories_deleted=0) (committer_load_single_pending_file.failures=0) (multipart_upload_part_put_bytes=0) (op_get_file_checksum=0) (stream_read_vectored_combined_ranges=0) (files_copied=0) (action_http_head_request.failures=0) (committer_load_single_pending_file=0) (object_metadata_request=4) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_list.failures=0) (object_continue_list_request=0) (committer_materialize_file.failures=0) (committer_magic_marker_put=0) (op_open=0) (files_created=2) (audit_span_creation=7) (multipart_upload_abort_under_path_invoked=0) (stream_read_version_mismatches=0) (op_xattr_list.failures=0) (object_put_request_completed=4) (object_put_request.failures=0) (committer_jobs_failed=0) (op_get_delegation_token=0) (files_copied_bytes=0) (op_list_status.failures=0) (op_get_content_summary.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_hflush=0) (stream_write_queue_duration.failures=0) (op_delete=2) (stream_write_total_data=262144) (op_rename.failures=0) (store_io_throttled=0) (stream_write_queue_duration=0) (op_xattr_get_map=0) (delegation_tokens_issued.failures=0) (op_xattr_list=0) (stream_write_bytes=131072) (store_io_request=20) (object_list_request=8) (stream_read_close_operations=0) (stream_read_total_bytes=0) (action_http_get_request.failures=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (committer_commit_job=0) (object_put_request=4) (audit_failure=0) (store_exists_probe=0) (op_exists.failures=0) (committer_stage_file_upload.failures=0) (op_create=2) (object_bulk_delete_request.failures=0) (committer_commits.failures=0) (op_list_status=0) (fake_directories_deleted=2) (stream_read_fully_operations=0) (op_access=0) (object_select_requests=0) (op_is_file.failures=0) (op_is_directory.failures=0) (committer_magic_marker_put.failures=0) (object_put_bytes=131072) (op_rename=0) (stream_write_exceptions_completing_upload=0) (op_mkdirs.failures=0) (op_create_non_recursive=0) (delegation_tokens_issued=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_operations_incomplete=0) (object_continue_list_request.failures=0) (op_xattr_get_map.failures=0) (op_abort=0) (files_deleted=2) (op_get_content_summary=0) (object_copy_requests=0) (op_list_files=0) (op_createfile=0) (stream_write_exceptions=0) (action_file_opened.failures=0) (committer_commits_reverted=0) (committer_tasks_failed=0) (store_io_retry=0) (stream_write_total_time=0) (op_get_delegation_token.failures=0) (stream_read_remote_stream_aborted=0) (multipart_upload_part_put=0) (multipart_upload_list=0) (op_xattr_get_named=0) (multipart_instantiated=0) (object_delete_request.failures=0) (audit_request_execution=20) (op_createfile.failures=0) (stream_read_seek_operations=0) (committer_bytes_committed=0) (action_http_head_request=4) (committer_commit_job.failures=0) (audit_access_check_failure=0) (stream_write_block_uploads_committed=0) (object_bulk_delete_request=4) (op_hsync=0) (op_get_file_status=0) (committer_magic_files_created=0) (action_file_opened=0) (op_access.failures=0) (ignored_errors=0) (op_is_directory=0) (object_multipart_initiated=0) (op_xattr_get_named.failures=0) (op_copy_from_local_file.failures=0) (op_glob_status=0) (object_list_request.failures=0));
gauges=((stream_write_block_uploads_pending=2) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0));
minimums=((multipart_upload_list.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_get_file_status.failures.min=-1) (committer_materialize_file.min=-1) (object_put_request.min=67) (op_is_file.min=-1) (store_exists_probe.min=-1) (op_createfile.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_list_request.min=12) (stream_write_queue_duration.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.failures.min=-1) (object_continue_list_request.min=-1) (op_create.failures.min=-1) (op_abort.min=-1) (op_get_content_summary.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_list_status.failures.min=-1) (op_mkdirs.min=83) (action_file_opened.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_list.min=-1) (op_delete.failures.min=-1) (op_exists.failures.min=-1) (object_delete_request.min=-1) (op_abort.failures.min=-1) (op_get_file_checksum.min=-1) (committer_materialize_file.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.min=-1) (op_access.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_directory.failures.min=-1) (op_get_content_summary.min=-1) (op_glob_status.min=-1) (op_access.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_file.failures.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_files.min=-1) (op_glob_status.failures.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.min=20) (committer_magic_marker_put.min=-1) (multipart_upload_list.failures.min=-1) (op_rename.min=-1) (object_multipart_initiated.failures.min=-1) (action_http_get_request.min=-1) (committer_load_single_pending_file.min=-1) (op_create.min=20) (object_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_delete.min=80) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named.failures.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.min=7) (op_xattr_list.failures.min=-1) (op_get_file_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_mkdirs.failures.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_rename.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_directory.min=-1));
maximums=((op_exists.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_file.failures.max=-1) (op_delete.max=88) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_materialize_file.failures.max=-1) (op_list_files.failures.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (multipart_upload_list.max=-1) (op_get_file_status.failures.max=-1) (op_rename.max=-1) (object_multipart_initiated.failures.max=-1) (op_access.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_stage_file_upload.max=-1) (op_access.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (object_multipart_aborted.max=-1) (op_get_file_status.max=-1) (op_exists.max=-1) (stream_read_remote_stream_drain.max=-1) (object_continue_list_request.max=-1) (action_http_head_request.failures.max=-1) (store_exists_probe.failures.max=-1) (store_exists_probe.max=-1) (action_file_opened.max=-1) (committer_materialize_file.max=-1) (op_get_file_checksum.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_get_request.max=-1) (object_delete_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.failures.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.failures.max=-1) (op_glob_status.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_mkdirs.max=395) (op_create.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.max=-1) (committer_commit_job.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.max=243) (op_is_directory.failures.max=-1) (op_delete.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=121) (op_rename.failures.max=-1) (op_create.max=63) (op_is_directory.max=-1) (op_xattr_get_named_map.max=-1) (delegation_tokens_issued.failures.max=-1) (op_is_file.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_abort.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.failures.max=-1) (object_bulk_delete_request.max=24) (op_createfile.failures.max=-1) (op_createfile.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.max=12) (object_put_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_files.max=-1) (op_get_content_summary.max=-1) (op_abort.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named.failures.max=-1) (committer_commit_job.failures.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=2, sum=83, mean=41.5000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=8, sum=357, mean=44.6250)) (action_http_head_request.mean=(samples=4, sum=40, mean=10.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=4, sum=329, mean=82.2500)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=4, sum=88, mean=22.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=2, sum=478, mean=239.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=2, sum=168, mean=84.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:33:57,505 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:33:57,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:57,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:57,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:57,505 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:57,506 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000017 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000017&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=42&ts=1731778437505
2024-11-16 17:33:57,514 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:33:57,514 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:57,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:57,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:57,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:57,515 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000017 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000017&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=42&ts=1731778437505
2024-11-16 17:33:57,520 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:57,520 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:33:57,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:33:57,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:33:57,521 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000017 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000017&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=42&ts=1731778437505
2024-11-16 17:33:57,573 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:33:57,574 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:33:57,574 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.054s
2024-11-16 17:33:57,575 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:33:57,576 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:57,576 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:57,577 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:57,577 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:57,583 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000018 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000018&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=42&ts=1731778437576
2024-11-16 17:33:57,604 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.027s
2024-11-16 17:33:57,604 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:57,604 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:57,605 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7450879708075296966.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:33:57,607 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7450879708075296966.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (action_executor_acquired=0) (op_abort=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (stream_write_total_data=0) (op_hsync=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7450879708075296966.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:33:57,607 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:57,607 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:33:57,607 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7450879708075296966.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:33:57,608 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:33:57,608 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:33:57,609 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:33:57,610 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:33:57,610 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000018 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000018&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=43&ts=1731778437576
2024-11-16 17:33:57,693 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:33:57,693 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:33:57,693 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.085s
2024-11-16 17:33:57,694 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7450879708075296966.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:33:57,694 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7450879708075296966.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:57,694 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7450879708075296966.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:57,694 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:33:57,694 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:57,696 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (stream_write_total_data=65536) (op_abort.failures=0) (object_multipart_aborted.failures=0) (op_hflush=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (object_put_request.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (object_put_request=1) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=82) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=82) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=82, mean=82.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:33:57,696 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:33:57,705 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:57,705 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:57,706 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:33:57,706 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000019 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000019/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000019&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=42&ts=1731778437704
2024-11-16 17:33:57,713 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:33:57,714 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:57,714 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:57,715 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:57,718 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:33:57,725 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:33:57,726 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:57,726 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:57,727 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:33:57,730 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:57,732 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_operations_incomplete=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_combined_ranges=1) (stream_aborted=0) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (action_http_get_request=0) (action_http_get_request.failures=0) (action_file_opened.failures=0) (stream_read_vectored_operations=1) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_incoming_ranges=2) (stream_read_total_bytes=0) (stream_read_remote_stream_drain.failures=0) (stream_read_closed=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_operations=0) (stream_read_operations=0) (stream_read_fully_operations=0) (action_file_opened=1) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=10) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (action_file_opened.max=10) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:57,743 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:57,743 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:57,744 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:33:57,744 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000020 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000020&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=42&ts=1731778437743
2024-11-16 17:33:57,760 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:33:57,760 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:57,760 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:57,760 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:57,760 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:33:57,761 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:33:57,761 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:57,761 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:57,766 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:57,767 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:33:57,767 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000020 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000020&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=45&ts=1731778437743
2024-11-16 17:33:57,805 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.037s
2024-11-16 17:33:57,806 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:33:57,807 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:57,808 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=2) (stream_read_close_operations=1) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read=0) (stream_read_operations_incomplete=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=150) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_bytes_discarded=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_version_mismatches=0) (action_file_opened=1) (stream_read_seek_policy_changed=1) (stream_read_bytes=150) (stream_read_unbuffered=0) (stream_read_opened=0) (action_http_get_request=1) (stream_read_remote_stream_drain=0) (stream_read_vectored_read_bytes_discarded=10));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=39) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=17) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=17) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=39) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1));
means=((action_file_opened.mean=(samples=1, sum=17, mean=17.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=39, mean=39.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:57,811 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:33:57,811 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:57,811 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:57,812 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=42&ts=1731778437811
2024-11-16 17:33:57,817 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:57,817 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:57,818 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=42&ts=1731778437811
2024-11-16 17:33:57,832 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:33:57,832 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:33:57,832 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:33:57,832 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:33:57,833 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:33:57,833 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:33:57,833 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:33:57,833 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:33:57,833 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:33:57,833 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:33:57,834 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:33:57,834 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:33:57,835 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:33:57,836 [s3a-transfer-obs-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:33:57,836 [s3a-transfer-obs-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:57,837 [s3a-transfer-obs-bucket-unbounded-pool2-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [46] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=46&ts=1731778437811
2024-11-16 17:33:57,848 [s3a-transfer-obs-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:33:57,848 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:33:57,849 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:33:57,849 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:33:57,849 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:33:57,849 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778437682; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:33:57,850 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:33:57,850 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:33:57,850 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:33:57,851 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:33:57,852 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:33:57,853 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:33:57,853 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:33:57,853 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:33:57,853 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:57,853 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:57,853 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:33:57,854 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:57,854 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=47&ts=1731778437811
2024-11-16 17:33:57,876 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.022s
2024-11-16 17:33:57,876 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:33:57,877 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.024s
2024-11-16 17:33:57,877 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:33:57,878 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:33:57,878 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:57,879 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:57,879 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:33:57,881 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:57,882 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000021&t0=42&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=47&ts=1731778437811
2024-11-16 17:33:57,899 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:33:57,900 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.022s
2024-11-16 17:33:57,901 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.023s
2024-11-16 17:33:57,901 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.048s
2024-11-16 17:33:57,901 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.049s
2024-11-16 17:33:57,902 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.069s
2024-11-16 17:33:57,902 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:33:57,903 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:33:57,905 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:33:57,934 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (op_get_delegation_token=0) (op_list_status.failures=0) (op_xattr_list.failures=0) (op_hflush=0) (stream_write_block_uploads_committed=0) (stream_read_closed=0) (object_copy_requests=0) (op_get_file_checksum.failures=0) (committer_commit_job=0) (op_openfile=0) (committer_commits_created=0) (op_createfile.failures=0) (files_delete_rejected=0) (stream_write_exceptions=0) (store_io_throttled=0) (object_delete_request=0) (stream_read_seek_operations=0) (object_bulk_delete_request=6) (object_multipart_initiated.failures=0) (store_io_request=33) (stream_read_bytes=150) (stream_read_exceptions=0) (action_http_head_request=8) (multipart_instantiated=0) (stream_write_block_uploads=3) (stream_write_bytes=196608) (op_open=2) (op_copy_from_local_file.failures=0) (audit_span_creation=12) (multipart_upload_part_put=0) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=2) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=10) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (op_delete.failures=0) (object_multipart_aborted.failures=0) (op_xattr_list=0) (op_list_status=0) (op_xattr_get_map=0) (op_list_located_status=0) (stream_read_close_operations=2) (op_get_file_checksum=0) (op_list_files.failures=0) (object_put_bytes=196608) (op_create.failures=0) (op_xattr_get_named_map=0) (stream_read_operations=0) (committer_stage_file_upload=0) (directories_deleted=0) (stream_read_vectored_operations=2) (stream_read_opened=0) (op_glob_status=0) (op_get_content_summary.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain.failures=0) (op_createfile=0) (op_get_delegation_token.failures=0) (fake_directories_created=0) (op_is_directory=0) (op_xattr_get_map.failures=0) (store_exists_probe=0) (committer_jobs_failed=0) (object_continue_list_request.failures=0) (files_copied_bytes=0) (stream_read_fully_operations=0) (multipart_upload_list.failures=0) (object_delete_objects=6) (op_get_file_status=0) (op_mkdirs=3) (delegation_tokens_issued=0) (op_access=0) (stream_read_total_bytes=150) (op_hsync=0) (stream_write_total_time=0) (committer_commits_aborted=0) (object_put_request=6) (stream_write_total_data=393216) (committer_magic_marker_put=0) (op_is_file.failures=0) (op_is_directory.failures=0) (op_get_file_status.failures=0) (committer_magic_files_created=0) (op_mkdirs.failures=0) (stream_read_version_mismatches=0) (multipart_upload_aborted=0) (audit_access_check_failure=0) (audit_request_execution=33) (object_put_request_completed=6) (multipart_upload_abort_under_path_invoked=0) (object_continue_list_request=0) (committer_materialize_file=0) (stream_write_block_uploads_aborted=0) (object_multipart_initiated=0) (stream_read_seek_forward_operations=0) (committer_materialize_file.failures=0) (committer_bytes_uploaded=0) (action_http_head_request.failures=0) (action_http_get_request.failures=0) (op_xattr_get_named=0) (committer_commits_reverted=0) (op_list_files=0) (committer_tasks_failed=0) (committer_jobs_completed=0) (stream_read_unbuffered=0) (op_get_content_summary=0) (committer_tasks_completed=0) (op_xattr_get_named.failures=0) (multipart_upload_part_put_bytes=0) (op_rename=0) (committer_commits.failures=0) (stream_read_remote_stream_drain=0) (multipart_upload_started=0) (op_rename.failures=0) (op_is_file=0) (op_abort=0) (fake_directories_deleted=3) (committer_commit_job.failures=0) (op_exists=0) (store_io_retry=0) (op_delete=3) (files_copied=0) (object_list_request.failures=0) (committer_commits_completed=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_list=0) (stream_read_vectored_incoming_ranges=4) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (committer_load_single_pending_file=0) (stream_aborted=0) (action_file_opened=2) (op_create=3) (audit_failure=0) (committer_bytes_committed=0) (committer_stage_file_upload.failures=0) (object_bulk_delete_request.failures=0) (object_metadata_request=8) (store_exists_probe.failures=0) (files_deleted=3) (stream_read_operations_incomplete=0) (op_exists.failures=0) (delegation_tokens_issued.failures=0) (op_abort.failures=0) (stream_write_queue_duration.failures=0) (object_multipart_aborted=0) (object_select_requests=0) (action_http_get_request=1) (directories_created=3) (object_put_request.failures=0) (object_list_request=12) (stream_read_seek_policy_changed=2) (files_created=3) (stream_read_seek_backward_operations=0) (committer_load_single_pending_file.failures=0) (stream_read_bytes_discarded_in_close=0) (object_delete_request.failures=0) (op_copy_from_local_file=0) (stream_read_remote_stream_aborted=0) (op_glob_status.failures=0) (ignored_errors=0) (op_access.failures=0) (op_create_non_recursive=0));
gauges=((object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=3) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_active=0));
minimums=((op_get_delegation_token.failures.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.min=-1) (op_glob_status.failures.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.min=-1) (multipart_upload_list.min=-1) (op_is_directory.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.min=-1) (op_copy_from_local_file.min=-1) (committer_stage_file_upload.failures.min=-1) (op_create.failures.min=-1) (op_exists.failures.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.min=5) (action_http_head_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=17) (committer_materialize_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_exists.min=-1) (object_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.min=-1) (op_list_files.failures.min=-1) (op_abort.failures.min=-1) (op_list_status.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.min=18) (object_multipart_initiated.failures.min=-1) (op_rename.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.min=-1) (op_list_files.min=-1) (object_list_request.failures.min=-1) (op_delete.min=70) (op_xattr_get_named.failures.min=-1) (op_mkdirs.min=70) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (action_http_get_request.failures.min=-1) (object_put_request.min=82) (action_executor_acquired.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.min=-1) (op_createfile.failures.min=-1) (op_is_file.min=-1) (op_get_content_summary.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_list_request.min=9) (op_create.min=20) (op_delete.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=39) (op_rename.min=-1) (op_createfile.min=-1) (op_access.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named.min=-1) (committer_magic_marker_put.failures.min=-1) (store_exists_probe.min=-1) (op_glob_status.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_map.min=-1) (committer_commit_job.min=-1));
maximums=((store_exists_probe.max=-1) (action_http_get_request.max=39) (op_get_file_status.max=-1) (op_get_file_checksum.max=-1) (op_rename.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_exists.max=-1) (op_create.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=16) (object_bulk_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (op_is_directory.failures.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_put_request.failures.max=-1) (object_continue_list_request.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named.max=-1) (delegation_tokens_issued.failures.max=-1) (op_mkdirs.max=395) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.max=-1) (action_file_opened.failures.max=-1) (object_delete_request.failures.max=-1) (object_list_request.max=243) (op_access.max=-1) (op_delete.max=88) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (delegation_tokens_issued.max=-1) (object_list_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_files.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.max=-1) (op_exists.failures.max=-1) (op_mkdirs.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_content_summary.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.max=24) (op_access.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_glob_status.failures.max=-1) (action_file_opened.max=17) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_create.max=63) (stream_read_remote_stream_drain.max=-1) (op_xattr_list.max=-1) (object_put_request.max=121) (committer_commit_job.failures.max=-1) (op_list_status.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.failures.max=-1) (op_delete.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_is_file.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_status.max=-1) (op_abort.failures.max=-1));
means=((object_list_request.mean=(samples=12, sum=419, mean=34.9167)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=6, sum=463, mean=77.1667)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=3, sum=238, mean=79.3333)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=27, mean=13.5000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=3, sum=112, mean=37.3333)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=3, sum=548, mean=182.6667)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=39, mean=39.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=6, sum=128, mean=21.3333)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=8, sum=74, mean=9.2500)));
}}, ClientSideEncryption=false}
2024-11-16 17:33:57,935 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:33:57,935 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:57,935 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:57,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:57,936 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:57,936 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000022 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000022&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=48&ts=1731778437935
2024-11-16 17:33:57,960 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.024s
2024-11-16 17:33:57,961 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:57,962 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:57,962 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:57,963 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:57,963 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000022 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000022&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=48&ts=1731778437935
2024-11-16 17:33:57,970 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:57,970 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:33:57,971 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:33:57,971 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:33:57,972 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000022 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000022&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=48&ts=1731778437935
2024-11-16 17:33:58,013 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:33:58,013 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:33:58,013 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.043s
2024-11-16 17:33:58,013 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:33:58,014 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:58,014 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,014 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:58,014 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:58,015 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000023 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000023&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=48&ts=1731778438014
2024-11-16 17:33:58,029 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:33:58,029 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,030 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:58,030 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3647365823658409164.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:33:58,032 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3647365823658409164.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (object_put_request=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (op_abort=0) (op_abort.failures=0) (action_executor_acquired=0) (stream_write_total_data=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (op_hsync=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (op_hflush=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3647365823658409164.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:33:58,032 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:58,033 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:33:58,033 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3647365823658409164.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:33:58,034 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:33:58,039 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:33:58,045 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:33:58,045 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:33:58,046 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [49] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000023 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000023&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=49&ts=1731778438014
2024-11-16 17:33:58,126 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:33:58,126 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:33:58,126 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.087s
2024-11-16 17:33:58,127 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3647365823658409164.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:33:58,127 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3647365823658409164.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:58,127 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3647365823658409164.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:58,127 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:33:58,127 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:58,128 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (stream_write_exceptions=0) (stream_write_total_time=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (object_put_request=1) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (op_abort=0) (op_hsync=0) (multipart_upload_completed=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=75) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=75) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=75, mean=75.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:33:58,129 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:33:58,130 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:58,130 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,130 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:33:58,130 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000024 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000024&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=48&ts=1731778438129
2024-11-16 17:33:58,147 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:33:58,148 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:58,148 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,148 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:58,148 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:33:58,148 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:33:58,148 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:58,150 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((stream_read_prefetch_operations.failures=0) (stream_read_vectored_incoming_ranges=2) (stream_read_unbuffered=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_fully_operations=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (stream_read_block_read=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_operations=0) (action_http_get_request=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_total_bytes=0) (stream_read_close_operations=0) (stream_read_bytes=0) (stream_read_vectored_combined_ranges=1) (action_http_get_request.failures=0) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_exceptions=0) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=18) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1));
maximums=((action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=18) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=18, mean=18.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:58,150 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,151 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:33:58,151 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,156 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:33:58,157 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:58,157 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,157 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:33:58,157 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:33:58,161 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:58,161 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,162 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,162 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:33:58,163 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000024 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000024&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=51&ts=1731778438129
2024-11-16 17:33:58,195 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.033s
2024-11-16 17:33:58,195 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:33:58,196 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,197 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_combined_ranges=2) (stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (action_http_get_request=1) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_total_bytes=150) (stream_read_vectored_incoming_ranges=4) (stream_read_prefetch_operations.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_policy_changed=2) (stream_read_opened=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (action_file_opened=1) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_aborted=0) (stream_read_vectored_operations=2) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=10) (action_file_opened.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_closed=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=150) (stream_read_fully_operations=0) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=1) (action_executor_acquired.failures=0) (action_http_get_request.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=1));
minimums=((stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=33) (action_file_opened.min=18));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=18) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=33) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=33, mean=33.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=18, mean=18.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:58,198 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:33:58,198 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:58,198 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:58,199 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=48&ts=1731778438198
2024-11-16 17:33:58,206 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:58,206 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:58,207 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=48&ts=1731778438198
2024-11-16 17:33:58,220 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:33:58,221 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:33:58,221 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:33:58,222 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:33:58,222 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:33:58,223 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:33:58,223 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:33:58,224 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:33:58,224 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:33:58,225 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:33:58,225 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:33:58,226 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:33:58,226 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:33:58,227 [s3a-transfer-obs-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:33:58,228 [s3a-transfer-obs-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:58,228 [s3a-transfer-obs-bucket-unbounded-pool2-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [52] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=52&ts=1731778438198
2024-11-16 17:33:58,239 [s3a-transfer-obs-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:33:58,239 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:33:58,240 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:33:58,240 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:33:58,240 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:33:58,240 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778438111; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:33:58,240 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:33:58,240 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:33:58,241 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:33:58,241 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:33:58,245 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:33:58,246 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:33:58,246 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:33:58,246 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:33:58,246 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:58,246 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:58,247 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:33:58,247 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:58,247 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=53&ts=1731778438198
2024-11-16 17:33:58,267 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.020s
2024-11-16 17:33:58,267 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.021s
2024-11-16 17:33:58,267 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.021s
2024-11-16 17:33:58,267 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:33:58,267 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:33:58,268 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:58,268 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:58,268 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:33:58,268 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:58,268 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000025&t0=48&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=53&ts=1731778438198
2024-11-16 17:33:58,297 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.029s
2024-11-16 17:33:58,297 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.029s
2024-11-16 17:33:58,297 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.030s
2024-11-16 17:33:58,297 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.051s
2024-11-16 17:33:58,297 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.052s
2024-11-16 17:33:58,298 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.074s
2024-11-16 17:33:58,298 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:33:58,298 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:33:58,302 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:33:58,329 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 4], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe.failures=0) (stream_write_block_uploads=4) (op_xattr_get_named.failures=0) (files_created=4) (stream_read_fully_operations=0) (files_copied=0) (object_copy_requests=0) (stream_read_vectored_incoming_ranges=8) (op_create_non_recursive=0) (action_http_head_request=11) (committer_magic_marker_put.failures=0) (stream_write_bytes=262144) (stream_read_operations_incomplete=0) (stream_read_total_bytes=300) (op_xattr_list=0) (op_open=3) (delegation_tokens_issued=0) (action_http_get_request=2) (op_get_delegation_token.failures=0) (committer_commits_completed=0) (action_executor_acquired=0) (multipart_upload_abort_under_path_invoked=0) (committer_load_single_pending_file=0) (op_create.failures=0) (fake_directories_deleted=4) (op_rename.failures=0) (stream_write_queue_duration=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_aborted=0) (op_mkdirs=4) (op_xattr_list.failures=0) (op_get_delegation_token=0) (object_multipart_initiated=0) (stream_read_bytes_discarded_in_abort=0) (op_abort.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (op_access.failures=0) (ignored_errors=0) (op_xattr_get_named=0) (object_put_request.failures=0) (op_createfile.failures=0) (op_xattr_get_named_map=0) (object_select_requests=0) (stream_read_seek_forward_operations=0) (object_delete_request=0) (committer_magic_marker_put=0) (stream_read_seek_bytes_skipped=0) (op_hsync=0) (op_is_file.failures=0) (files_copied_bytes=0) (op_get_file_status.failures=0) (committer_bytes_uploaded=0) (committer_commit_job.failures=0) (store_io_request=45) (stream_read_remote_stream_aborted.failures=0) (multipart_instantiated=0) (op_create=4) (op_createfile=0) (stream_read_vectored_combined_ranges=4) (object_list_request.failures=0) (stream_write_block_uploads_committed=0) (op_glob_status=0) (fake_directories_created=0) (committer_load_single_pending_file.failures=0) (committer_commits_aborted=0) (object_delete_objects=8) (op_openfile=0) (store_exists_probe=0) (multipart_upload_started=0) (stream_read_exceptions=0) (op_get_file_checksum=0) (committer_stage_file_upload.failures=0) (op_list_status=0) (stream_write_exceptions_completing_upload=0) (op_exists.failures=0) (action_http_head_request.failures=0) (committer_tasks_completed=0) (committer_bytes_committed=0) (op_copy_from_local_file.failures=0) (multipart_upload_list=0) (stream_read_closed=0) (op_exists=0) (committer_stage_file_upload=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_close=0) (committer_commits.failures=0) (op_list_files=0) (op_get_file_checksum.failures=0) (committer_materialize_file=0) (op_get_file_status=0) (object_bulk_delete_request.failures=0) (op_is_directory.failures=0) (committer_materialize_file.failures=0) (op_list_files.failures=0) (object_put_request=8) (stream_read_bytes=300) (op_delete.failures=0) (multipart_upload_completed=0) (committer_jobs_failed=0) (op_get_content_summary=0) (stream_read_seek_operations=0) (object_continue_list_request=0) (stream_write_queue_duration.failures=0) (action_file_opened.failures=0) (op_list_status.failures=0) (op_abort=0) (op_rename=0) (multipart_upload_part_put=0) (object_bulk_delete_request=8) (store_io_retry=0) (op_delete=4) (stream_write_block_uploads_aborted=0) (action_http_get_request.failures=0) (stream_write_total_time=0) (action_file_opened=3) (committer_tasks_failed=0) (committer_commits_reverted=0) (multipart_upload_list.failures=0) (stream_read_vectored_read_bytes_discarded=20) (op_xattr_get_map=0) (object_put_request_completed=8) (committer_commit_job=0) (op_mkdirs.failures=0) (audit_access_check_failure=0) (audit_request_execution=45) (action_executor_acquired.failures=0) (op_is_file=0) (op_is_directory=0) (audit_span_creation=16) (object_put_bytes=262144) (committer_commits_created=0) (object_multipart_aborted.failures=0) (files_deleted=4) (op_xattr_get_named_map.failures=0) (stream_read_close_operations=3) (op_copy_from_local_file=0) (files_delete_rejected=0) (stream_read_version_mismatches=0) (store_io_throttled=0) (delegation_tokens_issued.failures=0) (stream_read_remote_stream_drain=0) (object_delete_request.failures=0) (stream_read_unbuffered=1) (op_get_content_summary.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_data=524288) (multipart_upload_part_put_bytes=0) (op_hflush=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_discarded=0) (op_access=0) (directories_created=4) (stream_read_vectored_operations=4) (stream_write_exceptions=0) (stream_read_seek_policy_changed=4) (object_metadata_request=11) (stream_aborted=0) (op_list_located_status=0) (committer_jobs_completed=0) (audit_failure=0) (directories_deleted=0) (object_list_request=16) (stream_read_opened=0) (object_multipart_aborted=0) (op_glob_status.failures=0) (committer_magic_files_created=0) (object_continue_list_request.failures=0) (op_xattr_get_map.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=4) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0));
minimums=((object_delete_request.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_files.min=-1) (action_http_get_request.min=33) (op_xattr_get_map.failures.min=-1) (op_abort.min=-1) (op_mkdirs.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_status.failures.min=-1) (op_is_file.min=-1) (object_continue_list_request.failures.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.min=-1) (op_rename.failures.min=-1) (op_exists.min=-1) (object_bulk_delete_request.min=18) (stream_read_remote_stream_drain.failures.min=-1) (op_delete.failures.min=-1) (object_put_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_glob_status.min=-1) (op_get_file_checksum.min=-1) (object_list_request.min=9) (op_xattr_list.min=-1) (action_executor_acquired.min=-1) (committer_materialize_file.min=-1) (op_create.failures.min=-1) (committer_magic_marker_put.min=-1) (op_create.min=17) (op_abort.failures.min=-1) (object_put_request.min=75) (op_list_status.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.failures.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (object_delete_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_createfile.failures.min=-1) (op_rename.min=-1) (committer_commit_job.min=-1) (action_http_get_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_head_request.min=5) (stream_write_queue_duration.min=-1) (op_xattr_get_named.min=-1) (op_get_file_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_file.failures.min=-1) (op_access.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_list_files.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_file_opened.min=18) (op_get_file_status.failures.min=-1) (op_createfile.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (object_multipart_initiated.min=-1) (op_mkdirs.min=70) (op_delete.min=70) (action_file_opened.failures.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.min=-1) (action_executor_acquired.failures.min=-1) (store_exists_probe.failures.min=-1) (op_exists.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (action_file_opened.failures.max=-1) (op_list_files.max=-1) (op_mkdirs.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_checksum.max=-1) (op_glob_status.max=-1) (object_continue_list_request.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.failures.max=-1) (op_is_directory.max=-1) (delegation_tokens_issued.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_file_opened.max=18) (store_exists_probe.max=-1) (op_delete.failures.max=-1) (op_create.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_map.max=-1) (op_exists.max=-1) (op_abort.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_http_head_request.max=17) (op_xattr_list.max=-1) (object_list_request.max=243) (op_access.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_directory.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (multipart_upload_list.max=-1) (op_glob_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_is_file.max=-1) (committer_materialize_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_status.failures.max=-1) (op_delete.max=88) (op_create.max=63) (op_exists.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_files.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.max=-1) (committer_commit_job.max=-1) (action_http_get_request.failures.max=-1) (op_list_status.max=-1) (op_access.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.max=39) (op_get_file_status.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.max=-1) (action_http_head_request.failures.max=-1) (op_rename.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (object_multipart_aborted.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.max=-1) (op_get_delegation_token.max=-1) (committer_materialize_file.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_mkdirs.max=395) (object_bulk_delete_request.max=29) (object_put_request.max=121) (committer_stage_file_upload.max=-1) (object_put_request.failures.max=-1));
means=((op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=4, sum=129, mean=32.2500)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=8, sum=177, mean=22.1250)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=16, sum=481, mean=30.0625)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=8, sum=578, mean=72.2500)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=11, sum=106, mean=9.6364)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=4, sum=313, mean=78.2500)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=4, sum=626, mean=156.5000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=45, mean=15.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=72, mean=36.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:33:58,330 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:33:58,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:58,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:58,331 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:58,331 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:58,331 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000026 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000026&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=54&ts=1731778438330
2024-11-16 17:33:58,347 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:33:58,347 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:58,348 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:58,348 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:58,348 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:58,349 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000026 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000026&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=54&ts=1731778438330
2024-11-16 17:33:58,355 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:58,355 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:33:58,355 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:33:58,355 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:33:58,356 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000026 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000026&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=54&ts=1731778438330
2024-11-16 17:33:58,389 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:33:58,390 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:33:58,390 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.035s
2024-11-16 17:33:58,390 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:33:58,391 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:58,391 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,391 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:58,391 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:58,392 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000027 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000027&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=54&ts=1731778438391
2024-11-16 17:33:58,401 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:33:58,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,402 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:58,402 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4226513607377369855.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:33:58,404 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4226513607377369855.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (op_abort=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (op_hsync=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (op_hflush=0) (object_put_request=0) (object_multipart_aborted=0) (stream_write_total_data=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4226513607377369855.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:33:58,404 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:58,405 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:33:58,405 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4226513607377369855.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:33:58,406 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:33:58,407 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:33:58,407 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:33:58,408 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:33:58,408 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [55] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000027 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000027&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=55&ts=1731778438391
2024-11-16 17:33:58,457 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:33:58,458 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:33:58,458 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.051s
2024-11-16 17:33:58,459 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4226513607377369855.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:33:58,459 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4226513607377369855.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:58,459 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4226513607377369855.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:58,459 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:33:58,460 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:58,461 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired.failures=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (op_abort=0) (stream_write_block_uploads=1) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (op_abort.failures=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (object_put_request=1) (op_hsync=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_put_request.min=49) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=49) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1));
means=((object_put_request.mean=(samples=1, sum=49, mean=49.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:33:58,461 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:33:58,462 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:33:58,462 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:33:58,464 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:58,464 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:58,466 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:33:58,467 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:33:58,467 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:33:58,467 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:33:58,467 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:33:58,467 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:33:58,467 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:33:58,468 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:33:58,468 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:33:58,468 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:33:58,468 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='97b268ea-e7c1-40ff-a34c-0135eeba6261', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:58,468 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='97b268ea-e7c1-40ff-a34c-0135eeba6261', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:58,469 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='97b268ea-e7c1-40ff-a34c-0135eeba6261', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:33:58,469 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:33:58,469 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:33:58,469 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:33:58,470 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:33:58,470 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:33:58,470 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:33:58,470 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@524449d2]
2024-11-16 17:33:58,470 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@524449d2]
2024-11-16 17:33:58,471 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:33:58,474 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:33:58,474 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:33:58,475 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:33:58,475 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:33:58,475 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:33:58,476 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:33:58,476 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:58,477 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:33:58,477 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:33:58,478 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:33:58,478 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:33:58,480 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:33:58,481 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:33:58,481 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:33:58,482 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:33:58,482 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:33:58,483 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:33:58,483 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:33:58,483 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:33:58,484 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:33:58,484 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:33:58,485 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:33:58,485 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:33:58,486 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:33:58,486 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:33:58,486 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:33:58,487 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:33:58,488 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:58,489 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,489 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:33:58,490 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 97b268ea-e7c1-40ff-a34c-0135eeba6261-00000030 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/97b268ea-e7c1-40ff-a34c-0135eeba6261-00000030/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=97b268ea-e7c1-40ff-a34c-0135eeba6261-00000030&t0=54&fs=97b268ea-e7c1-40ff-a34c-0135eeba6261&t1=54&ts=1731778438488
2024-11-16 17:33:58,490 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:33:58,491 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:33:58,491 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:33:58,492 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:33:58,501 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:33:58,503 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778438000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:33:58,505 [s3a-transfer-obs-bucket-unbounded-pool9-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:58,506 [s3a-transfer-obs-bucket-unbounded-pool9-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,506 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:33:58,506 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:33:58,506 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:33:58,506 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:33:58,507 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:33:58,507 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,507 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:33:58,507 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:33:58,507 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,507 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:33:58,507 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [58] 97b268ea-e7c1-40ff-a34c-0135eeba6261-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/97b268ea-e7c1-40ff-a34c-0135eeba6261-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=100-1099&id=97b268ea-e7c1-40ff-a34c-0135eeba6261-00000031&t0=57&fs=97b268ea-e7c1-40ff-a34c-0135eeba6261&t1=58&ts=1731778438505
2024-11-16 17:33:58,508 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:33:58,508 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,509 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,509 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:33:58,509 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [59] 97b268ea-e7c1-40ff-a34c-0135eeba6261-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/97b268ea-e7c1-40ff-a34c-0135eeba6261-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=100-1099&id=97b268ea-e7c1-40ff-a34c-0135eeba6261-00000031&t0=57&fs=97b268ea-e7c1-40ff-a34c-0135eeba6261&t1=59&ts=1731778438505
2024-11-16 17:33:58,530 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:33:58,530 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,534 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.027s
2024-11-16 17:33:58,536 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,541 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_bytes=2000) (action_file_opened=1) (stream_read_seek_policy_changed=1) (stream_read_vectored_operations=2) (action_file_opened.failures=0) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request=2) (stream_read_fully_operations=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (stream_read_block_read=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=0) (stream_read_vectored_combined_ranges=2) (stream_read_total_bytes=2000) (stream_read_opened=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_vectored_incoming_ranges=4) (stream_read_close_operations=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=21) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=0) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_http_get_request.max=27) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=0) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=48, mean=24.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:58,543 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:33:58,557 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:33:58,559 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:33:58,560 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@640a2b41[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:33:58,560 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:33:58,560 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics4-obs-bucket
2024-11-16 17:33:58,560 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:33:58,560 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@524449d2] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:33:58,560 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@524449d2] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:33:58,563 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_list_files=0) (object_put_request=0) (op_get_file_status=1) (committer_bytes_uploaded=0) (op_glob_status=0) (op_get_file_checksum=0) (committer_materialize_file.failures=0) (stream_read_remote_stream_aborted.failures=0) (committer_commits_created=0) (op_access=0) (op_abort=0) (op_access.failures=0) (object_delete_request=0) (op_xattr_get_map.failures=0) (action_http_get_request=2) (stream_aborted=0) (multipart_upload_list=0) (ignored_errors=0) (object_multipart_initiated=0) (multipart_instantiated=0) (op_copy_from_local_file.failures=0) (committer_magic_marker_put.failures=0) (action_file_opened.failures=0) (directories_created=0) (op_mkdirs.failures=0) (op_xattr_get_named=0) (committer_commits.failures=0) (committer_magic_files_created=0) (stream_read_opened=0) (op_createfile.failures=0) (committer_tasks_failed=0) (action_executor_acquired.failures=0) (op_create_non_recursive=0) (object_put_request.failures=0) (committer_commit_job.failures=0) (stream_read_vectored_read_bytes_discarded=0) (directories_deleted=0) (multipart_upload_abort_under_path_invoked=0) (op_createfile=0) (delegation_tokens_issued.failures=0) (stream_write_total_data=0) (action_executor_acquired=0) (store_io_throttled=0) (op_hflush=0) (op_glob_status.failures=0) (object_continue_list_request=0) (audit_span_creation=3) (op_rename.failures=0) (stream_read_seek_backward_operations=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (multipart_upload_part_put_bytes=0) (object_metadata_request=1) (op_get_file_status.failures=0) (op_get_delegation_token.failures=0) (action_http_get_request.failures=0) (object_select_requests=0) (stream_read_seek_operations=0) (stream_read_bytes_backwards_on_seek=0) (op_delete=0) (object_continue_list_request.failures=0) (stream_read_seek_forward_operations=0) (store_io_request=3) (op_list_located_status=0) (object_delete_objects=0) (stream_read_version_mismatches=0) (op_get_content_summary=0) (committer_commits_reverted=0) (store_exists_probe.failures=0) (op_xattr_get_named.failures=0) (files_copied=0) (object_list_request.failures=0) (multipart_upload_part_put=0) (committer_tasks_completed=0) (op_openfile=0) (op_is_directory.failures=0) (store_io_retry=0) (op_rename=0) (op_get_content_summary.failures=0) (op_create.failures=0) (object_put_bytes=0) (op_is_directory=0) (stream_read_bytes=2000) (committer_load_single_pending_file.failures=0) (action_http_head_request=1) (op_list_files.failures=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=4) (op_get_file_checksum.failures=0) (committer_jobs_completed=0) (object_bulk_delete_request=0) (op_exists=0) (stream_write_exceptions=0) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=0) (object_copy_requests=0) (stream_read_close_operations=1) (stream_read_total_bytes=2000) (stream_read_remote_stream_aborted=0) (stream_read_exceptions=0) (op_list_status=0) (multipart_upload_list.failures=0) (fake_directories_deleted=0) (op_xattr_get_named_map.failures=0) (committer_magic_marker_put=0) (stream_read_operations=0) (op_create=0) (stream_read_fully_operations=0) (stream_read_closed=0) (stream_write_block_uploads_committed=0) (op_get_delegation_token=0) (op_xattr_list.failures=0) (multipart_upload_completed=0) (audit_request_execution=3) (object_delete_request.failures=0) (committer_commits_aborted=0) (op_exists.failures=0) (multipart_upload_started=0) (committer_load_single_pending_file=0) (stream_read_unbuffered=0) (store_exists_probe=0) (committer_commit_job=0) (fake_directories_created=0) (object_multipart_initiated.failures=0) (files_created=0) (stream_read_operations_incomplete=0) (op_is_file=0) (files_deleted=0) (committer_materialize_file=0) (stream_write_queue_duration.failures=0) (stream_write_block_uploads=0) (op_mkdirs=0) (committer_commits_completed=0) (stream_read_vectored_operations=2) (op_xattr_list=0) (delegation_tokens_issued=0) (stream_write_bytes=0) (multipart_upload_aborted=0) (op_copy_from_local_file=0) (object_bulk_delete_request.failures=0) (op_open=1) (op_xattr_get_map=0) (action_http_head_request.failures=0) (stream_write_total_time=0) (stream_read_bytes_discarded_in_abort=0) (object_multipart_aborted=0) (stream_read_vectored_combined_ranges=2) (op_is_file.failures=0) (object_put_request_completed=0) (object_list_request=0) (files_delete_rejected=0) (audit_access_check_failure=0) (object_multipart_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (audit_failure=0) (stream_read_seek_bytes_discarded=0) (committer_stage_file_upload=0) (op_xattr_get_named_map=0) (committer_stage_file_upload.failures=0) (op_delete.failures=0) (stream_write_block_uploads_aborted=0) (op_abort.failures=0) (committer_bytes_committed=0) (files_copied_bytes=0) (action_file_opened=1) (op_list_status.failures=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_xattr_get_map.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_exists.failures.min=-1) (op_create.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.min=-1) (object_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (op_createfile.min=-1) (op_list_files.min=-1) (op_delete.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.failures.min=-1) (object_list_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_write_queue_duration.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_list.min=-1) (op_createfile.failures.min=-1) (op_abort.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_list.min=-1) (action_file_opened.min=0) (op_xattr_get_named.min=-1) (op_exists.min=-1) (op_get_content_summary.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_status.failures.min=-1) (op_copy_from_local_file.min=-1) (object_delete_request.min=-1) (op_list_files.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_named.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.failures.min=-1) (op_mkdirs.min=-1) (object_continue_list_request.failures.min=-1) (store_exists_probe.min=-1) (committer_materialize_file.min=-1) (object_put_request.min=-1) (op_is_file.min=-1) (committer_commit_job.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_delete.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.min=13) (op_xattr_get_named_map.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_write_queue_duration.min=-1) (op_access.failures.min=-1) (op_rename.failures.min=-1) (object_bulk_delete_request.min=-1) (op_is_directory.failures.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.min=-1) (op_get_delegation_token.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_head_request.min=12) (object_put_request.failures.min=-1) (op_access.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_status.min=-1) (action_http_get_request.min=21) (op_xattr_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_continue_list_request.min=-1) (op_mkdirs.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_delegation_token.failures.min=-1));
maximums=((op_abort.max=-1) (op_create.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_delete.failures.max=-1) (object_bulk_delete_request.max=-1) (op_delete.max=-1) (op_list_files.max=-1) (op_glob_status.failures.max=-1) (committer_commit_job.max=-1) (committer_materialize_file.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.max=-1) (op_create.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_head_request.max=12) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_stage_file_upload.max=-1) (action_file_opened.max=0) (op_abort.failures.max=-1) (op_createfile.max=-1) (op_list_files.failures.max=-1) (store_exists_probe.max=-1) (op_createfile.failures.max=-1) (action_executor_acquired.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_access.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named_map.max=-1) (action_http_head_request.failures.max=-1) (action_http_get_request.max=27) (committer_materialize_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_list_request.max=-1) (op_mkdirs.failures.max=-1) (object_delete_request.max=-1) (op_exists.failures.max=-1) (op_xattr_get_map.max=-1) (op_rename.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_mkdirs.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (op_copy_from_local_file.max=-1) (delegation_tokens_issued.max=-1) (op_glob_status.max=-1) (op_get_file_status.max=13) (op_get_file_checksum.failures.max=-1) (op_access.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.failures.max=-1) (op_exists.max=-1) (op_is_file.max=-1) (op_list_status.failures.max=-1) (op_is_directory.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (committer_commit_job.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_xattr_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_list_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_status.max=-1) (op_xattr_list.max=-1) (op_is_directory.max=-1) (object_put_request.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.failures.max=-1) (stream_write_queue_duration.max=-1));
means=((delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=12, mean=12.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=48, mean=24.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=13, mean=13.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:58,564 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:33:58,564 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:58,564 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:58,565 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=54&ts=1731778438564
2024-11-16 17:33:58,571 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:58,571 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:58,571 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=54&ts=1731778438564
2024-11-16 17:33:58,587 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:33:58,587 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:33:58,587 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:33:58,587 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:33:58,587 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:33:58,587 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:33:58,587 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:33:58,587 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:33:58,587 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:33:58,587 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:33:58,587 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:33:58,588 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:33:58,588 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:33:58,588 [s3a-transfer-obs-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:33:58,588 [s3a-transfer-obs-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:58,589 [s3a-transfer-obs-bucket-unbounded-pool2-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [62] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=62&ts=1731778438564
2024-11-16 17:33:58,599 [s3a-transfer-obs-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:33:58,601 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:33:58,602 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:33:58,602 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:33:58,602 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:33:58,603 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778438452; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:33:58,603 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:33:58,603 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:33:58,603 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:33:58,603 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:33:58,605 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:33:58,605 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:33:58,605 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:33:58,605 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:33:58,605 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:58,605 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:58,606 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:33:58,606 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:58,606 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=63&ts=1731778438564
2024-11-16 17:33:58,632 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.026s
2024-11-16 17:33:58,632 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.027s
2024-11-16 17:33:58,632 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.027s
2024-11-16 17:33:58,632 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:33:58,632 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:33:58,632 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:58,633 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:58,633 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:33:58,633 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:58,633 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000032&t0=54&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=63&ts=1731778438564
2024-11-16 17:33:58,646 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:33:58,646 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:33:58,646 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:33:58,646 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.041s
2024-11-16 17:33:58,646 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.041s
2024-11-16 17:33:58,647 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.059s
2024-11-16 17:33:58,647 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:33:58,647 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:33:58,649 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:33:58,690 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 5, active threads = 0, queued tasks = 0, completed tasks = 5], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_list.failures=0) (stream_read_operations_incomplete=0) (op_exists=0) (stream_read_unbuffered=1) (action_http_get_request=2) (object_put_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_openfile=0) (object_delete_request=0) (stream_read_total_bytes=300) (committer_jobs_completed=0) (files_delete_rejected=0) (stream_write_total_time=0) (files_deleted=5) (store_io_retry=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_list=0) (op_get_content_summary.failures=0) (op_mkdirs.failures=0) (op_is_directory.failures=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (op_get_content_summary=0) (stream_read_seek_bytes_discarded=0) (committer_materialize_file=0) (stream_write_exceptions=0) (committer_commit_job=0) (object_list_request.failures=0) (store_exists_probe=0) (delegation_tokens_issued.failures=0) (object_delete_request.failures=0) (multipart_upload_aborted=0) (stream_write_exceptions_completing_upload=0) (audit_access_check_failure=0) (audit_span_creation=19) (stream_read_seek_policy_changed=4) (committer_load_single_pending_file.failures=0) (object_metadata_request=13) (op_xattr_get_named_map=0) (op_open=3) (op_list_status.failures=0) (committer_bytes_uploaded=0) (op_is_file.failures=0) (action_executor_acquired.failures=0) (committer_load_single_pending_file=0) (multipart_upload_started=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (audit_request_execution=55) (committer_tasks_failed=0) (op_glob_status.failures=0) (action_http_head_request.failures=0) (op_is_file=0) (stream_write_bytes=327680) (multipart_upload_abort_under_path_invoked=0) (committer_commits_completed=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=0) (op_xattr_get_named_map.failures=0) (action_http_head_request=13) (op_delete=5) (op_create=5) (stream_read_vectored_combined_ranges=4) (stream_read_close_operations=3) (fake_directories_created=0) (fake_directories_deleted=5) (op_list_files.failures=0) (op_get_delegation_token.failures=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_completed=0) (op_get_file_status=0) (object_list_request=20) (committer_stage_file_upload.failures=0) (stream_read_fully_operations=0) (object_delete_objects=10) (store_io_throttled=0) (stream_read_version_mismatches=0) (stream_write_block_uploads_aborted=0) (op_hflush=0) (committer_materialize_file.failures=0) (stream_aborted=0) (object_put_request=10) (committer_bytes_committed=0) (stream_read_seek_backward_operations=0) (op_xattr_get_named=0) (stream_read_exceptions=0) (committer_commits.failures=0) (files_copied=0) (object_copy_requests=0) (op_list_status=0) (op_exists.failures=0) (object_select_requests=0) (stream_write_queue_duration=0) (op_copy_from_local_file=0) (committer_commits_created=0) (op_mkdirs=5) (stream_read_remote_stream_drain.failures=0) (committer_jobs_failed=0) (stream_write_queue_duration.failures=0) (stream_read_seek_bytes_skipped=0) (op_delete.failures=0) (multipart_upload_part_put=0) (op_get_file_status.failures=0) (stream_write_total_data=655360) (audit_failure=0) (op_xattr_get_named.failures=0) (op_copy_from_local_file.failures=0) (files_created=5) (multipart_instantiated=0) (op_createfile.failures=0) (object_multipart_initiated=0) (object_bulk_delete_request=10) (stream_write_block_uploads_committed=0) (op_glob_status=0) (op_get_delegation_token=0) (stream_read_vectored_read_bytes_discarded=20) (stream_read_opened=0) (stream_write_block_uploads=5) (committer_magic_files_created=0) (action_http_get_request.failures=0) (op_createfile=0) (stream_read_bytes_discarded_in_close=0) (op_access.failures=0) (ignored_errors=0) (op_create.failures=0) (files_copied_bytes=0) (op_rename=0) (directories_deleted=0) (stream_read_vectored_operations=4) (committer_stage_file_upload=0) (object_continue_list_request=0) (op_list_files=0) (op_get_file_checksum.failures=0) (op_xattr_list.failures=0) (stream_read_operations=0) (object_bulk_delete_request.failures=0) (op_get_file_checksum=0) (store_exists_probe.failures=0) (op_hsync=0) (stream_read_remote_stream_aborted=0) (object_put_bytes=327680) (op_list_located_status=0) (delegation_tokens_issued=0) (stream_read_closed=0) (op_rename.failures=0) (op_xattr_get_map.failures=0) (op_abort.failures=0) (action_executor_acquired=0) (multipart_upload_part_put_bytes=0) (object_multipart_aborted.failures=0) (op_abort=0) (op_is_directory=0) (op_xattr_list=0) (stream_read_vectored_incoming_ranges=8) (stream_read_bytes=300) (op_xattr_get_map=0) (action_file_opened=3) (store_io_request=55) (committer_commits_aborted=0) (committer_magic_marker_put=0) (op_access=0) (committer_commits_reverted=0) (object_continue_list_request.failures=0) (committer_tasks_completed=0) (object_put_request_completed=10) (committer_commit_job.failures=0) (op_create_non_recursive=0) (object_multipart_aborted=0) (directories_created=5));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=5) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0));
minimums=((multipart_upload_list.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_abort.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_access.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_rename.min=-1) (object_multipart_initiated.min=-1) (stream_write_queue_duration.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_delete.min=60) (op_createfile.failures.min=-1) (object_put_request.min=49) (op_xattr_get_named_map.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.min=18) (object_delete_request.min=-1) (op_xattr_list.min=-1) (op_is_directory.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.min=-1) (action_executor_acquired.failures.min=-1) (op_is_file.min=-1) (multipart_upload_list.min=-1) (op_createfile.min=-1) (op_list_status.failures.min=-1) (op_is_directory.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=33) (op_copy_from_local_file.min=-1) (op_get_file_status.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (object_list_request.failures.min=-1) (action_http_head_request.failures.min=-1) (op_create.failures.min=-1) (op_create.min=12) (op_access.min=-1) (committer_commit_job.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_files.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_mkdirs.min=60) (committer_commit_job.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_status.failures.min=-1) (store_exists_probe.min=-1) (op_list_files.failures.min=-1) (object_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_rename.failures.min=-1) (object_list_request.min=9) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=12) (op_xattr_get_named_map.min=-1) (object_continue_list_request.failures.min=-1) (op_glob_status.min=-1) (object_bulk_delete_request.failures.min=-1) (op_exists.failures.min=-1) (op_delete.failures.min=-1) (op_exists.min=-1) (op_get_file_checksum.min=-1) (action_http_head_request.min=5) (op_list_status.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.max=-1) (action_http_get_request.max=39) (op_xattr_list.failures.max=-1) (object_put_request.max=121) (op_copy_from_local_file.max=-1) (committer_commit_job.max=-1) (object_delete_request.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (op_abort.max=-1) (op_get_file_checksum.failures.max=-1) (op_rename.failures.max=-1) (op_abort.failures.max=-1) (op_createfile.max=-1) (object_continue_list_request.failures.max=-1) (op_is_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_status.max=-1) (op_exists.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.failures.max=-1) (op_is_file.max=-1) (object_put_request.failures.max=-1) (op_delete.failures.max=-1) (op_createfile.failures.max=-1) (op_access.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_list_files.max=-1) (action_http_head_request.max=17) (delegation_tokens_issued.failures.max=-1) (op_create.max=63) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_mkdirs.max=395) (op_get_delegation_token.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.max=-1) (store_exists_probe.failures.max=-1) (op_glob_status.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_files.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.max=-1) (action_file_opened.max=18) (op_access.failures.max=-1) (op_delete.max=88) (op_list_status.max=-1) (multipart_upload_list.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (op_rename.max=-1) (op_xattr_list.max=-1) (op_exists.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_list_request.max=243) (object_bulk_delete_request.max=29) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_create.failures.max=-1) (committer_materialize_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_file_opened.failures.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_list_request.failures.max=-1) (op_glob_status.max=-1) (op_get_delegation_token.max=-1) (object_multipart_aborted.max=-1) (op_get_content_summary.max=-1));
means=((action_http_head_request.mean=(samples=13, sum=120, mean=9.2308)) (action_http_get_request.mean=(samples=2, sum=72, mean=36.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=10, sum=215, mean=21.5000)) (object_list_request.mean=(samples=20, sum=533, mean=26.6500)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=5, sum=141, mean=28.2000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=10, sum=661, mean=66.1000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=5, sum=373, mean=74.6000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=45, mean=15.0000)) (op_mkdirs.mean=(samples=5, sum=686, mean=137.2000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:33:58,691 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:33:58,691 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:58,691 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:58,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:58,692 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:58,693 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000033 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000033&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=64&ts=1731778438690
2024-11-16 17:33:58,706 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:33:58,707 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:58,707 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:58,708 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:58,708 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:58,709 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000033 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000033&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=64&ts=1731778438690
2024-11-16 17:33:58,720 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:58,720 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:33:58,720 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:33:58,720 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:33:58,721 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000033 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000033&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=64&ts=1731778438690
2024-11-16 17:33:58,757 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:33:58,757 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:33:58,757 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.037s
2024-11-16 17:33:58,758 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:33:58,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:58,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,759 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:58,759 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:58,759 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000034 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000034&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=64&ts=1731778438758
2024-11-16 17:33:58,778 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:33:58,779 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,779 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:58,780 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2502160027951113743.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:33:58,781 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2502160027951113743.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (op_abort=0) (stream_write_total_data=0) (stream_write_total_time=0) (stream_write_exceptions=0) (op_hflush=0) (object_put_request.failures=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2502160027951113743.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:33:58,781 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:58,781 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:33:58,781 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2502160027951113743.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:33:58,782 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:33:58,782 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:33:58,785 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:33:58,786 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:33:58,786 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000034 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000034&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=65&ts=1731778438758
2024-11-16 17:33:58,849 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:33:58,849 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:33:58,850 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.068s
2024-11-16 17:33:58,850 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2502160027951113743.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:33:58,850 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2502160027951113743.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:58,850 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2502160027951113743.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:58,850 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:33:58,852 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:58,854 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (op_hflush=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (object_put_request=1) (op_hsync=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=63) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (object_put_request.max=63) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=63, mean=63.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:33:58,854 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:33:58,855 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:33:58,855 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:33:58,858 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:58,858 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:58,860 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:33:58,861 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:33:58,861 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:33:58,861 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:33:58,861 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:33:58,861 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:33:58,861 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:33:58,861 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:33:58,861 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:33:58,861 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:33:58,862 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='c9cd711b-d80f-4439-87f8-a06a10909daf', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:58,862 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='c9cd711b-d80f-4439-87f8-a06a10909daf', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:33:58,862 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='c9cd711b-d80f-4439-87f8-a06a10909daf', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:33:58,862 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:33:58,862 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:33:58,863 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:33:58,863 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:33:58,863 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:33:58,863 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:33:58,863 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@51b53bea]
2024-11-16 17:33:58,864 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@51b53bea]
2024-11-16 17:33:58,864 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:33:58,864 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:33:58,864 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:33:58,864 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:33:58,864 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:33:58,864 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:33:58,865 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:33:58,865 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:33:58,865 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:33:58,865 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:33:58,865 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:33:58,865 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:33:58,867 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:33:58,869 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:33:58,869 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:33:58,869 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:33:58,869 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:33:58,869 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:33:58,869 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,871 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:33:58,871 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] c9cd711b-d80f-4439-87f8-a06a10909daf-00000037 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/c9cd711b-d80f-4439-87f8-a06a10909daf-00000037/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=c9cd711b-d80f-4439-87f8-a06a10909daf-00000037&t0=64&fs=c9cd711b-d80f-4439-87f8-a06a10909daf&t1=64&ts=1731778438870
2024-11-16 17:33:58,871 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:33:58,871 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:33:58,871 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:33:58,871 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:33:58,879 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:33:58,880 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778438000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:33:58,883 [s3a-transfer-obs-bucket-unbounded-pool11-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:58,883 [s3a-transfer-obs-bucket-unbounded-pool11-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,883 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:33:58,884 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:33:58,884 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:33:58,887 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,887 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,887 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:33:58,888 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [68] c9cd711b-d80f-4439-87f8-a06a10909daf-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/c9cd711b-d80f-4439-87f8-a06a10909daf-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=1947-2046&id=c9cd711b-d80f-4439-87f8-a06a10909daf-00000038&t0=67&fs=c9cd711b-d80f-4439-87f8-a06a10909daf&t1=68&ts=1731778438883
2024-11-16 17:33:58,887 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,889 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,889 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:33:58,890 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [69] c9cd711b-d80f-4439-87f8-a06a10909daf-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/c9cd711b-d80f-4439-87f8-a06a10909daf-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=8192-14435&id=c9cd711b-d80f-4439-87f8-a06a10909daf-00000038&t0=67&fs=c9cd711b-d80f-4439-87f8-a06a10909daf&t1=69&ts=1731778438883
2024-11-16 17:33:58,887 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,887 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:33:58,896 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,896 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:33:58,905 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [70] c9cd711b-d80f-4439-87f8-a06a10909daf-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/c9cd711b-d80f-4439-87f8-a06a10909daf-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=40960-41983&id=c9cd711b-d80f-4439-87f8-a06a10909daf-00000038&t0=67&fs=c9cd711b-d80f-4439-87f8-a06a10909daf&t1=70&ts=1731778438883
2024-11-16 17:33:58,930 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.034s
2024-11-16 17:33:58,931 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,932 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.043s
2024-11-16 17:33:58,932 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:33:58,932 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:33:58,932 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,935 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.048s
2024-11-16 17:33:58,937 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:58,939 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=35));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=48));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=126, mean=42.0000)));

2024-11-16 17:33:58,943 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_version_mismatches=0) (stream_read_total_bytes=1424) (stream_read_operations=0) (stream_read_vectored_combined_ranges=3) (action_file_opened.failures=0) (stream_read_vectored_operations=1) (stream_read_unbuffered=0) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=0) (stream_read_remote_stream_drain=0) (stream_read_bytes=1424) (stream_read_vectored_incoming_ranges=5) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (action_http_get_request=3) (stream_read_block_acquire_read.failures=0) (action_file_opened=1) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_operations=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=5944));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0));
minimums=((action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=0) (action_http_get_request.failures.min=-1) (action_http_get_request.min=35) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=48) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=0) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=126, mean=42.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:58,950 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778438000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:33:58,954 [s3a-transfer-obs-bucket-unbounded-pool11-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:58,955 [s3a-transfer-obs-bucket-unbounded-pool11-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,962 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:33:58,963 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:33:58,963 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:58,964 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] c9cd711b-d80f-4439-87f8-a06a10909daf-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/c9cd711b-d80f-4439-87f8-a06a10909daf-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=10240-65535&id=c9cd711b-d80f-4439-87f8-a06a10909daf-00000039&t0=74&fs=c9cd711b-d80f-4439-87f8-a06a10909daf&t1=64&ts=1731778438954
2024-11-16 17:33:58,990 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.028s
2024-11-16 17:33:58,993 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:33:58,994 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:33:58,994 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:33:58,995 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:33:58,995 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:33:58,997 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:33:58,997 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:58,999 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://obs-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:33:58,999 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:33:59,000 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:59,001 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] c9cd711b-d80f-4439-87f8-a06a10909daf-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/c9cd711b-d80f-4439-87f8-a06a10909daf-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=8192-8291&id=c9cd711b-d80f-4439-87f8-a06a10909daf-00000039&t0=74&fs=c9cd711b-d80f-4439-87f8-a06a10909daf&t1=64&ts=1731778438954
2024-11-16 17:33:59,030 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.036s
2024-11-16 17:33:59,031 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:33:59,031 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:33:59,032 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:33:59,032 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:33:59,032 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:33:59,033 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:33:59,033 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:33:59,034 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:59,034 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] c9cd711b-d80f-4439-87f8-a06a10909daf-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/c9cd711b-d80f-4439-87f8-a06a10909daf-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=14336-14435&id=c9cd711b-d80f-4439-87f8-a06a10909daf-00000039&t0=74&fs=c9cd711b-d80f-4439-87f8-a06a10909daf&t1=64&ts=1731778438954
2024-11-16 17:33:59,059 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.027s
2024-11-16 17:33:59,060 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:33:59,060 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:33:59,060 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:33:59,061 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:33:59,061 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:33:59,062 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:33:59,062 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:33:59,062 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:59,063 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] c9cd711b-d80f-4439-87f8-a06a10909daf-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/c9cd711b-d80f-4439-87f8-a06a10909daf-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=1947-2046&id=c9cd711b-d80f-4439-87f8-a06a10909daf-00000039&t0=74&fs=c9cd711b-d80f-4439-87f8-a06a10909daf&t1=64&ts=1731778438954
2024-11-16 17:33:59,084 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.024s
2024-11-16 17:33:59,084 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:33:59,085 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:33:59,085 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:33:59,085 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:33:59,085 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:33:59,085 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:33:59,085 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:33:59,085 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:59,085 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] c9cd711b-d80f-4439-87f8-a06a10909daf-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/c9cd711b-d80f-4439-87f8-a06a10909daf-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=40960-41983&id=c9cd711b-d80f-4439-87f8-a06a10909daf-00000039&t0=74&fs=c9cd711b-d80f-4439-87f8-a06a10909daf&t1=64&ts=1731778438954
2024-11-16 17:33:59,106 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.021s
2024-11-16 17:33:59,106 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:33:59,107 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:33:59,109 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=21)
(stream_read_remote_stream_aborted.min=3)
(stream_read_remote_stream_drain.min=0));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=30)
(stream_read_remote_stream_aborted.max=3)
(stream_read_remote_stream_drain.max=1));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=123, mean=24.6000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=2, mean=0.6667)));

2024-11-16 17:33:59,109 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:33:59,109 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:33:59,109 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:33:59,111 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_operations=4) (stream_read_vectored_incoming_ranges=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=2) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=4) (stream_read_fully_operations=5) (stream_read_seek_policy_changed=2) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted=1) (action_http_get_request.failures=0) (stream_read_operations=5) (stream_read_seek_bytes_skipped=44957) (stream_read_vectored_combined_ranges=0) (stream_aborted=1) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes=1424) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=14637) (stream_read_block_acquire_read=0) (action_http_get_request=5) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1) (stream_read_remote_stream_drain=4) (action_file_opened.failures=0) (stream_read_opened=5) (stream_read_seek_backward_operations=2) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=55196) (action_executor_acquired=0) (stream_read_total_bytes=1424) (stream_read_unbuffered=0) (stream_read_vectored_operations=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=1) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=0) (action_http_get_request.min=21) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=3));
maximums=((action_http_get_request.max=30) (stream_read_remote_stream_drain.max=1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.max=3) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=123, mean=24.6000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=3, mean=0.7500)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:59,114 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:33:59,117 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:33:59,117 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:33:59,117 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@7eb3f3a7[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:33:59,117 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:33:59,117 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics5-obs-bucket
2024-11-16 17:33:59,118 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:33:59,118 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@51b53bea] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:33:59,118 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@51b53bea] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:33:59,123 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_write_total_data=0) (op_rename.failures=0) (op_create_non_recursive=0) (object_multipart_initiated.failures=0) (stream_read_bytes_backwards_on_seek=14637) (delegation_tokens_issued.failures=0) (op_rename=0) (committer_load_single_pending_file.failures=0) (op_get_file_checksum=0) (audit_request_execution=9) (op_mkdirs=0) (stream_read_closed=4) (op_create.failures=0) (op_abort.failures=0) (object_delete_request=0) (action_http_get_request.failures=0) (op_createfile=0) (op_get_delegation_token=0) (multipart_upload_abort_under_path_invoked=0) (committer_stage_file_upload.failures=0) (object_put_request.failures=0) (op_is_directory=0) (multipart_upload_completed=0) (op_is_directory.failures=0) (object_put_request_completed=0) (delegation_tokens_issued=0) (op_list_files.failures=0) (op_get_file_status=1) (committer_bytes_committed=0) (op_get_file_status.failures=0) (files_created=0) (op_xattr_get_map=0) (committer_jobs_failed=0) (stream_write_exceptions=0) (op_hsync=0) (stream_write_queue_duration.failures=0) (op_createfile.failures=0) (stream_read_vectored_combined_ranges=3) (fake_directories_deleted=0) (op_delete.failures=0) (files_deleted=0) (op_delete=0) (directories_created=0) (action_http_head_request.failures=0) (committer_magic_marker_put=0) (committer_commits_reverted=0) (stream_read_bytes_discarded_in_close=0) (op_get_content_summary=0) (op_get_file_checksum.failures=0) (multipart_upload_list=0) (object_metadata_request=1) (multipart_upload_started=0) (stream_read_unbuffered=0) (object_multipart_aborted.failures=0) (committer_commits_created=0) (object_put_bytes=0) (op_is_file.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=2848) (committer_commits_completed=0) (store_io_throttled=0) (audit_span_creation=4) (stream_read_seek_policy_changed=3) (stream_read_seek_operations=4) (committer_load_single_pending_file=0) (op_get_content_summary.failures=0) (object_multipart_initiated=0) (committer_bytes_uploaded=0) (committer_materialize_file=0) (committer_commit_job.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_named=0) (stream_read_close_operations=2) (stream_write_exceptions_completing_upload=0) (action_http_get_request=8) (multipart_upload_list.failures=0) (audit_failure=0) (stream_read_seek_bytes_skipped=44957) (stream_read_remote_stream_drain=4) (stream_write_block_uploads=0) (action_file_opened=2) (op_create=0) (op_abort=0) (object_delete_request.failures=0) (stream_write_queue_duration=0) (audit_access_check_failure=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_version_mismatches=0) (op_exists.failures=0) (stream_read_vectored_operations=1) (stream_read_fully_operations=5) (files_copied=0) (object_put_request=0) (op_glob_status.failures=0) (op_open=2) (stream_read_opened=5) (committer_magic_files_created=0) (op_xattr_get_named_map.failures=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named_map=0) (op_is_file=0) (stream_read_vectored_incoming_ranges=5) (action_file_opened.failures=0) (committer_commits_aborted=0) (action_executor_acquired=0) (ignored_errors=0) (op_list_located_status=0) (store_io_retry=0) (action_http_head_request=1) (fake_directories_created=0) (op_xattr_list=0) (stream_read_seek_forward_operations=2) (files_copied_bytes=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (committer_stage_file_upload=0) (op_xattr_get_map.failures=0) (op_list_status.failures=0) (multipart_instantiated=0) (object_continue_list_request.failures=0) (object_copy_requests=0) (directories_deleted=0) (op_xattr_get_named.failures=0) (committer_tasks_completed=0) (stream_aborted=1) (stream_read_vectored_read_bytes_discarded=5944) (multipart_upload_part_put_bytes=0) (stream_write_bytes=0) (store_exists_probe.failures=0) (stream_read_seek_bytes_discarded=0) (committer_commits.failures=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (object_delete_objects=0) (multipart_upload_aborted=0) (op_exists=0) (op_copy_from_local_file=0) (committer_magic_marker_put.failures=0) (stream_read_operations=5) (object_list_request.failures=0) (stream_read_seek_backward_operations=2) (committer_materialize_file.failures=0) (op_mkdirs.failures=0) (files_delete_rejected=0) (op_access.failures=0) (store_io_request=9) (stream_read_operations_incomplete=0) (committer_tasks_failed=0) (object_bulk_delete_request=0) (op_list_status=0) (op_get_delegation_token.failures=0) (op_hflush=0) (op_glob_status=0) (committer_jobs_completed=0) (stream_read_total_bytes=2848) (stream_read_exceptions=0) (op_openfile=0) (committer_commit_job=0) (op_access=0) (op_copy_from_local_file.failures=0) (store_exists_probe=0) (object_select_requests=0) (stream_read_remote_stream_aborted=1) (op_list_files=0) (stream_write_block_uploads_committed=0) (object_bulk_delete_request.failures=0) (object_continue_list_request=0) (op_xattr_list.failures=0) (object_list_request=0));
gauges=((object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0));
minimums=((committer_materialize_file.failures.min=-1) (op_list_files.min=-1) (committer_load_single_pending_file.min=-1) (object_put_request.min=-1) (stream_read_remote_stream_aborted.min=3) (object_delete_request.failures.min=-1) (op_rename.min=-1) (object_delete_request.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_delegation_token.min=-1) (op_create.min=-1) (op_xattr_get_map.failures.min=-1) (store_exists_probe.min=-1) (object_continue_list_request.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_delete.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_directory.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_file_opened.min=0) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_is_file.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.min=0) (op_rename.failures.min=-1) (op_exists.min=-1) (stream_write_queue_duration.min=-1) (op_glob_status.failures.min=-1) (op_access.failures.min=-1) (action_http_get_request.min=21) (op_delete.failures.min=-1) (op_get_content_summary.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.failures.min=-1) (action_http_head_request.min=8) (action_executor_acquired.failures.min=-1) (committer_commit_job.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_status.min=9) (object_continue_list_request.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_status.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_bulk_delete_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_status.min=-1) (op_glob_status.min=-1) (committer_stage_file_upload.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_abort.min=-1) (op_copy_from_local_file.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.failures.min=-1) (op_create.failures.min=-1) (op_createfile.min=-1) (op_list_files.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.min=-1) (committer_materialize_file.min=-1) (object_list_request.min=-1) (op_mkdirs.min=-1) (op_xattr_list.min=-1) (op_is_file.min=-1));
maximums=((op_get_file_checksum.failures.max=-1) (multipart_upload_list.max=-1) (action_http_get_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_files.max=-1) (op_is_file.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (op_get_content_summary.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.max=-1) (op_get_file_checksum.max=-1) (delegation_tokens_issued.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.max=-1) (committer_commit_job.failures.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (op_list_status.max=-1) (committer_commit_job.max=-1) (object_list_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_get_request.max=48) (op_delete.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.failures.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_aborted.max=3) (object_multipart_aborted.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.max=-1) (stream_write_queue_duration.failures.max=-1) (op_createfile.max=-1) (op_get_content_summary.max=-1) (committer_stage_file_upload.max=-1) (object_continue_list_request.max=-1) (committer_materialize_file.max=-1) (op_glob_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_status.failures.max=-1) (op_list_files.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=8) (op_access.failures.max=-1) (op_xattr_list.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_status.max=9) (object_multipart_initiated.failures.max=-1) (action_http_head_request.failures.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.max=0) (op_createfile.failures.max=-1) (op_exists.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_access.max=-1) (object_list_request.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_directory.failures.max=-1) (op_delete.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.failures.max=-1) (object_delete_request.failures.max=-1) (op_create.max=-1) (action_file_opened.failures.max=-1));
means=((op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=3, mean=0.7500)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=249, mean=31.1250)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=8, mean=8.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:59,124 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:33:59,124 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:59,124 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:59,124 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=64&ts=1731778439124
2024-11-16 17:33:59,137 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:59,137 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,138 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=64&ts=1731778439124
2024-11-16 17:33:59,147 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:33:59,148 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:33:59,148 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:33:59,148 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:33:59,148 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:33:59,148 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:33:59,148 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:33:59,148 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:33:59,148 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:33:59,148 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:33:59,148 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:33:59,148 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:33:59,163 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:33:59,165 [s3a-transfer-obs-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:33:59,165 [s3a-transfer-obs-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,165 [s3a-transfer-obs-bucket-unbounded-pool2-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [76] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=76&ts=1731778439124
2024-11-16 17:33:59,185 [s3a-transfer-obs-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.020s
2024-11-16 17:33:59,186 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.023s
2024-11-16 17:33:59,186 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:33:59,186 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:33:59,186 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:33:59,186 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778438844; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:33:59,186 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:33:59,186 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:33:59,186 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:33:59,187 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:33:59,193 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:33:59,197 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:33:59,198 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:33:59,198 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:33:59,198 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:59,198 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:59,198 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:33:59,198 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:59,198 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=77&ts=1731778439124
2024-11-16 17:33:59,223 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.025s
2024-11-16 17:33:59,223 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.025s
2024-11-16 17:33:59,223 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.025s
2024-11-16 17:33:59,224 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:33:59,224 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:33:59,224 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:59,224 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:59,224 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:33:59,224 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:59,224 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000040&t0=64&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=77&ts=1731778439124
2024-11-16 17:33:59,242 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:33:59,242 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:33:59,242 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.018s
2024-11-16 17:33:59,242 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.045s
2024-11-16 17:33:59,242 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.049s
2024-11-16 17:33:59,242 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.094s
2024-11-16 17:33:59,242 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:33:59,242 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:33:59,251 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:33:59,286 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 6, active threads = 0, queued tasks = 0, completed tasks = 6], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_initiated.failures=0) (stream_write_exceptions=0) (committer_commits.failures=0) (action_file_opened.failures=0) (op_abort.failures=0) (op_is_directory=0) (delegation_tokens_issued=0) (op_xattr_list=0) (op_mkdirs=6) (op_xattr_get_map=0) (files_deleted=6) (object_copy_requests=0) (multipart_upload_completed=0) (op_list_located_status=0) (multipart_upload_started=0) (stream_read_close_operations=3) (committer_bytes_committed=0) (op_list_status=0) (object_put_bytes=393216) (op_xattr_get_named.failures=0) (op_list_status.failures=0) (object_multipart_aborted.failures=0) (stream_aborted=0) (op_mkdirs.failures=0) (stream_read_closed=0) (op_xattr_get_named_map=0) (stream_write_total_time=0) (store_exists_probe=0) (committer_jobs_completed=0) (committer_commits_aborted=0) (op_glob_status.failures=0) (object_multipart_aborted=0) (committer_jobs_failed=0) (committer_materialize_file.failures=0) (op_create=6) (op_xattr_list.failures=0) (delegation_tokens_issued.failures=0) (object_continue_list_request.failures=0) (stream_read_total_bytes=300) (op_abort=0) (op_hsync=0) (action_http_get_request=2) (committer_commits_reverted=0) (action_http_get_request.failures=0) (audit_failure=0) (fake_directories_deleted=6) (object_delete_objects=12) (object_put_request=12) (stream_write_block_uploads_aborted=0) (action_executor_acquired=0) (op_createfile.failures=0) (object_delete_request=0) (op_is_file.failures=0) (op_get_delegation_token.failures=0) (op_access.failures=0) (stream_read_exceptions=0) (op_delete=6) (stream_read_seek_operations=0) (multipart_upload_abort_under_path_invoked=0) (files_copied_bytes=0) (object_delete_request.failures=0) (object_bulk_delete_request.failures=0) (op_get_file_status.failures=0) (directories_created=6) (committer_load_single_pending_file=0) (op_get_file_status=0) (committer_magic_marker_put=0) (op_createfile=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=3) (op_get_file_checksum=0) (stream_read_version_mismatches=0) (store_io_retry=0) (files_copied=0) (store_io_request=65) (committer_magic_marker_put.failures=0) (committer_tasks_completed=0) (op_open=3) (stream_read_bytes_discarded_in_close=0) (store_io_throttled=0) (stream_write_block_uploads=6) (directories_deleted=0) (op_xattr_get_map.failures=0) (stream_write_block_uploads_committed=0) (stream_write_exceptions_completing_upload=0) (store_exists_probe.failures=0) (op_copy_from_local_file=0) (object_bulk_delete_request=12) (object_list_request.failures=0) (stream_read_unbuffered=1) (object_metadata_request=15) (committer_materialize_file=0) (stream_read_remote_stream_drain=0) (stream_read_operations=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_incoming_ranges=8) (fake_directories_created=0) (files_delete_rejected=0) (object_multipart_initiated=0) (committer_tasks_failed=0) (ignored_errors=0) (committer_load_single_pending_file.failures=0) (files_created=6) (audit_access_check_failure=0) (object_select_requests=0) (object_put_request_completed=12) (op_rename=0) (committer_bytes_uploaded=0) (op_rename.failures=0) (stream_read_bytes=300) (committer_commit_job.failures=0) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (action_http_head_request=15) (stream_read_opened=0) (stream_read_vectored_operations=4) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_read_vectored_combined_ranges=4) (multipart_instantiated=0) (stream_read_seek_policy_changed=4) (op_get_file_checksum.failures=0) (op_list_files.failures=0) (stream_write_bytes=393216) (stream_read_remote_stream_aborted.failures=0) (op_is_directory.failures=0) (op_exists=0) (op_create.failures=0) (op_delete.failures=0) (stream_read_vectored_read_bytes_discarded=20) (op_list_files=0) (committer_magic_files_created=0) (stream_read_remote_stream_aborted=0) (op_hflush=0) (stream_read_fully_operations=0) (stream_write_queue_duration.failures=0) (committer_commits_completed=0) (audit_request_execution=65) (multipart_upload_list=0) (committer_stage_file_upload.failures=0) (stream_read_seek_bytes_skipped=0) (op_get_delegation_token=0) (op_access=0) (object_continue_list_request=0) (multipart_upload_aborted=0) (op_is_file=0) (stream_write_total_data=786432) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (audit_span_creation=22) (action_executor_acquired.failures=0) (op_get_content_summary=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named_map.failures=0) (committer_commit_job=0) (action_http_head_request.failures=0) (op_create_non_recursive=0) (object_put_request.failures=0) (op_openfile=0) (object_list_request=24) (op_xattr_get_named=0) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_list.failures=0) (op_get_content_summary.failures=0) (committer_stage_file_upload=0) (op_glob_status=0) (op_copy_from_local_file.failures=0) (committer_commits_created=0) (op_exists.failures=0));
gauges=((stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=6) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0));
minimums=((op_list_status.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.min=-1) (op_list_status.failures.min=-1) (op_delete.min=60) (op_get_file_checksum.failures.min=-1) (store_exists_probe.min=-1) (op_is_directory.min=-1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_file_opened.failures.min=-1) (object_list_request.min=9) (object_multipart_aborted.min=-1) (committer_materialize_file.min=-1) (object_delete_request.failures.min=-1) (multipart_upload_list.min=-1) (action_http_head_request.min=5) (op_get_delegation_token.min=-1) (op_glob_status.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_directory.failures.min=-1) (object_multipart_initiated.min=-1) (op_createfile.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.min=-1) (op_mkdirs.min=60) (object_multipart_aborted.failures.min=-1) (object_bulk_delete_request.min=12) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.failures.min=-1) (op_list_files.failures.min=-1) (action_file_opened.min=18) (op_exists.min=-1) (object_put_request.min=63) (op_get_file_checksum.min=-1) (store_exists_probe.failures.min=-1) (committer_stage_file_upload.min=-1) (op_abort.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_delete_request.min=-1) (op_get_file_status.min=-1) (op_xattr_get_map.failures.min=-1) (committer_commit_job.min=-1) (op_access.min=-1) (action_http_get_request.min=33) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_createfile.failures.min=-1) (op_delete.failures.min=-1) (op_is_file.min=-1) (op_xattr_list.failures.min=-1) (op_mkdirs.failures.min=-1) (op_create.min=12) (delegation_tokens_issued.min=-1) (object_continue_list_request.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named.min=-1) (op_exists.failures.min=-1) (op_xattr_list.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.failures.min=-1) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_rename.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1));
maximums=((op_list_status.max=-1) (op_get_file_checksum.max=-1) (op_get_file_status.failures.max=-1) (store_exists_probe.failures.max=-1) (object_list_request.max=243) (op_get_content_summary.max=-1) (op_list_files.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.max=-1) (op_get_delegation_token.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_file.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (op_exists.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_files.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (op_delete.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named_map.max=-1) (action_executor_acquired.failures.max=-1) (op_rename.max=-1) (object_continue_list_request.failures.max=-1) (committer_stage_file_upload.max=-1) (store_exists_probe.max=-1) (op_createfile.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.failures.max=-1) (op_create.failures.max=-1) (op_is_directory.max=-1) (committer_load_single_pending_file.max=-1) (stream_write_queue_duration.failures.max=-1) (object_bulk_delete_request.max=29) (op_xattr_list.max=-1) (op_get_content_summary.failures.max=-1) (op_mkdirs.max=395) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (action_http_get_request.max=39) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (action_file_opened.max=18) (op_list_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (object_delete_request.max=-1) (action_http_head_request.max=17) (op_glob_status.failures.max=-1) (op_exists.max=-1) (op_access.failures.max=-1) (op_is_directory.failures.max=-1) (object_put_request.max=121) (action_http_get_request.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_abort.failures.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.max=-1) (op_is_file.failures.max=-1) (op_get_file_status.max=-1) (op_createfile.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_copy_from_local_file.max=-1) (object_continue_list_request.max=-1) (op_xattr_list.failures.max=-1) (object_put_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_list_request.failures.max=-1) (op_create.max=63) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_access.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.max=94) (object_multipart_initiated.failures.max=-1) (delegation_tokens_issued.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=24, sum=596, mean=24.8333)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=72, mean=36.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=45, mean=15.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=12, sum=760, mean=63.3333)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=6, sum=467, mean=77.8333)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=6, sum=753, mean=125.5000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=12, sum=258, mean=21.5000)) (action_http_head_request.mean=(samples=15, sum=145, mean=9.6667)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=6, sum=163, mean=27.1667)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:33:59,286 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:33:59,286 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:59,287 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:59,287 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:59,287 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,287 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000041 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000041&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=78&ts=1731778439286
2024-11-16 17:33:59,317 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.030s
2024-11-16 17:33:59,317 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:59,318 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:59,318 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:59,318 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:59,318 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000041 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000041&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=78&ts=1731778439286
2024-11-16 17:33:59,328 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:59,328 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:33:59,331 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:33:59,331 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:33:59,332 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000041 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000041&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=78&ts=1731778439286
2024-11-16 17:33:59,378 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:33:59,378 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:33:59,378 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.050s
2024-11-16 17:33:59,379 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:33:59,379 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:59,379 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:59,379 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:59,379 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,380 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000042 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000042&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=78&ts=1731778439379
2024-11-16 17:33:59,402 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.023s
2024-11-16 17:33:59,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:59,402 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:59,403 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14334688134800197597.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:33:59,407 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14334688134800197597.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (op_abort.failures=0) (stream_write_block_uploads=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (action_executor_acquired=0) (object_multipart_initiated=0) (object_put_request=0) (stream_write_total_time=0) (op_hflush=0) (multipart_upload_completed=0) (op_abort=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14334688134800197597.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:33:59,407 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:59,408 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:33:59,408 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14334688134800197597.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:33:59,410 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:33:59,411 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:33:59,411 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:33:59,412 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:33:59,412 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000042 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000042&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=79&ts=1731778439379
2024-11-16 17:33:59,513 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:33:59,514 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:33:59,514 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.103s
2024-11-16 17:33:59,515 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14334688134800197597.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:33:59,515 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14334688134800197597.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:59,516 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14334688134800197597.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:59,516 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:33:59,517 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:59,518 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=1) (object_put_request=1) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (op_hflush=0) (stream_write_exceptions=0) (stream_write_total_time=0) (op_abort=0) (stream_write_bytes=65536) (op_abort.failures=0) (action_executor_acquired=0) (stream_write_total_data=65536) (object_multipart_initiated.failures=0) (op_hsync=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=101) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=101) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=101, mean=101.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:33:59,518 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:33:59,519 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:59,519 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:59,519 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:33:59,519 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000043 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000043&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=78&ts=1731778439519
2024-11-16 17:33:59,532 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:33:59,532 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:59,533 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:59,533 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:59,533 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:33:59,533 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:33:59,537 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:33:59,537 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:33:59,537 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:33:59,537 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:59,538 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-65535&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000043&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=78&ts=1731778439519
2024-11-16 17:33:59,538 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:59,538 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:59,538 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:33:59,538 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000043&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=80&ts=1731778439519
2024-11-16 17:33:59,577 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.039s
2024-11-16 17:33:59,577 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:33:59,577 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:33:59,592 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.055s
2024-11-16 17:33:59,592 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:33:59,592 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:33:59,596 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:33:59,596 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:33:59,596 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:33:59,596 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7442 bytes
2024-11-16 17:33:59,596 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:33:59,597 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:33:59,597 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:33:59,597 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8742 bytes
2024-11-16 17:33:59,597 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:33:59,597 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:33:59,598 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=65336) (stream_read_bytes=350) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (action_http_get_request=2) (stream_read_exceptions=0) (stream_read_remote_stream_drain=1) (stream_read_close_operations=1) (stream_read_opened=1) (stream_read_block_read.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_seek_forward_operations=0) (stream_read_total_bytes=65686) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_vectored_combined_ranges=1) (stream_read_closed=1) (action_file_opened.failures=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_operations=0) (stream_read_operations=1) (stream_read_prefetch_operations=0) (stream_read_vectored_operations=1) (stream_read_vectored_incoming_ranges=2) (action_executor_acquired=0) (stream_read_version_mismatches=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read=0) (stream_aborted=0) (action_http_get_request.failures=0) (action_file_opened=1) (stream_read_block_acquire_read.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=39) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=13) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=55) (action_file_opened.failures.max=-1) (action_file_opened.max=13) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=13, mean=13.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=94, mean=47.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:59,600 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:33:59,600 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:59,600 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:59,600 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=78&ts=1731778439599
2024-11-16 17:33:59,608 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:59,609 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,609 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=78&ts=1731778439599
2024-11-16 17:33:59,643 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.034s
2024-11-16 17:33:59,643 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:33:59,643 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:33:59,643 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:33:59,643 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:33:59,644 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:33:59,645 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:33:59,645 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:33:59,645 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:33:59,646 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:33:59,646 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:33:59,646 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:33:59,653 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:33:59,654 [s3a-transfer-obs-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:33:59,654 [s3a-transfer-obs-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,654 [s3a-transfer-obs-bucket-unbounded-pool2-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [81] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=81&ts=1731778439599
2024-11-16 17:33:59,667 [s3a-transfer-obs-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:33:59,668 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.015s
2024-11-16 17:33:59,668 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:33:59,668 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:33:59,669 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:33:59,670 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778439494; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:33:59,670 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:33:59,670 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:33:59,670 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:33:59,671 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:33:59,671 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:33:59,673 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:33:59,673 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:33:59,673 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:33:59,673 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:59,673 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:59,673 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:33:59,673 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:59,673 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=82&ts=1731778439599
2024-11-16 17:33:59,695 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.022s
2024-11-16 17:33:59,695 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.022s
2024-11-16 17:33:59,695 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.022s
2024-11-16 17:33:59,695 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:33:59,696 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:33:59,696 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:59,696 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:59,696 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:33:59,696 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:59,697 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000044&t0=78&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=82&ts=1731778439599
2024-11-16 17:33:59,729 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.033s
2024-11-16 17:33:59,730 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.034s
2024-11-16 17:33:59,730 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.034s
2024-11-16 17:33:59,731 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.057s
2024-11-16 17:33:59,731 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.060s
2024-11-16 17:33:59,731 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.086s
2024-11-16 17:33:59,732 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:33:59,732 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:33:59,734 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:33:59,750 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 7, active threads = 0, queued tasks = 0, completed tasks = 7], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commits_reverted=0) (stream_read_operations_incomplete=0) (object_put_request.failures=0) (stream_read_bytes_discarded_in_close=65336) (audit_failure=0) (stream_read_opened=1) (op_xattr_get_named_map=0) (committer_commits_completed=0) (store_io_throttled=0) (op_copy_from_local_file=0) (op_list_files=0) (stream_read_seek_operations=0) (stream_write_bytes=458752) (multipart_upload_started=0) (stream_read_exceptions=0) (stream_read_version_mismatches=0) (op_xattr_get_map.failures=0) (delegation_tokens_issued=0) (object_continue_list_request=0) (files_copied_bytes=0) (multipart_upload_part_put=0) (stream_read_seek_policy_changed=5) (committer_commit_job.failures=0) (op_openfile=0) (committer_bytes_uploaded=0) (multipart_upload_part_put_bytes=0) (multipart_upload_aborted=0) (committer_magic_marker_put=0) (stream_read_close_operations=4) (op_createfile=0) (op_xattr_get_named.failures=0) (op_create=7) (op_exists=0) (store_exists_probe=0) (object_list_request=28) (stream_read_closed=1) (stream_write_block_uploads_committed=0) (object_metadata_request=18) (op_delete=7) (op_list_located_status=0) (committer_load_single_pending_file=0) (action_http_head_request.failures=0) (stream_read_seek_forward_operations=0) (committer_commit_job=0) (op_glob_status.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_get_file_status.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_list=0) (object_bulk_delete_request.failures=0) (op_abort=0) (action_file_opened=4) (stream_read_total_bytes=65986) (committer_materialize_file.failures=0) (audit_request_execution=78) (stream_read_vectored_read_bytes_discarded=30) (action_http_get_request=4) (action_http_head_request=18) (object_copy_requests=0) (stream_write_block_uploads=7) (stream_read_seek_bytes_skipped=0) (op_get_file_checksum.failures=0) (action_file_opened.failures=0) (op_get_content_summary.failures=0) (committer_commits.failures=0) (ignored_errors=0) (op_xattr_get_named_map.failures=0) (op_list_files.failures=0) (audit_span_creation=26) (object_put_request=14) (op_abort.failures=0) (stream_write_queue_duration.failures=0) (object_delete_request.failures=0) (stream_write_exceptions=0) (op_xattr_list.failures=0) (op_get_file_status=0) (multipart_instantiated=0) (object_select_requests=0) (multipart_upload_completed=0) (op_access=0) (op_create.failures=0) (op_is_file=0) (object_delete_request=0) (files_copied=0) (op_is_file.failures=0) (object_multipart_aborted.failures=0) (committer_load_single_pending_file.failures=0) (op_copy_from_local_file.failures=0) (op_mkdirs.failures=0) (stream_write_queue_duration=0) (op_mkdirs=7) (committer_commits_aborted=0) (object_continue_list_request.failures=0) (op_exists.failures=0) (stream_read_bytes=650) (action_executor_acquired=0) (op_rename.failures=0) (op_is_directory=0) (object_put_request_completed=14) (op_open=4) (committer_bytes_committed=0) (fake_directories_created=0) (stream_read_remote_stream_drain=1) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_list.failures=0) (op_get_delegation_token.failures=0) (op_createfile.failures=0) (store_exists_probe.failures=0) (stream_read_vectored_operations=5) (stream_write_block_uploads_aborted=0) (object_multipart_initiated=0) (store_io_request=78) (stream_read_remote_stream_aborted=0) (files_delete_rejected=0) (stream_read_seek_bytes_discarded=0) (op_access.failures=0) (committer_tasks_completed=0) (op_list_status.failures=0) (stream_read_fully_operations=0) (object_bulk_delete_request=14) (committer_stage_file_upload=0) (op_glob_status=0) (stream_read_seek_backward_operations=0) (files_created=7) (files_deleted=7) (committer_commits_created=0) (object_list_request.failures=0) (action_executor_acquired.failures=0) (op_list_status=0) (stream_read_vectored_combined_ranges=5) (op_hflush=0) (audit_access_check_failure=0) (object_delete_objects=14) (store_io_retry=0) (directories_deleted=0) (committer_stage_file_upload.failures=0) (multipart_upload_list=0) (object_multipart_initiated.failures=0) (stream_read_vectored_incoming_ranges=10) (op_xattr_get_map=0) (op_get_content_summary=0) (stream_write_total_data=917504) (object_multipart_aborted=0) (stream_read_unbuffered=1) (op_delete.failures=0) (object_put_bytes=458752) (action_http_get_request.failures=0) (op_rename=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named=0) (op_is_directory.failures=0) (op_create_non_recursive=0) (committer_magic_marker_put.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_aborted=0) (fake_directories_deleted=7) (committer_materialize_file=0) (directories_created=7) (op_get_delegation_token=0) (stream_read_operations=1) (committer_jobs_completed=0) (committer_tasks_failed=0) (committer_magic_files_created=0) (op_hsync=0) (delegation_tokens_issued.failures=0) (committer_jobs_failed=0) (stream_write_total_time=0) (op_get_file_checksum=0) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=7) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0));
minimums=((stream_read_remote_stream_drain.min=1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_magic_marker_put.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_checksum.failures.min=-1) (multipart_upload_list.min=-1) (committer_commit_job.min=-1) (op_list_files.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_status.failures.min=-1) (object_delete_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_map.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.min=39) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.min=12) (committer_load_single_pending_file.failures.min=-1) (op_rename.failures.min=-1) (object_list_request.failures.min=-1) (action_file_opened.min=13) (store_exists_probe.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (op_createfile.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.failures.min=-1) (op_create.min=12) (object_multipart_aborted.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_file.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_materialize_file.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.min=-1) (op_get_delegation_token.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.failures.min=-1) (op_delete.min=60) (op_glob_status.failures.min=-1) (op_is_directory.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_files.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.min=-1) (action_executor_acquired.failures.min=-1) (op_createfile.min=-1) (object_put_request.min=101) (op_mkdirs.min=60) (op_exists.failures.min=-1) (op_is_directory.min=-1) (op_abort.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_list_request.min=9) (committer_materialize_file.failures.min=-1) (op_rename.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_create.failures.min=-1) (store_exists_probe.min=-1) (op_is_file.min=-1) (op_glob_status.min=-1) (committer_commit_job.failures.min=-1) (op_exists.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_checksum.min=-1) (action_executor_acquired.min=-1) (op_access.min=-1) (action_http_head_request.min=5) (op_xattr_list.min=-1) (op_get_file_status.min=-1) (action_file_opened.failures.min=-1));
maximums=((action_http_head_request.failures.max=-1) (object_list_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_write_queue_duration.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_content_summary.max=-1) (op_create.max=63) (op_mkdirs.max=395) (stream_write_queue_duration.failures.max=-1) (op_glob_status.max=-1) (op_create.failures.max=-1) (object_continue_list_request.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_initiated.max=-1) (op_rename.max=-1) (op_access.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named.failures.max=-1) (store_exists_probe.max=-1) (committer_commit_job.max=-1) (op_xattr_get_map.max=-1) (committer_stage_file_upload.max=-1) (op_access.max=-1) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.max=33) (object_list_request.max=243) (op_delete.max=94) (op_createfile.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_delete_request.max=-1) (op_is_file.max=-1) (op_xattr_get_named.max=-1) (op_get_file_checksum.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_copy_from_local_file.max=-1) (op_exists.max=-1) (op_is_directory.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.max=17) (stream_read_remote_stream_drain.max=1) (op_get_file_status.failures.max=-1) (action_file_opened.max=18) (op_createfile.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.failures.max=-1) (op_abort.max=-1) (op_list_files.failures.max=-1) (op_abort.failures.max=-1) (action_http_get_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.failures.max=-1) (object_put_request.max=121) (object_put_request.failures.max=-1) (op_delete.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_status.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_list.max=-1) (multipart_upload_list.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=55) (stream_read_remote_stream_drain.failures.max=-1) (op_list_status.max=-1) (op_is_file.failures.max=-1) (op_xattr_list.failures.max=-1) (op_exists.failures.max=-1));
means=((op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=7, sum=187, mean=26.7143)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=7, sum=846, mean=120.8571)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=166, mean=41.5000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=18, sum=176, mean=9.7778)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=14, sum=313, mean=22.3571)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=7, sum=555, mean=79.2857)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=14, sum=907, mean=64.7857)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=4, sum=58, mean=14.5000)) (object_list_request.mean=(samples=28, sum=696, mean=24.8571)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:33:59,752 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:33:59,753 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:59,753 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:59,754 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:59,754 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,755 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000045 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000045&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=83&ts=1731778439752
2024-11-16 17:33:59,769 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:33:59,770 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:59,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:33:59,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:59,773 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:59,773 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000045 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000045&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=83&ts=1731778439752
2024-11-16 17:33:59,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:33:59,780 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:33:59,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:33:59,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:33:59,780 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000045 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000045&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=83&ts=1731778439752
2024-11-16 17:33:59,829 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:33:59,830 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:33:59,830 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.050s
2024-11-16 17:33:59,830 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:33:59,830 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:59,830 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:59,830 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:59,830 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,831 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000046 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000046&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=83&ts=1731778439830
2024-11-16 17:33:59,841 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:33:59,842 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:59,843 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:33:59,843 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5307479159649964814.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:33:59,845 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5307479159649964814.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (object_put_request.failures=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (op_hflush=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (stream_write_block_uploads=0) (multipart_upload_part_put=0) (action_executor_acquired=0) (op_abort.failures=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (object_put_request=0) (op_abort=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5307479159649964814.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:33:59,846 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:59,848 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:33:59,849 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5307479159649964814.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:33:59,850 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:33:59,850 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:33:59,851 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:33:59,851 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:33:59,852 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000046 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000046&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=84&ts=1731778439830
2024-11-16 17:33:59,925 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:33:59,925 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:33:59,925 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.075s
2024-11-16 17:33:59,926 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5307479159649964814.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:33:59,926 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5307479159649964814.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:59,926 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5307479159649964814.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:33:59,926 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:33:59,926 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:33:59,927 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (stream_write_queue_duration=0) (action_executor_acquired=0) (object_multipart_initiated=0) (op_hflush=0) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (op_abort=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (op_hsync=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (stream_write_total_data=65536) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=73) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1));
maximums=((committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=73));
means=((object_put_request.mean=(samples=1, sum=73, mean=73.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:33:59,927 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:33:59,929 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:33:59,930 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:33:59,930 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:33:59,930 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [85] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000047 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000047/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000047&t0=85&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=85&ts=1731778439929
2024-11-16 17:33:59,937 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:33:59,937 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:33:59,937 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:33:59,938 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:33:59,939 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1) (action_file_opened=1) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (stream_read_block_read=0) (stream_read_total_bytes=0) (stream_aborted=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (action_http_get_request=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_fully_operations=0) (stream_read_bytes=0) (stream_read_prefetch_operations.failures=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (stream_read_unbuffered=0) (stream_read_operations=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_prefetch_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=8) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=8) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:33:59,941 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:33:59,941 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:33:59,941 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:33:59,941 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=83&ts=1731778439941
2024-11-16 17:33:59,946 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:33:59,946 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,947 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=83&ts=1731778439941
2024-11-16 17:33:59,956 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:33:59,956 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:33:59,957 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:33:59,957 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:33:59,957 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:33:59,958 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:33:59,958 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:33:59,958 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:33:59,959 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:33:59,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:33:59,964 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:33:59,964 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:33:59,965 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:33:59,965 [s3a-transfer-obs-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:33:59,965 [s3a-transfer-obs-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:33:59,966 [s3a-transfer-obs-bucket-unbounded-pool2-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [86] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=86&ts=1731778439941
2024-11-16 17:33:59,977 [s3a-transfer-obs-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:33:59,981 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.016s
2024-11-16 17:33:59,982 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:33:59,983 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:33:59,983 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:33:59,984 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778439916; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:33:59,984 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:33:59,984 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:33:59,985 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:33:59,986 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:33:59,989 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:33:59,989 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:33:59,990 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:33:59,990 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:33:59,990 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:33:59,990 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:33:59,990 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:33:59,991 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:33:59,991 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=87&ts=1731778439941
2024-11-16 17:34:00,015 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.024s
2024-11-16 17:34:00,017 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.027s
2024-11-16 17:34:00,017 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.027s
2024-11-16 17:34:00,017 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:00,018 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:00,018 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:00,018 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:00,018 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:00,018 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:00,018 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000048&t0=83&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=87&ts=1731778439941
2024-11-16 17:34:00,032 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:34:00,032 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:34:00,032 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:34:00,032 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.043s
2024-11-16 17:34:00,033 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.044s
2024-11-16 17:34:00,033 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.074s
2024-11-16 17:34:00,033 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:00,033 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:00,035 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:00,052 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_closed=1) (object_copy_requests=0) (op_access=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_discarded_in_abort=0) (object_select_requests=0) (action_http_get_request.failures=0) (op_hflush=0) (object_continue_list_request=0) (object_multipart_initiated=0) (stream_write_block_uploads_committed=0) (object_bulk_delete_request.failures=0) (op_copy_from_local_file.failures=0) (object_put_request=16) (committer_commits_created=0) (op_exists=0) (op_xattr_get_map.failures=0) (op_xattr_list.failures=0) (multipart_upload_aborted=0) (op_get_file_checksum=0) (op_xattr_list=0) (committer_load_single_pending_file.failures=0) (op_get_file_checksum.failures=0) (stream_read_seek_bytes_discarded=0) (stream_write_total_data=1048576) (stream_aborted=0) (stream_read_vectored_combined_ranges=5) (multipart_upload_abort_under_path_invoked=0) (op_create_non_recursive=0) (committer_commits_reverted=0) (op_hsync=0) (stream_read_seek_forward_operations=0) (committer_bytes_uploaded=0) (committer_jobs_completed=0) (stream_read_close_operations=5) (object_put_request_completed=16) (op_get_file_status=0) (action_http_head_request.failures=0) (op_rename=0) (object_list_request.failures=0) (ignored_errors=0) (stream_read_bytes_backwards_on_seek=0) (op_get_content_summary.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (store_io_request=89) (object_multipart_aborted.failures=0) (files_copied_bytes=0) (op_get_delegation_token.failures=0) (committer_stage_file_upload.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=6) (stream_read_exceptions=0) (store_io_throttled=0) (store_exists_probe=0) (files_delete_rejected=0) (stream_read_total_bytes=65986) (op_exists.failures=0) (stream_read_version_mismatches=0) (multipart_upload_part_put=0) (stream_read_vectored_operations=5) (op_xattr_get_map=0) (stream_read_vectored_incoming_ranges=10) (committer_commit_job.failures=0) (stream_read_opened=1) (audit_access_check_failure=0) (multipart_upload_list.failures=0) (op_abort.failures=0) (committer_commits_completed=0) (object_put_request.failures=0) (committer_jobs_failed=0) (store_exists_probe.failures=0) (stream_write_total_time=0) (committer_materialize_file=0) (op_openfile=0) (committer_bytes_committed=0) (stream_read_operations_incomplete=0) (op_is_directory=0) (files_copied=0) (action_http_head_request=21) (stream_write_queue_duration.failures=0) (directories_deleted=0) (op_xattr_get_named=0) (stream_read_unbuffered=1) (action_file_opened=5) (committer_magic_files_created=0) (op_is_file=0) (op_list_located_status=0) (object_multipart_initiated.failures=0) (stream_read_bytes_discarded_in_close=65336) (multipart_instantiated=0) (object_delete_request=0) (stream_read_fully_operations=0) (stream_read_seek_operations=0) (op_access.failures=0) (stream_write_bytes=524288) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain=1) (op_createfile=0) (stream_write_exceptions=0) (op_xattr_get_named_map.failures=0) (delegation_tokens_issued.failures=0) (op_list_status=0) (op_xattr_get_named.failures=0) (stream_write_block_uploads_aborted=0) (op_mkdirs=8) (stream_read_vectored_read_bytes_discarded=30) (op_rename.failures=0) (op_xattr_get_named_map=0) (object_metadata_request=21) (op_glob_status.failures=0) (op_delete.failures=0) (committer_tasks_completed=0) (delegation_tokens_issued=0) (audit_failure=0) (op_open=5) (committer_tasks_failed=0) (files_created=8) (multipart_upload_completed=0) (op_get_file_status.failures=0) (action_file_opened.failures=0) (stream_write_block_uploads=8) (committer_load_single_pending_file=0) (op_is_directory.failures=0) (committer_commit_job=0) (op_create.failures=0) (op_list_files=0) (op_createfile.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request=4) (stream_read_bytes=650) (op_mkdirs.failures=0) (stream_read_remote_stream_drain.failures=0) (committer_magic_marker_put=0) (op_get_content_summary=0) (object_continue_list_request.failures=0) (op_create=8) (store_io_retry=0) (committer_materialize_file.failures=0) (object_put_bytes=524288) (committer_magic_marker_put.failures=0) (op_list_status.failures=0) (object_delete_objects=16) (committer_stage_file_upload=0) (multipart_upload_list=0) (op_abort=0) (object_delete_request.failures=0) (action_executor_acquired=0) (op_get_delegation_token=0) (fake_directories_deleted=8) (audit_request_execution=89) (stream_write_queue_duration=0) (op_is_file.failures=0) (op_glob_status=0) (op_list_files.failures=0) (audit_span_creation=30) (multipart_upload_part_put_bytes=0) (directories_created=8) (object_bulk_delete_request=16) (object_multipart_aborted=0) (files_deleted=8) (multipart_upload_started=0) (committer_commits_aborted=0) (stream_read_operations=1) (object_list_request=32) (fake_directories_created=0) (committer_commits.failures=0) (op_delete=8) (op_copy_from_local_file=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=8) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((committer_commit_job.failures.min=-1) (op_delete.failures.min=-1) (op_glob_status.min=-1) (op_get_delegation_token.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_map.min=-1) (op_is_file.failures.min=-1) (action_file_opened.min=8) (op_is_file.min=-1) (op_createfile.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_status.failures.min=-1) (op_rename.min=-1) (op_exists.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.min=12) (action_http_get_request.min=39) (op_create.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.min=-1) (object_continue_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named.min=-1) (op_create.min=12) (committer_materialize_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.min=-1) (committer_stage_file_upload.min=-1) (object_delete_request.min=-1) (op_get_content_summary.failures.min=-1) (op_list_files.failures.min=-1) (store_exists_probe.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_initiated.min=-1) (object_list_request.failures.min=-1) (op_list_files.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.min=-1) (object_list_request.min=9) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=5) (object_multipart_initiated.failures.min=-1) (action_http_head_request.failures.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_bulk_delete_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_status.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.min=-1) (object_put_request.min=73) (delegation_tokens_issued.min=-1) (op_createfile.failures.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_write_queue_duration.min=-1) (store_exists_probe.min=-1) (op_rename.failures.min=-1) (op_access.min=-1) (op_xattr_list.min=-1) (op_glob_status.failures.min=-1) (op_access.failures.min=-1) (op_mkdirs.min=60) (op_abort.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_delete.min=60) (object_multipart_aborted.min=-1) (object_continue_list_request.min=-1) (committer_materialize_file.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((op_list_status.max=-1) (object_put_request.max=121) (stream_read_remote_stream_aborted.failures.max=-1) (object_continue_list_request.max=-1) (action_http_head_request.max=17) (op_xattr_get_map.max=-1) (op_get_file_status.max=-1) (multipart_upload_list.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_rename.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_list_files.max=-1) (op_abort.max=-1) (op_xattr_list.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.failures.max=-1) (op_createfile.max=-1) (committer_commit_job.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_delete.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_content_summary.max=-1) (op_mkdirs.failures.max=-1) (object_put_request.failures.max=-1) (op_list_files.failures.max=-1) (op_abort.failures.max=-1) (op_access.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.max=395) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_list.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.max=18) (object_list_request.failures.max=-1) (op_xattr_get_named.max=-1) (delegation_tokens_issued.failures.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (op_create.failures.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.max=-1) (op_list_status.failures.max=-1) (op_create.max=63) (stream_read_remote_stream_drain.failures.max=-1) (delegation_tokens_issued.max=-1) (object_bulk_delete_request.max=33) (op_is_directory.max=-1) (object_continue_list_request.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_named_map.max=-1) (committer_magic_marker_put.failures.max=-1) (op_exists.max=-1) (store_exists_probe.max=-1) (op_get_content_summary.failures.max=-1) (action_http_get_request.max=55) (op_delete.max=94) (op_glob_status.failures.max=-1) (op_rename.max=-1) (op_get_delegation_token.failures.max=-1) (object_delete_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.max=-1) (object_list_request.max=243) (op_is_file.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_commit_job.max=-1) (op_access.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_file.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_glob_status.max=-1));
means=((object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=8, sum=924, mean=115.5000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=5, sum=66, mean=13.2000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=8, sum=630, mean=78.7500)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=32, sum=741, mean=23.1563)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=166, mean=41.5000)) (action_http_head_request.mean=(samples=21, sum=194, mean=9.2381)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=16, sum=351, mean=21.9375)) (op_create.mean=(samples=8, sum=201, mean=25.1250)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=16, sum=1029, mean=64.3125)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:00,053 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:00,054 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:00,054 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:00,055 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:00,055 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,055 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000049 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000049&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=88&ts=1731778440053
2024-11-16 17:34:00,064 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:00,064 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:00,065 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:00,065 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:00,066 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:00,066 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000049 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000049&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=88&ts=1731778440053
2024-11-16 17:34:00,072 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:00,072 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:00,073 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:00,073 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:00,074 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000049 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000049&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=88&ts=1731778440053
2024-11-16 17:34:00,117 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:00,118 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:00,119 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.046s
2024-11-16 17:34:00,119 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:00,120 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:00,120 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:00,121 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:00,121 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,122 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000050 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000050&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=88&ts=1731778440120
2024-11-16 17:34:00,133 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:00,133 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:00,134 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:00,135 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11588016643888249586.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:00,136 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11588016643888249586.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (object_put_request=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (stream_write_block_uploads=0) (op_hsync=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (op_abort=0) (multipart_upload_completed=0) (op_hflush=0) (stream_write_total_time=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11588016643888249586.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:00,137 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:00,137 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:00,138 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11588016643888249586.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:00,139 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:00,139 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:00,139 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:00,139 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:00,139 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000050 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000050&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=89&ts=1731778440120
2024-11-16 17:34:00,201 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:00,201 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:00,201 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.062s
2024-11-16 17:34:00,202 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11588016643888249586.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:00,202 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11588016643888249586.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:00,202 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11588016643888249586.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:00,203 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:00,203 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:00,204 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (action_executor_acquired=0) (op_abort=0) (stream_write_block_uploads=1) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (object_put_request=1) (object_multipart_initiated=0) (multipart_upload_part_put=0) (op_abort.failures=0) (op_hflush=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=62) (object_multipart_initiated.min=-1));
maximums=((object_put_request.max=62) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1));
means=((object_put_request.mean=(samples=1, sum=62, mean=62.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:00,205 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:00,206 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:00,207 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:00,207 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:00,208 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000051 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000051&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=88&ts=1731778440206
2024-11-16 17:34:00,213 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:00,213 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:00,213 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:00,214 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:34:00,214 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:00,214 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:34:00,214 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:34:00,214 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:00,215 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:00,215 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:00,215 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000051 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-999&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000051&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=90&ts=1731778440206
2024-11-16 17:34:00,269 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.054s
2024-11-16 17:34:00,270 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:00,272 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_incoming_ranges=10) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (stream_read_opened=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_drain=0) (stream_read_total_bytes=1000) (stream_aborted=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_fully_operations=0) (stream_read_close_operations=1) (action_http_get_request=1) (stream_read_block_acquire_read=0) (action_http_get_request.failures=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (action_file_opened=1) (stream_read_seek_policy_changed=1) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=1000) (stream_read_vectored_combined_ranges=1) (stream_read_operations=0) (stream_read_operations_incomplete=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_closed=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=7) (action_http_get_request.min=54));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=54) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=7) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_http_get_request.mean=(samples=1, sum=54, mean=54.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:00,273 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:00,274 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:00,274 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:00,275 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=88&ts=1731778440273
2024-11-16 17:34:00,287 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:00,287 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,287 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=88&ts=1731778440273
2024-11-16 17:34:00,303 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:34:00,303 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:00,303 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:00,303 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:00,303 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:00,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:00,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:00,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:00,304 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:00,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:00,304 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:00,304 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:00,305 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:00,305 [s3a-transfer-obs-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:00,305 [s3a-transfer-obs-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,305 [s3a-transfer-obs-bucket-unbounded-pool2-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [91] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=91&ts=1731778440273
2024-11-16 17:34:00,317 [s3a-transfer-obs-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:34:00,317 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:34:00,317 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:00,317 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:00,317 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:00,317 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778440191; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:00,317 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:00,317 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:00,317 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:00,318 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:00,319 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:00,319 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:00,319 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:00,319 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:00,319 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:00,319 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:00,319 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:00,319 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:00,319 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=92&ts=1731778440273
2024-11-16 17:34:00,331 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:34:00,332 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:34:00,333 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:34:00,334 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:00,334 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:00,335 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:00,335 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:00,336 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:00,336 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:00,336 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000052&t0=88&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=92&ts=1731778440273
2024-11-16 17:34:00,358 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.022s
2024-11-16 17:34:00,358 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:34:00,359 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.025s
2024-11-16 17:34:00,359 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.040s
2024-11-16 17:34:00,360 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.041s
2024-11-16 17:34:00,360 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.056s
2024-11-16 17:34:00,360 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:00,360 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:00,361 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:00,373 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 10, active threads = 0, queued tasks = 0, completed tasks = 10], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_get_named_map.failures=0) (directories_created=9) (object_metadata_request=24) (committer_bytes_uploaded=0) (store_io_retry=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named_map=0) (multipart_upload_started=0) (audit_failure=0) (committer_commit_job.failures=0) (committer_commits_reverted=0) (stream_write_exceptions=0) (op_create_non_recursive=0) (op_xattr_get_named=0) (committer_load_single_pending_file.failures=0) (committer_jobs_completed=0) (op_list_files.failures=0) (fake_directories_deleted=9) (committer_commits_created=0) (op_exists=0) (stream_read_vectored_combined_ranges=6) (object_list_request.failures=0) (stream_read_seek_policy_changed=7) (op_delete=9) (stream_read_remote_stream_drain=1) (committer_materialize_file=0) (object_multipart_aborted.failures=0) (op_xattr_list.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_opened=1) (multipart_upload_abort_under_path_invoked=0) (op_openfile=0) (files_created=9) (stream_read_total_bytes=66986) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (op_open=6) (stream_write_queue_duration.failures=0) (committer_stage_file_upload=0) (op_hflush=0) (stream_aborted=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (op_get_file_status.failures=0) (multipart_instantiated=0) (stream_read_version_mismatches=0) (committer_materialize_file.failures=0) (committer_tasks_completed=0) (committer_magic_files_created=0) (committer_magic_marker_put=0) (files_copied_bytes=0) (audit_access_check_failure=0) (action_http_head_request.failures=0) (object_list_request=36) (op_rename=0) (stream_read_bytes_discarded_in_abort=0) (op_rename.failures=0) (op_get_file_checksum=0) (stream_write_bytes=589824) (multipart_upload_completed=0) (op_get_delegation_token.failures=0) (multipart_upload_list=0) (stream_read_close_operations=6) (committer_jobs_failed=0) (stream_read_vectored_read_bytes_discarded=30) (object_put_request_completed=18) (object_delete_request.failures=0) (op_copy_from_local_file.failures=0) (op_mkdirs=9) (object_select_requests=0) (committer_stage_file_upload.failures=0) (store_exists_probe=0) (stream_read_remote_stream_aborted=0) (op_xattr_get_map.failures=0) (op_glob_status=0) (files_copied=0) (action_http_get_request=5) (committer_commits_completed=0) (op_createfile=0) (store_io_request=101) (multipart_upload_part_put_bytes=0) (op_is_directory.failures=0) (op_list_located_status=0) (op_abort.failures=0) (multipart_upload_aborted=0) (op_is_file=0) (op_access=0) (stream_read_remote_stream_aborted.failures=0) (committer_magic_marker_put.failures=0) (committer_tasks_failed=0) (action_executor_acquired=0) (object_copy_requests=0) (committer_commits_aborted=0) (action_file_opened=6) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (audit_request_execution=101) (committer_load_single_pending_file=0) (committer_commit_job=0) (stream_read_closed=1) (stream_read_bytes_discarded_in_close=65336) (op_abort=0) (stream_read_operations_incomplete=0) (stream_write_total_time=0) (op_copy_from_local_file=0) (op_create.failures=0) (multipart_upload_list.failures=0) (store_exists_probe.failures=0) (op_get_content_summary.failures=0) (object_continue_list_request=0) (op_get_file_checksum.failures=0) (op_hsync=0) (files_deleted=9) (object_continue_list_request.failures=0) (stream_read_unbuffered=1) (op_xattr_get_named.failures=0) (stream_read_seek_forward_operations=0) (object_bulk_delete_request.failures=0) (stream_read_operations=1) (op_get_delegation_token=0) (files_delete_rejected=0) (op_delete.failures=0) (action_http_head_request=24) (fake_directories_created=0) (stream_read_fully_operations=0) (stream_read_vectored_incoming_ranges=20) (delegation_tokens_issued=0) (op_access.failures=0) (op_list_files=0) (stream_read_vectored_operations=6) (op_createfile.failures=0) (object_delete_request=0) (op_xattr_get_map=0) (object_bulk_delete_request=18) (ignored_errors=0) (op_xattr_list=0) (stream_read_bytes=1650) (committer_commits.failures=0) (op_list_status=0) (stream_write_queue_duration=0) (object_put_bytes=589824) (delegation_tokens_issued.failures=0) (audit_span_creation=34) (op_is_directory=0) (action_http_get_request.failures=0) (op_get_file_status=0) (stream_write_block_uploads_committed=0) (op_create=9) (store_io_throttled=0) (directories_deleted=0) (stream_read_seek_operations=0) (stream_write_block_uploads=9) (object_delete_objects=18) (op_mkdirs.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (op_get_content_summary=0) (committer_bytes_committed=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened.failures=0) (op_glob_status.failures=0) (object_multipart_initiated=0) (stream_read_seek_backward_operations=0) (stream_write_total_data=1179648) (op_list_status.failures=0) (op_is_file.failures=0) (object_put_request=18) (op_exists.failures=0));
gauges=((stream_write_block_uploads_pending=9) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_list_request.min=9) (action_http_head_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_createfile.failures.min=-1) (op_list_files.min=-1) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_rename.min=-1) (committer_materialize_file.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (store_exists_probe.min=-1) (op_delete.min=56) (action_file_opened.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_file_checksum.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named.min=-1) (op_access.min=-1) (multipart_upload_list.min=-1) (delegation_tokens_issued.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_mkdirs.min=60) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.min=5) (op_list_status.min=-1) (op_get_file_status.min=-1) (op_is_directory.min=-1) (committer_commit_job.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.failures.min=-1) (action_http_get_request.min=54) (op_exists.min=-1) (committer_load_single_pending_file.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_list.min=-1) (op_rename.failures.min=-1) (op_create.min=12) (stream_read_remote_stream_aborted.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_stage_file_upload.min=-1) (op_createfile.min=-1) (op_create.failures.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.min=7) (stream_write_queue_duration.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.failures.min=-1) (object_put_request.min=62) (op_mkdirs.failures.min=-1) (op_exists.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_delete_request.min=-1) (stream_read_remote_stream_drain.min=1) (op_glob_status.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.min=-1) (op_is_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_bulk_delete_request.min=12) (op_copy_from_local_file.min=-1) (object_continue_list_request.min=-1));
maximums=((op_xattr_get_map.max=-1) (op_is_file.failures.max=-1) (op_exists.failures.max=-1) (op_delete.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_magic_marker_put.max=-1) (op_rename.max=-1) (multipart_upload_list.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_named_map.max=-1) (object_continue_list_request.max=-1) (op_get_delegation_token.max=-1) (committer_commit_job.failures.max=-1) (op_delete.max=94) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_createfile.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (store_exists_probe.max=-1) (action_file_opened.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_head_request.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=55) (op_create.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_get_request.failures.max=-1) (op_glob_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_bulk_delete_request.max=33) (op_createfile.failures.max=-1) (object_put_request.failures.max=-1) (op_access.max=-1) (op_list_files.failures.max=-1) (op_abort.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.failures.max=-1) (object_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.max=-1) (action_file_opened.max=18) (op_get_file_status.max=-1) (committer_commit_job.max=-1) (op_mkdirs.max=395) (object_put_request.max=121) (op_get_file_status.failures.max=-1) (op_is_directory.max=-1) (op_exists.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_delete_request.max=-1) (object_multipart_initiated.max=-1) (op_is_file.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.max=1) (object_list_request.max=243) (multipart_upload_list.max=-1) (committer_stage_file_upload.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named.max=-1) (op_list_status.max=-1) (op_abort.failures.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.max=17) (op_access.failures.max=-1) (op_create.max=63));
means=((op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=36, sum=788, mean=21.8889)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=9, sum=216, mean=24.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=18, sum=385, mean=21.3889)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=6, sum=73, mean=12.1667)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=220, mean=44.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=18, sum=1135, mean=63.0556)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=9, sum=990, mean=110.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=9, sum=686, mean=76.2222)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=24, sum=219, mean=9.1250)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:00,374 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:00,374 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:00,374 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:00,374 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:00,374 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,375 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000053 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000053&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=93&ts=1731778440374
2024-11-16 17:34:00,386 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:00,386 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:00,386 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:00,386 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:00,386 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:00,386 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000053 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000053&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=93&ts=1731778440374
2024-11-16 17:34:00,397 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:00,397 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:00,397 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:00,397 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:00,398 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000053 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000053&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=93&ts=1731778440374
2024-11-16 17:34:00,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:00,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:00,428 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.031s
2024-11-16 17:34:00,428 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:00,429 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:00,430 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:00,430 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:00,430 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,430 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000054 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000054&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=93&ts=1731778440429
2024-11-16 17:34:00,445 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:34:00,445 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:00,445 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:00,446 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8173381747616494322.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:00,447 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8173381747616494322.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (object_multipart_initiated=0) (object_put_request.failures=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (op_hsync=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (object_put_request=0) (multipart_upload_completed=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (op_abort.failures=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1));
maximums=((action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8173381747616494322.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:00,447 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:00,447 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:00,448 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8173381747616494322.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:00,448 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:00,448 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:00,449 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:00,449 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:00,449 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000054 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000054&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=94&ts=1731778440429
2024-11-16 17:34:00,510 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:00,510 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:00,510 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.062s
2024-11-16 17:34:00,511 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8173381747616494322.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:00,511 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8173381747616494322.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:00,511 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8173381747616494322.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:00,511 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:00,511 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:00,513 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_bytes=65536) (op_hsync=0) (op_abort.failures=0) (op_abort=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_exceptions=0) (object_put_request=1) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (multipart_upload_completed=0) (stream_write_block_uploads=1) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=61) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=61) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=61, mean=61.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:00,514 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:00,515 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:00,515 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:00,516 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:00,517 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000055 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000055/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000055&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=93&ts=1731778440515
2024-11-16 17:34:00,523 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:00,524 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778440000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:34:00,526 [s3a-transfer-obs-bucket-unbounded-pool2-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:00,526 [s3a-transfer-obs-bucket-unbounded-pool2-t11] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:00,528 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:00,529 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:00,529 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:34:00,529 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:00,530 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:00,530 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:00,530 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=1947-2046&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000056&t0=95&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=96&ts=1731778440525
2024-11-16 17:34:00,533 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:00,533 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:00,533 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:00,533 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=8192-14435&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000056&t0=95&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=97&ts=1731778440525
2024-11-16 17:34:00,534 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:00,540 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:00,540 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:00,540 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:00,541 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=40960-41983&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000056&t0=95&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=98&ts=1731778440525
2024-11-16 17:34:00,566 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.026s
2024-11-16 17:34:00,566 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.036s
2024-11-16 17:34:00,566 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:00,570 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:00,584 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.051s
2024-11-16 17:34:00,584 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:34:00,585 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:34:00,585 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:00,588 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired=0) (stream_read_total_bytes=1424) (stream_read_vectored_read_bytes_discarded=5944) (action_http_get_request=3) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=3) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_close=0) (stream_read_prefetch_operations=0) (action_executor_acquired.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=5) (stream_read_fully_operations=0) (action_file_opened=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=1) (stream_read_opened=0) (stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (stream_read_closed=0) (stream_read_close_operations=1) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (action_file_opened.failures=0) (stream_read_exceptions=0) (stream_read_seek_operations=0) (stream_read_vectored_operations=1) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes=1424) (stream_read_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_file_opened.min=0) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=27) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=0) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=51) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=114, mean=38.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)));

2024-11-16 17:34:00,591 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:00,592 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:00,592 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:00,593 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=93&ts=1731778440591
2024-11-16 17:34:00,600 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:00,600 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,601 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=93&ts=1731778440591
2024-11-16 17:34:00,609 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:00,610 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:00,610 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:00,611 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:00,611 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:00,612 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:00,612 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:00,613 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:00,613 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:00,613 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:00,614 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:00,614 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:00,615 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:00,615 [s3a-transfer-obs-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:00,615 [s3a-transfer-obs-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,615 [s3a-transfer-obs-bucket-unbounded-pool2-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [99] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=99&ts=1731778440591
2024-11-16 17:34:00,624 [s3a-transfer-obs-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:00,625 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:34:00,625 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:00,626 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:00,626 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:00,626 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778440502; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:00,626 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:00,626 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:00,626 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:00,626 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:00,627 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:00,627 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:00,627 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:00,627 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:00,627 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:00,627 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:00,627 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:00,627 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:00,628 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=100&ts=1731778440591
2024-11-16 17:34:00,646 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.019s
2024-11-16 17:34:00,646 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:34:00,646 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.019s
2024-11-16 17:34:00,646 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:00,646 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:00,646 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:00,647 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:00,647 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:00,647 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:00,647 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000057&t0=93&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=100&ts=1731778440591
2024-11-16 17:34:00,663 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:34:00,663 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:34:00,663 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:34:00,663 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.036s
2024-11-16 17:34:00,664 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.037s
2024-11-16 17:34:00,664 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.051s
2024-11-16 17:34:00,664 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:00,664 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:00,666 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:00,678 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 12], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_create.failures=0) (op_get_file_checksum.failures=0) (op_access=0) (object_bulk_delete_request.failures=0) (op_delete.failures=0) (multipart_upload_list.failures=0) (stream_aborted=0) (op_rename=0) (stream_read_bytes_discarded_in_close=65336) (committer_commits_reverted=0) (op_hflush=0) (object_bulk_delete_request=20) (committer_bytes_uploaded=0) (op_get_file_status.failures=0) (committer_magic_marker_put=0) (object_list_request.failures=0) (object_select_requests=0) (op_create=10) (stream_read_bytes_discarded_in_abort=0) (fake_directories_created=0) (object_delete_request=0) (committer_materialize_file.failures=0) (object_put_bytes=655360) (op_glob_status=0) (files_copied_bytes=0) (stream_read_unbuffered=1) (files_deleted=10) (op_is_directory=0) (op_access.failures=0) (op_xattr_list.failures=0) (object_multipart_aborted=0) (store_exists_probe.failures=0) (object_metadata_request=27) (object_copy_requests=0) (files_delete_rejected=0) (op_hsync=0) (stream_write_total_time=0) (directories_deleted=0) (multipart_upload_part_put_bytes=0) (stream_read_vectored_read_bytes_discarded=5974) (stream_read_close_operations=7) (stream_write_exceptions=0) (directories_created=10) (op_xattr_list=0) (op_copy_from_local_file.failures=0) (stream_read_opened=1) (stream_read_exceptions=0) (op_exists.failures=0) (op_list_files.failures=0) (files_created=10) (audit_request_execution=115) (store_io_request=115) (action_http_get_request=8) (committer_magic_files_created=0) (op_abort.failures=0) (stream_read_closed=1) (object_list_request=40) (store_io_throttled=0) (op_get_content_summary=0) (committer_magic_marker_put.failures=0) (stream_read_seek_forward_operations=0) (committer_commits.failures=0) (op_xattr_get_named=0) (op_createfile=0) (op_create_non_recursive=0) (op_get_file_checksum=0) (op_is_file=0) (stream_read_bytes_backwards_on_seek=0) (audit_access_check_failure=0) (committer_tasks_failed=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_block_uploads=10) (audit_failure=0) (op_copy_from_local_file=0) (op_xattr_get_map=0) (stream_read_bytes=3074) (op_get_delegation_token=0) (op_is_directory.failures=0) (committer_commits_created=0) (multipart_upload_aborted=0) (op_get_content_summary.failures=0) (audit_span_creation=39) (committer_load_single_pending_file.failures=0) (committer_stage_file_upload.failures=0) (committer_commit_job.failures=0) (multipart_instantiated=0) (action_file_opened.failures=0) (object_put_request=20) (committer_commit_job=0) (action_http_head_request.failures=0) (op_get_file_status=1) (op_list_status.failures=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration.failures=0) (store_io_retry=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (op_is_file.failures=0) (stream_write_total_data=1310720) (stream_write_block_uploads_aborted=0) (committer_jobs_completed=0) (op_openfile=0) (stream_read_fully_operations=0) (op_list_located_status=0) (object_delete_request.failures=0) (committer_stage_file_upload=0) (committer_materialize_file=0) (object_multipart_initiated=0) (multipart_upload_list=0) (store_exists_probe=0) (stream_read_seek_operations=0) (op_mkdirs=10) (action_http_get_request.failures=0) (op_glob_status.failures=0) (delegation_tokens_issued.failures=0) (op_get_delegation_token.failures=0) (op_list_files=0) (op_createfile.failures=0) (stream_write_bytes=655360) (stream_read_seek_policy_changed=8) (op_xattr_get_map.failures=0) (stream_read_version_mismatches=0) (op_xattr_get_named_map=0) (ignored_errors=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (op_xattr_get_named_map.failures=0) (stream_read_vectored_operations=7) (committer_commits_completed=0) (fake_directories_deleted=10) (op_list_status=0) (object_put_request_completed=20) (op_delete=10) (committer_bytes_committed=0) (stream_read_operations=1) (op_open=7) (object_put_request.failures=0) (op_rename.failures=0) (op_exists=0) (files_copied=0) (committer_commits_aborted=0) (stream_read_vectored_incoming_ranges=25) (object_continue_list_request=0) (committer_jobs_failed=0) (delegation_tokens_issued=0) (action_http_head_request=27) (stream_read_remote_stream_drain=1) (stream_read_total_bytes=68410) (stream_write_block_uploads_committed=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (object_delete_objects=20) (committer_tasks_completed=0) (op_mkdirs.failures=0) (stream_write_exceptions_completing_upload=0) (action_file_opened=7) (multipart_upload_part_put=0) (committer_load_single_pending_file=0) (stream_read_remote_stream_aborted=0) (object_continue_list_request.failures=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_completed=0) (op_xattr_get_named.failures=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_started=0) (stream_read_vectored_combined_ranges=9) (op_abort=0));
gauges=((object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=10) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((op_get_file_checksum.min=-1) (op_is_file.min=-1) (action_http_get_request.min=27) (op_abort.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_list.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_list.min=-1) (op_delete.min=52) (op_copy_from_local_file.min=-1) (store_exists_probe.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (op_createfile.failures.min=-1) (op_mkdirs.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.failures.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_status.min=9) (op_xattr_get_named_map.min=-1) (object_continue_list_request.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_directory.min=-1) (committer_stage_file_upload.min=-1) (op_mkdirs.min=54) (op_abort.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_initiated.min=-1) (op_list_files.min=-1) (op_rename.failures.min=-1) (object_list_request.min=8) (committer_commit_job.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_put_request.failures.min=-1) (op_create.min=12) (op_glob_status.failures.min=-1) (delegation_tokens_issued.min=-1) (action_file_opened.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_map.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_delete_request.min=-1) (op_access.failures.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_createfile.min=-1) (committer_magic_marker_put.min=-1) (action_http_head_request.min=5) (stream_write_queue_duration.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_create.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_rename.min=-1) (object_put_request.min=61) (op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_access.min=-1) (op_get_content_summary.min=-1) (op_exists.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_delegation_token.min=-1) (object_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_glob_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_status.min=-1) (action_http_get_request.failures.min=-1) (object_continue_list_request.min=-1) (object_multipart_aborted.failures.min=-1) (object_bulk_delete_request.min=12) (action_file_opened.min=0) (op_xattr_get_named.min=-1));
maximums=((op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named_map.max=-1) (op_get_delegation_token.failures.max=-1) (object_bulk_delete_request.max=33) (op_xattr_get_map.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_abort.max=-1) (op_get_file_status.max=9) (action_executor_acquired.max=-1) (op_rename.max=-1) (op_create.max=63) (op_get_content_summary.max=-1) (object_multipart_aborted.failures.max=-1) (op_glob_status.failures.max=-1) (op_createfile.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.failures.max=-1) (object_continue_list_request.max=-1) (object_list_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.max=-1) (op_delete.max=94) (op_get_file_checksum.max=-1) (op_access.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_get_request.max=55) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.max=-1) (op_is_directory.max=-1) (op_createfile.max=-1) (delegation_tokens_issued.max=-1) (op_exists.failures.max=-1) (op_rename.failures.max=-1) (op_exists.max=-1) (committer_materialize_file.max=-1) (op_is_file.max=-1) (object_delete_request.max=-1) (op_list_status.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_mkdirs.max=395) (multipart_upload_list.failures.max=-1) (op_xattr_get_map.max=-1) (op_list_files.failures.max=-1) (object_list_request.max=243) (action_http_get_request.failures.max=-1) (op_get_delegation_token.max=-1) (delegation_tokens_issued.failures.max=-1) (object_delete_request.failures.max=-1) (op_delete.failures.max=-1) (action_http_head_request.max=17) (stream_read_remote_stream_drain.max=1) (op_create.failures.max=-1) (object_put_request.max=121) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_file.failures.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.failures.max=-1) (action_file_opened.max=18) (op_abort.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_aborted.max=-1) (op_access.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.max=-1) (action_file_opened.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.failures.max=-1) (op_list_status.max=-1));
means=((op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=10, sum=233, mean=23.3000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=7, sum=73, mean=10.4286)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=40, sum=832, mean=20.8000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=10, sum=1044, mean=104.4000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=20, sum=420, mean=21.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=20, sum=1227, mean=61.3500)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=334, mean=41.7500)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=10, sum=738, mean=73.8000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=27, sum=245, mean=9.0741)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:00,678 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:00,684 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:00,684 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:00,684 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:00,684 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,684 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000058 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000058&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=101&ts=1731778440678
2024-11-16 17:34:00,718 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.034s
2024-11-16 17:34:00,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:00,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:00,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:00,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:00,719 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000058 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000058&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=101&ts=1731778440678
2024-11-16 17:34:00,730 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:00,730 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:00,731 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:00,731 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:00,731 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000058 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000058&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=101&ts=1731778440678
2024-11-16 17:34:00,826 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:00,826 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:00,827 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.097s
2024-11-16 17:34:00,827 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:00,827 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:00,828 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:00,828 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:00,828 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:00,828 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000059 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000059&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=101&ts=1731778440827
2024-11-16 17:34:00,866 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.038s
2024-11-16 17:34:00,866 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:00,867 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:00,868 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13672954344454294945.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:00,889 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13672954344454294945.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (multipart_upload_completed.failures=0) (op_hsync=0) (op_hflush=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (object_multipart_initiated=0) (op_abort.failures=0) (stream_write_block_uploads=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (op_abort=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_put_request=0) (stream_write_total_data=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13672954344454294945.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:00,890 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:00,890 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:00,891 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13672954344454294945.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:00,893 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:00,893 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:00,898 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:00,898 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:00,898 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000059 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000059&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=102&ts=1731778440827
2024-11-16 17:34:01,030 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:01,031 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:01,031 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.138s
2024-11-16 17:34:01,037 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13672954344454294945.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:01,038 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13672954344454294945.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:01,038 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13672954344454294945.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:01,038 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:01,039 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:01,040 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (op_hflush=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (action_executor_acquired=0) (object_put_request=1) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (op_abort=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=132) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1));
maximums=((committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_put_request.max=132) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=132, mean=132.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:01,040 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:01,044 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:01,044 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,045 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:01,045 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [103] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000060 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000060/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000060&t0=103&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=103&ts=1731778441043
2024-11-16 17:34:01,051 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:01,052 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:01,052 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:01,053 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:34:01,053 [JUnit-testEOFRanges[Buffer type : direct]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,060 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=0) (action_file_opened=1) (stream_read_block_acquire_read.failures=0) (stream_aborted=0) (stream_read_block_read=0) (action_http_get_request=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_combined_ranges=0) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (stream_read_unbuffered=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_vectored_operations=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes=0) (stream_read_prefetch_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_close_operations=1) (stream_read_exceptions=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired.failures=0) (stream_read_seek_forward_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=8));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=8) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:01,062 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:01,062 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:01,063 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:01,063 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=101&ts=1731778441062
2024-11-16 17:34:01,071 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:01,071 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,072 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=101&ts=1731778441062
2024-11-16 17:34:01,092 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.021s
2024-11-16 17:34:01,093 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:01,093 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:01,093 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:01,094 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:01,094 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:01,095 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:01,095 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:01,095 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:01,096 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:01,097 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:01,097 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:01,098 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:01,098 [s3a-transfer-obs-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:01,099 [s3a-transfer-obs-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,099 [s3a-transfer-obs-bucket-unbounded-pool2-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [104] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=104&ts=1731778441062
2024-11-16 17:34:01,114 [s3a-transfer-obs-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:34:01,115 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.017s
2024-11-16 17:34:01,115 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:01,115 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:01,116 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:01,116 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778441014; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:01,116 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:01,116 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:01,116 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:01,117 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:01,117 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:01,121 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:01,122 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:01,122 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:01,122 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:01,122 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:01,122 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:01,122 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:01,123 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=105&ts=1731778441062
2024-11-16 17:34:01,154 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.032s
2024-11-16 17:34:01,154 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.032s
2024-11-16 17:34:01,154 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.032s
2024-11-16 17:34:01,155 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:01,155 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:01,155 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:01,155 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:01,155 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:01,155 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:01,155 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000061&t0=101&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=105&ts=1731778441062
2024-11-16 17:34:01,193 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.038s
2024-11-16 17:34:01,193 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.038s
2024-11-16 17:34:01,194 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.039s
2024-11-16 17:34:01,194 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.073s
2024-11-16 17:34:01,194 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.077s
2024-11-16 17:34:01,194 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.099s
2024-11-16 17:34:01,194 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:01,195 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:01,202 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:01,232 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 14, active threads = 0, queued tasks = 0, completed tasks = 14], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commits_reverted=0) (committer_load_single_pending_file=0) (op_create.failures=0) (op_get_content_summary.failures=0) (stream_write_block_uploads_committed=0) (multipart_upload_list=0) (stream_write_total_time=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_combined_ranges=9) (audit_access_check_failure=0) (audit_request_execution=126) (action_file_opened.failures=0) (op_is_file.failures=0) (object_bulk_delete_request.failures=0) (stream_read_seek_bytes_skipped=0) (files_deleted=11) (object_list_request.failures=0) (action_http_head_request=30) (op_delete.failures=0) (committer_stage_file_upload=0) (op_xattr_get_named.failures=0) (object_bulk_delete_request=22) (directories_deleted=0) (object_delete_request=0) (committer_bytes_uploaded=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list.failures=0) (committer_commits_created=0) (stream_read_closed=1) (committer_tasks_failed=0) (stream_read_close_operations=8) (audit_failure=0) (store_io_retry=0) (multipart_upload_completed=0) (committer_materialize_file=0) (op_list_status.failures=0) (op_xattr_list=0) (object_multipart_aborted.failures=0) (stream_read_seek_forward_operations=0) (fake_directories_deleted=11) (op_xattr_get_named_map=0) (stream_read_bytes_backwards_on_seek=0) (delegation_tokens_issued.failures=0) (stream_read_seek_operations=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_started=0) (committer_commit_job.failures=0) (stream_read_seek_policy_changed=9) (stream_read_vectored_incoming_ranges=25) (op_xattr_get_map.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_http_head_request.failures=0) (stream_write_block_uploads=11) (stream_read_vectored_read_bytes_discarded=5974) (stream_read_bytes_discarded_in_close=65336) (op_glob_status=0) (committer_magic_marker_put.failures=0) (op_get_delegation_token=0) (object_put_request.failures=0) (op_createfile.failures=0) (stream_read_opened=1) (op_hflush=0) (stream_write_total_data=1441792) (object_put_request=22) (action_http_get_request.failures=0) (op_copy_from_local_file=0) (op_openfile=0) (fake_directories_created=0) (delegation_tokens_issued=0) (audit_span_creation=43) (op_list_files.failures=0) (stream_read_unbuffered=1) (multipart_upload_part_put=0) (files_delete_rejected=0) (action_file_opened=8) (multipart_upload_list.failures=0) (object_select_requests=0) (stream_write_queue_duration.failures=0) (directories_created=11) (stream_read_exceptions=0) (op_list_files=0) (files_copied=0) (committer_jobs_completed=0) (committer_stage_file_upload.failures=0) (op_copy_from_local_file.failures=0) (action_http_get_request=8) (object_copy_requests=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (op_create_non_recursive=0) (op_list_status=0) (committer_tasks_completed=0) (op_glob_status.failures=0) (store_exists_probe=0) (store_io_request=126) (op_get_file_status.failures=0) (committer_magic_files_created=0) (stream_write_queue_duration=0) (committer_bytes_committed=0) (op_createfile=0) (action_executor_acquired=0) (op_exists=0) (op_access=0) (object_multipart_initiated.failures=0) (committer_load_single_pending_file.failures=0) (committer_commit_job=0) (stream_write_block_uploads_aborted=0) (stream_write_exceptions=0) (committer_commits_completed=0) (op_access.failures=0) (object_put_request_completed=22) (op_get_file_checksum.failures=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_write_exceptions_completing_upload=0) (object_delete_objects=22) (multipart_instantiated=0) (ignored_errors=0) (op_abort=0) (op_rename.failures=0) (object_put_bytes=720896) (op_is_directory=0) (store_io_throttled=0) (committer_jobs_failed=0) (op_open=8) (op_get_file_status=1) (store_exists_probe.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (op_mkdirs=11) (stream_read_bytes=3074) (op_is_file=0) (committer_commits.failures=0) (committer_commits_aborted=0) (op_xattr_get_named=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain=1) (object_multipart_initiated=0) (op_hsync=0) (object_continue_list_request.failures=0) (object_list_request=44) (object_continue_list_request=0) (op_create=11) (op_xattr_get_named_map.failures=0) (object_delete_request.failures=0) (committer_materialize_file.failures=0) (stream_read_total_bytes=68410) (op_exists.failures=0) (op_rename=0) (stream_read_vectored_operations=7) (op_get_delegation_token.failures=0) (files_created=11) (files_copied_bytes=0) (multipart_upload_part_put_bytes=0) (stream_write_bytes=720896) (op_get_file_checksum=0) (op_delete=11) (op_list_located_status=0) (committer_magic_marker_put=0) (op_abort.failures=0) (op_get_content_summary=0) (multipart_upload_aborted=0) (object_metadata_request=30) (op_is_directory.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (op_xattr_get_map=0) (stream_read_operations=1) (stream_read_version_mismatches=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=11));
minimums=((op_get_delegation_token.failures.min=-1) (op_delete.failures.min=-1) (action_http_get_request.failures.min=-1) (object_continue_list_request.min=-1) (op_rename.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (committer_materialize_file.failures.min=-1) (op_mkdirs.min=54) (op_get_file_status.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_glob_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_file_checksum.min=-1) (action_file_opened.min=8) (object_put_request.failures.min=-1) (op_list_files.failures.min=-1) (op_list_files.min=-1) (stream_write_queue_duration.min=-1) (op_exists.min=-1) (committer_materialize_file.min=-1) (store_exists_probe.min=-1) (store_exists_probe.failures.min=-1) (op_delete.min=52) (object_bulk_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.min=12) (multipart_upload_list.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_file.min=-1) (op_is_file.failures.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.min=-1) (op_copy_from_local_file.failures.min=-1) (object_delete_request.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_status.min=9) (op_abort.min=-1) (object_multipart_initiated.min=-1) (op_createfile.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_list.failures.min=-1) (action_file_opened.failures.min=-1) (op_list_status.min=-1) (op_create.min=12) (action_http_head_request.min=5) (object_list_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_list_request.min=8) (object_put_request.min=132) (op_abort.failures.min=-1) (action_http_get_request.min=27) (op_access.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.min=-1) (op_get_delegation_token.min=-1) (op_get_content_summary.failures.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.min=-1) (op_glob_status.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (op_create.failures.min=-1) (op_mkdirs.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_rename.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_aborted.max=-1) (object_delete_request.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.max=-1) (op_createfile.failures.max=-1) (op_access.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=18) (stream_write_queue_duration.failures.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.failures.max=-1) (op_abort.max=-1) (op_is_directory.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_file.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.failures.max=-1) (action_http_head_request.max=17) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (action_file_opened.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_directory.failures.max=-1) (op_list_files.failures.max=-1) (op_delete.failures.max=-1) (op_list_status.max=-1) (op_exists.failures.max=-1) (multipart_upload_list.max=-1) (op_get_file_checksum.failures.max=-1) (object_put_request.max=132) (object_list_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_drain.max=1) (object_multipart_initiated.failures.max=-1) (op_copy_from_local_file.max=-1) (object_bulk_delete_request.max=38) (object_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (action_http_get_request.max=55) (op_glob_status.max=-1) (op_create.max=63) (op_is_file.failures.max=-1) (op_list_files.max=-1) (op_get_file_checksum.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named.max=-1) (op_exists.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.failures.max=-1) (object_list_request.max=243) (op_create.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_createfile.max=-1) (op_delete.max=101) (committer_materialize_file.max=-1) (committer_materialize_file.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_map.max=-1) (op_get_file_status.max=9) (op_xattr_get_named.failures.max=-1) (committer_load_single_pending_file.max=-1) (store_exists_probe.max=-1) (op_rename.max=-1) (committer_commit_job.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_continue_list_request.max=-1) (op_access.max=-1) (op_mkdirs.max=395));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=334, mean=41.7500)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=8, sum=81, mean=10.1250)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=11, sum=1193, mean=108.4545)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=44, sum=939, mean=21.3409)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=22, sum=1454, mean=66.0909)) (object_bulk_delete_request.mean=(samples=22, sum=490, mean=22.2727)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=30, sum=270, mean=9.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=11, sum=294, mean=26.7273)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=11, sum=839, mean=76.2727)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:01,234 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:01,234 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:01,236 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:01,237 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:01,237 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,238 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000062 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000062&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=106&ts=1731778441233
2024-11-16 17:34:01,250 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:34:01,251 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:01,252 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:01,252 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:01,253 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:01,253 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000062 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000062&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=106&ts=1731778441233
2024-11-16 17:34:01,259 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:01,259 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:01,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:01,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:01,261 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000062 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000062&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=106&ts=1731778441233
2024-11-16 17:34:01,302 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:01,303 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:01,303 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.044s
2024-11-16 17:34:01,304 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:01,304 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:01,305 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,305 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:01,306 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,306 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000063 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000063&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=106&ts=1731778441304
2024-11-16 17:34:01,325 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:34:01,325 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,325 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:01,326 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-995714482760278552.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:01,326 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-995714482760278552.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (op_hsync=0) (action_executor_acquired=0) (object_put_request=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (op_abort=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-995714482760278552.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:01,326 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:01,326 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:01,326 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-995714482760278552.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:01,330 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:01,332 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:01,332 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:01,332 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:01,332 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000063 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000063&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=108&ts=1731778441304
2024-11-16 17:34:01,413 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:01,414 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:01,414 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.083s
2024-11-16 17:34:01,414 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-995714482760278552.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:01,414 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-995714482760278552.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:01,414 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-995714482760278552.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:01,414 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:01,415 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:01,415 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (stream_write_bytes=65536) (stream_write_total_time=0) (op_hsync=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (op_abort=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (object_put_request=1) (multipart_upload_completed=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=81) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=81) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=81, mean=81.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:01,415 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:01,416 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:01,416 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,416 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:01,417 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000064 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000064&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=106&ts=1731778441416
2024-11-16 17:34:01,422 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:01,422 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:01,423 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:01,423 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:01,424 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:34:01,424 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:01,425 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-65535&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000064&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=106&ts=1731778441416
2024-11-16 17:34:01,444 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.021s
2024-11-16 17:34:01,445 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:01,445 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:34:01,446 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:01,446 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:01,446 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:01,446 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:01,446 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:01,447 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:01,447 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:01,447 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [109] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000064&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=109&ts=1731778441416
2024-11-16 17:34:01,463 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:34:01,464 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:34:01,464 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:01,464 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:34:01,464 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:34:01,464 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:34:01,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7438 bytes
2024-11-16 17:34:01,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:01,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:01,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:01,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8746 bytes
2024-11-16 17:34:01,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:34:01,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:34:01,466 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_opened=1) (action_executor_acquired=0) (stream_read_close_operations=1) (stream_read_closed=1) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes=350) (stream_read_vectored_operations=1) (stream_read_operations_incomplete=0) (action_http_get_request=2) (stream_read_bytes_discarded_in_close=65336) (stream_read_seek_bytes_skipped=0) (stream_read_seek_policy_changed=1) (action_executor_acquired.failures=0) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (action_file_opened.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=2) (stream_read_fully_operations=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=65686) (stream_read_remote_stream_drain=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.min=-1) (action_http_get_request.min=17) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_file_opened.min=6) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=19) (action_http_get_request.failures.max=-1) (action_file_opened.max=6) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=36, mean=18.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:01,467 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:01,467 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:01,467 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:01,467 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=106&ts=1731778441467
2024-11-16 17:34:01,476 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:01,476 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,477 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=106&ts=1731778441467
2024-11-16 17:34:01,488 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:01,489 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:01,489 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:01,489 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:01,489 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:01,489 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:01,489 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:01,489 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:01,490 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:01,490 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:01,490 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:01,490 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:01,491 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:01,492 [s3a-transfer-obs-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:01,492 [s3a-transfer-obs-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,492 [s3a-transfer-obs-bucket-unbounded-pool2-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=112&ts=1731778441467
2024-11-16 17:34:01,504 [s3a-transfer-obs-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:01,505 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:34:01,505 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:01,505 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:01,506 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:01,506 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778441404; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:01,506 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:01,506 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:01,506 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:01,506 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:01,507 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:01,507 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:01,507 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:01,507 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:01,507 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:01,507 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:01,507 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:01,507 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:01,507 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=113&ts=1731778441467
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.022s
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.022s
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:01,529 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000065&t0=106&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=113&ts=1731778441467
2024-11-16 17:34:01,544 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:34:01,545 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:34:01,545 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.016s
2024-11-16 17:34:01,545 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.038s
2024-11-16 17:34:01,545 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.038s
2024-11-16 17:34:01,545 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.055s
2024-11-16 17:34:01,545 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:01,545 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:01,546 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:01,577 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 15, active threads = 0, queued tasks = 0, completed tasks = 15], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_list_files=0) (multipart_upload_part_put_bytes=0) (op_xattr_list=0) (op_exists.failures=0) (committer_bytes_committed=0) (object_copy_requests=0) (store_io_retry=0) (op_open=9) (op_openfile=0) (stream_read_vectored_operations=8) (object_put_bytes=786432) (committer_commits_completed=0) (audit_access_check_failure=0) (stream_read_seek_forward_operations=0) (op_glob_status.failures=0) (committer_bytes_uploaded=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_queue_duration=0) (stream_read_remote_stream_aborted=0) (op_hflush=0) (committer_commits_aborted=0) (op_hsync=0) (stream_read_bytes=3424) (stream_read_fully_operations=0) (op_access=0) (stream_write_total_time=0) (op_createfile=0) (multipart_instantiated=0) (stream_read_total_bytes=134096) (multipart_upload_aborted=0) (ignored_errors=0) (stream_write_block_uploads_committed=0) (committer_commits_created=0) (op_is_directory.failures=0) (op_get_file_status=1) (action_http_get_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_create_non_recursive=0) (object_bulk_delete_request.failures=0) (stream_read_version_mismatches=0) (files_copied=0) (files_copied_bytes=0) (op_list_located_status=0) (op_xattr_get_named_map=0) (files_deleted=12) (object_multipart_aborted.failures=0) (files_delete_rejected=0) (op_xattr_get_map=0) (stream_read_opened=2) (stream_read_remote_stream_drain.failures=0) (op_delete.failures=0) (action_executor_acquired.failures=0) (committer_commits.failures=0) (store_io_request=139) (op_abort=0) (stream_read_closed=2) (op_list_files.failures=0) (store_exists_probe=0) (committer_jobs_failed=0) (committer_commit_job=0) (op_xattr_get_named_map.failures=0) (directories_created=12) (action_file_opened.failures=0) (files_created=12) (stream_read_bytes_discarded_in_close=130672) (committer_materialize_file=0) (object_multipart_initiated.failures=0) (op_xattr_get_map.failures=0) (committer_magic_marker_put.failures=0) (op_is_directory=0) (multipart_upload_list=0) (object_metadata_request=33) (op_exists=0) (op_get_content_summary=0) (committer_magic_marker_put=0) (committer_materialize_file.failures=0) (op_list_status=0) (stream_read_unbuffered=1) (stream_read_remote_stream_drain=2) (op_rename=0) (stream_read_close_operations=9) (op_abort.failures=0) (fake_directories_created=0) (op_mkdirs.failures=0) (op_xattr_list.failures=0) (op_create=12) (multipart_upload_list.failures=0) (object_delete_objects=24) (op_xattr_get_named.failures=0) (action_http_head_request=33) (op_get_file_checksum.failures=0) (op_copy_from_local_file.failures=0) (multipart_upload_part_put=0) (action_executor_acquired=0) (object_bulk_delete_request=24) (op_is_file.failures=0) (object_put_request_completed=24) (audit_span_creation=47) (op_get_delegation_token=0) (committer_load_single_pending_file=0) (op_createfile.failures=0) (committer_commit_job.failures=0) (op_mkdirs=12) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=0) (committer_stage_file_upload=0) (audit_failure=0) (stream_read_seek_backward_operations=0) (stream_aborted=0) (action_http_get_request=10) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_operations=0) (op_is_file=0) (op_access.failures=0) (object_put_request=24) (stream_write_bytes=786432) (action_file_opened=9) (committer_tasks_completed=0) (object_put_request.failures=0) (action_http_head_request.failures=0) (store_io_throttled=0) (directories_deleted=0) (object_multipart_aborted=0) (store_exists_probe.failures=0) (op_get_file_status.failures=0) (stream_read_vectored_combined_ranges=10) (object_multipart_initiated=0) (committer_load_single_pending_file.failures=0) (stream_read_operations=2) (object_continue_list_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_block_uploads_aborted=0) (op_copy_from_local_file=0) (multipart_upload_started=0) (stream_read_exceptions=0) (op_get_delegation_token.failures=0) (op_get_content_summary.failures=0) (stream_write_queue_duration.failures=0) (stream_write_total_data=1572864) (stream_read_vectored_read_bytes_discarded=5984) (delegation_tokens_issued.failures=0) (committer_tasks_failed=0) (stream_read_seek_policy_changed=10) (op_delete=12) (op_glob_status=0) (op_create.failures=0) (stream_write_exceptions=0) (op_xattr_get_named=0) (op_rename.failures=0) (stream_read_seek_bytes_discarded=0) (object_delete_request=0) (delegation_tokens_issued=0) (object_list_request=48) (committer_stage_file_upload.failures=0) (committer_magic_files_created=0) (stream_read_vectored_incoming_ranges=27) (object_select_requests=0) (stream_write_block_uploads=12) (object_continue_list_request=0) (fake_directories_deleted=12) (stream_read_seek_bytes_skipped=0) (op_list_status.failures=0) (committer_jobs_completed=0) (committer_commits_reverted=0) (object_delete_request.failures=0) (object_list_request.failures=0) (op_get_file_checksum=0) (audit_request_execution=139) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=12) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0));
minimums=((op_list_files.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.min=-1) (op_create.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_create.min=12) (op_xattr_get_named.failures.min=-1) (object_list_request.min=8) (op_rename.min=-1) (op_access.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_file.failures.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.min=-1) (op_is_directory.min=-1) (object_multipart_aborted.min=-1) (op_rename.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_delete_request.failures.min=-1) (op_exists.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_glob_status.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.min=-1) (op_is_directory.failures.min=-1) (op_mkdirs.min=54) (delegation_tokens_issued.min=-1) (op_delete.failures.min=-1) (op_is_file.min=-1) (object_continue_list_request.min=-1) (op_list_status.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_head_request.min=5) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_file_opened.min=6) (committer_load_single_pending_file.failures.min=-1) (op_access.failures.min=-1) (action_http_get_request.min=17) (action_http_head_request.failures.min=-1) (store_exists_probe.min=-1) (op_abort.failures.min=-1) (op_list_files.failures.min=-1) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.failures.min=-1) (object_put_request.min=81) (action_executor_acquired.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_map.min=-1) (op_glob_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.min=9) (committer_commit_job.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_stage_file_upload.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (op_delete.min=52) (op_get_delegation_token.failures.min=-1) (op_list_status.failures.min=-1) (op_exists.failures.min=-1) (object_bulk_delete_request.min=12) (multipart_upload_list.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.failures.min=-1));
maximums=((committer_materialize_file.max=-1) (object_continue_list_request.max=-1) (op_delete.max=101) (store_exists_probe.max=-1) (op_get_file_checksum.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.max=-1) (object_delete_request.max=-1) (op_createfile.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (op_exists.failures.max=-1) (object_list_request.failures.max=-1) (op_rename.failures.max=-1) (action_file_opened.failures.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.max=1) (committer_load_single_pending_file.failures.max=-1) (action_file_opened.max=18) (op_abort.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_directory.max=-1) (op_is_directory.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (op_xattr_list.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_files.max=-1) (op_glob_status.failures.max=-1) (object_list_request.max=243) (op_is_file.max=-1) (op_access.max=-1) (op_delete.failures.max=-1) (op_exists.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_initiated.max=-1) (committer_commit_job.max=-1) (op_create.max=63) (op_copy_from_local_file.max=-1) (action_http_head_request.max=17) (op_get_content_summary.max=-1) (op_get_delegation_token.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_abort.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_bulk_delete_request.max=38) (op_list_files.failures.max=-1) (op_mkdirs.max=395) (op_get_content_summary.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_head_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_put_request.max=132) (committer_load_single_pending_file.max=-1) (op_glob_status.max=-1) (op_create.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_status.max=9) (action_http_get_request.max=55) (object_delete_request.failures.max=-1));
means=((object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=24, sum=526, mean=21.9167)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=12, sum=316, mean=26.3333)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=33, sum=290, mean=8.7879)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=48, sum=993, mean=20.6875)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=12, sum=895, mean=74.5833)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=9, sum=87, mean=9.6667)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=24, sum=1576, mean=65.6667)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=10, sum=370, mean=37.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=12, sum=1263, mean=105.2500)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:01,578 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:01,579 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:01,579 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:01,580 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:01,580 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,581 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000066 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000066&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=114&ts=1731778441578
2024-11-16 17:34:01,594 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:34:01,594 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:01,595 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:01,595 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:01,596 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:01,596 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000066 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000066&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=114&ts=1731778441578
2024-11-16 17:34:01,605 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:01,605 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:01,606 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:01,606 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:01,606 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000066 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000066&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=114&ts=1731778441578
2024-11-16 17:34:01,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:01,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:01,633 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.028s
2024-11-16 17:34:01,633 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:01,635 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:01,635 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,635 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:01,636 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,636 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000067 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000067&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=114&ts=1731778441634
2024-11-16 17:34:01,651 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:34:01,652 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,652 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:01,653 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18189647675578079138.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:01,654 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18189647675578079138.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (action_executor_acquired=0) (op_abort=0) (object_multipart_aborted=0) (object_put_request=0) (stream_write_total_time=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (stream_write_total_data=0) (op_abort.failures=0) (stream_write_block_uploads=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18189647675578079138.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:01,654 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:01,654 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:01,655 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18189647675578079138.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:01,655 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:01,656 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:01,656 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:01,656 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:01,656 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000067 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000067&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=116&ts=1731778441634
2024-11-16 17:34:01,746 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:01,746 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:01,746 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.090s
2024-11-16 17:34:01,747 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18189647675578079138.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:01,747 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18189647675578079138.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:01,747 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18189647675578079138.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:01,747 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:01,747 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:01,749 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (op_abort=0) (stream_write_total_data=65536) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (object_put_request=1) (object_multipart_initiated=0) (multipart_upload_completed=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_put_request.min=90) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((op_abort.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=90) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=90, mean=90.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:01,749 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:01,750 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:01,751 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,751 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:01,751 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000068 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000068&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=114&ts=1731778441750
2024-11-16 17:34:01,756 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:01,757 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:01,758 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:01,758 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:34:01,758 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:01,759 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:34:01,759 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:01,760 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:01,760 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:01,760 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-4200&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000068&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=118&ts=1731778441750
2024-11-16 17:34:01,762 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:34:01,764 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:01,764 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:01,764 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:01,764 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [119] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=16101-16200&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000068&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=119&ts=1731778441750
2024-11-16 17:34:01,780 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:34:01,780 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:34:01,781 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:01,781 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:34:01,781 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:01,784 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_exceptions=0) (stream_read_operations_incomplete=0) (action_file_opened=1) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_unbuffered=0) (stream_read_prefetch_operations.failures=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=3) (stream_read_vectored_read_bytes_discarded=4001) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=0) (stream_read_operations=0) (stream_read_version_mismatches=0) (stream_read_opened=0) (stream_read_block_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_policy_changed=1) (action_http_get_request=2) (stream_read_seek_operations=0) (stream_read_total_bytes=300) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_combined_ranges=2) (stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_close_operations=1) (stream_read_bytes=300) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=7) (action_file_opened.failures.min=-1) (action_http_get_request.min=16) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=7) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=21) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=37, mean=18.5000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)));

2024-11-16 17:34:01,786 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:01,786 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:01,786 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:01,786 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=114&ts=1731778441786
2024-11-16 17:34:01,793 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:01,793 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,793 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=114&ts=1731778441786
2024-11-16 17:34:01,805 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:01,806 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:01,806 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:01,806 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:01,806 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:01,806 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:01,806 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:01,806 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:01,806 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:01,807 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:01,807 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:01,807 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:01,808 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:01,808 [s3a-transfer-obs-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:01,808 [s3a-transfer-obs-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,808 [s3a-transfer-obs-bucket-unbounded-pool2-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=120&ts=1731778441786
2024-11-16 17:34:01,815 [s3a-transfer-obs-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:01,815 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:34:01,815 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:01,815 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:01,816 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:01,816 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778441734; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:01,816 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:01,816 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:01,816 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:01,816 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:01,817 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:01,817 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:01,817 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:01,817 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:01,817 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:01,817 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:01,817 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:01,817 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:01,817 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=121&ts=1731778441786
2024-11-16 17:34:01,839 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.022s
2024-11-16 17:34:01,840 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:34:01,840 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.023s
2024-11-16 17:34:01,840 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:01,840 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:01,840 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:01,840 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:01,840 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:01,840 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:01,840 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000069&t0=114&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=121&ts=1731778441786
2024-11-16 17:34:01,865 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.025s
2024-11-16 17:34:01,865 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.025s
2024-11-16 17:34:01,865 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.025s
2024-11-16 17:34:01,865 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.048s
2024-11-16 17:34:01,865 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.048s
2024-11-16 17:34:01,865 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.059s
2024-11-16 17:34:01,866 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:01,866 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:01,868 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:01,884 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 16], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_executor_acquired=0) (object_put_request=26) (committer_tasks_failed=0) (op_hsync=0) (stream_read_seek_backward_operations=0) (object_put_request_completed=26) (op_rename=0) (action_file_opened=10) (multipart_upload_part_put=0) (object_delete_request=0) (action_http_get_request.failures=0) (committer_commits_completed=0) (object_put_request.failures=0) (op_xattr_get_named=0) (committer_load_single_pending_file.failures=0) (multipart_upload_list.failures=0) (op_hflush=0) (committer_magic_marker_put=0) (op_xattr_list=0) (committer_commit_job.failures=0) (op_list_files.failures=0) (stream_write_queue_duration=0) (op_access=0) (op_access.failures=0) (directories_deleted=0) (op_list_status.failures=0) (fake_directories_deleted=13) (stream_write_total_time=0) (files_created=13) (op_get_file_checksum.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_block_uploads_aborted=0) (op_create=13) (audit_access_check_failure=0) (multipart_instantiated=0) (object_copy_requests=0) (store_io_retry=0) (stream_write_bytes=851968) (stream_read_vectored_combined_ranges=12) (committer_commit_job=0) (stream_write_block_uploads_committed=0) (stream_read_exceptions=0) (op_mkdirs.failures=0) (object_select_requests=0) (committer_jobs_failed=0) (stream_read_operations_incomplete=0) (object_multipart_aborted=0) (op_is_file=0) (stream_aborted=0) (op_createfile=0) (stream_read_vectored_operations=9) (op_get_file_status=1) (op_glob_status=0) (op_rename.failures=0) (stream_read_seek_forward_operations=0) (multipart_upload_completed=0) (files_delete_rejected=0) (stream_write_total_data=1703936) (audit_failure=0) (stream_read_operations=2) (stream_read_remote_stream_drain.failures=0) (files_copied=0) (object_list_request=52) (op_mkdirs=13) (store_exists_probe.failures=0) (action_http_head_request=36) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (stream_read_bytes=3724) (stream_read_seek_bytes_discarded=0) (store_io_throttled=0) (committer_jobs_completed=0) (op_abort.failures=0) (object_delete_objects=26) (committer_stage_file_upload=0) (committer_load_single_pending_file=0) (delegation_tokens_issued=0) (op_xattr_get_named.failures=0) (committer_tasks_completed=0) (fake_directories_created=0) (action_executor_acquired.failures=0) (op_createfile.failures=0) (files_deleted=13) (op_get_file_status.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=1) (op_create_non_recursive=0) (stream_read_bytes_backwards_on_seek=0) (delegation_tokens_issued.failures=0) (op_abort=0) (multipart_upload_started=0) (object_multipart_initiated.failures=0) (object_put_bytes=851968) (stream_read_bytes_discarded_in_close=130672) (stream_read_seek_policy_changed=11) (op_is_file.failures=0) (action_http_head_request.failures=0) (object_continue_list_request.failures=0) (audit_span_creation=51) (action_file_opened.failures=0) (op_create.failures=0) (action_http_get_request=12) (object_metadata_request=36) (op_exists.failures=0) (op_list_status=0) (store_exists_probe=0) (files_copied_bytes=0) (object_delete_request.failures=0) (op_exists=0) (stream_read_closed=2) (stream_read_remote_stream_aborted=0) (object_multipart_initiated=0) (committer_materialize_file.failures=0) (stream_write_block_uploads=13) (stream_read_total_bytes=134396) (op_open=10) (object_bulk_delete_request=26) (op_get_file_checksum=0) (op_is_directory.failures=0) (committer_magic_files_created=0) (op_get_content_summary.failures=0) (stream_read_close_operations=10) (stream_write_exceptions_completing_upload=0) (op_delete.failures=0) (op_get_delegation_token=0) (op_is_directory=0) (object_list_request.failures=0) (op_get_delegation_token.failures=0) (stream_read_vectored_read_bytes_discarded=9985) (committer_bytes_uploaded=0) (committer_stage_file_upload.failures=0) (op_glob_status.failures=0) (op_copy_from_local_file=0) (op_openfile=0) (committer_magic_marker_put.failures=0) (stream_read_seek_bytes_skipped=0) (directories_created=13) (stream_read_seek_operations=0) (op_list_files=0) (op_delete=13) (committer_commits_aborted=0) (op_xattr_get_map.failures=0) (committer_commits.failures=0) (op_xattr_get_named_map.failures=0) (multipart_upload_list=0) (ignored_errors=0) (stream_read_opened=2) (audit_request_execution=152) (stream_write_queue_duration.failures=0) (op_xattr_list.failures=0) (object_bulk_delete_request.failures=0) (object_continue_list_request=0) (op_copy_from_local_file.failures=0) (stream_read_vectored_incoming_ranges=30) (stream_read_remote_stream_drain=2) (stream_write_exceptions=0) (stream_read_fully_operations=0) (committer_bytes_committed=0) (op_xattr_get_named_map=0) (op_get_content_summary=0) (store_io_request=152) (committer_commits_reverted=0) (op_xattr_get_map=0) (committer_materialize_file=0) (committer_commits_created=0) (multipart_upload_part_put_bytes=0) (multipart_upload_aborted=0) (op_list_located_status=0));
gauges=((object_put_request_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=13) (stream_read_blocks_in_cache=0));
minimums=((op_rename.failures.min=-1) (op_list_files.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.min=-1) (op_is_directory.failures.min=-1) (op_is_directory.min=-1) (op_list_status.min=-1) (op_is_file.failures.min=-1) (op_exists.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=7) (op_list_files.min=-1) (action_executor_acquired.min=-1) (object_continue_list_request.min=-1) (op_get_file_status.min=9) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=1) (multipart_upload_list.min=-1) (op_abort.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_commit_job.min=-1) (object_delete_request.min=-1) (action_http_head_request.failures.min=-1) (object_put_request.failures.min=-1) (op_create.min=12) (object_bulk_delete_request.min=12) (op_createfile.min=-1) (committer_stage_file_upload.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_delete.min=52) (committer_load_single_pending_file.min=-1) (op_delete.failures.min=-1) (object_multipart_initiated.min=-1) (op_copy_from_local_file.failures.min=-1) (store_exists_probe.failures.min=-1) (object_put_request.min=90) (op_xattr_get_named_map.failures.min=-1) (object_list_request.min=7) (object_delete_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.min=54) (committer_magic_marker_put.min=-1) (action_http_get_request.min=16) (op_rename.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.failures.min=-1) (object_list_request.failures.min=-1) (op_mkdirs.failures.min=-1) (op_access.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_checksum.min=-1) (action_http_head_request.min=5) (committer_materialize_file.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_glob_status.min=-1) (store_exists_probe.min=-1) (op_is_file.min=-1) (op_createfile.failures.min=-1) (op_xattr_list.min=-1) (delegation_tokens_issued.min=-1) (op_glob_status.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_named.min=-1) (op_access.min=-1) (action_http_get_request.failures.min=-1) (op_get_content_summary.min=-1) (op_abort.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (op_create.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.failures.min=-1));
maximums=((committer_stage_file_upload.failures.max=-1) (op_list_files.max=-1) (op_abort.max=-1) (op_createfile.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.max=-1) (op_glob_status.failures.max=-1) (op_rename.failures.max=-1) (committer_commit_job.max=-1) (multipart_upload_list.failures.max=-1) (action_http_get_request.max=55) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_mkdirs.failures.max=-1) (action_file_opened.max=18) (delegation_tokens_issued.max=-1) (op_is_directory.max=-1) (op_is_file.failures.max=-1) (op_is_directory.failures.max=-1) (op_delete.failures.max=-1) (op_create.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_list_request.max=243) (op_xattr_get_named_map.max=-1) (action_http_head_request.max=17) (object_bulk_delete_request.max=38) (action_executor_acquired.max=-1) (op_mkdirs.max=395) (op_xattr_list.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.max=1) (store_exists_probe.max=-1) (op_access.max=-1) (committer_materialize_file.max=-1) (op_list_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_put_request.max=132) (committer_magic_marker_put.max=-1) (op_is_file.max=-1) (op_xattr_get_named.failures.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_exists.max=-1) (action_http_get_request.failures.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_delete_request.max=-1) (object_multipart_aborted.failures.max=-1) (op_glob_status.max=-1) (op_create.max=63) (object_multipart_initiated.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_checksum.max=-1) (committer_stage_file_upload.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_write_queue_duration.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_delete.max=101) (op_list_files.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_status.max=9) (delegation_tokens_issued.failures.max=-1) (op_list_status.max=-1) (op_get_content_summary.max=-1) (multipart_upload_list.max=-1) (action_file_opened.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_named_map.failures.max=-1));
means=((multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=52, sum=1039, mean=19.9808)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=407, mean=33.9167)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=13, sum=1318, mean=101.3846)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=10, sum=94, mean=9.4000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=26, sum=573, mean=22.0385)) (action_http_head_request.mean=(samples=36, sum=311, mean=8.6389)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=13, sum=334, mean=25.6923)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=13, sum=955, mean=73.4615)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=26, sum=1693, mean=65.1154)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:01,884 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:01,885 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:01,885 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:01,885 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:01,885 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,885 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000070 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000070&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=122&ts=1731778441884
2024-11-16 17:34:01,893 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:01,894 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:01,894 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:01,894 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:01,894 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:01,894 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000070 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000070&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=122&ts=1731778441884
2024-11-16 17:34:01,899 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:01,900 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:01,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:01,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:01,900 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000070 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000070&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=122&ts=1731778441884
2024-11-16 17:34:01,944 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:01,945 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:01,945 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.045s
2024-11-16 17:34:01,945 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:01,945 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:01,945 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,945 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:01,946 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:01,946 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000071 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000071&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=122&ts=1731778441945
2024-11-16 17:34:01,954 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:01,955 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:01,955 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:01,955 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9557138082334319443.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:01,956 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9557138082334319443.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_bytes=65536) (stream_write_exceptions=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (stream_write_total_data=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (object_put_request=0) (object_multipart_initiated=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (op_abort=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (op_abort.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9557138082334319443.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:01,956 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:01,956 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:01,956 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9557138082334319443.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:01,960 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:01,961 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:01,961 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:01,961 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:01,961 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000071 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000071&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=123&ts=1731778441945
2024-11-16 17:34:02,014 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:02,014 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:02,014 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.053s
2024-11-16 17:34:02,015 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9557138082334319443.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:02,015 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9557138082334319443.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,015 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9557138082334319443.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,015 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:02,015 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:02,016 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (object_put_request=1) (stream_write_queue_duration=0) (object_multipart_aborted=0) (op_hsync=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (op_abort.failures=0) (committer_magic_marker_put=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=53) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_put_request.max=53) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=53, mean=53.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:02,016 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:02,016 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:02,016 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,016 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:02,017 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000072 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000072/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000072&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=122&ts=1731778442016
2024-11-16 17:34:02,023 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:02,023 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:02,023 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:02,025 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (stream_read_total_bytes=0) (stream_read_block_read=0) (stream_read_vectored_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_fully_operations=0) (action_executor_acquired=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_closed=0) (stream_read_bytes=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request=0) (stream_read_seek_policy_changed=1) (stream_aborted=0) (stream_read_close_operations=1) (stream_read_seek_bytes_discarded=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=7) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=7) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:02,026 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:02,027 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:02,027 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:02,027 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=122&ts=1731778442026
2024-11-16 17:34:02,031 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:02,031 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,031 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=122&ts=1731778442026
2024-11-16 17:34:02,043 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:02,043 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:02,043 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:02,043 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:02,043 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:02,043 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:02,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:02,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:02,044 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:02,044 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:02,044 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:02,044 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:02,046 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:02,046 [s3a-transfer-obs-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:02,046 [s3a-transfer-obs-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,047 [s3a-transfer-obs-bucket-unbounded-pool2-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [124] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=124&ts=1731778442026
2024-11-16 17:34:02,056 [s3a-transfer-obs-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:02,057 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:34:02,057 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:02,057 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:02,057 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:02,057 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778442008; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:02,057 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:02,057 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:02,057 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:02,058 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:02,058 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:02,058 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:02,058 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:02,058 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:02,058 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:02,058 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:02,058 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:02,058 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:02,059 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=125&ts=1731778442026
2024-11-16 17:34:02,072 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:34:02,072 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:34:02,072 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:34:02,072 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:02,072 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:02,072 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:02,072 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:02,072 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:02,072 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:02,073 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000073&t0=122&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=125&ts=1731778442026
2024-11-16 17:34:02,084 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:34:02,084 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:34:02,084 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:34:02,084 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.026s
2024-11-16 17:34:02,085 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.027s
2024-11-16 17:34:02,085 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.041s
2024-11-16 17:34:02,085 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:02,086 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:02,089 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:02,104 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 17, active threads = 0, queued tasks = 0, completed tasks = 17], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_delete_objects=28) (op_exists.failures=0) (op_is_file.failures=0) (object_put_request.failures=0) (op_create_non_recursive=0) (stream_read_bytes_discarded_in_close=130672) (committer_stage_file_upload.failures=0) (stream_read_remote_stream_drain.failures=0) (audit_span_creation=55) (stream_write_queue_duration.failures=0) (stream_aborted=0) (stream_read_close_operations=11) (committer_commit_job.failures=0) (op_list_status.failures=0) (committer_bytes_committed=0) (directories_deleted=0) (stream_write_total_data=1835008) (files_delete_rejected=0) (op_list_located_status=0) (object_multipart_aborted=0) (store_exists_probe.failures=0) (multipart_upload_part_put=0) (stream_read_seek_operations=0) (op_is_file=0) (op_is_directory.failures=0) (stream_write_total_time=0) (op_createfile=0) (op_list_files.failures=0) (op_open=11) (op_glob_status=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (multipart_upload_list.failures=0) (stream_read_bytes=3724) (stream_read_seek_backward_operations=0) (audit_failure=0) (committer_commits_created=0) (object_bulk_delete_request=28) (op_is_directory=0) (committer_bytes_uploaded=0) (stream_read_version_mismatches=0) (op_list_files=0) (stream_read_bytes_discarded_in_abort=0) (op_access=0) (store_io_throttled=0) (op_get_content_summary.failures=0) (store_io_retry=0) (op_mkdirs=14) (stream_read_closed=2) (multipart_upload_list=0) (stream_read_unbuffered=1) (multipart_upload_abort_under_path_invoked=0) (delegation_tokens_issued=0) (op_hsync=0) (op_xattr_get_named_map=0) (committer_materialize_file=0) (stream_read_seek_forward_operations=0) (store_exists_probe=0) (op_get_content_summary=0) (stream_read_opened=2) (committer_magic_files_created=0) (op_xattr_get_map=0) (op_delete=14) (op_access.failures=0) (op_copy_from_local_file.failures=0) (object_continue_list_request=0) (stream_read_exceptions=0) (object_multipart_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=9985) (object_metadata_request=39) (stream_read_bytes_backwards_on_seek=0) (op_rename.failures=0) (object_multipart_initiated=0) (action_http_get_request.failures=0) (committer_commits_aborted=0) (op_xattr_list.failures=0) (action_http_get_request=12) (object_put_request=28) (op_copy_from_local_file=0) (fake_directories_deleted=14) (committer_load_single_pending_file.failures=0) (delegation_tokens_issued.failures=0) (op_list_status=0) (fake_directories_created=0) (op_get_delegation_token.failures=0) (stream_read_vectored_incoming_ranges=30) (directories_created=14) (stream_read_remote_stream_drain=2) (object_list_request.failures=0) (object_continue_list_request.failures=0) (action_file_opened=11) (op_create=14) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (op_rename=0) (stream_read_operations=2) (files_created=14) (object_list_request=56) (multipart_upload_started=0) (op_get_file_checksum=0) (stream_write_bytes=917504) (stream_read_total_bytes=134396) (committer_magic_marker_put.failures=0) (committer_commits_completed=0) (committer_tasks_failed=0) (object_put_bytes=917504) (stream_read_seek_policy_changed=12) (op_get_file_status.failures=0) (op_xattr_get_named_map.failures=0) (store_io_request=163) (stream_read_seek_bytes_skipped=0) (op_glob_status.failures=0) (op_xattr_list=0) (committer_jobs_completed=0) (op_exists=0) (op_xattr_get_named=0) (stream_write_exceptions=0) (files_deleted=14) (committer_commits.failures=0) (object_delete_request.failures=0) (audit_access_check_failure=0) (object_put_request_completed=28) (op_delete.failures=0) (committer_tasks_completed=0) (committer_materialize_file.failures=0) (object_select_requests=0) (files_copied_bytes=0) (action_http_head_request=39) (op_mkdirs.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_copy_requests=0) (op_abort.failures=0) (multipart_upload_aborted=0) (stream_write_exceptions_completing_upload=0) (object_delete_request=0) (op_xattr_get_map.failures=0) (multipart_upload_part_put_bytes=0) (stream_write_block_uploads=14) (committer_commits_reverted=0) (multipart_upload_completed=0) (stream_write_block_uploads_aborted=0) (op_createfile.failures=0) (committer_jobs_failed=0) (op_openfile=0) (committer_commit_job=0) (stream_write_block_uploads_committed=0) (stream_read_fully_operations=0) (audit_request_execution=163) (committer_stage_file_upload=0) (op_hflush=0) (op_xattr_get_named.failures=0) (op_get_file_checksum.failures=0) (action_file_opened.failures=0) (op_abort=0) (multipart_instantiated=0) (stream_write_queue_duration=0) (stream_read_vectored_operations=9) (committer_load_single_pending_file=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_combined_ranges=12) (op_get_delegation_token=0) (op_create.failures=0) (action_http_head_request.failures=0) (stream_read_operations_incomplete=0) (files_copied=0) (object_multipart_initiated.failures=0) (op_get_file_status=1) (ignored_errors=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=14));
minimums=((op_get_file_checksum.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_head_request.min=4) (stream_write_queue_duration.failures.min=-1) (op_list_status.failures.min=-1) (op_list_files.failures.min=-1) (object_list_request.min=7) (action_file_opened.min=7) (op_is_file.failures.min=-1) (op_abort.failures.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.min=-1) (object_bulk_delete_request.min=12) (op_xattr_get_map.failures.min=-1) (op_mkdirs.min=54) (stream_write_queue_duration.min=-1) (op_get_file_status.failures.min=-1) (op_create.failures.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.failures.min=-1) (object_delete_request.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (multipart_upload_list.min=-1) (op_abort.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.min=-1) (committer_stage_file_upload.min=-1) (op_get_content_summary.failures.min=-1) (object_put_request.min=53) (committer_load_single_pending_file.min=-1) (action_executor_acquired.min=-1) (op_exists.min=-1) (store_exists_probe.failures.min=-1) (op_rename.failures.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_directory.failures.min=-1) (op_rename.min=-1) (object_bulk_delete_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.min=9) (stream_read_remote_stream_aborted.min=-1) (committer_commit_job.min=-1) (op_access.min=-1) (object_multipart_initiated.failures.min=-1) (op_glob_status.failures.min=-1) (op_createfile.min=-1) (op_xattr_list.min=-1) (op_list_files.min=-1) (object_list_request.failures.min=-1) (op_exists.failures.min=-1) (op_is_file.min=-1) (object_put_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=16) (object_continue_list_request.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (op_xattr_list.failures.min=-1) (op_access.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_copy_from_local_file.min=-1) (object_continue_list_request.failures.min=-1) (op_get_content_summary.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (multipart_upload_list.failures.min=-1) (op_createfile.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_aborted.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_status.min=-1) (op_create.min=10) (op_delete.min=43) (action_http_get_request.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_abort.max=-1) (op_get_file_checksum.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_is_directory.failures.max=-1) (op_is_file.max=-1) (object_multipart_aborted.max=-1) (op_get_file_checksum.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.failures.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_drain.max=1) (op_rename.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.max=-1) (op_access.max=-1) (delegation_tokens_issued.failures.max=-1) (op_abort.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_glob_status.max=-1) (op_is_file.failures.max=-1) (object_list_request.failures.max=-1) (op_list_status.failures.max=-1) (object_delete_request.max=-1) (object_put_request.failures.max=-1) (op_create.max=63) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (object_bulk_delete_request.max=38) (action_executor_acquired.failures.max=-1) (op_list_status.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.max=9) (op_exists.failures.max=-1) (op_xattr_get_named.max=-1) (op_rename.failures.max=-1) (op_create.failures.max=-1) (op_exists.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_http_get_request.max=55) (op_xattr_get_map.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.failures.max=-1) (op_get_content_summary.max=-1) (committer_commit_job.failures.max=-1) (action_http_get_request.failures.max=-1) (op_access.failures.max=-1) (action_file_opened.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_put_request.max=132) (op_mkdirs.max=395) (op_list_files.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_list_request.max=243) (op_get_content_summary.failures.max=-1) (committer_commit_job.max=-1) (op_delete.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.failures.max=-1) (action_http_head_request.max=17) (committer_magic_marker_put.max=-1) (op_list_files.failures.max=-1) (op_glob_status.failures.max=-1) (object_continue_list_request.max=-1) (op_mkdirs.failures.max=-1) (op_delete.max=101) (op_createfile.failures.max=-1) (action_file_opened.max=18) (op_get_file_status.failures.max=-1) (op_createfile.max=-1) (op_is_directory.max=-1));
means=((op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=407, mean=33.9167)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (action_file_opened.mean=(samples=11, sum=101, mean=9.1818)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=28, sum=1790, mean=63.9286)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=39, sum=327, mean=8.3846)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=28, sum=599, mean=21.3929)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=56, sum=1076, mean=19.2143)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=14, sum=344, mean=24.5714)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=14, sum=1379, mean=98.5000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=14, sum=998, mean=71.2857)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:02,104 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:02,104 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:02,104 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:02,105 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:02,105 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,105 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000074 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000074&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=126&ts=1731778442104
2024-11-16 17:34:02,114 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:02,114 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:02,114 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:02,114 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:02,114 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:02,115 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000074 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000074&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=126&ts=1731778442104
2024-11-16 17:34:02,119 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:02,119 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:02,120 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:02,120 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:02,120 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000074 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000074&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=126&ts=1731778442104
2024-11-16 17:34:02,142 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:02,143 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:02,143 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.024s
2024-11-16 17:34:02,143 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:02,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:02,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,145 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:02,145 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,146 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000075 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000075&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=126&ts=1731778442144
2024-11-16 17:34:02,154 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:02,154 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,154 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:02,155 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17345114111622442913.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:02,156 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17345114111622442913.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (object_put_request.failures=0) (object_multipart_aborted=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (op_abort=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (action_executor_acquired=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (object_put_request=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17345114111622442913.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,156 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:02,156 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:02,157 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17345114111622442913.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:02,157 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:02,158 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:02,158 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:02,158 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:02,158 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000075 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000075&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=127&ts=1731778442144
2024-11-16 17:34:02,232 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:02,233 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:02,233 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.075s
2024-11-16 17:34:02,233 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17345114111622442913.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:02,233 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17345114111622442913.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,233 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17345114111622442913.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,233 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:02,234 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:02,237 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (op_abort=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (op_hflush=0) (action_executor_acquired=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (op_hsync=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (object_put_request=1) (object_multipart_initiated=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=74) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=74) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1));
means=((object_put_request.mean=(samples=1, sum=74, mean=74.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:02,238 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:02,242 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:02,242 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,242 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:02,242 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000076 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000076&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=126&ts=1731778442242
2024-11-16 17:34:02,249 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:02,250 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:02,250 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:02,250 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:34:02,250 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:02,250 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:34:02,251 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:34:02,251 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:02,251 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:02,251 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:02,251 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000076 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=10-1199&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000076&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=128&ts=1731778442242
2024-11-16 17:34:02,268 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:34:02,269 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:34:02,269 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:34:02,269 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:34:02,270 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:02,270 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_operations_incomplete=0) (stream_read_total_bytes=315) (stream_read_seek_policy_changed=1) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_block_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_unbuffered=0) (stream_read_bytes=315) (action_file_opened.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=875) (stream_read_seek_operations=0) (action_http_get_request=1) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (action_file_opened=1) (stream_aborted=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_incoming_ranges=4) (stream_read_remote_stream_drain=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=1) (stream_read_block_acquire_read.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=18) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=8) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=18) (action_executor_acquired.failures.max=-1) (action_file_opened.max=8) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.mean=(samples=1, sum=18, mean=18.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:02,271 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:02,271 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:02,271 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:02,271 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=126&ts=1731778442271
2024-11-16 17:34:02,275 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:02,275 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,276 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=126&ts=1731778442271
2024-11-16 17:34:02,285 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:02,285 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:02,285 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:02,285 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:02,285 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:02,285 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:02,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:02,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:02,286 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:02,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:02,286 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:02,286 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:02,287 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:02,287 [s3a-transfer-obs-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:02,287 [s3a-transfer-obs-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,287 [s3a-transfer-obs-bucket-unbounded-pool2-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [129] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=129&ts=1731778442271
2024-11-16 17:34:02,298 [s3a-transfer-obs-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:34:02,298 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:34:02,298 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:02,303 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:02,304 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:02,304 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778442226; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:02,304 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:02,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:02,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:02,305 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:02,305 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:02,306 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:02,306 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:02,306 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:02,306 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:02,306 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:02,306 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:02,306 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:02,306 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=130&ts=1731778442271
2024-11-16 17:34:02,319 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:34:02,319 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:34:02,319 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:34:02,319 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:02,319 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:02,319 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:02,319 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:02,319 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:02,319 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:02,320 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000077&t0=126&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=130&ts=1731778442271
2024-11-16 17:34:02,343 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.024s
2024-11-16 17:34:02,343 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.024s
2024-11-16 17:34:02,343 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.024s
2024-11-16 17:34:02,343 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.038s
2024-11-16 17:34:02,343 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.038s
2024-11-16 17:34:02,343 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.057s
2024-11-16 17:34:02,344 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:02,344 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:02,346 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:02,358 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 18, active threads = 0, queued tasks = 0, completed tasks = 18], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_list.failures=0) (object_multipart_initiated=0) (multipart_instantiated=0) (committer_load_single_pending_file=0) (fake_directories_created=0) (files_copied=0) (op_xattr_get_named_map=0) (object_copy_requests=0) (op_rename.failures=0) (op_delete.failures=0) (committer_commits.failures=0) (committer_stage_file_upload=0) (op_list_files.failures=0) (op_create=15) (stream_read_operations=2) (files_created=15) (stream_write_total_data=1966080) (op_get_content_summary.failures=0) (op_get_file_checksum=0) (op_is_file=0) (op_xattr_get_map.failures=0) (ignored_errors=0) (stream_read_exceptions=0) (object_list_request.failures=0) (op_xattr_list=0) (committer_magic_marker_put=0) (object_continue_list_request=0) (stream_write_queue_duration.failures=0) (committer_stage_file_upload.failures=0) (object_delete_objects=30) (op_xattr_get_named=0) (op_copy_from_local_file=0) (multipart_upload_completed=0) (op_delete=15) (object_put_request=30) (stream_read_seek_backward_operations=0) (op_createfile=0) (op_get_delegation_token=0) (store_exists_probe=0) (op_copy_from_local_file.failures=0) (audit_access_check_failure=0) (object_list_request=60) (op_mkdirs.failures=0) (stream_read_closed=2) (committer_bytes_committed=0) (multipart_upload_aborted=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_list=0) (committer_materialize_file=0) (committer_magic_marker_put.failures=0) (stream_read_bytes_discarded_in_abort=0) (files_copied_bytes=0) (stream_write_block_uploads=15) (directories_created=15) (committer_commits_completed=0) (stream_read_opened=2) (object_continue_list_request.failures=0) (object_put_request_completed=30) (committer_commits_reverted=0) (op_exists=0) (op_glob_status.failures=0) (stream_read_bytes_discarded_in_close=130672) (op_get_content_summary=0) (store_io_retry=0) (delegation_tokens_issued=0) (committer_load_single_pending_file.failures=0) (committer_magic_files_created=0) (op_list_status=0) (committer_commit_job=0) (stream_read_remote_stream_aborted.failures=0) (audit_failure=0) (stream_read_seek_bytes_skipped=0) (object_put_bytes=983040) (action_http_get_request=13) (audit_span_creation=59) (multipart_upload_part_put_bytes=0) (op_rename=0) (op_get_file_status=1) (op_create.failures=0) (object_bulk_delete_request.failures=0) (stream_write_block_uploads_committed=0) (committer_commits_created=0) (directories_deleted=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (audit_request_execution=175) (files_delete_rejected=0) (files_deleted=15) (stream_read_total_bytes=134711) (delegation_tokens_issued.failures=0) (op_abort.failures=0) (action_file_opened=12) (committer_tasks_completed=0) (stream_read_vectored_operations=10) (multipart_upload_part_put=0) (stream_read_vectored_read_bytes_discarded=10860) (stream_read_seek_forward_operations=0) (action_file_opened.failures=0) (op_is_directory=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (stream_read_bytes=4039) (op_exists.failures=0) (stream_read_fully_operations=0) (op_openfile=0) (stream_read_unbuffered=1) (op_list_status.failures=0) (stream_aborted=0) (op_glob_status=0) (stream_read_bytes_backwards_on_seek=0) (object_select_requests=0) (op_get_file_status.failures=0) (op_access.failures=0) (committer_commit_job.failures=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (object_metadata_request=42) (store_io_throttled=0) (op_hflush=0) (stream_read_remote_stream_drain.failures=0) (op_access=0) (op_open=12) (action_http_head_request=42) (op_xattr_list.failures=0) (stream_read_operations_incomplete=0) (stream_write_queue_duration=0) (op_list_located_status=0) (object_bulk_delete_request=30) (stream_read_close_operations=12) (action_http_head_request.failures=0) (op_createfile.failures=0) (stream_write_bytes=983040) (op_xattr_get_named_map.failures=0) (stream_read_vectored_incoming_ranges=34) (stream_write_total_time=0) (op_create_non_recursive=0) (object_delete_request=0) (op_get_file_checksum.failures=0) (object_multipart_initiated.failures=0) (op_mkdirs=15) (op_is_file.failures=0) (fake_directories_deleted=15) (committer_tasks_failed=0) (committer_materialize_file.failures=0) (stream_write_exceptions_completing_upload=0) (object_delete_request.failures=0) (op_is_directory.failures=0) (committer_jobs_failed=0) (stream_read_seek_policy_changed=13) (op_hsync=0) (op_xattr_get_named.failures=0) (store_exists_probe.failures=0) (stream_write_block_uploads_aborted=0) (object_multipart_aborted=0) (action_http_get_request.failures=0) (committer_bytes_uploaded=0) (op_xattr_get_map=0) (op_abort=0) (object_put_request.failures=0) (stream_read_vectored_combined_ranges=13) (committer_commits_aborted=0) (stream_read_remote_stream_drain=2) (op_get_delegation_token.failures=0) (stream_read_version_mismatches=0) (committer_jobs_completed=0) (store_io_request=175) (multipart_upload_started=0) (op_list_files=0) (multipart_upload_abort_under_path_invoked=0));
gauges=((client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=15) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (object_put_bytes_pending=0));
minimums=((object_delete_request.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_continue_list_request.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_access.min=-1) (op_is_directory.min=-1) (op_is_directory.failures.min=-1) (op_is_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_list_status.min=-1) (action_file_opened.min=8) (object_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.min=4) (action_http_get_request.failures.min=-1) (store_exists_probe.min=-1) (op_get_file_checksum.min=-1) (op_glob_status.failures.min=-1) (object_bulk_delete_request.min=12) (object_list_request.min=7) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_commit_job.failures.min=-1) (op_xattr_list.min=-1) (op_access.failures.min=-1) (op_list_files.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_mkdirs.min=40) (op_delete.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.min=-1) (op_createfile.min=-1) (object_multipart_aborted.failures.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (op_glob_status.min=-1) (multipart_upload_list.min=-1) (object_put_request.min=74) (op_rename.min=-1) (op_abort.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.min=43) (op_list_status.failures.min=-1) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_exists.min=-1) (op_get_content_summary.min=-1) (op_rename.failures.min=-1) (op_is_file.min=-1) (op_exists.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_map.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.min=-1) (op_abort.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.min=9) (action_http_get_request.min=18) (action_executor_acquired.min=-1) (op_get_file_status.failures.min=-1) (op_create.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_stage_file_upload.min=-1) (op_create.min=10));
maximums=((op_copy_from_local_file.max=-1) (action_file_opened.max=18) (op_get_file_status.failures.max=-1) (op_rename.max=-1) (store_exists_probe.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_map.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.max=101) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_head_request.failures.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_delete.failures.max=-1) (object_bulk_delete_request.max=38) (op_get_content_summary.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_file.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.max=-1) (object_put_request.max=132) (stream_read_remote_stream_drain.failures.max=-1) (store_exists_probe.max=-1) (op_rename.failures.max=-1) (committer_stage_file_upload.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.max=243) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_status.max=9) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.max=-1) (object_bulk_delete_request.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.failures.max=-1) (op_list_files.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.failures.max=-1) (committer_commit_job.failures.max=-1) (op_mkdirs.max=395) (op_get_file_checksum.failures.max=-1) (op_create.max=63) (op_list_files.failures.max=-1) (multipart_upload_list.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_file_opened.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_list.max=-1) (op_is_directory.failures.max=-1) (op_is_file.failures.max=-1) (object_delete_request.max=-1) (object_multipart_initiated.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.max=55) (action_http_head_request.max=17) (stream_read_remote_stream_aborted.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (op_exists.max=-1) (object_delete_request.failures.max=-1) (op_glob_status.max=-1) (object_list_request.failures.max=-1) (op_create.failures.max=-1) (op_get_file_checksum.max=-1) (op_list_status.max=-1) (op_xattr_get_named.max=-1) (op_access.max=-1) (op_createfile.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.failures.max=-1) (op_abort.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=13, sum=425, mean=32.6923)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=42, sum=343, mean=8.1667)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=30, sum=635, mean=21.1667)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_create.mean=(samples=15, sum=355, mean=23.6667)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=15, sum=1419, mean=94.6000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=12, sum=109, mean=9.0833)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=30, sum=1886, mean=62.8667)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=15, sum=1057, mean=70.4667)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=60, sum=1114, mean=18.5667)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:02,358 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:02,358 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:02,358 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:02,359 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:02,359 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,359 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000078 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000078&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=131&ts=1731778442358
2024-11-16 17:34:02,367 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:02,367 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:02,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:02,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:02,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:02,368 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000078 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000078&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=131&ts=1731778442358
2024-11-16 17:34:02,373 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:02,373 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:02,373 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:02,374 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:02,374 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000078 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000078&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=131&ts=1731778442358
2024-11-16 17:34:02,404 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:02,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:02,405 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.032s
2024-11-16 17:34:02,405 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:02,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:02,406 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,406 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:02,406 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,406 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000079 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000079&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=131&ts=1731778442405
2024-11-16 17:34:02,420 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:34:02,421 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,421 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:02,422 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14103207544164076847.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:02,423 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14103207544164076847.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (object_put_request.failures=0) (action_executor_acquired=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_total_data=0) (op_hsync=0) (op_abort.failures=0) (stream_write_block_uploads=0) (object_put_request=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (op_hflush=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14103207544164076847.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,423 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:02,423 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:02,423 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14103207544164076847.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:02,426 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:02,429 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:02,436 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:02,436 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:02,436 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000079 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000079&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=132&ts=1731778442405
2024-11-16 17:34:02,507 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:02,507 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:02,507 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.078s
2024-11-16 17:34:02,508 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14103207544164076847.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:02,508 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14103207544164076847.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,509 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14103207544164076847.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,509 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:02,510 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:02,511 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (stream_write_total_data=65536) (op_abort=0) (multipart_upload_part_put=0) (action_executor_acquired=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=71) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=71) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=71, mean=71.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:02,512 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:02,514 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:02,514 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,515 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:02,515 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000080 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000080&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=131&ts=1731778442514
2024-11-16 17:34:02,526 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:02,527 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:02,528 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:02,528 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:34:02,528 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:02,529 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:34:02,538 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:34:02,539 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:02,539 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:02,539 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:02,540 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000080 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-7998&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000080&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=133&ts=1731778442514
2024-11-16 17:34:02,634 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.095s
2024-11-16 17:34:02,634 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:34:02,634 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:34:02,634 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:02,637 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_policy_changed=1) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations_incomplete=0) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_close_operations=1) (stream_read_vectored_combined_ranges=1) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request=1) (stream_read_prefetch_operations=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_fully_operations=0) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=0) (stream_read_block_read=0) (action_executor_acquired=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_total_bytes=300) (stream_read_bytes=300) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=3) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_operations=1) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=13) (action_http_get_request.failures.min=-1) (action_http_get_request.min=95) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((action_file_opened.max=13) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=95) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=95, mean=95.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=13, mean=13.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:02,644 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:02,644 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:02,644 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:02,644 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=131&ts=1731778442643
2024-11-16 17:34:02,661 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:02,661 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,661 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=131&ts=1731778442643
2024-11-16 17:34:02,688 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.027s
2024-11-16 17:34:02,688 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:02,688 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:02,688 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:02,688 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:02,688 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:02,688 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:02,688 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:02,688 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:02,688 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:02,689 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:02,689 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:02,696 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:02,696 [s3a-transfer-obs-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:02,696 [s3a-transfer-obs-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,697 [s3a-transfer-obs-bucket-unbounded-pool2-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=134&ts=1731778442643
2024-11-16 17:34:02,706 [s3a-transfer-obs-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:02,706 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:34:02,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:02,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:02,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:02,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778442501; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:02,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:02,707 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:02,707 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:02,708 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:02,710 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:02,710 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:02,710 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:02,710 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:02,710 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:02,710 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:02,710 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:02,711 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:02,711 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=135&ts=1731778442643
2024-11-16 17:34:02,732 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:34:02,732 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.022s
2024-11-16 17:34:02,732 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.022s
2024-11-16 17:34:02,732 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:02,732 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:02,732 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:02,732 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:02,732 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:02,733 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:02,733 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000081&t0=131&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=135&ts=1731778442643
2024-11-16 17:34:02,765 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.032s
2024-11-16 17:34:02,766 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.034s
2024-11-16 17:34:02,766 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.034s
2024-11-16 17:34:02,766 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.056s
2024-11-16 17:34:02,766 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.056s
2024-11-16 17:34:02,766 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.078s
2024-11-16 17:34:02,766 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:02,766 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:02,778 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:02,794 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 19, active threads = 0, queued tasks = 0, completed tasks = 19], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_block_uploads_committed=0) (action_http_head_request=45) (committer_commits_aborted=0) (stream_write_queue_duration.failures=0) (stream_read_total_bytes=135011) (op_create.failures=0) (multipart_upload_abort_under_path_invoked=0) (action_executor_acquired.failures=0) (op_get_content_summary=0) (object_multipart_aborted.failures=0) (op_xattr_get_map=0) (committer_load_single_pending_file=0) (stream_write_exceptions_completing_upload=0) (action_http_head_request.failures=0) (stream_read_bytes_discarded_in_close=130672) (multipart_upload_list.failures=0) (op_abort.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (audit_span_creation=63) (committer_commit_job.failures=0) (op_xattr_get_named.failures=0) (op_copy_from_local_file=0) (store_io_throttled=0) (delegation_tokens_issued=0) (object_metadata_request=45) (committer_tasks_failed=0) (committer_commit_job=0) (op_delete=16) (op_mkdirs.failures=0) (object_put_request_completed=32) (op_get_file_checksum=0) (stream_read_bytes_discarded_in_abort=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (object_continue_list_request.failures=0) (files_copied=0) (op_mkdirs=16) (object_list_request.failures=0) (stream_read_seek_backward_operations=0) (stream_aborted=0) (fake_directories_created=0) (committer_magic_files_created=0) (op_get_content_summary.failures=0) (op_exists=0) (object_continue_list_request=0) (op_hflush=0) (op_is_directory=0) (op_xattr_list.failures=0) (op_rename.failures=0) (stream_read_operations=2) (object_delete_request=0) (op_xattr_get_named=0) (op_list_files.failures=0) (op_exists.failures=0) (op_glob_status.failures=0) (op_access.failures=0) (store_io_retry=0) (multipart_upload_aborted=0) (op_abort=0) (stream_write_exceptions=0) (stream_write_block_uploads=16) (op_createfile.failures=0) (files_created=16) (op_xattr_list=0) (op_rename=0) (op_is_directory.failures=0) (op_list_located_status=0) (object_put_request=32) (stream_write_block_uploads_aborted=0) (op_delete.failures=0) (committer_bytes_uploaded=0) (op_list_files=0) (object_multipart_initiated.failures=0) (committer_commits.failures=0) (op_xattr_get_map.failures=0) (op_get_file_checksum.failures=0) (stream_read_seek_policy_changed=14) (op_access=0) (stream_write_total_data=2097152) (stream_read_fully_operations=0) (stream_read_remote_stream_drain=2) (stream_read_vectored_incoming_ranges=37) (committer_load_single_pending_file.failures=0) (multipart_upload_list=0) (committer_stage_file_upload.failures=0) (committer_commits_reverted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (stream_write_total_time=0) (object_copy_requests=0) (object_multipart_initiated=0) (op_get_delegation_token.failures=0) (object_put_bytes=1048576) (audit_failure=0) (fake_directories_deleted=16) (stream_read_opened=2) (object_select_requests=0) (committer_jobs_completed=0) (op_is_file=0) (stream_read_bytes_backwards_on_seek=0) (object_delete_objects=32) (stream_read_version_mismatches=0) (files_delete_rejected=0) (committer_commits_completed=0) (committer_materialize_file.failures=0) (stream_write_bytes=1048576) (multipart_upload_part_put=0) (stream_read_vectored_combined_ranges=14) (object_list_request=64) (delegation_tokens_issued.failures=0) (stream_read_bytes=4339) (stream_read_close_operations=13) (op_get_file_status=1) (op_openfile=0) (committer_jobs_failed=0) (stream_read_seek_bytes_discarded=0) (committer_bytes_committed=0) (op_xattr_get_named_map.failures=0) (object_bulk_delete_request=32) (ignored_errors=0) (object_put_request.failures=0) (committer_commits_created=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_operations=11) (audit_access_check_failure=0) (audit_request_execution=187) (multipart_instantiated=0) (op_create=16) (object_multipart_aborted=0) (store_exists_probe.failures=0) (op_get_file_status.failures=0) (stream_read_vectored_read_bytes_discarded=18559) (action_file_opened=13) (op_get_delegation_token=0) (op_list_status.failures=0) (files_copied_bytes=0) (op_glob_status=0) (action_http_get_request=14) (committer_magic_marker_put=0) (action_file_opened.failures=0) (op_create_non_recursive=0) (op_open=13) (committer_stage_file_upload=0) (op_is_file.failures=0) (multipart_upload_started=0) (files_deleted=16) (committer_materialize_file=0) (op_copy_from_local_file.failures=0) (op_xattr_get_named_map=0) (directories_created=16) (stream_read_closed=2) (store_exists_probe=0) (action_http_get_request.failures=0) (store_io_request=187) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0) (op_createfile=0) (stream_read_seek_operations=0) (action_executor_acquired=0) (stream_read_unbuffered=1) (directories_deleted=0) (object_delete_request.failures=0) (op_list_status=0) (stream_read_seek_forward_operations=0) (multipart_upload_part_put_bytes=0) (stream_read_remote_stream_drain.failures=0) (committer_tasks_completed=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=16) (stream_write_block_uploads_active=0) (object_put_request_active=0));
minimums=((op_get_file_checksum.failures.min=-1) (committer_commit_job.min=-1) (committer_load_single_pending_file.min=-1) (op_create.min=10) (op_delete.min=43) (op_is_directory.min=-1) (object_continue_list_request.min=-1) (op_is_file.failures.min=-1) (action_file_opened.min=13) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.min=-1) (object_list_request.failures.min=-1) (action_http_get_request.min=95) (committer_magic_marker_put.failures.min=-1) (committer_commit_job.failures.min=-1) (op_access.min=-1) (op_abort.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_aborted.min=-1) (op_copy_from_local_file.min=-1) (object_delete_request.min=-1) (object_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_rename.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_list.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_initiated.min=-1) (op_createfile.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_status.min=9) (op_list_status.min=-1) (committer_magic_marker_put.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_write_queue_duration.min=-1) (op_mkdirs.min=40) (object_put_request.min=71) (op_get_delegation_token.min=-1) (multipart_upload_list.min=-1) (op_get_content_summary.min=-1) (action_http_head_request.min=4) (op_get_file_checksum.min=-1) (op_list_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_access.failures.min=-1) (store_exists_probe.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (op_createfile.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_stage_file_upload.min=-1) (op_abort.min=-1) (store_exists_probe.min=-1) (op_rename.failures.min=-1) (op_create.failures.min=-1) (op_glob_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_exists.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_map.min=-1) (op_is_file.min=-1) (object_list_request.min=7) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.min=12) (action_file_opened.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.min=-1) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_glob_status.min=-1) (committer_materialize_file.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.min=-1));
maximums=((op_abort.max=-1) (op_get_file_checksum.max=-1) (committer_load_single_pending_file.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_list.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_list_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_list_request.max=243) (object_multipart_aborted.max=-1) (op_xattr_get_named.max=-1) (committer_materialize_file.failures.max=-1) (object_put_request.failures.max=-1) (op_is_directory.max=-1) (op_create.max=63) (op_copy_from_local_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.failures.max=-1) (op_access.failures.max=-1) (op_createfile.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_map.max=-1) (op_mkdirs.max=395) (action_http_head_request.max=17) (action_http_get_request.max=95) (op_get_delegation_token.max=-1) (stream_read_remote_stream_drain.max=1) (op_delete.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_files.max=-1) (op_is_directory.failures.max=-1) (object_list_request.failures.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_status.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named_map.max=-1) (op_abort.failures.max=-1) (store_exists_probe.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_status.max=9) (stream_write_queue_duration.failures.max=-1) (op_is_file.max=-1) (op_glob_status.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (store_exists_probe.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named.failures.max=-1) (op_access.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_content_summary.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.max=101) (object_multipart_initiated.max=-1) (op_create.failures.max=-1) (action_file_opened.max=18) (op_rename.max=-1) (op_get_delegation_token.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_exists.failures.max=-1) (object_bulk_delete_request.max=38) (op_xattr_list.failures.max=-1) (object_put_request.max=132) (op_list_files.failures.max=-1));
means=((op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=32, sum=688, mean=21.5000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=13, sum=122, mean=9.3846)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=16, sum=1466, mean=91.6250)) (op_create.mean=(samples=16, sum=372, mean=23.2500)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=16, sum=1135, mean=70.9375)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=14, sum=520, mean=37.1429)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=64, sum=1173, mean=18.3281)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=45, sum=375, mean=8.3333)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=32, sum=1987, mean=62.0938)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:02,796 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:02,810 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:02,811 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:02,812 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:02,812 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,813 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [136] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000082 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000082&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=136&ts=1731778442796
2024-11-16 17:34:02,825 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:34:02,825 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:02,825 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:02,825 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:02,825 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:02,825 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [136] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000082 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000082&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=136&ts=1731778442796
2024-11-16 17:34:02,830 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:02,830 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:02,830 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:02,830 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:02,831 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [136] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000082 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000082&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=136&ts=1731778442796
2024-11-16 17:34:02,869 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:02,869 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:02,869 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.039s
2024-11-16 17:34:02,869 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:02,870 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:02,870 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,870 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:02,870 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:02,870 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [136] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000083 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000083&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=136&ts=1731778442870
2024-11-16 17:34:02,884 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:34:02,885 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,885 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:02,885 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-408947100740475435.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:02,886 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-408947100740475435.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (object_multipart_initiated=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (op_abort.failures=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (op_abort=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (op_hsync=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((op_abort.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-408947100740475435.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,886 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:02,886 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:02,886 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-408947100740475435.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:02,887 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:02,887 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:02,888 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:02,888 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:02,888 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [137] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000083 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000083&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=137&ts=1731778442870
2024-11-16 17:34:02,965 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:02,965 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:02,965 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.078s
2024-11-16 17:34:02,966 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-408947100740475435.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:02,966 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-408947100740475435.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,966 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-408947100740475435.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:02,966 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:02,966 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:02,967 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort.failures=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (op_abort=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (op_hsync=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (stream_write_total_time=0) (op_hflush=0) (object_multipart_aborted=0) (object_put_request.failures=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (object_put_request.min=77) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=77) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=77, mean=77.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:02,967 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:02,969 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:02,969 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:02,969 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:02,970 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [136] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=136&ts=1731778442969
2024-11-16 17:34:02,975 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:02,975 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:02,976 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:02,976 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:02,977 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:02,977 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:34:02,978 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:02,979 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:02,979 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:02,979 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [138] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=1947-2046&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=138&ts=1731778442969
2024-11-16 17:34:02,981 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:02,981 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:02,982 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:02,982 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [139] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=8192-14435&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=139&ts=1731778442969
2024-11-16 17:34:02,981 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:02,981 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:02,984 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:02,984 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:02,984 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [140] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=40960-41983&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000084&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=140&ts=1731778442969
2024-11-16 17:34:03,001 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:34:03,002 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:34:03,002 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:34:03,002 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:03,012 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.028s
2024-11-16 17:34:03,016 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:03,017 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.038s
2024-11-16 17:34:03,017 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:03,018 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_vectored_incoming_ranges=5) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (stream_read_close_operations=1) (stream_read_fully_operations=0) (stream_read_seek_operations=0) (stream_read_vectored_operations=1) (stream_read_vectored_combined_ranges=3) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations=0) (stream_aborted=0) (stream_read_unbuffered=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (stream_read_bytes=1424) (action_http_get_request.failures=0) (action_http_get_request=3) (action_executor_acquired.failures=0) (stream_read_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=1424) (action_executor_acquired=0) (action_file_opened.failures=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_closed=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=6) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (action_http_get_request.min=20) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_file_opened.max=6) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=38) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=86, mean=28.6667)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:03,020 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:03,020 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,020 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:03,020 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [136] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=136&ts=1731778443020
2024-11-16 17:34:03,024 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,025 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,025 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [136] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=136&ts=1731778443020
2024-11-16 17:34:03,038 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:34:03,038 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:03,038 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:03,038 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:03,038 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:03,038 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:03,038 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:03,038 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:03,038 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:03,039 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:03,039 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:03,039 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:03,039 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:03,040 [s3a-transfer-obs-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:03,040 [s3a-transfer-obs-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,041 [s3a-transfer-obs-bucket-unbounded-pool2-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [146] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=146&ts=1731778443020
2024-11-16 17:34:03,056 [s3a-transfer-obs-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:34:03,056 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.017s
2024-11-16 17:34:03,058 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:03,058 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:03,058 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:03,059 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778442959; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:03,059 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:03,059 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:03,060 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:03,060 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:03,061 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:03,061 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:03,062 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:03,062 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:03,062 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:03,062 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:03,062 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:03,062 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:03,062 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=147&ts=1731778443020
2024-11-16 17:34:03,079 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:34:03,079 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:34:03,080 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.018s
2024-11-16 17:34:03,080 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:03,080 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:03,080 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:03,080 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:03,080 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:03,080 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:03,080 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000085&t0=136&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=147&ts=1731778443020
2024-11-16 17:34:03,096 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:34:03,097 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:34:03,097 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:34:03,097 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.036s
2024-11-16 17:34:03,097 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.036s
2024-11-16 17:34:03,097 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.059s
2024-11-16 17:34:03,097 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:03,097 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:03,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:03,123 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 20, active threads = 0, queued tasks = 0, completed tasks = 20], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe.failures=0) (op_is_directory=0) (committer_materialize_file=0) (stream_read_unbuffered=1) (committer_commits.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_get_content_summary=0) (committer_commit_job.failures=0) (object_multipart_initiated.failures=0) (op_createfile=0) (op_hflush=0) (stream_read_vectored_operations=12) (op_is_directory.failures=0) (op_xattr_get_named_map=0) (store_io_throttled=0) (delegation_tokens_issued=0) (op_xattr_list=0) (ignored_errors=0) (op_xattr_get_named=0) (files_deleted=17) (op_xattr_get_map.failures=0) (committer_load_single_pending_file.failures=0) (action_executor_acquired.failures=0) (committer_stage_file_upload=0) (stream_read_total_bytes=136435) (fake_directories_deleted=17) (op_delete.failures=0) (op_xattr_get_named.failures=0) (store_io_request=201) (files_copied=0) (committer_load_single_pending_file=0) (op_xattr_list.failures=0) (stream_read_closed=2) (directories_created=17) (action_http_head_request=48) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_read_remote_stream_aborted.failures=0) (store_io_retry=0) (stream_read_remote_stream_drain=2) (committer_tasks_failed=0) (stream_read_vectored_incoming_ranges=42) (action_http_get_request=17) (stream_read_exceptions=0) (object_delete_objects=34) (op_delete=17) (fake_directories_created=0) (audit_request_execution=201) (stream_read_vectored_read_bytes_discarded=24503) (op_mkdirs=17) (multipart_upload_abort_under_path_invoked=0) (files_created=17) (object_multipart_initiated=0) (multipart_upload_started=0) (op_is_file=0) (op_list_files.failures=0) (multipart_instantiated=0) (op_create.failures=0) (stream_read_seek_forward_operations=0) (stream_write_exceptions_completing_upload=0) (op_create=17) (committer_commits_created=0) (stream_read_version_mismatches=0) (stream_write_block_uploads_aborted=0) (stream_read_remote_stream_drain.failures=0) (op_list_status=0) (audit_failure=0) (multipart_upload_part_put_bytes=0) (committer_commit_job=0) (files_delete_rejected=0) (stream_write_queue_duration.failures=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (object_list_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=2) (committer_jobs_completed=0) (store_exists_probe=0) (action_file_opened=14) (stream_read_bytes_discarded_in_close=130672) (op_openfile=0) (stream_read_vectored_combined_ranges=17) (op_glob_status.failures=0) (stream_write_queue_duration=0) (stream_read_fully_operations=0) (object_put_request=34) (op_access.failures=0) (op_abort.failures=0) (audit_span_creation=67) (committer_commits_aborted=0) (committer_stage_file_upload.failures=0) (committer_magic_marker_put.failures=0) (stream_read_opened=2) (files_copied_bytes=0) (stream_read_seek_policy_changed=15) (object_metadata_request=48) (op_exists=0) (object_bulk_delete_request.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (op_xattr_get_named_map.failures=0) (audit_access_check_failure=0) (op_copy_from_local_file=0) (op_get_file_checksum=0) (op_abort=0) (action_http_head_request.failures=0) (op_createfile.failures=0) (op_open=14) (multipart_upload_completed=0) (op_get_delegation_token=0) (op_get_file_status.failures=0) (op_list_files=0) (op_rename=0) (stream_write_total_data=2228224) (object_continue_list_request.failures=0) (delegation_tokens_issued.failures=0) (committer_jobs_failed=0) (stream_read_seek_operations=0) (op_is_file.failures=0) (stream_write_block_uploads=17) (op_get_delegation_token.failures=0) (object_list_request=68) (op_access=0) (op_rename.failures=0) (multipart_upload_list=0) (committer_bytes_committed=0) (stream_read_bytes=5763) (committer_magic_files_created=0) (op_copy_from_local_file.failures=0) (multipart_upload_list.failures=0) (object_put_request.failures=0) (object_delete_request=0) (op_list_located_status=0) (op_mkdirs.failures=0) (stream_aborted=0) (op_glob_status=0) (op_get_file_checksum.failures=0) (object_copy_requests=0) (op_get_content_summary.failures=0) (committer_bytes_uploaded=0) (op_create_non_recursive=0) (committer_materialize_file.failures=0) (action_file_opened.failures=0) (committer_commits_reverted=0) (object_delete_request.failures=0) (multipart_upload_part_put=0) (object_bulk_delete_request=34) (committer_magic_marker_put=0) (object_put_bytes=1114112) (directories_deleted=0) (stream_read_operations_incomplete=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted=0) (op_xattr_get_map=0) (action_http_get_request.failures=0) (stream_read_close_operations=14) (op_get_file_status=1) (multipart_upload_aborted=0) (object_select_requests=0) (stream_read_seek_bytes_skipped=0) (committer_commits_completed=0) (stream_write_bytes=1114112) (op_exists.failures=0) (op_hsync=0) (stream_write_block_uploads_committed=0) (object_put_request_completed=34) (op_list_status.failures=0) (stream_read_seek_bytes_discarded=0) (committer_tasks_completed=0));
gauges=((client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=17) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((store_exists_probe.min=-1) (op_abort.failures.min=-1) (op_is_file.min=-1) (op_create.min=10) (op_access.min=-1) (op_xattr_get_map.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.min=-1) (action_http_head_request.min=4) (op_get_content_summary.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_list.failures.min=-1) (store_exists_probe.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_mkdirs.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_files.min=-1) (op_exists.min=-1) (object_put_request.min=77) (object_bulk_delete_request.failures.min=-1) (object_list_request.min=7) (committer_magic_marker_put.failures.min=-1) (op_list_status.failures.min=-1) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_delete.failures.min=-1) (op_mkdirs.min=40) (committer_commit_job.min=-1) (object_multipart_initiated.min=-1) (object_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_list.min=-1) (op_rename.min=-1) (committer_magic_marker_put.min=-1) (op_get_file_status.min=9) (action_http_get_request.min=20) (op_list_status.min=-1) (committer_commit_job.failures.min=-1) (op_is_file.failures.min=-1) (op_is_directory.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_list.min=-1) (object_bulk_delete_request.min=12) (op_list_files.failures.min=-1) (action_file_opened.min=6) (op_glob_status.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named.min=-1) (committer_stage_file_upload.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_drain.min=1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_executor_acquired.min=-1) (op_create.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_delete.min=43) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_directory.min=-1) (object_delete_request.min=-1) (object_continue_list_request.min=-1) (op_get_delegation_token.min=-1) (op_createfile.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_continue_list_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_abort.failures.max=-1) (op_list_status.max=-1) (committer_load_single_pending_file.max=-1) (multipart_upload_list.failures.max=-1) (op_create.max=63) (object_list_request.max=243) (op_createfile.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.failures.max=-1) (op_exists.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_file.max=-1) (committer_magic_marker_put.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.max=17) (action_file_opened.max=18) (committer_materialize_file.max=-1) (op_is_file.failures.max=-1) (op_get_content_summary.max=-1) (object_put_request.failures.max=-1) (op_get_file_status.max=9) (object_multipart_aborted.failures.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.max=95) (object_bulk_delete_request.max=38) (op_list_files.max=-1) (object_put_request.max=132) (op_xattr_get_named.max=-1) (action_file_opened.failures.max=-1) (store_exists_probe.max=-1) (op_delete.max=101) (op_access.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (op_rename.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_get_content_summary.failures.max=-1) (object_delete_request.max=-1) (op_mkdirs.max=395) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.failures.max=-1) (op_glob_status.max=-1) (op_abort.max=-1) (op_copy_from_local_file.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (object_list_request.failures.max=-1) (op_access.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (op_is_directory.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=17, sum=1539, mean=90.5294)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=34, sum=2102, mean=61.8235)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=14, sum=128, mean=9.1429)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=17, sum=1194, mean=70.2353)) (op_create.mean=(samples=17, sum=387, mean=22.7647)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=68, sum=1229, mean=18.0735)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=17, sum=606, mean=35.6471)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=34, sum=721, mean=21.2059)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=48, sum=390, mean=8.1250)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:03,125 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:03,125 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:03,126 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,126 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,127 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,127 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000086 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000086&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=148&ts=1731778443125
2024-11-16 17:34:03,136 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:03,136 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:03,137 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:03,137 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:03,138 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000086 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000086&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=148&ts=1731778443125
2024-11-16 17:34:03,146 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:03,147 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:03,147 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:03,147 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:03,148 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000086 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000086&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=148&ts=1731778443125
2024-11-16 17:34:03,176 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:03,177 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:03,177 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.030s
2024-11-16 17:34:03,177 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:03,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:03,179 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:03,179 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,179 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,180 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000087 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000087&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=148&ts=1731778443178
2024-11-16 17:34:03,190 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:34:03,190 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:03,190 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:03,191 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3747041872322521461.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:03,192 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3747041872322521461.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (object_put_request=0) (op_hflush=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (op_abort=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (op_hsync=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1));
maximums=((action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3747041872322521461.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:03,192 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:03,192 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:03,192 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3747041872322521461.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:03,194 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:03,194 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:03,194 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:03,194 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:03,194 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000087 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000087&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=149&ts=1731778443178
2024-11-16 17:34:03,282 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:03,282 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:03,282 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.088s
2024-11-16 17:34:03,284 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3747041872322521461.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:03,284 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3747041872322521461.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:03,284 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3747041872322521461.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:03,284 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:03,284 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:03,285 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (multipart_upload_completed=0) (object_put_request.failures=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (stream_write_total_data=65536) (op_hsync=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (op_abort=0) (stream_write_total_time=0) (object_put_request=1) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_put_request.min=88) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((op_abort.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=88) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=88, mean=88.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:03,285 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:03,298 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:03,299 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:03,299 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:03,300 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000088 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000088&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=148&ts=1731778443298
2024-11-16 17:34:03,312 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:03,312 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:03,313 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:03,314 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:34:03,314 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:34:03,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:34:03,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:03,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:34:03,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:03,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=100-65535&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000088&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=148&ts=1731778443298
2024-11-16 17:34:03,322 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:03,323 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:03,323 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:34:03,324 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=100-199&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000088&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=150&ts=1731778443298
2024-11-16 17:34:03,347 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.029s
2024-11-16 17:34:03,347 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:03,347 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:34:03,354 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.031s
2024-11-16 17:34:03,356 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:34:03,356 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:34:03,356 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:34:03,356 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7536 bytes
2024-11-16 17:34:03,357 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:03,357 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:03,357 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:03,357 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8648 bytes
2024-11-16 17:34:03,357 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:34:03,357 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:34:03,358 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired=0) (stream_read_operations=1) (stream_read_fully_operations=1) (action_http_get_request.failures=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (stream_read_block_read=0) (stream_read_total_bytes=65536) (stream_read_seek_bytes_discarded=0) (action_http_get_request=2) (stream_read_bytes=200) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_operations=1) (stream_read_block_acquire_read.failures=0) (action_file_opened.failures=0) (stream_read_closed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=1) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain=1) (stream_read_opened=1) (stream_read_bytes_discarded_in_close=65336) (stream_read_seek_backward_operations=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (stream_read_prefetch_operations=0) (action_file_opened=1) (stream_read_seek_policy_changed=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=14) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=29) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=31) (stream_read_remote_stream_drain.max=1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=14) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=60, mean=30.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=14, mean=14.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:03,359 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:03,359 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,359 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:03,359 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=148&ts=1731778443358
2024-11-16 17:34:03,365 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:03,372 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,372 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,372 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=148&ts=1731778443358
2024-11-16 17:34:03,395 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.022s
2024-11-16 17:34:03,395 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:03,395 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:03,395 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:03,395 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:03,395 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:03,395 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:03,395 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:03,395 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:03,395 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:03,396 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:03,396 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:03,397 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:03,398 [s3a-transfer-obs-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:03,398 [s3a-transfer-obs-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,398 [s3a-transfer-obs-bucket-unbounded-pool2-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [151] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=151&ts=1731778443358
2024-11-16 17:34:03,407 [s3a-transfer-obs-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:03,407 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:34:03,407 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:03,408 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:03,408 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:03,408 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778443262; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:03,408 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:03,408 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:03,408 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:03,408 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:03,417 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:03,417 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:03,418 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:03,418 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:03,418 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:03,418 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:03,418 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:03,418 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:03,419 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=152&ts=1731778443358
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.016s
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:03,434 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000089&t0=148&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=152&ts=1731778443358
2024-11-16 17:34:03,461 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.027s
2024-11-16 17:34:03,461 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.027s
2024-11-16 17:34:03,461 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.027s
2024-11-16 17:34:03,461 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.044s
2024-11-16 17:34:03,462 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.044s
2024-11-16 17:34:03,462 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.067s
2024-11-16 17:34:03,462 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:03,462 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:03,464 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:03,482 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 21, active threads = 0, queued tasks = 0, completed tasks = 21], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_initiated.failures=0) (op_glob_status=0) (op_exists.failures=0) (files_copied=0) (committer_bytes_uploaded=0) (committer_load_single_pending_file.failures=0) (multipart_upload_aborted=0) (object_multipart_aborted.failures=0) (store_exists_probe.failures=0) (object_put_request_completed=36) (action_file_opened=15) (ignored_errors=0) (committer_tasks_failed=0) (committer_jobs_failed=0) (fake_directories_created=0) (op_is_file.failures=0) (op_xattr_list=0) (action_http_head_request.failures=0) (directories_created=18) (delegation_tokens_issued=0) (op_get_delegation_token=0) (files_created=18) (object_put_request.failures=0) (action_http_get_request.failures=0) (files_copied_bytes=0) (stream_write_queue_duration=0) (op_is_directory.failures=0) (stream_read_exceptions=0) (committer_commit_job.failures=0) (op_list_files.failures=0) (op_copy_from_local_file=0) (committer_commits_aborted=0) (committer_tasks_completed=0) (committer_magic_marker_put.failures=0) (stream_aborted=0) (op_get_file_status.failures=0) (multipart_instantiated=0) (op_get_content_summary.failures=0) (audit_span_creation=71) (committer_bytes_committed=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_operations=3) (stream_read_remote_stream_drain.failures=0) (op_create.failures=0) (op_exists=0) (op_get_delegation_token.failures=0) (stream_read_seek_policy_changed=16) (op_mkdirs.failures=0) (object_multipart_aborted=0) (stream_write_bytes=1179648) (object_bulk_delete_request=36) (multipart_upload_list=0) (delegation_tokens_issued.failures=0) (multipart_upload_started=0) (committer_stage_file_upload.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_access=0) (audit_request_execution=214) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (committer_commits_completed=0) (stream_read_fully_operations=1) (stream_read_remote_stream_drain=3) (committer_commits.failures=0) (committer_magic_files_created=0) (multipart_upload_completed=0) (stream_write_block_uploads_committed=0) (op_abort=0) (store_exists_probe=0) (op_xattr_get_named=0) (committer_commit_job=0) (committer_magic_marker_put=0) (committer_materialize_file=0) (object_delete_request=0) (op_hflush=0) (op_xattr_get_map=0) (object_list_request=72) (op_rename=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_bytes_discarded=0) (op_create_non_recursive=0) (stream_read_vectored_incoming_ranges=43) (op_list_located_status=0) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=18) (op_copy_from_local_file.failures=0) (committer_materialize_file.failures=0) (object_delete_request.failures=0) (op_mkdirs=18) (action_executor_acquired.failures=0) (stream_write_queue_duration.failures=0) (action_http_head_request=51) (op_rename.failures=0) (multipart_upload_list.failures=0) (op_createfile=0) (stream_read_close_operations=15) (op_list_status.failures=0) (stream_read_version_mismatches=0) (object_select_requests=0) (op_xattr_get_map.failures=0) (op_open=15) (object_list_request.failures=0) (object_put_request=36) (committer_stage_file_upload=0) (op_openfile=0) (committer_load_single_pending_file=0) (stream_write_exceptions=0) (stream_read_vectored_operations=13) (op_xattr_get_named_map.failures=0) (files_deleted=18) (fake_directories_deleted=18) (stream_read_seek_operations=0) (stream_read_unbuffered=1) (stream_read_bytes=5963) (multipart_upload_part_put_bytes=0) (object_delete_objects=36) (store_io_retry=0) (stream_read_bytes_discarded_in_close=196008) (stream_read_bytes_backwards_on_seek=0) (op_delete.failures=0) (object_continue_list_request.failures=0) (object_metadata_request=51) (op_list_status=0) (op_get_content_summary=0) (object_bulk_delete_request.failures=0) (op_glob_status.failures=0) (object_put_bytes=1179648) (action_file_opened.failures=0) (store_io_request=214) (object_copy_requests=0) (op_get_file_checksum=0) (stream_write_block_uploads=18) (op_delete=18) (audit_access_check_failure=0) (stream_read_bytes_discarded_in_abort=0) (op_get_file_status=1) (stream_write_total_data=2359296) (op_hsync=0) (stream_read_operations_incomplete=0) (stream_write_block_uploads_aborted=0) (op_get_file_checksum.failures=0) (committer_commits_created=0) (stream_read_vectored_read_bytes_discarded=24503) (stream_read_opened=3) (committer_commits_reverted=0) (stream_read_closed=3) (stream_read_total_bytes=201971) (store_io_throttled=0) (stream_write_total_time=0) (committer_jobs_completed=0) (files_delete_rejected=0) (object_continue_list_request=0) (op_is_file=0) (stream_read_seek_bytes_skipped=0) (op_is_directory=0) (action_http_get_request=19) (stream_read_seek_forward_operations=0) (op_xattr_get_named_map=0) (audit_failure=0) (op_access.failures=0) (op_create=18) (op_list_files=0) (op_xattr_list.failures=0) (directories_deleted=0) (op_createfile.failures=0) (op_xattr_get_named.failures=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=18));
minimums=((op_mkdirs.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_list_files.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_magic_marker_put.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_abort.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_map.min=-1) (object_list_request.failures.min=-1) (op_delete.min=43) (committer_commit_job.min=-1) (op_get_delegation_token.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_status.failures.min=-1) (op_is_directory.failures.min=-1) (op_rename.min=-1) (op_mkdirs.min=40) (object_continue_list_request.failures.min=-1) (op_delete.failures.min=-1) (op_exists.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.min=4) (object_delete_request.min=-1) (op_list_status.failures.min=-1) (op_is_directory.min=-1) (action_http_get_request.min=29) (op_glob_status.min=-1) (committer_materialize_file.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_list_request.min=7) (op_list_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_file.failures.min=-1) (op_get_file_checksum.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_map.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_status.min=9) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.min=-1) (op_create.min=10) (action_file_opened.min=14) (op_copy_from_local_file.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.min=-1) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_stage_file_upload.failures.min=-1) (op_access.failures.min=-1) (object_put_request.min=88) (object_bulk_delete_request.min=12) (op_list_files.min=-1) (op_is_file.min=-1) (op_createfile.failures.min=-1) (store_exists_probe.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_createfile.min=-1) (committer_magic_marker_put.failures.min=-1) (object_delete_request.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named.min=-1) (op_rename.failures.min=-1));
maximums=((delegation_tokens_issued.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.failures.max=-1) (object_list_request.max=243) (op_list_status.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_files.failures.max=-1) (op_create.failures.max=-1) (op_is_directory.failures.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_status.max=9) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.max=-1) (committer_commit_job.failures.max=-1) (op_abort.failures.max=-1) (action_file_opened.max=18) (stream_write_queue_duration.max=-1) (action_file_opened.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_content_summary.max=-1) (committer_materialize_file.max=-1) (op_get_file_checksum.max=-1) (op_exists.failures.max=-1) (op_delete.max=101) (op_glob_status.max=-1) (op_mkdirs.max=395) (op_xattr_get_named_map.max=-1) (op_rename.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_files.max=-1) (op_access.failures.max=-1) (object_list_request.failures.max=-1) (op_createfile.max=-1) (op_is_file.max=-1) (op_access.max=-1) (object_multipart_initiated.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_drain.max=1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.failures.max=-1) (op_rename.failures.max=-1) (action_http_head_request.max=17) (action_http_get_request.max=95) (op_abort.max=-1) (op_exists.max=-1) (op_create.max=63) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_map.max=-1) (object_bulk_delete_request.max=38) (multipart_upload_list.failures.max=-1) (object_put_request.max=132) (committer_stage_file_upload.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.max=-1) (op_copy_from_local_file.failures.max=-1) (action_http_get_request.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_continue_list_request.max=-1) (store_exists_probe.failures.max=-1) (op_glob_status.failures.max=-1) (op_createfile.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_delegation_token.max=-1) (multipart_upload_list.max=-1) (op_get_content_summary.failures.max=-1));
means=((delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=18, sum=400, mean=22.2222)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=18, sum=1592, mean=88.4444)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=51, sum=424, mean=8.3137)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=666, mean=35.0526)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=15, sum=142, mean=9.4667)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=18, sum=1261, mean=70.0556)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=36, sum=764, mean=21.2222)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=36, sum=2218, mean=61.6111)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=72, sum=1278, mean=17.7500)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:03,482 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:03,482 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:03,483 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,483 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,483 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,483 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000090 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000090&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=153&ts=1731778443482
2024-11-16 17:34:03,493 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:03,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:03,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:03,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:03,495 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000090 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000090&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=153&ts=1731778443482
2024-11-16 17:34:03,504 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:03,504 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:03,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:03,505 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:03,505 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000090 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000090&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=153&ts=1731778443482
2024-11-16 17:34:03,542 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:03,543 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:03,544 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.039s
2024-11-16 17:34:03,544 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:03,545 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:03,545 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:03,546 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,546 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,547 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000091 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000091&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=153&ts=1731778443545
2024-11-16 17:34:03,568 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.022s
2024-11-16 17:34:03,569 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:03,570 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:03,570 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150484585221018320.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:03,572 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150484585221018320.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (object_multipart_aborted=0) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (op_hsync=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (object_put_request=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (op_abort=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (op_hflush=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (stream_write_total_data=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150484585221018320.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:03,573 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:03,573 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:03,574 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150484585221018320.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:03,581 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:03,587 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:03,587 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:03,587 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:03,587 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000091 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000091&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=154&ts=1731778443545
2024-11-16 17:34:03,644 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:03,645 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:03,645 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.058s
2024-11-16 17:34:03,646 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150484585221018320.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:03,646 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150484585221018320.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:03,646 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150484585221018320.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:03,646 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:03,646 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:03,646 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (op_abort=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (op_hsync=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (object_put_request=1) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_put_request.min=57) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=57) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=57, mean=57.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:03,647 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:03,649 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:03,650 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:03,650 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:03,650 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [155] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000092 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000092/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000092&t0=155&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=155&ts=1731778443649
2024-11-16 17:34:03,656 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:03,656 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:03,656 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:03,656 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:34:03,659 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_operations=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_read_bytes=0) (stream_read_seek_backward_operations=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_vectored_incoming_ranges=0) (stream_read_block_read.failures=0) (stream_aborted=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (stream_read_seek_policy_changed=1) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain=0) (stream_read_opened=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_operations=0) (stream_read_total_bytes=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_read=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_version_mismatches=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (action_http_get_request=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=7) (stream_read_block_read.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=7));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:03,662 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:03,662 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,662 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:03,662 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=153&ts=1731778443662
2024-11-16 17:34:03,667 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,668 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,668 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=153&ts=1731778443662
2024-11-16 17:34:03,678 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:03,678 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:03,678 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:03,679 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:03,679 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:03,679 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:03,679 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:03,679 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:03,679 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:03,679 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:03,679 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:03,679 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:03,691 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:03,692 [s3a-transfer-obs-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:03,692 [s3a-transfer-obs-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,692 [s3a-transfer-obs-bucket-unbounded-pool2-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [156] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=156&ts=1731778443662
2024-11-16 17:34:03,706 [s3a-transfer-obs-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:34:03,707 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.016s
2024-11-16 17:34:03,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:03,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:03,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:03,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778443635; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:03,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:03,707 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:03,707 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:03,707 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:03,708 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:03,708 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:03,708 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:03,708 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:03,708 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:03,708 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:03,708 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:03,708 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:03,708 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=157&ts=1731778443662
2024-11-16 17:34:03,729 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:34:03,729 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.021s
2024-11-16 17:34:03,729 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.021s
2024-11-16 17:34:03,729 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:03,729 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:03,729 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:03,730 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:03,730 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:03,730 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:03,730 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000093&t0=153&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=157&ts=1731778443662
2024-11-16 17:34:03,744 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:34:03,744 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:34:03,744 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.015s
2024-11-16 17:34:03,744 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.036s
2024-11-16 17:34:03,744 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.036s
2024-11-16 17:34:03,744 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.065s
2024-11-16 17:34:03,744 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:03,744 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:03,745 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:03,757 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 23, active threads = 0, queued tasks = 0, completed tasks = 23], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_seek_policy_changed=17) (object_metadata_request=54) (op_open=16) (store_io_retry=0) (op_is_directory=0) (committer_commit_job=0) (committer_jobs_completed=0) (op_xattr_get_map=0) (op_list_files=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (stream_read_seek_backward_operations=0) (committer_commits_completed=0) (op_access.failures=0) (audit_access_check_failure=0) (object_select_requests=0) (directories_deleted=0) (op_xattr_get_named_map=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_fully_operations=1) (committer_magic_marker_put=0) (op_exists.failures=0) (op_glob_status.failures=0) (object_continue_list_request.failures=0) (object_delete_request.failures=0) (committer_commits_created=0) (files_created=19) (committer_tasks_failed=0) (op_list_located_status=0) (audit_span_creation=75) (multipart_upload_part_put=0) (stream_read_vectored_read_bytes_discarded=24503) (stream_write_block_uploads_committed=0) (op_is_file.failures=0) (op_exists=0) (multipart_upload_aborted=0) (op_createfile.failures=0) (object_put_bytes=1245184) (committer_tasks_completed=0) (stream_read_closed=3) (stream_write_queue_duration=0) (op_get_file_checksum=0) (stream_read_total_bytes=201971) (committer_magic_files_created=0) (stream_write_total_time=0) (stream_write_block_uploads=19) (files_copied_bytes=0) (action_http_get_request=19) (op_xattr_list=0) (fake_directories_deleted=19) (op_get_content_summary=0) (op_mkdirs.failures=0) (stream_read_vectored_operations=13) (action_http_head_request.failures=0) (stream_read_seek_forward_operations=0) (multipart_upload_started=0) (multipart_instantiated=0) (op_createfile=0) (op_get_file_status.failures=0) (op_create.failures=0) (op_xattr_get_map.failures=0) (object_multipart_aborted=0) (committer_materialize_file.failures=0) (op_get_content_summary.failures=0) (op_rename=0) (stream_read_operations_incomplete=0) (op_openfile=0) (op_get_file_checksum.failures=0) (stream_write_queue_duration.failures=0) (op_create=19) (committer_commits.failures=0) (op_mkdirs=19) (committer_bytes_committed=0) (op_copy_from_local_file.failures=0) (fake_directories_created=0) (files_copied=0) (store_io_request=225) (op_hsync=0) (committer_commits_aborted=0) (committer_stage_file_upload=0) (op_abort=0) (op_access=0) (op_delete.failures=0) (audit_request_execution=225) (object_multipart_initiated=0) (op_get_delegation_token=0) (committer_load_single_pending_file=0) (delegation_tokens_issued.failures=0) (store_exists_probe.failures=0) (committer_load_single_pending_file.failures=0) (op_delete=19) (op_create_non_recursive=0) (op_list_files.failures=0) (action_file_opened=16) (object_bulk_delete_request=38) (object_put_request_completed=38) (stream_read_bytes=5963) (op_is_directory.failures=0) (stream_read_bytes_discarded_in_close=196008) (op_glob_status=0) (stream_write_exceptions_completing_upload=0) (object_continue_list_request=0) (stream_read_seek_bytes_discarded=0) (object_multipart_aborted.failures=0) (object_delete_request=0) (committer_jobs_failed=0) (stream_read_remote_stream_drain.failures=0) (committer_stage_file_upload.failures=0) (object_bulk_delete_request.failures=0) (stream_read_remote_stream_aborted=0) (files_delete_rejected=0) (op_xattr_get_named_map.failures=0) (action_http_head_request=54) (audit_failure=0) (stream_read_operations=3) (stream_read_unbuffered=1) (stream_write_bytes=1245184) (store_io_throttled=0) (store_exists_probe=0) (committer_bytes_uploaded=0) (op_list_status=0) (op_list_status.failures=0) (action_executor_acquired=0) (op_xattr_get_named.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (action_http_get_request.failures=0) (multipart_upload_completed=0) (op_hflush=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain=3) (stream_read_bytes_discarded_in_abort=0) (directories_created=19) (committer_materialize_file=0) (delegation_tokens_issued=0) (op_abort.failures=0) (stream_read_seek_bytes_skipped=0) (op_xattr_list.failures=0) (stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=18) (op_get_delegation_token.failures=0) (multipart_upload_list=0) (ignored_errors=0) (object_put_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_get_file_status=1) (multipart_upload_part_put_bytes=0) (committer_commits_reverted=0) (object_copy_requests=0) (op_is_file=0) (stream_read_close_operations=16) (object_delete_objects=38) (op_rename.failures=0) (op_copy_from_local_file=0) (stream_read_remote_stream_aborted.failures=0) (object_list_request=76) (stream_write_exceptions=0) (action_file_opened.failures=0) (stream_read_opened=3) (stream_write_total_data=2490368) (committer_commit_job.failures=0) (files_deleted=19) (stream_write_block_uploads_aborted=0) (object_put_request=38) (op_xattr_get_named=0) (multipart_upload_list.failures=0) (stream_read_vectored_incoming_ranges=43) (object_list_request.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=19) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0));
minimums=((committer_magic_marker_put.min=-1) (op_xattr_list.failures.min=-1) (op_createfile.failures.min=-1) (op_access.min=-1) (op_mkdirs.failures.min=-1) (op_glob_status.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.min=-1) (op_get_delegation_token.min=-1) (op_get_file_checksum.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.min=-1) (object_continue_list_request.failures.min=-1) (store_exists_probe.min=-1) (op_access.failures.min=-1) (op_exists.min=-1) (op_rename.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_list_files.failures.min=-1) (op_delete.min=43) (object_delete_request.failures.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_list_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.failures.min=-1) (multipart_upload_list.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_create.min=10) (op_mkdirs.min=40) (action_file_opened.min=7) (stream_read_remote_stream_drain.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (op_get_delegation_token.failures.min=-1) (object_continue_list_request.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_status.min=-1) (op_is_directory.failures.min=-1) (stream_write_queue_duration.min=-1) (object_delete_request.min=-1) (object_list_request.min=7) (op_xattr_get_named_map.min=-1) (action_file_opened.failures.min=-1) (object_multipart_aborted.min=-1) (op_rename.min=-1) (object_bulk_delete_request.min=12) (store_exists_probe.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_commit_job.min=-1) (object_put_request.min=57) (action_http_get_request.min=29) (op_is_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_commit_job.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_map.min=-1) (op_list_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (action_http_head_request.min=4) (stream_read_remote_stream_drain.min=1) (op_copy_from_local_file.min=-1) (op_is_file.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_content_summary.min=-1) (op_get_file_status.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_status.min=9) (action_executor_acquired.min=-1) (op_delete.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_materialize_file.min=-1));
maximums=((object_bulk_delete_request.failures.max=-1) (object_bulk_delete_request.max=38) (stream_read_remote_stream_drain.failures.max=-1) (object_put_request.max=132) (op_is_file.max=-1) (object_delete_request.max=-1) (op_list_status.max=-1) (action_executor_acquired.max=-1) (op_delete.failures.max=-1) (action_file_opened.max=18) (op_delete.max=101) (action_http_get_request.max=95) (op_rename.max=-1) (object_list_request.max=243) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.max=-1) (committer_commit_job.failures.max=-1) (multipart_upload_list.max=-1) (committer_materialize_file.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.max=-1) (op_createfile.failures.max=-1) (op_exists.max=-1) (op_xattr_list.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.max=-1) (object_delete_request.failures.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.max=-1) (op_create.failures.max=-1) (op_is_directory.max=-1) (object_continue_list_request.failures.max=-1) (op_access.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_status.max=9) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.max=1) (object_multipart_aborted.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_delegation_token.max=-1) (committer_stage_file_upload.max=-1) (op_is_directory.failures.max=-1) (action_http_head_request.max=17) (op_list_files.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_file.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_commit_job.max=-1) (op_create.max=63) (delegation_tokens_issued.failures.max=-1) (action_http_head_request.failures.max=-1) (action_file_opened.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_status.failures.max=-1) (store_exists_probe.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_content_summary.max=-1) (object_multipart_initiated.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_content_summary.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_files.failures.max=-1) (op_list_status.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_put_request.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.max=395) (stream_write_queue_duration.failures.max=-1));
means=((multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=38, sum=2312, mean=60.8421)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=54, sum=445, mean=8.2407)) (op_create.mean=(samples=19, sum=426, mean=22.4211)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=16, sum=149, mean=9.3125)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=38, sum=798, mean=21.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=666, mean=35.0526)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=76, sum=1333, mean=17.5395)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=19, sum=1326, mean=69.7895)) (op_mkdirs.mean=(samples=19, sum=1654, mean=87.0526)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:03,757 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:03,757 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:03,757 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,757 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,757 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,758 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000094 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000094&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=158&ts=1731778443757
2024-11-16 17:34:03,765 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:03,765 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:03,765 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:03,765 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,765 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:03,765 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000094 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000094&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=158&ts=1731778443757
2024-11-16 17:34:03,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:03,769 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:03,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:03,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:03,769 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000094 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000094&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=158&ts=1731778443757
2024-11-16 17:34:03,802 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:03,802 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:03,802 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.033s
2024-11-16 17:34:03,802 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:03,803 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:03,803 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:03,803 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,803 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,803 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000095 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000095&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=158&ts=1731778443802
2024-11-16 17:34:03,813 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:03,813 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:03,813 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:03,814 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2321656317029501811.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:03,815 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2321656317029501811.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (op_hflush=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (op_abort.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (op_abort=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (op_hsync=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2321656317029501811.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:03,815 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:03,815 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:03,816 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2321656317029501811.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:03,816 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:03,816 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:03,816 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:03,816 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:03,817 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000095 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000095&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=159&ts=1731778443802
2024-11-16 17:34:03,869 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:03,869 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:03,870 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.054s
2024-11-16 17:34:03,871 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2321656317029501811.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:03,871 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2321656317029501811.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:03,871 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2321656317029501811.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:03,871 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:03,872 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:03,873 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (op_hsync=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (multipart_upload_completed=0) (op_hflush=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (object_put_request=1) (stream_write_exceptions=0) (object_multipart_initiated=0) (op_abort.failures=0) (op_abort=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=52) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=52) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=52, mean=52.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:03,873 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:03,875 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:03,875 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:03,875 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:03,876 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000096 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000096/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000096&t0=160&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=160&ts=1731778443874
2024-11-16 17:34:03,880 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:03,881 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:03,881 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:03,881 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:34:03,882 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_close_operations=1) (stream_read_bytes=0) (stream_read_exceptions=0) (action_file_opened=1) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (action_http_get_request.failures=0) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (action_http_get_request=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_operations=0) (action_file_opened.failures=0) (stream_read_unbuffered=0) (stream_read_total_bytes=0) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=0) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=6) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=6) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:03,883 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:03,883 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,883 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:03,883 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=158&ts=1731778443883
2024-11-16 17:34:03,892 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,892 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,892 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=158&ts=1731778443883
2024-11-16 17:34:03,902 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:03,902 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:03,902 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:03,902 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:03,902 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:03,903 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:03,903 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:03,903 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:03,903 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:03,903 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:03,903 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:03,903 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:03,903 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:03,903 [s3a-transfer-obs-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:03,903 [s3a-transfer-obs-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,904 [s3a-transfer-obs-bucket-unbounded-pool2-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [161] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=161&ts=1731778443883
2024-11-16 17:34:03,911 [s3a-transfer-obs-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:03,911 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:34:03,911 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:03,911 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:03,911 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:03,912 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778443860; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:03,912 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:03,912 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:03,912 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:03,912 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:03,913 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:03,913 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:03,913 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:03,913 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:03,913 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:03,913 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:03,913 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:03,913 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:03,913 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=162&ts=1731778443883
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.016s
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:03,929 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000097&t0=158&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=162&ts=1731778443883
2024-11-16 17:34:03,944 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:34:03,945 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:34:03,945 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.016s
2024-11-16 17:34:03,946 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.033s
2024-11-16 17:34:03,946 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.033s
2024-11-16 17:34:03,947 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.044s
2024-11-16 17:34:03,947 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:03,947 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:03,948 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:03,965 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 25, active threads = 0, queued tasks = 0, completed tasks = 25], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commits.failures=0) (files_delete_rejected=0) (op_mkdirs.failures=0) (stream_read_vectored_combined_ranges=18) (directories_deleted=0) (op_createfile.failures=0) (committer_commit_job.failures=0) (op_abort.failures=0) (store_io_request=236) (op_get_delegation_token=0) (object_delete_objects=40) (object_list_request.failures=0) (committer_tasks_completed=0) (audit_request_execution=236) (op_access=0) (object_copy_requests=0) (op_get_file_checksum=0) (stream_write_queue_duration.failures=0) (committer_commits_completed=0) (stream_read_closed=3) (files_created=20) (audit_span_creation=79) (op_list_files.failures=0) (stream_aborted=0) (op_openfile=0) (stream_read_close_operations=17) (op_xattr_get_named=0) (op_glob_status.failures=0) (op_get_content_summary=0) (committer_commits_aborted=0) (op_access.failures=0) (op_xattr_get_named_map.failures=0) (op_is_directory=0) (multipart_upload_started=0) (audit_failure=0) (committer_tasks_failed=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (op_abort=0) (action_http_head_request.failures=0) (object_list_request=80) (op_xattr_get_map=0) (stream_write_total_data=2621440) (stream_read_seek_forward_operations=0) (committer_materialize_file.failures=0) (object_delete_request=0) (committer_stage_file_upload=0) (op_list_status=0) (committer_jobs_failed=0) (committer_magic_marker_put.failures=0) (delegation_tokens_issued=0) (op_hsync=0) (multipart_upload_list=0) (stream_read_operations=3) (op_delete=20) (committer_commit_job=0) (op_xattr_get_map.failures=0) (stream_read_vectored_operations=13) (committer_load_single_pending_file=0) (object_bulk_delete_request.failures=0) (object_continue_list_request.failures=0) (stream_read_opened=3) (object_put_request_completed=40) (op_xattr_get_named_map=0) (object_bulk_delete_request=40) (object_put_bytes=1310720) (action_http_head_request=57) (op_open=17) (op_get_file_checksum.failures=0) (op_createfile=0) (object_continue_list_request=0) (op_delete.failures=0) (committer_commits_created=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (op_is_file.failures=0) (op_rename.failures=0) (object_put_request=40) (stream_read_bytes_discarded_in_close=196008) (action_executor_acquired=0) (store_exists_probe.failures=0) (files_copied_bytes=0) (stream_read_seek_bytes_discarded=0) (op_rename=0) (op_xattr_list=0) (stream_read_total_bytes=201971) (op_create_non_recursive=0) (stream_write_queue_duration=0) (files_copied=0) (stream_read_version_mismatches=0) (stream_read_seek_policy_changed=18) (multipart_upload_part_put=0) (files_deleted=20) (stream_read_operations_incomplete=0) (object_multipart_initiated=0) (op_xattr_get_named.failures=0) (op_get_delegation_token.failures=0) (op_copy_from_local_file.failures=0) (delegation_tokens_issued.failures=0) (op_get_file_status=1) (stream_read_seek_bytes_skipped=0) (fake_directories_created=0) (action_file_opened=17) (multipart_upload_abort_under_path_invoked=0) (op_xattr_list.failures=0) (fake_directories_deleted=20) (stream_read_remote_stream_aborted=0) (committer_magic_files_created=0) (op_list_status.failures=0) (op_hflush=0) (multipart_upload_aborted=0) (action_http_get_request=19) (stream_write_total_time=0) (committer_bytes_uploaded=0) (multipart_upload_part_put_bytes=0) (op_get_file_status.failures=0) (committer_bytes_committed=0) (object_multipart_initiated.failures=0) (multipart_instantiated=0) (stream_write_exceptions=0) (op_get_content_summary.failures=0) (stream_read_fully_operations=1) (stream_read_vectored_incoming_ranges=43) (committer_load_single_pending_file.failures=0) (committer_materialize_file=0) (op_list_located_status=0) (stream_read_vectored_read_bytes_discarded=24503) (object_multipart_aborted.failures=0) (stream_read_seek_operations=0) (op_glob_status=0) (stream_write_block_uploads=20) (op_is_file=0) (audit_access_check_failure=0) (op_exists=0) (op_mkdirs=20) (action_file_opened.failures=0) (op_create=20) (multipart_upload_completed=0) (committer_jobs_completed=0) (store_io_throttled=0) (stream_write_exceptions_completing_upload=0) (stream_read_exceptions=0) (stream_write_block_uploads_committed=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (stream_write_block_uploads_aborted=0) (op_is_directory.failures=0) (stream_read_unbuffered=1) (stream_read_remote_stream_drain=3) (op_copy_from_local_file=0) (op_exists.failures=0) (directories_created=20) (stream_write_bytes=1310720) (committer_commits_reverted=0) (object_select_requests=0) (store_exists_probe=0) (store_io_retry=0) (op_create.failures=0) (stream_read_seek_backward_operations=0) (stream_read_bytes=5963) (object_put_request.failures=0) (op_list_files=0) (committer_stage_file_upload.failures=0) (object_metadata_request=57) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_list.failures=0) (object_delete_request.failures=0) (ignored_errors=0));
gauges=((object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=20) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.min=6) (stream_write_queue_duration.min=-1) (op_list_files.failures.min=-1) (committer_stage_file_upload.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_list.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.min=52) (op_xattr_list.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_map.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_create.min=10) (op_exists.failures.min=-1) (op_rename.min=-1) (object_delete_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_map.min=-1) (object_bulk_delete_request.min=12) (action_file_opened.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_mkdirs.min=40) (op_get_content_summary.min=-1) (multipart_upload_list.failures.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_commit_job.min=-1) (op_get_file_status.min=9) (action_http_head_request.failures.min=-1) (op_access.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_checksum.min=-1) (op_access.failures.min=-1) (op_xattr_list.min=-1) (op_glob_status.min=-1) (op_create.failures.min=-1) (store_exists_probe.failures.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (action_http_head_request.min=4) (object_multipart_aborted.failures.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.failures.min=-1) (object_list_request.min=7) (op_glob_status.failures.min=-1) (op_rename.failures.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_status.failures.min=-1) (op_list_files.min=-1) (op_exists.min=-1) (op_abort.min=-1) (action_http_get_request.min=29) (committer_load_single_pending_file.min=-1) (object_multipart_initiated.min=-1) (object_continue_list_request.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_named.min=-1) (op_list_status.min=-1) (committer_magic_marker_put.min=-1) (op_delete.min=43) (stream_read_remote_stream_aborted.min=-1) (object_put_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_delete_request.min=-1) (object_multipart_aborted.min=-1) (committer_stage_file_upload.failures.min=-1) (op_createfile.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_mkdirs.failures.min=-1) (store_exists_probe.min=-1) (op_delete.failures.min=-1));
maximums=((op_get_content_summary.failures.max=-1) (store_exists_probe.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_is_directory.failures.max=-1) (op_access.max=-1) (op_createfile.max=-1) (committer_load_single_pending_file.max=-1) (op_abort.max=-1) (store_exists_probe.failures.max=-1) (committer_commit_job.max=-1) (object_put_request.failures.max=-1) (object_bulk_delete_request.max=38) (action_executor_acquired.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.failures.max=-1) (op_mkdirs.max=395) (op_list_files.max=-1) (delegation_tokens_issued.max=-1) (op_list_files.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=95) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.max=-1) (op_rename.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.max=1) (object_delete_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.max=-1) (object_continue_list_request.failures.max=-1) (op_rename.max=-1) (op_is_file.max=-1) (committer_stage_file_upload.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (object_list_request.max=243) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_materialize_file.failures.max=-1) (object_put_request.max=132) (stream_write_queue_duration.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_list.failures.max=-1) (op_create.failures.max=-1) (op_delete.failures.max=-1) (op_glob_status.max=-1) (committer_magic_marker_put.failures.max=-1) (op_copy_from_local_file.max=-1) (op_is_directory.max=-1) (op_get_file_checksum.failures.max=-1) (op_access.failures.max=-1) (action_http_head_request.max=17) (op_createfile.failures.max=-1) (op_delete.max=101) (object_delete_request.max=-1) (op_is_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_file_opened.max=18) (committer_materialize_file.max=-1) (op_create.max=63) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_status.failures.max=-1) (op_glob_status.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_list.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.max=-1) (op_get_file_status.max=9) (op_get_content_summary.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named.failures.max=-1) (multipart_upload_list.max=-1) (committer_magic_marker_put.max=-1));
means=((op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=20, sum=1371, mean=68.5500)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=40, sum=829, mean=20.7250)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=666, mean=35.0526)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=57, sum=463, mean=8.1228)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=17, sum=155, mean=9.1176)) (op_create.mean=(samples=20, sum=437, mean=21.8500)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=40, sum=2397, mean=59.9250)) (op_mkdirs.mean=(samples=20, sum=1699, mean=84.9500)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=80, sum=1367, mean=17.0875)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:03,965 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:03,965 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:03,965 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,966 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:03,966 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:03,966 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000098 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000098&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=163&ts=1731778443965
2024-11-16 17:34:03,973 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:03,973 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:03,974 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:03,974 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:03,974 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:03,975 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000098 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000098&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=163&ts=1731778443965
2024-11-16 17:34:03,986 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:03,986 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:03,987 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:03,987 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:03,987 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000098 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000098&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=163&ts=1731778443965
2024-11-16 17:34:04,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:04,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:04,011 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.025s
2024-11-16 17:34:04,011 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:04,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:04,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,012 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,012 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000099 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000099&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=163&ts=1731778444011
2024-11-16 17:34:04,019 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:04,019 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,020 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:04,020 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8996041214611079182.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:04,022 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8996041214611079182.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (object_put_request.failures=0) (action_executor_acquired=0) (object_put_request=0) (stream_write_total_data=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (op_abort=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (op_hflush=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8996041214611079182.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,022 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:04,022 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:04,022 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8996041214611079182.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:04,023 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:04,023 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:04,023 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:04,023 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:04,023 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000099 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000099&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=164&ts=1731778444011
2024-11-16 17:34:04,077 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:04,077 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:04,078 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.055s
2024-11-16 17:34:04,078 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8996041214611079182.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:04,078 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8996041214611079182.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,078 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8996041214611079182.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,078 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:04,078 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:04,079 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (multipart_upload_completed=0) (stream_write_block_uploads=1) (stream_write_total_data=65536) (object_put_request.failures=0) (op_hflush=0) (op_abort.failures=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (object_put_request=1) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (op_abort=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (op_hsync=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=54) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1));
maximums=((action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=54) (object_multipart_initiated.max=-1) (op_abort.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=54, mean=54.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:04,080 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:04,081 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:04,081 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,081 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:04,082 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000100 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000100&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=163&ts=1731778444081
2024-11-16 17:34:04,089 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:04,089 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:04,090 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:04,090 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:04,091 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:04,091 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:04,092 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:04,092 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:04,092 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:04,092 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:04,093 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000100&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=165&ts=1731778444081
2024-11-16 17:34:04,092 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:04,094 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:04,094 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:04,095 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:04,095 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:04,096 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:04,096 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:04,096 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000100&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=166&ts=1731778444081
2024-11-16 17:34:04,114 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:34:04,114 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:34:04,114 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:04,117 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.025s
2024-11-16 17:34:04,118 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:34:04,118 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:04,119 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_opened=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read=0) (stream_read_closed=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_aborted=0) (action_file_opened.failures=0) (action_http_get_request.failures=0) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (stream_read_operations=0) (stream_read_exceptions=0) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (stream_read_vectored_operations=2) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_incoming_ranges=4) (stream_read_prefetch_operations.failures=0) (action_http_get_request=2) (stream_read_remote_stream_drain=0) (stream_read_seek_policy_changed=1) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=2) (action_file_opened=1) (stream_read_close_operations=1) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=300) (stream_read_block_read.failures=0) (stream_read_vectored_read_bytes_discarded=20) (stream_read_total_bytes=300) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (action_executor_acquired=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=18) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=8) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=26) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=8) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=44, mean=22.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:04,119 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:04,119 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,120 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:04,120 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=163&ts=1731778444119
2024-11-16 17:34:04,125 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,125 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,125 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=163&ts=1731778444119
2024-11-16 17:34:04,134 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:04,135 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:04,135 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:04,135 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:04,136 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:04,136 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:04,136 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:04,136 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:04,137 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:04,137 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:04,137 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:04,137 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:04,138 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:04,138 [s3a-transfer-obs-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:04,138 [s3a-transfer-obs-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,138 [s3a-transfer-obs-bucket-unbounded-pool2-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=167&ts=1731778444119
2024-11-16 17:34:04,147 [s3a-transfer-obs-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:04,147 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:34:04,147 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:04,148 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:04,148 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:04,148 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778444068; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:04,148 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:04,148 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:04,148 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:04,148 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:04,149 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:04,149 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:04,149 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:04,149 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:04,149 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:04,149 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:04,149 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:04,149 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:04,150 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=168&ts=1731778444119
2024-11-16 17:34:04,170 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:34:04,171 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.022s
2024-11-16 17:34:04,171 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.022s
2024-11-16 17:34:04,172 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:04,172 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:04,172 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:04,173 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:04,173 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:04,174 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:04,185 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000101&t0=163&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=168&ts=1731778444119
2024-11-16 17:34:04,219 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.045s
2024-11-16 17:34:04,220 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.048s
2024-11-16 17:34:04,220 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.048s
2024-11-16 17:34:04,221 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.072s
2024-11-16 17:34:04,221 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.072s
2024-11-16 17:34:04,221 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.084s
2024-11-16 17:34:04,221 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:04,221 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:04,223 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:04,237 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 26, active threads = 0, queued tasks = 0, completed tasks = 26], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((files_copied=0) (committer_load_single_pending_file.failures=0) (committer_jobs_completed=0) (object_multipart_initiated.failures=0) (committer_magic_files_created=0) (op_hsync=0) (committer_materialize_file=0) (stream_read_vectored_operations=15) (op_rename.failures=0) (op_xattr_get_named.failures=0) (action_http_head_request.failures=0) (stream_read_version_mismatches=0) (op_glob_status=0) (multipart_upload_part_put=0) (directories_created=21) (stream_write_total_time=0) (committer_commits.failures=0) (store_io_throttled=0) (fake_directories_created=0) (stream_read_bytes=6263) (op_hflush=0) (op_glob_status.failures=0) (op_get_content_summary=0) (stream_read_bytes_discarded_in_close=196008) (op_xattr_get_map.failures=0) (action_http_get_request.failures=0) (object_put_request=42) (action_file_opened.failures=0) (object_continue_list_request.failures=0) (op_xattr_list=0) (object_select_requests=0) (op_xattr_get_named_map=0) (object_delete_request=0) (op_create=21) (object_bulk_delete_request.failures=0) (delegation_tokens_issued.failures=0) (committer_tasks_failed=0) (multipart_upload_completed=0) (op_get_file_status=1) (op_xattr_list.failures=0) (object_multipart_aborted.failures=0) (committer_tasks_completed=0) (store_exists_probe.failures=0) (op_exists.failures=0) (committer_commit_job=0) (committer_stage_file_upload=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_abort=0) (object_put_request.failures=0) (stream_write_exceptions=0) (stream_read_seek_policy_changed=19) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=24523) (action_executor_acquired.failures=0) (object_bulk_delete_request=42) (committer_commits_aborted=0) (stream_read_seek_operations=0) (multipart_upload_aborted=0) (op_mkdirs=21) (op_list_status.failures=0) (stream_read_unbuffered=1) (object_continue_list_request=0) (stream_read_total_bytes=202271) (committer_stage_file_upload.failures=0) (op_is_file=0) (action_http_head_request=60) (store_exists_probe=0) (op_createfile.failures=0) (object_list_request.failures=0) (store_io_retry=0) (action_file_opened=18) (object_multipart_aborted=0) (op_abort=0) (committer_load_single_pending_file=0) (committer_jobs_failed=0) (multipart_instantiated=0) (multipart_upload_list.failures=0) (committer_commit_job.failures=0) (stream_read_vectored_incoming_ranges=47) (op_list_located_status=0) (stream_read_remote_stream_aborted=0) (op_is_file.failures=0) (op_get_content_summary.failures=0) (action_http_get_request=21) (ignored_errors=0) (op_xattr_get_map=0) (files_created=21) (committer_materialize_file.failures=0) (op_createfile=0) (action_executor_acquired=0) (op_openfile=0) (object_list_request=84) (object_put_bytes=1376256) (delegation_tokens_issued=0) (multipart_upload_list=0) (committer_commits_created=0) (committer_magic_marker_put=0) (stream_read_remote_stream_aborted.failures=0) (object_delete_request.failures=0) (audit_failure=0) (op_access=0) (object_metadata_request=60) (op_is_directory=0) (stream_write_bytes=1376256) (committer_commits_completed=0) (stream_write_queue_duration=0) (stream_read_close_operations=18) (stream_write_block_uploads_committed=0) (stream_read_opened=3) (op_delete=21) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named=0) (op_get_delegation_token=0) (audit_span_creation=83) (store_io_request=249) (stream_read_fully_operations=1) (op_xattr_get_named_map.failures=0) (op_copy_from_local_file.failures=0) (object_copy_requests=0) (stream_write_queue_duration.failures=0) (op_list_files=0) (op_open=18) (op_get_file_checksum=0) (stream_read_remote_stream_drain=3) (files_copied_bytes=0) (op_create_non_recursive=0) (op_get_delegation_token.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=3) (stream_read_operations_incomplete=0) (object_put_request_completed=42) (op_delete.failures=0) (files_delete_rejected=0) (op_rename=0) (object_delete_objects=42) (files_deleted=21) (audit_request_execution=249) (stream_read_seek_backward_operations=0) (op_create.failures=0) (stream_read_seek_forward_operations=0) (op_is_directory.failures=0) (stream_write_total_data=2752512) (op_list_files.failures=0) (multipart_upload_started=0) (op_get_file_checksum.failures=0) (fake_directories_deleted=21) (committer_bytes_committed=0) (object_multipart_initiated=0) (stream_read_vectored_combined_ranges=20) (op_mkdirs.failures=0) (op_abort.failures=0) (op_exists=0) (audit_access_check_failure=0) (committer_commits_reverted=0) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads=21) (op_copy_from_local_file=0) (stream_read_seek_bytes_skipped=0) (committer_bytes_uploaded=0) (multipart_upload_part_put_bytes=0) (directories_deleted=0) (stream_read_closed=3) (op_access.failures=0) (stream_write_exceptions_completing_upload=0) (op_list_status=0) (op_get_file_status.failures=0) (stream_write_block_uploads_aborted=0) (committer_magic_marker_put.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=21) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_create.failures.min=-1) (object_delete_request.min=-1) (op_list_status.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.min=8) (op_delete.failures.min=-1) (action_http_get_request.min=18) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.min=-1) (committer_materialize_file.min=-1) (op_glob_status.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.failures.min=-1) (op_access.min=-1) (committer_magic_marker_put.min=-1) (op_exists.min=-1) (op_xattr_get_map.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_list.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=54) (object_list_request.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.failures.min=-1) (op_create.min=10) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.min=-1) (op_access.failures.min=-1) (object_list_request.min=7) (action_executor_acquired.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.min=-1) (object_continue_list_request.min=-1) (op_get_file_status.min=9) (action_http_head_request.min=4) (op_list_files.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.failures.min=-1) (op_createfile.failures.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=12) (op_mkdirs.failures.min=-1) (op_mkdirs.min=40) (op_is_file.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.failures.min=-1) (op_delete.min=43) (object_multipart_initiated.min=-1) (multipart_upload_list.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_drain.min=1) (multipart_upload_list.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_delete_request.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.failures.min=-1) (op_rename.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (op_list_files.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.failures.min=-1));
maximums=((op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.max=-1) (object_continue_list_request.failures.max=-1) (store_exists_probe.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_access.failures.max=-1) (op_list_files.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_delete_request.failures.max=-1) (op_is_file.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (op_is_directory.failures.max=-1) (committer_magic_marker_put.max=-1) (object_list_request.max=243) (op_mkdirs.max=395) (op_list_status.failures.max=-1) (action_http_get_request.max=95) (op_create.failures.max=-1) (op_access.max=-1) (multipart_upload_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_file_opened.max=18) (stream_read_remote_stream_drain.failures.max=-1) (op_exists.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_delete.failures.max=-1) (op_glob_status.max=-1) (op_get_delegation_token.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (object_put_request.max=132) (committer_stage_file_upload.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_status.max=9) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named.max=-1) (op_rename.failures.max=-1) (object_continue_list_request.max=-1) (op_abort.max=-1) (stream_read_remote_stream_drain.max=1) (op_list_files.failures.max=-1) (op_list_status.max=-1) (op_rename.max=-1) (object_list_request.failures.max=-1) (op_exists.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_map.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.max=17) (op_abort.failures.max=-1) (op_mkdirs.failures.max=-1) (action_http_get_request.failures.max=-1) (op_create.max=63) (op_createfile.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.failures.max=-1) (op_delete.max=101) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.max=-1) (object_delete_request.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (object_put_request.failures.max=-1) (object_bulk_delete_request.max=38) (op_get_file_checksum.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.max=-1) (action_http_head_request.failures.max=-1) (op_is_directory.max=-1));
means=((op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=42, sum=2475, mean=58.9286)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=60, sum=488, mean=8.1333)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=18, sum=163, mean=9.0556)) (op_mkdirs.mean=(samples=21, sum=1745, mean=83.0952)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=21, sum=1456, mean=69.3333)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=710, mean=33.8095)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=42, sum=884, mean=21.0476)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=84, sum=1399, mean=16.6548)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=21, sum=447, mean=21.2857)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:04,238 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:04,238 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:04,238 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,238 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,238 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,238 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000102 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000102&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=169&ts=1731778444238
2024-11-16 17:34:04,249 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:34:04,249 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:04,249 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:04,249 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,249 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:04,249 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000102 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000102&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=169&ts=1731778444238
2024-11-16 17:34:04,254 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:04,254 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:04,254 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:04,254 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:04,254 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000102 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000102&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=169&ts=1731778444238
2024-11-16 17:34:04,281 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:04,282 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:04,282 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.028s
2024-11-16 17:34:04,282 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:04,283 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:04,283 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,283 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,283 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,283 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000103 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000103&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=169&ts=1731778444282
2024-11-16 17:34:04,290 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:04,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,294 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:04,294 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11763329889244187002.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:04,295 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11763329889244187002.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (op_hsync=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (stream_write_total_data=0) (object_multipart_initiated=0) (object_put_request=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (op_abort=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11763329889244187002.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,295 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:04,296 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:04,296 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11763329889244187002.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:04,297 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:04,297 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:04,297 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:04,297 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:04,297 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [170] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000103 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000103&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=170&ts=1731778444282
2024-11-16 17:34:04,354 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:04,355 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:04,355 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.058s
2024-11-16 17:34:04,355 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11763329889244187002.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:04,355 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11763329889244187002.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,355 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11763329889244187002.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,356 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:04,356 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:04,357 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (stream_write_queue_duration=0) (object_multipart_initiated=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (object_put_request=1) (action_executor_acquired.failures=0) (op_hflush=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (committer_magic_marker_put=0) (op_abort=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (stream_write_total_data=65536) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (stream_write_total_time=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=57) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=57) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=57, mean=57.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:04,357 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:04,358 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:04,358 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,358 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:04,358 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000104 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000104/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000104&t0=171&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=171&ts=1731778444358
2024-11-16 17:34:04,363 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:04,363 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:04,363 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:04,363 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:34:04,364 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (action_http_get_request=0) (stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_combined_ranges=0) (action_http_get_request.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=1) (stream_read_version_mismatches=0) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_block_acquire_read=0) (stream_read_close_operations=1) (stream_read_bytes=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_fully_operations=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_closed=0) (stream_read_prefetch_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=5) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:04,366 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:04,366 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,366 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:04,366 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=169&ts=1731778444366
2024-11-16 17:34:04,370 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,371 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,371 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=169&ts=1731778444366
2024-11-16 17:34:04,383 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:04,383 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:04,383 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:04,383 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:04,383 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:04,384 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:04,384 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:04,384 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:04,384 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:04,384 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:04,384 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:04,384 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:04,385 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:04,385 [s3a-transfer-obs-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:04,385 [s3a-transfer-obs-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,385 [s3a-transfer-obs-bucket-unbounded-pool2-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [172] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=172&ts=1731778444366
2024-11-16 17:34:04,393 [s3a-transfer-obs-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:04,393 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:34:04,393 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:04,393 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:04,393 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:04,393 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778444347; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:04,393 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:04,394 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:04,394 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:04,394 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:04,395 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:04,395 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:04,396 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:04,396 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:04,396 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:04,396 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:04,396 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:04,396 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:04,397 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=173&ts=1731778444366
2024-11-16 17:34:04,412 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:34:04,413 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:34:04,413 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.017s
2024-11-16 17:34:04,413 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:04,413 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:04,413 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:04,413 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:04,413 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:04,413 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:04,413 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000105&t0=169&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=173&ts=1731778444366
2024-11-16 17:34:04,426 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:34:04,426 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:34:04,426 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:34:04,426 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:34:04,427 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.032s
2024-11-16 17:34:04,427 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.043s
2024-11-16 17:34:04,427 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:04,427 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:04,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:04,439 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 28, active threads = 0, queued tasks = 0, completed tasks = 28], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe=0) (op_copy_from_local_file=0) (stream_read_bytes=6263) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain.failures=0) (audit_span_creation=87) (op_delete=22) (fake_directories_created=0) (op_is_file=0) (committer_load_single_pending_file.failures=0) (op_abort.failures=0) (op_hflush=0) (files_created=22) (multipart_instantiated=0) (object_multipart_aborted=0) (stream_read_opened=3) (committer_tasks_completed=0) (stream_read_bytes_discarded_in_close=196008) (stream_write_queue_duration=0) (op_create.failures=0) (ignored_errors=0) (stream_aborted=0) (stream_read_vectored_combined_ranges=20) (delegation_tokens_issued=0) (stream_write_total_data=2883584) (op_get_file_checksum=0) (op_rename.failures=0) (committer_commits.failures=0) (store_exists_probe.failures=0) (committer_commit_job.failures=0) (action_http_head_request.failures=0) (op_xattr_get_map.failures=0) (store_io_request=260) (stream_read_seek_policy_changed=20) (committer_commits_aborted=0) (op_xattr_list=0) (op_access=0) (op_glob_status.failures=0) (op_xattr_get_named=0) (object_delete_request=0) (committer_commits_reverted=0) (stream_read_total_bytes=202271) (multipart_upload_aborted=0) (directories_deleted=0) (stream_read_seek_operations=0) (committer_bytes_committed=0) (directories_created=22) (files_delete_rejected=0) (store_io_retry=0) (stream_read_bytes_discarded_in_abort=0) (object_put_request_completed=44) (op_get_file_status.failures=0) (op_get_file_status=1) (store_io_throttled=0) (op_create=22) (files_copied=0) (op_access.failures=0) (stream_read_seek_forward_operations=0) (action_http_head_request=63) (object_continue_list_request.failures=0) (committer_stage_file_upload.failures=0) (stream_write_block_uploads_committed=0) (object_put_request=44) (multipart_upload_part_put=0) (op_createfile=0) (object_bulk_delete_request=44) (stream_write_queue_duration.failures=0) (op_xattr_get_named_map=0) (op_xattr_get_named.failures=0) (committer_stage_file_upload=0) (op_delete.failures=0) (stream_read_vectored_incoming_ranges=47) (stream_write_block_uploads=22) (action_executor_acquired.failures=0) (op_exists=0) (op_mkdirs=22) (stream_read_seek_bytes_discarded=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_vectored_read_bytes_discarded=24523) (op_get_content_summary=0) (stream_write_total_time=0) (committer_tasks_failed=0) (op_rename=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (op_list_located_status=0) (op_abort=0) (stream_read_operations=3) (op_is_directory=0) (stream_write_exceptions=0) (action_http_get_request=21) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=15) (op_list_status.failures=0) (stream_read_exceptions=0) (action_http_get_request.failures=0) (object_list_request=88) (op_list_files=0) (op_xattr_list.failures=0) (object_list_request.failures=0) (object_delete_objects=44) (stream_read_seek_backward_operations=0) (audit_failure=0) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_drain=3) (files_copied_bytes=0) (op_get_content_summary.failures=0) (object_put_bytes=1441792) (committer_commits_completed=0) (op_glob_status=0) (fake_directories_deleted=22) (stream_read_bytes_backwards_on_seek=0) (audit_request_execution=260) (object_copy_requests=0) (committer_commit_job=0) (stream_write_bytes=1441792) (object_multipart_aborted.failures=0) (op_is_file.failures=0) (op_is_directory.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_create_non_recursive=0) (committer_magic_files_created=0) (op_mkdirs.failures=0) (object_bulk_delete_request.failures=0) (object_multipart_initiated.failures=0) (stream_read_closed=3) (op_list_status=0) (op_hsync=0) (multipart_upload_started=0) (committer_magic_marker_put=0) (committer_commits_created=0) (op_open=19) (op_get_delegation_token=0) (committer_jobs_failed=0) (action_executor_acquired=0) (stream_write_block_uploads_aborted=0) (multipart_upload_part_put_bytes=0) (stream_read_unbuffered=1) (op_exists.failures=0) (files_deleted=22) (audit_access_check_failure=0) (committer_materialize_file=0) (op_createfile.failures=0) (committer_load_single_pending_file=0) (action_file_opened=19) (stream_read_remote_stream_aborted=0) (committer_bytes_uploaded=0) (op_copy_from_local_file.failures=0) (committer_magic_marker_put.failures=0) (stream_read_fully_operations=1) (stream_read_close_operations=19) (object_metadata_request=63) (object_multipart_initiated=0) (op_get_delegation_token.failures=0) (op_list_files.failures=0) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (op_openfile=0) (object_select_requests=0) (multipart_upload_completed=0) (delegation_tokens_issued.failures=0) (object_delete_request.failures=0) (op_get_file_checksum.failures=0) (multipart_upload_list.failures=0) (object_continue_list_request=0) (multipart_upload_list=0) (committer_jobs_completed=0) (committer_materialize_file.failures=0) (op_xattr_get_map=0));
gauges=((stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=22) (object_put_request_active=0));
minimums=((multipart_upload_list.failures.min=-1) (committer_materialize_file.min=-1) (op_is_directory.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.min=7) (op_abort.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_file_opened.min=5) (op_get_delegation_token.min=-1) (op_create.failures.min=-1) (op_list_files.min=-1) (committer_commit_job.failures.min=-1) (op_access.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_file.failures.min=-1) (object_put_request.min=57) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_head_request.failures.min=-1) (op_createfile.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_delete_request.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.failures.min=-1) (action_http_get_request.min=18) (committer_load_single_pending_file.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.failures.min=-1) (op_list_files.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_map.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.failures.min=-1) (op_glob_status.min=-1) (op_xattr_list.min=-1) (object_multipart_aborted.min=-1) (committer_load_single_pending_file.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=4) (object_put_request.failures.min=-1) (multipart_upload_list.min=-1) (op_get_file_status.min=9) (object_bulk_delete_request.min=12) (op_rename.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_get_named.min=-1) (op_list_status.failures.min=-1) (op_exists.failures.min=-1) (store_exists_probe.failures.min=-1) (store_exists_probe.min=-1) (op_access.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.min=-1) (op_mkdirs.min=40) (op_get_content_summary.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_delete.min=43) (stream_read_remote_stream_drain.failures.min=-1) (stream_write_queue_duration.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_list.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named_map.min=-1) (op_copy_from_local_file.min=-1) (op_is_file.min=-1) (committer_magic_marker_put.failures.min=-1) (op_rename.failures.min=-1) (op_exists.min=-1) (op_create.min=10) (op_createfile.min=-1) (op_abort.min=-1) (op_list_status.min=-1) (action_file_opened.failures.min=-1));
maximums=((op_access.failures.max=-1) (op_createfile.failures.max=-1) (op_access.max=-1) (op_rename.max=-1) (op_xattr_get_named_map.failures.max=-1) (multipart_upload_list.max=-1) (stream_write_queue_duration.max=-1) (op_get_content_summary.max=-1) (op_xattr_list.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_exists.max=-1) (committer_load_single_pending_file.max=-1) (op_get_delegation_token.max=-1) (op_delete.failures.max=-1) (committer_commit_job.max=-1) (op_rename.failures.max=-1) (op_list_status.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (store_exists_probe.max=-1) (action_http_get_request.failures.max=-1) (op_list_files.max=-1) (object_put_request.max=132) (object_multipart_aborted.max=-1) (object_list_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_create.max=63) (op_list_files.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named_map.max=-1) (object_list_request.max=243) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_status.max=9) (op_get_content_summary.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_directory.failures.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.max=1) (committer_materialize_file.failures.max=-1) (object_continue_list_request.max=-1) (op_is_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.failures.max=-1) (action_http_get_request.max=95) (op_xattr_get_named.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_glob_status.max=-1) (op_abort.max=-1) (delegation_tokens_issued.failures.max=-1) (op_is_file.failures.max=-1) (op_createfile.max=-1) (op_get_file_status.failures.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.max=-1) (op_copy_from_local_file.max=-1) (action_file_opened.max=18) (op_delete.max=101) (op_mkdirs.max=395) (object_put_request.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_stage_file_upload.failures.max=-1) (object_bulk_delete_request.max=38) (object_multipart_initiated.max=-1) (op_get_delegation_token.failures.max=-1) (action_http_head_request.max=17) (op_mkdirs.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.failures.max=-1) (store_exists_probe.failures.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=63, sum=502, mean=7.9683)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=44, sum=2559, mean=58.1591)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=19, sum=168, mean=8.8421)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=22, sum=1499, mean=68.1364)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=44, sum=913, mean=20.7500)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=22, sum=1789, mean=81.3182)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=22, sum=459, mean=20.8636)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=710, mean=33.8095)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=88, sum=1435, mean=16.3068)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:04,439 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:04,440 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:04,440 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,440 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,440 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,440 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000106 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000106&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=174&ts=1731778444439
2024-11-16 17:34:04,446 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:04,446 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:04,446 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:04,447 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,447 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:04,447 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000106 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000106&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=174&ts=1731778444439
2024-11-16 17:34:04,450 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:04,450 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:04,450 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:04,450 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:04,450 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000106 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000106&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=174&ts=1731778444439
2024-11-16 17:34:04,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:04,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:04,471 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.021s
2024-11-16 17:34:04,471 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:04,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:04,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,472 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,472 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,472 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000107 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000107&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=174&ts=1731778444471
2024-11-16 17:34:04,479 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:04,479 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,480 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:04,480 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3292608150450659228.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:04,481 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3292608150450659228.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (op_hflush=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (op_abort.failures=0) (object_put_request=0) (multipart_upload_completed.failures=0) (op_abort=0) (op_hsync=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (stream_write_total_data=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3292608150450659228.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,481 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:04,481 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:04,481 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3292608150450659228.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:04,482 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:04,482 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:04,482 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:04,482 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000107 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000107&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=31&ts=1731778444471
2024-11-16 17:34:04,484 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:04,584 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:04,585 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:04,585 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.103s
2024-11-16 17:34:04,585 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3292608150450659228.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:04,586 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3292608150450659228.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,586 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3292608150450659228.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,586 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:04,586 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:04,587 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request.failures=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_block_uploads=1) (multipart_upload_part_put.failures=0) (object_put_request=1) (op_hsync=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (object_multipart_initiated=0) (op_abort=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=102) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1));
maximums=((op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=102) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=102, mean=102.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:04,587 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:04,588 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:04,588 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,589 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:04,589 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000108 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000108&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=174&ts=1731778444588
2024-11-16 17:34:04,593 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:04,594 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:04,594 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:04,594 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:34:04,595 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:04,595 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:34:04,595 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:04,596 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:04,596 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:04,596 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000108 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=500-899&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000108&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=36&ts=1731778444588
2024-11-16 17:34:04,613 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:34:04,614 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:34:04,615 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:04,620 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_fully_operations=0) (stream_aborted=0) (stream_read_vectored_incoming_ranges=3) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_close=0) (action_http_get_request=1) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes=400) (stream_read_block_acquire_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_closed=0) (stream_read_operations=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (action_file_opened=1) (stream_read_total_bytes=400) (stream_read_remote_stream_aborted.failures=0) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (stream_read_block_read=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_operations=1) (stream_read_version_mismatches=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.min=19) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=5) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=5) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=19) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (action_http_get_request.mean=(samples=1, sum=19, mean=19.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:04,622 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:04,623 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,623 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:04,624 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=174&ts=1731778444622
2024-11-16 17:34:04,628 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,629 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,629 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=174&ts=1731778444622
2024-11-16 17:34:04,638 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:04,639 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:04,639 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:04,640 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:04,640 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:04,641 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:04,642 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:04,642 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:04,642 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:04,643 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:04,643 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:04,644 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:04,645 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:04,645 [s3a-transfer-obs-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:04,645 [s3a-transfer-obs-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,646 [s3a-transfer-obs-bucket-unbounded-pool2-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [175] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=175&ts=1731778444622
2024-11-16 17:34:04,670 [s3a-transfer-obs-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.025s
2024-11-16 17:34:04,672 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.027s
2024-11-16 17:34:04,673 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:04,673 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:04,674 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:04,674 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778444538; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:04,674 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:04,675 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:04,675 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:04,676 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:04,676 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:04,677 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:04,677 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:04,677 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:04,677 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:04,677 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:04,677 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:04,678 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:04,678 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=38&ts=1731778444622
2024-11-16 17:34:04,693 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:34:04,693 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:34:04,693 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.016s
2024-11-16 17:34:04,693 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:04,693 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:04,694 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:04,694 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:04,694 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:04,694 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:04,694 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000109&t0=174&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=38&ts=1731778444622
2024-11-16 17:34:04,719 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.025s
2024-11-16 17:34:04,719 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.026s
2024-11-16 17:34:04,719 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.026s
2024-11-16 17:34:04,719 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.042s
2024-11-16 17:34:04,719 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.043s
2024-11-16 17:34:04,719 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.077s
2024-11-16 17:34:04,719 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:04,720 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:04,726 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:04,744 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 29, active threads = 0, queued tasks = 0, completed tasks = 29], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_head_request.failures=0) (op_is_file.failures=0) (stream_read_vectored_incoming_ranges=50) (stream_read_total_bytes=202671) (action_file_opened=20) (object_continue_list_request.failures=0) (op_xattr_get_named_map=0) (object_delete_request=0) (object_list_request=92) (op_xattr_list.failures=0) (stream_aborted=0) (stream_read_seek_backward_operations=0) (op_get_file_checksum.failures=0) (object_multipart_initiated=0) (stream_read_remote_stream_aborted.failures=0) (committer_commits_completed=0) (op_list_status.failures=0) (ignored_errors=0) (op_exists=0) (op_xattr_get_map=0) (files_copied=0) (op_open=20) (op_openfile=0) (op_copy_from_local_file.failures=0) (stream_read_seek_bytes_discarded=0) (audit_span_creation=91) (op_get_delegation_token.failures=0) (committer_jobs_failed=0) (op_rename=0) (op_get_file_status.failures=0) (object_multipart_aborted.failures=0) (stream_read_version_mismatches=0) (object_metadata_request=66) (delegation_tokens_issued=0) (op_hsync=0) (op_xattr_get_named=0) (stream_read_remote_stream_drain.failures=0) (committer_magic_marker_put=0) (op_get_delegation_token=0) (op_is_directory=0) (op_list_files.failures=0) (store_io_retry=0) (op_xattr_get_map.failures=0) (audit_failure=0) (multipart_instantiated=0) (op_xattr_get_named.failures=0) (stream_read_fully_operations=1) (files_delete_rejected=0) (op_createfile.failures=0) (op_abort.failures=0) (op_mkdirs=23) (committer_bytes_uploaded=0) (action_http_get_request.failures=0) (multipart_upload_completed=0) (op_list_status=0) (committer_commit_job.failures=0) (action_http_get_request=22) (op_get_file_status=1) (stream_write_exceptions_completing_upload=0) (stream_read_operations_incomplete=0) (object_delete_objects=46) (stream_read_seek_operations=0) (committer_commits_reverted=0) (stream_write_block_uploads=23) (object_put_request=46) (committer_tasks_completed=0) (object_delete_request.failures=0) (multipart_upload_started=0) (stream_read_remote_stream_aborted=0) (op_create_non_recursive=0) (op_create.failures=0) (fake_directories_created=0) (committer_bytes_committed=0) (directories_deleted=0) (files_copied_bytes=0) (stream_read_opened=3) (op_xattr_list=0) (op_abort=0) (op_mkdirs.failures=0) (audit_request_execution=272) (delegation_tokens_issued.failures=0) (committer_commits_created=0) (store_io_request=272) (object_multipart_initiated.failures=0) (object_continue_list_request=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_policy_changed=21) (committer_tasks_failed=0) (object_multipart_aborted=0) (committer_commits_aborted=0) (committer_commits.failures=0) (multipart_upload_abort_under_path_invoked=0) (committer_commit_job=0) (object_put_request_completed=46) (stream_read_vectored_combined_ranges=21) (stream_read_vectored_read_bytes_discarded=24523) (op_access.failures=0) (multipart_upload_list.failures=0) (committer_magic_files_created=0) (multipart_upload_part_put_bytes=0) (stream_read_bytes_backwards_on_seek=0) (op_delete=23) (stream_read_unbuffered=1) (object_copy_requests=0) (multipart_upload_aborted=0) (op_glob_status.failures=0) (op_list_files=0) (op_create=23) (stream_write_bytes=1507328) (stream_read_close_operations=20) (op_rename.failures=0) (stream_write_exceptions=0) (committer_stage_file_upload.failures=0) (committer_jobs_completed=0) (op_copy_from_local_file=0) (stream_read_remote_stream_drain=3) (stream_read_bytes_discarded_in_close=196008) (object_select_requests=0) (op_exists.failures=0) (committer_load_single_pending_file.failures=0) (multipart_upload_part_put=0) (stream_read_seek_bytes_skipped=0) (stream_read_exceptions=0) (files_deleted=23) (object_list_request.failures=0) (store_io_throttled=0) (stream_read_bytes=6663) (action_executor_acquired.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_closed=3) (stream_write_total_data=3014656) (committer_materialize_file.failures=0) (committer_materialize_file=0) (multipart_upload_list=0) (object_put_bytes=1507328) (action_http_head_request=66) (fake_directories_deleted=23) (stream_read_seek_forward_operations=0) (op_get_content_summary=0) (stream_write_queue_duration=0) (store_exists_probe.failures=0) (op_hflush=0) (op_access=0) (op_list_located_status=0) (directories_created=23) (action_file_opened.failures=0) (op_is_file=0) (op_createfile=0) (stream_write_block_uploads_committed=0) (stream_read_operations=3) (object_bulk_delete_request.failures=0) (stream_write_total_time=0) (store_exists_probe=0) (object_put_request.failures=0) (op_get_file_checksum=0) (stream_read_vectored_operations=16) (committer_magic_marker_put.failures=0) (stream_write_queue_duration.failures=0) (files_created=23) (object_bulk_delete_request=46) (committer_stage_file_upload=0) (action_executor_acquired=0) (audit_access_check_failure=0) (op_delete.failures=0) (op_glob_status=0) (stream_read_bytes_discarded_in_abort=0) (committer_load_single_pending_file=0) (op_is_directory.failures=0) (op_get_content_summary.failures=0));
gauges=((object_put_request_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=23) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0));
minimums=((op_is_file.failures.min=-1) (op_access.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_delegation_token.min=-1) (object_put_request.failures.min=-1) (op_list_files.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_mkdirs.min=32) (committer_commit_job.failures.min=-1) (op_access.failures.min=-1) (action_http_get_request.min=19) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_file_status.min=9) (object_bulk_delete_request.min=12) (object_continue_list_request.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (multipart_upload_list.min=-1) (object_multipart_initiated.failures.min=-1) (committer_commit_job.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_glob_status.failures.min=-1) (op_glob_status.min=-1) (op_rename.failures.min=-1) (stream_write_queue_duration.min=-1) (op_abort.min=-1) (op_createfile.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.failures.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.min=6) (committer_stage_file_upload.failures.min=-1) (store_exists_probe.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=102) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.min=-1) (op_exists.failures.min=-1) (op_createfile.min=-1) (action_file_opened.min=5) (op_abort.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.failures.min=-1) (op_create.min=9) (op_is_directory.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_status.min=-1) (op_delete.min=43) (op_is_file.min=-1) (action_http_head_request.min=3) (op_get_delegation_token.failures.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_delete_request.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (object_multipart_aborted.min=-1) (op_exists.min=-1) (op_copy_from_local_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_delete.failures.min=-1) (op_list_files.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((object_delete_request.failures.max=-1) (object_list_request.failures.max=-1) (op_createfile.failures.max=-1) (op_is_file.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1) (committer_commit_job.failures.max=-1) (action_http_get_request.max=95) (stream_write_queue_duration.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_map.max=-1) (action_http_get_request.failures.max=-1) (object_continue_list_request.max=-1) (object_list_request.max=243) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.failures.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.max=38) (op_rename.max=-1) (op_xattr_get_named.max=-1) (op_access.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named.failures.max=-1) (action_file_opened.max=18) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.max=1) (committer_materialize_file.failures.max=-1) (op_exists.max=-1) (object_multipart_initiated.failures.max=-1) (op_is_file.failures.max=-1) (op_is_directory.max=-1) (object_multipart_initiated.max=-1) (op_create.max=63) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.max=-1) (op_get_delegation_token.failures.max=-1) (object_put_request.max=132) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_status.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.failures.max=-1) (op_exists.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (delegation_tokens_issued.max=-1) (op_mkdirs.max=395) (multipart_upload_list.failures.max=-1) (op_delete.failures.max=-1) (op_is_directory.failures.max=-1) (op_rename.failures.max=-1) (store_exists_probe.failures.max=-1) (op_abort.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.max=-1) (object_multipart_aborted.max=-1) (op_access.failures.max=-1) (op_abort.failures.max=-1) (op_get_file_status.max=9) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.max=-1) (action_executor_acquired.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.max=-1) (op_list_files.max=-1) (store_exists_probe.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_executor_acquired.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.max=17) (op_glob_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_delete.max=101) (op_mkdirs.failures.max=-1));
means=((op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=23, sum=1821, mean=79.1739)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=46, sum=2682, mean=58.3043)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=23, sum=1578, mean=68.6087)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=173, mean=8.6500)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=66, sum=514, mean=7.7879)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=729, mean=33.1364)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=46, sum=953, mean=20.7174)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=92, sum=1482, mean=16.1087)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=23, sum=468, mean=20.3478)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:04,745 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:04,745 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:04,745 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,745 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,745 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,745 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000110 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000110&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=176&ts=1731778444745
2024-11-16 17:34:04,754 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:04,754 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:04,755 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:04,755 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,755 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:04,755 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000110 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000110&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=176&ts=1731778444745
2024-11-16 17:34:04,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:04,763 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:04,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:04,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:04,764 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000110 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000110&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=176&ts=1731778444745
2024-11-16 17:34:04,798 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:04,799 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:04,799 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.036s
2024-11-16 17:34:04,799 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:04,799 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:04,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,800 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,800 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000111 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000111&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=176&ts=1731778444799
2024-11-16 17:34:04,812 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:04,812 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,813 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:04,813 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9823880940362620507.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:04,814 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9823880940362620507.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (action_executor_acquired=0) (op_hflush=0) (object_put_request=0) (op_abort=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9823880940362620507.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,814 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:04,814 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:04,814 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9823880940362620507.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:04,814 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:04,814 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:04,814 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:04,814 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:04,815 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000111 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000111&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=41&ts=1731778444799
2024-11-16 17:34:04,871 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:04,871 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:04,871 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.057s
2024-11-16 17:34:04,872 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9823880940362620507.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:04,872 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9823880940362620507.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,872 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9823880940362620507.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:04,872 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:04,872 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:04,873 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (stream_write_bytes=65536) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (op_abort=0) (op_hsync=0) (stream_write_total_time=0) (object_put_request=1) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_data=65536) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=57) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=57));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=57, mean=57.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:04,873 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:04,874 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:34:04,874 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:34:04,875 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:34:04,875 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:04,877 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:34:04,877 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:34:04,877 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:34:04,877 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:34:04,877 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:34:04,878 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:34:04,878 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:34:04,878 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:34:04,878 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:34:04,878 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:34:04,878 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='4ad1d9ac-b171-4f15-98d0-b667f60a3276', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:34:04,878 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='4ad1d9ac-b171-4f15-98d0-b667f60a3276', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:34:04,878 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='4ad1d9ac-b171-4f15-98d0-b667f60a3276', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:34:04,879 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:34:04,879 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:34:04,879 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:34:04,879 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:34:04,879 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:34:04,879 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:34:04,879 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@732d9ec1]
2024-11-16 17:34:04,880 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@732d9ec1]
2024-11-16 17:34:04,880 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:34:04,880 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:34:04,880 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:34:04,880 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:34:04,880 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:34:04,880 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:34:04,880 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:34:04,881 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:34:04,881 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:34:04,881 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:34:04,881 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:34:04,881 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:34:04,883 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:34:04,883 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:34:04,883 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:34:04,883 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:34:04,883 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:34:04,884 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:34:04,886 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:04,886 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:04,886 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:04,886 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] 4ad1d9ac-b171-4f15-98d0-b667f60a3276-00000114 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/4ad1d9ac-b171-4f15-98d0-b667f60a3276-00000114/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=4ad1d9ac-b171-4f15-98d0-b667f60a3276-00000114&t0=176&fs=4ad1d9ac-b171-4f15-98d0-b667f60a3276&t1=176&ts=1731778444886
2024-11-16 17:34:04,887 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:34:04,887 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:34:04,887 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:34:04,887 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:34:04,894 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:04,894 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:04,894 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:04,895 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_exceptions=0) (stream_read_close_operations=1) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_operations=0) (stream_aborted=0) (stream_read_total_bytes=0) (action_http_get_request.failures=0) (action_http_get_request=0) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (stream_read_closed=0) (stream_read_bytes=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (stream_read_seek_backward_operations=0) (action_file_opened.failures=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_operations=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=8) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=8) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:04,896 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:34:04,897 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:34:04,897 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:04,897 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@d87b952[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:34:04,897 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:04,897 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics6-obs-bucket
2024-11-16 17:34:04,898 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:34:04,898 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@732d9ec1] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:04,898 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@732d9ec1] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:04,900 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((committer_commits_aborted=0) (stream_read_opened=0) (multipart_upload_started=0) (stream_read_seek_bytes_discarded=0) (object_metadata_request=1) (committer_commits.failures=0) (op_xattr_list=0) (op_hflush=0) (stream_read_exceptions=0) (op_delete.failures=0) (multipart_upload_list.failures=0) (op_xattr_get_named.failures=0) (stream_write_queue_duration.failures=0) (op_create=0) (op_get_file_status=0) (op_xattr_get_map.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (files_copied_bytes=0) (op_list_files=0) (object_multipart_aborted.failures=0) (op_list_files.failures=0) (op_createfile.failures=0) (op_abort.failures=0) (multipart_upload_aborted=0) (store_io_throttled=0) (stream_read_seek_forward_operations=0) (committer_commit_job.failures=0) (op_createfile=0) (stream_read_closed=0) (action_http_head_request.failures=0) (fake_directories_deleted=0) (stream_read_bytes_discarded_in_abort=0) (committer_load_single_pending_file.failures=0) (multipart_instantiated=0) (op_get_file_checksum.failures=0) (audit_span_creation=2) (stream_read_close_operations=1) (stream_read_operations_incomplete=0) (stream_read_version_mismatches=0) (op_mkdirs.failures=0) (stream_read_bytes=0) (stream_write_total_data=0) (stream_read_seek_backward_operations=0) (op_access.failures=0) (op_xattr_get_map=0) (stream_read_seek_policy_changed=1) (op_xattr_list.failures=0) (object_delete_objects=0) (directories_created=0) (stream_read_seek_operations=0) (op_list_located_status=0) (files_deleted=0) (object_put_request=0) (store_exists_probe=0) (op_xattr_get_named_map.failures=0) (committer_jobs_failed=0) (object_select_requests=0) (action_executor_acquired.failures=0) (stream_write_bytes=0) (stream_read_unbuffered=0) (object_put_bytes=0) (stream_read_vectored_operations=0) (stream_read_total_bytes=0) (action_file_opened=1) (committer_bytes_uploaded=0) (op_get_file_status.failures=0) (op_mkdirs=0) (op_is_directory=0) (object_multipart_aborted=0) (op_create_non_recursive=0) (op_open=1) (object_continue_list_request=0) (committer_commits_completed=0) (op_access=0) (files_copied=0) (object_bulk_delete_request.failures=0) (object_list_request=0) (files_delete_rejected=0) (ignored_errors=0) (op_get_content_summary.failures=0) (stream_read_remote_stream_aborted=0) (object_list_request.failures=0) (op_glob_status.failures=0) (stream_write_block_uploads=0) (object_bulk_delete_request=0) (action_executor_acquired=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (committer_commit_job=0) (op_get_delegation_token=0) (object_delete_request=0) (object_continue_list_request.failures=0) (op_xattr_get_named=0) (delegation_tokens_issued=0) (op_get_delegation_token.failures=0) (files_created=0) (op_hsync=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (audit_failure=0) (stream_write_exceptions_completing_upload=0) (action_http_head_request=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_combined_ranges=0) (op_abort=0) (op_list_status.failures=0) (committer_magic_marker_put.failures=0) (op_exists=0) (op_copy_from_local_file.failures=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=0) (op_list_status=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_completed=0) (delegation_tokens_issued.failures=0) (committer_magic_files_created=0) (store_exists_probe.failures=0) (directories_deleted=0) (committer_tasks_completed=0) (object_copy_requests=0) (committer_tasks_failed=0) (op_rename=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (store_io_retry=0) (op_copy_from_local_file=0) (audit_request_execution=1) (op_rename.failures=0) (committer_commits_reverted=0) (committer_materialize_file.failures=0) (op_is_directory.failures=0) (store_io_request=1) (op_glob_status=0) (op_openfile=0) (stream_write_total_time=0) (object_delete_request.failures=0) (committer_commits_created=0) (stream_aborted=0) (op_get_file_checksum=0) (op_is_file.failures=0) (committer_materialize_file=0) (stream_read_fully_operations=0) (stream_read_seek_bytes_skipped=0) (fake_directories_created=0) (op_get_content_summary=0) (committer_bytes_committed=0) (stream_write_block_uploads_aborted=0) (stream_read_operations=0) (op_delete=0) (committer_stage_file_upload.failures=0) (op_exists.failures=0) (action_http_get_request=0) (stream_write_queue_duration=0) (multipart_upload_list=0) (object_put_request_completed=0) (stream_write_exceptions=0) (committer_load_single_pending_file=0) (committer_stage_file_upload=0) (multipart_upload_part_put_bytes=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads_committed=0) (audit_access_check_failure=0) (op_is_file=0) (committer_jobs_completed=0) (op_create.failures=0) (action_http_get_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_named_map=0));
gauges=((stream_write_block_uploads_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0));
minimums=((op_get_file_status.failures.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_status.min=-1) (object_multipart_initiated.min=-1) (op_is_directory.min=-1) (object_delete_request.failures.min=-1) (op_createfile.failures.min=-1) (op_exists.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.min=-1) (op_glob_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_file.failures.min=-1) (op_list_status.min=-1) (op_delete.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.failures.min=-1) (op_list_status.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (action_http_head_request.min=8) (object_delete_request.min=-1) (op_list_files.min=-1) (action_http_head_request.failures.min=-1) (object_put_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.min=-1) (op_createfile.min=-1) (op_access.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_access.min=-1) (action_file_opened.min=8) (action_file_opened.failures.min=-1) (committer_commit_job.min=-1) (object_list_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_delete.min=-1) (op_xattr_get_named.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.failures.min=-1) (op_rename.failures.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (op_rename.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_abort.min=-1) (op_is_directory.failures.min=-1) (op_list_files.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_put_request.min=-1) (delegation_tokens_issued.min=-1) (object_continue_list_request.min=-1) (committer_commit_job.failures.min=-1) (stream_write_queue_duration.min=-1) (multipart_upload_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.failures.min=-1) (op_mkdirs.min=-1) (action_http_get_request.min=-1) (op_create.min=-1) (object_multipart_aborted.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_drain.min=-1));
maximums=((op_get_delegation_token.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_is_file.max=-1) (op_list_status.max=-1) (object_put_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_createfile.failures.max=-1) (object_list_request.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_delegation_token.max=-1) (object_delete_request.failures.max=-1) (op_exists.max=-1) (op_glob_status.failures.max=-1) (action_http_get_request.failures.max=-1) (object_delete_request.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_delete.max=-1) (object_continue_list_request.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_rename.max=-1) (object_multipart_aborted.max=-1) (op_is_directory.max=-1) (op_xattr_list.max=-1) (action_http_head_request.max=8) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=8) (op_createfile.max=-1) (object_list_request.failures.max=-1) (op_access.failures.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_stage_file_upload.max=-1) (op_get_content_summary.failures.max=-1) (multipart_upload_list.max=-1) (op_access.max=-1) (store_exists_probe.max=-1) (committer_load_single_pending_file.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_status.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_files.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named.max=-1) (op_mkdirs.max=-1) (op_list_files.max=-1) (op_abort.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_create.max=-1) (op_xattr_get_map.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.max=-1) (op_mkdirs.failures.max=-1) (object_bulk_delete_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (delegation_tokens_issued.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.failures.max=-1) (committer_magic_marker_put.max=-1) (op_list_status.failures.max=-1) (committer_commit_job.max=-1) (action_http_head_request.failures.max=-1) (op_is_file.failures.max=-1) (action_executor_acquired.max=-1) (op_rename.failures.max=-1) (op_create.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_http_get_request.max=-1) (stream_write_queue_duration.failures.max=-1) (object_put_request.failures.max=-1) (op_glob_status.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=8, mean=8.0000)));

2024-11-16 17:34:04,900 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:04,900 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,901 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:04,901 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=176&ts=1731778444900
2024-11-16 17:34:04,907 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,907 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,907 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=176&ts=1731778444900
2024-11-16 17:34:04,925 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:34:04,926 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:04,926 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:04,926 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:04,926 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:04,926 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:04,926 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:04,926 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:04,926 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:04,926 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:04,926 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:04,926 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:04,927 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:04,927 [s3a-transfer-obs-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:04,927 [s3a-transfer-obs-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,927 [s3a-transfer-obs-bucket-unbounded-pool2-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [178] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=178&ts=1731778444900
2024-11-16 17:34:04,935 [s3a-transfer-obs-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:04,935 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:34:04,935 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:04,935 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:04,936 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:04,936 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778444861; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:04,936 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:04,936 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:04,936 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:04,936 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:04,936 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:04,936 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:04,936 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:04,936 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:04,936 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:04,936 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:04,936 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:04,937 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=43&ts=1731778444900
2024-11-16 17:34:04,938 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:04,950 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:34:04,950 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:34:04,950 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:34:04,950 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:04,951 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:04,951 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:04,951 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:04,951 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:04,951 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:04,951 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000115&t0=176&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=43&ts=1731778444900
2024-11-16 17:34:04,972 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:34:04,972 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.021s
2024-11-16 17:34:04,972 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.022s
2024-11-16 17:34:04,972 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.036s
2024-11-16 17:34:04,972 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.034s
2024-11-16 17:34:04,972 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.046s
2024-11-16 17:34:04,972 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:04,972 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:04,973 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:04,989 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 30, active threads = 0, queued tasks = 0, completed tasks = 30], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((files_delete_rejected=0) (op_get_file_checksum.failures=0) (op_is_directory.failures=0) (action_executor_acquired=0) (stream_read_vectored_incoming_ranges=50) (multipart_upload_part_put_bytes=0) (op_createfile.failures=0) (action_file_opened=20) (stream_write_queue_duration.failures=0) (object_multipart_aborted.failures=0) (object_put_request_completed=48) (object_select_requests=0) (op_get_delegation_token=0) (ignored_errors=0) (op_is_file.failures=0) (fake_directories_deleted=24) (op_get_delegation_token.failures=0) (object_delete_objects=48) (op_xattr_get_named_map=0) (op_list_status.failures=0) (committer_materialize_file.failures=0) (stream_write_block_uploads=24) (directories_created=24) (op_get_file_checksum=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=6663) (committer_magic_files_created=0) (object_put_request.failures=0) (op_xattr_get_named_map.failures=0) (multipart_upload_completed=0) (stream_read_seek_backward_operations=0) (committer_bytes_uploaded=0) (committer_stage_file_upload.failures=0) (object_delete_request.failures=0) (op_exists=0) (store_exists_probe.failures=0) (action_http_get_request.failures=0) (stream_write_exceptions=0) (files_copied_bytes=0) (stream_read_closed=3) (multipart_upload_list=0) (op_xattr_get_named.failures=0) (multipart_upload_list.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_map.failures=0) (op_xattr_list=0) (multipart_upload_aborted=0) (op_is_directory=0) (stream_read_vectored_operations=16) (op_openfile=0) (op_rename=0) (object_metadata_request=68) (audit_failure=0) (multipart_upload_started=0) (op_list_files.failures=0) (stream_read_opened=3) (op_is_file=0) (op_create_non_recursive=0) (op_access.failures=0) (stream_read_seek_forward_operations=0) (committer_commits_created=0) (op_hsync=0) (stream_read_unbuffered=1) (stream_read_vectored_read_bytes_discarded=24523) (committer_magic_marker_put.failures=0) (op_list_located_status=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_close_operations=20) (op_list_files=0) (audit_access_check_failure=0) (action_http_get_request=22) (files_deleted=24) (committer_commits_reverted=0) (action_http_head_request.failures=0) (action_http_head_request=68) (op_hflush=0) (stream_write_total_time=0) (op_createfile=0) (stream_read_remote_stream_drain.failures=0) (stream_write_bytes=1572864) (committer_commits.failures=0) (op_delete.failures=0) (stream_read_remote_stream_aborted.failures=0) (store_exists_probe=0) (object_delete_request=0) (committer_stage_file_upload=0) (op_get_file_status.failures=0) (committer_jobs_completed=0) (stream_read_operations=3) (stream_read_seek_policy_changed=21) (object_list_request=96) (op_create=24) (store_io_request=282) (object_list_request.failures=0) (op_get_content_summary.failures=0) (op_list_status=0) (stream_read_bytes_discarded_in_close=196008) (op_rename.failures=0) (stream_read_seek_bytes_discarded=0) (op_delete=24) (op_copy_from_local_file.failures=0) (multipart_upload_abort_under_path_invoked=0) (delegation_tokens_issued=0) (committer_jobs_failed=0) (op_create.failures=0) (stream_read_seek_bytes_skipped=0) (committer_commit_job=0) (stream_write_block_uploads_aborted=0) (op_mkdirs.failures=0) (op_xattr_get_map=0) (audit_span_creation=94) (stream_aborted=0) (op_mkdirs=24) (object_bulk_delete_request=48) (stream_read_operations_incomplete=0) (committer_tasks_failed=0) (object_put_bytes=1572864) (committer_commit_job.failures=0) (object_bulk_delete_request.failures=0) (op_abort.failures=0) (op_xattr_get_named=0) (stream_read_exceptions=0) (committer_load_single_pending_file=0) (audit_request_execution=282) (op_abort=0) (op_xattr_list.failures=0) (files_copied=0) (object_multipart_initiated.failures=0) (op_exists.failures=0) (object_copy_requests=0) (committer_tasks_completed=0) (action_executor_acquired.failures=0) (op_access=0) (op_open=20) (committer_load_single_pending_file.failures=0) (store_io_retry=0) (object_continue_list_request=0) (object_multipart_initiated=0) (stream_read_fully_operations=1) (committer_bytes_committed=0) (object_multipart_aborted=0) (op_copy_from_local_file=0) (committer_magic_marker_put=0) (committer_commits_aborted=0) (stream_read_total_bytes=202671) (op_glob_status.failures=0) (stream_read_vectored_combined_ranges=21) (stream_write_block_uploads_committed=0) (stream_read_seek_operations=0) (multipart_upload_part_put=0) (committer_materialize_file=0) (fake_directories_created=0) (multipart_instantiated=0) (committer_commits_completed=0) (op_get_file_status=1) (stream_write_queue_duration=0) (object_put_request=48) (delegation_tokens_issued.failures=0) (stream_write_exceptions_completing_upload=0) (directories_deleted=0) (op_glob_status=0) (action_file_opened.failures=0) (stream_write_total_data=3145728) (stream_read_version_mismatches=0) (store_io_throttled=0) (object_continue_list_request.failures=0) (files_created=24) (op_get_content_summary=0) (stream_read_remote_stream_drain=3));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=24) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((stream_read_remote_stream_drain.min=1) (delegation_tokens_issued.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_commit_job.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_list_status.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_head_request.failures.min=-1) (object_put_request.min=57) (op_xattr_get_map.failures.min=-1) (op_abort.min=-1) (op_xattr_list.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_exists.min=-1) (action_http_get_request.min=19) (object_delete_request.min=-1) (op_list_files.min=-1) (committer_commit_job.failures.min=-1) (object_continue_list_request.min=-1) (delegation_tokens_issued.min=-1) (op_delete.min=43) (action_http_get_request.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_initiated.min=-1) (committer_materialize_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_status.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_is_directory.min=-1) (store_exists_probe.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.min=12) (committer_stage_file_upload.min=-1) (action_executor_acquired.min=-1) (op_rename.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_put_request.failures.min=-1) (op_createfile.min=-1) (op_rename.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.min=-1) (object_delete_request.failures.min=-1) (op_access.min=-1) (op_glob_status.min=-1) (op_get_delegation_token.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_mkdirs.min=32) (op_access.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_http_head_request.min=3) (op_xattr_get_named.min=-1) (op_create.min=9) (object_list_request.min=6) (op_createfile.failures.min=-1) (op_get_content_summary.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_exists.failures.min=-1) (op_is_file.min=-1) (op_glob_status.failures.min=-1) (op_get_file_checksum.min=-1) (action_file_opened.min=5) (op_get_file_checksum.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_status.min=9) (op_delete.failures.min=-1));
maximums=((object_list_request.max=243) (op_get_file_status.max=9) (committer_commit_job.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_file_opened.failures.max=-1) (op_exists.failures.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.failures.max=-1) (object_put_request.max=132) (op_is_file.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.max=-1) (op_list_status.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_create.max=63) (op_delete.max=101) (object_delete_request.max=-1) (op_is_file.max=-1) (object_bulk_delete_request.max=38) (op_list_files.failures.max=-1) (op_get_delegation_token.max=-1) (op_access.max=-1) (op_xattr_get_map.max=-1) (op_delete.failures.max=-1) (op_is_directory.max=-1) (action_file_opened.max=18) (multipart_upload_list.max=-1) (action_executor_acquired.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_list.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_head_request.max=17) (op_rename.max=-1) (op_xattr_get_named.failures.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_files.max=-1) (op_abort.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_bulk_delete_request.failures.max=-1) (op_mkdirs.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_get_request.max=95) (op_xattr_get_map.failures.max=-1) (object_multipart_initiated.max=-1) (object_delete_request.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_list.failures.max=-1) (object_continue_list_request.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=1) (committer_materialize_file.max=-1) (op_rename.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_list_request.failures.max=-1) (op_exists.max=-1) (action_http_head_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_access.failures.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.max=-1) (op_is_directory.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.max=395) (op_createfile.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_checksum.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.max=-1) (op_glob_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_stage_file_upload.max=-1) (op_copy_from_local_file.max=-1));
means=((op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=24, sum=1875, mean=78.1250)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=24, sum=482, mean=20.0833)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=729, mean=33.1364)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=96, sum=1529, mean=15.9271)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=48, sum=2773, mean=57.7708)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=48, sum=988, mean=20.5833)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=24, sum=1624, mean=67.6667)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=173, mean=8.6500)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=68, sum=528, mean=7.7647)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:04,989 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:04,989 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:04,989 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,990 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:04,990 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:04,990 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000116 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000116&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=179&ts=1731778444989
2024-11-16 17:34:04,997 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:04,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:04,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:04,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:04,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:04,997 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000116 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000116&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=179&ts=1731778444989
2024-11-16 17:34:05,000 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:05,000 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:05,000 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:05,000 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:05,000 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000116 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000116&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=179&ts=1731778444989
2024-11-16 17:34:05,030 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:05,031 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:05,031 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.031s
2024-11-16 17:34:05,031 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:05,031 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:05,031 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,032 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,032 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,032 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000117 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000117&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=179&ts=1731778445031
2024-11-16 17:34:05,039 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:05,039 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,040 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:05,040 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1748769409540975751.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:05,041 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1748769409540975751.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (stream_write_queue_duration=0) (object_put_request=0) (op_hflush=0) (op_abort=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1748769409540975751.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,042 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:05,042 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:05,042 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1748769409540975751.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:05,042 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:05,042 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:05,042 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:05,043 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000117 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000117&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=44&ts=1731778445031
2024-11-16 17:34:05,044 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:05,116 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:05,117 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:05,117 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.075s
2024-11-16 17:34:05,117 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1748769409540975751.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:05,117 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1748769409540975751.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,117 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1748769409540975751.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,117 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:05,117 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:05,119 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_bytes=65536) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (stream_write_exceptions=0) (object_put_request=1) (object_put_request.failures=0) (op_hflush=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (op_hsync=0) (stream_write_total_data=65536) (op_abort=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=73) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=73) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=73, mean=73.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:05,119 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:05,119 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:34:05,119 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:34:05,122 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:34:05,122 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:05,125 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:34:05,126 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:34:05,126 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:34:05,126 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:34:05,126 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:34:05,126 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:34:05,126 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:34:05,126 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:34:05,126 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:34:05,127 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:34:05,127 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='5439ea8a-d61b-46a9-b134-7c15e6823f05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:34:05,127 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='5439ea8a-d61b-46a9-b134-7c15e6823f05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:34:05,127 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='5439ea8a-d61b-46a9-b134-7c15e6823f05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:34:05,127 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:34:05,127 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:34:05,128 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:34:05,128 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:34:05,128 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:34:05,128 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:34:05,129 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3edf750f]
2024-11-16 17:34:05,129 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3edf750f]
2024-11-16 17:34:05,129 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:34:05,129 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:34:05,129 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:34:05,129 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:34:05,129 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:34:05,130 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:34:05,130 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:34:05,130 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:34:05,130 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:34:05,130 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:34:05,130 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:34:05,130 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:34:05,132 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:34:05,132 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:34:05,132 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:34:05,132 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:34:05,132 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:34:05,132 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:34:05,132 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:34:05,133 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:34:05,133 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:34:05,133 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:34:05,133 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:34:05,133 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:34:05,133 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:34:05,133 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:34:05,133 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:34:05,133 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:34:05,134 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:05,134 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,134 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:05,134 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 5439ea8a-d61b-46a9-b134-7c15e6823f05-00000120 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/5439ea8a-d61b-46a9-b134-7c15e6823f05-00000120/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=5439ea8a-d61b-46a9-b134-7c15e6823f05-00000120&t0=179&fs=5439ea8a-d61b-46a9-b134-7c15e6823f05&t1=179&ts=1731778445134
2024-11-16 17:34:05,135 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:34:05,135 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:34:05,135 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:34:05,135 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:34:05,141 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:05,142 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:05,142 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,142 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_close_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_closed=0) (stream_read_block_read=0) (stream_read_block_acquire_read.failures=0) (stream_aborted=0) (stream_read_bytes=0) (action_file_opened=1) (stream_read_opened=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (action_executor_acquired=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_total_bytes=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_block_read.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=8) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=8) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:05,143 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:34:05,144 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:34:05,144 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:05,144 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@630ce6c6[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:34:05,144 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:05,145 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics7-obs-bucket
2024-11-16 17:34:05,145 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:34:05,145 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3edf750f] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:05,145 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3edf750f] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:05,147 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_abort.failures=0) (op_xattr_list=0) (committer_commit_job=0) (stream_read_bytes_discarded_in_close=0) (action_http_get_request.failures=0) (store_exists_probe.failures=0) (op_get_file_checksum=0) (object_copy_requests=0) (delegation_tokens_issued=0) (op_list_status=0) (op_exists=0) (op_create_non_recursive=0) (audit_request_execution=1) (object_select_requests=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_closed=0) (op_list_files.failures=0) (object_put_request=0) (directories_created=0) (op_get_file_status=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=0) (committer_commits_reverted=0) (op_abort=0) (op_get_delegation_token=0) (stream_write_queue_duration.failures=0) (object_put_request_completed=0) (action_executor_acquired.failures=0) (op_is_file.failures=0) (object_continue_list_request=0) (op_glob_status=0) (op_list_files=0) (stream_read_vectored_operations=0) (committer_magic_marker_put.failures=0) (op_get_content_summary=0) (stream_write_block_uploads=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=0) (op_is_directory=0) (op_xattr_get_named=0) (op_createfile=0) (committer_materialize_file=0) (multipart_upload_list=0) (op_delete.failures=0) (op_get_content_summary.failures=0) (op_list_located_status=0) (op_access.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_total_time=0) (directories_deleted=0) (stream_read_bytes=0) (stream_read_unbuffered=0) (op_access=0) (multipart_upload_list.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_discarded=0) (multipart_instantiated=0) (committer_magic_marker_put=0) (committer_jobs_completed=0) (committer_stage_file_upload=0) (stream_read_vectored_read_bytes_discarded=0) (stream_write_block_uploads_committed=0) (op_create=0) (op_openfile=0) (object_continue_list_request.failures=0) (object_multipart_initiated.failures=0) (committer_jobs_failed=0) (files_copied=0) (op_hflush=0) (multipart_upload_aborted=0) (object_multipart_initiated=0) (stream_read_version_mismatches=0) (committer_commits_completed=0) (op_xattr_list.failures=0) (stream_read_operations=0) (op_hsync=0) (object_put_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_write_bytes=0) (ignored_errors=0) (committer_magic_files_created=0) (op_xattr_get_named.failures=0) (audit_span_creation=2) (committer_commit_job.failures=0) (stream_read_total_bytes=0) (object_multipart_aborted.failures=0) (store_io_throttled=0) (op_xattr_get_map=0) (stream_write_total_data=0) (stream_read_close_operations=1) (store_io_retry=0) (stream_read_seek_forward_operations=0) (committer_load_single_pending_file=0) (delegation_tokens_issued.failures=0) (object_delete_objects=0) (op_glob_status.failures=0) (files_delete_rejected=0) (committer_load_single_pending_file.failures=0) (op_get_file_checksum.failures=0) (stream_read_fully_operations=0) (files_copied_bytes=0) (stream_aborted=0) (op_delete=0) (object_list_request.failures=0) (committer_tasks_failed=0) (multipart_upload_completed=0) (committer_stage_file_upload.failures=0) (stream_read_seek_policy_changed=1) (op_xattr_get_map.failures=0) (object_put_bytes=0) (committer_bytes_committed=0) (op_createfile.failures=0) (fake_directories_created=0) (stream_write_exceptions_completing_upload=0) (op_get_file_status.failures=0) (multipart_upload_part_put_bytes=0) (audit_access_check_failure=0) (stream_read_seek_backward_operations=0) (stream_write_queue_duration=0) (op_list_status.failures=0) (op_get_delegation_token.failures=0) (op_open=1) (op_xattr_get_named_map=0) (store_io_request=1) (committer_bytes_uploaded=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_operations=0) (committer_materialize_file.failures=0) (op_copy_from_local_file.failures=0) (op_copy_from_local_file=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (files_deleted=0) (audit_failure=0) (committer_tasks_completed=0) (object_list_request=0) (object_delete_request.failures=0) (files_created=0) (object_delete_request=0) (committer_commits_aborted=0) (object_bulk_delete_request=0) (stream_write_block_uploads_aborted=0) (committer_commits.failures=0) (stream_read_exceptions=0) (object_multipart_aborted=0) (store_exists_probe=0) (op_mkdirs.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (committer_commits_created=0) (fake_directories_deleted=0) (op_mkdirs=0) (action_http_head_request=1) (action_executor_acquired=0) (op_create.failures=0) (op_exists.failures=0) (action_http_head_request.failures=0) (op_is_file=0) (multipart_upload_abort_under_path_invoked=0) (op_rename.failures=0) (op_is_directory.failures=0) (object_bulk_delete_request.failures=0) (object_metadata_request=1) (op_xattr_get_named_map.failures=0) (op_rename=0) (stream_read_vectored_combined_ranges=0) (multipart_upload_started=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((op_list_files.min=-1) (action_http_get_request.min=-1) (op_access.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.min=-1) (stream_write_queue_duration.min=-1) (op_exists.min=-1) (op_delete.min=-1) (op_is_directory.min=-1) (committer_commit_job.min=-1) (object_list_request.min=-1) (action_http_get_request.failures.min=-1) (op_create.min=-1) (op_get_file_status.min=-1) (op_get_delegation_token.failures.min=-1) (object_put_request.min=-1) (action_http_head_request.min=7) (object_multipart_initiated.failures.min=-1) (op_mkdirs.failures.min=-1) (op_exists.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_delete_request.failures.min=-1) (op_rename.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_delete.failures.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_content_summary.min=-1) (committer_magic_marker_put.failures.min=-1) (op_mkdirs.min=-1) (action_file_opened.min=8) (op_get_file_checksum.failures.min=-1) (op_is_file.min=-1) (object_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (op_copy_from_local_file.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.failures.min=-1) (action_file_opened.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.min=-1) (op_list_status.failures.min=-1) (op_is_directory.failures.min=-1) (store_exists_probe.min=-1) (stream_write_queue_duration.failures.min=-1) (op_glob_status.min=-1) (op_xattr_list.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (object_put_request.failures.min=-1) (object_delete_request.min=-1) (committer_materialize_file.min=-1) (op_copy_from_local_file.min=-1) (op_list_files.failures.min=-1) (delegation_tokens_issued.min=-1) (object_continue_list_request.min=-1) (multipart_upload_list.min=-1) (op_abort.failures.min=-1) (op_xattr_get_map.min=-1) (op_list_status.min=-1) (op_rename.failures.min=-1) (op_abort.min=-1) (op_create.failures.min=-1) (op_xattr_list.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.failures.min=-1));
maximums=((op_get_delegation_token.failures.max=-1) (op_get_file_status.failures.max=-1) (op_delete.failures.max=-1) (op_mkdirs.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_create.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (op_is_directory.max=-1) (object_bulk_delete_request.failures.max=-1) (op_rename.failures.max=-1) (op_abort.failures.max=-1) (action_http_get_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.max=-1) (action_file_opened.max=8) (object_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (op_is_file.max=-1) (object_put_request.failures.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_drain.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.failures.max=-1) (action_executor_acquired.max=-1) (op_access.max=-1) (op_get_content_summary.max=-1) (op_is_directory.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.max=-1) (op_createfile.failures.max=-1) (object_delete_request.max=-1) (object_multipart_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_bulk_delete_request.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_exists.max=-1) (object_put_request.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.max=-1) (delegation_tokens_issued.max=-1) (object_list_request.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_list.max=-1) (committer_commit_job.failures.max=-1) (op_abort.max=-1) (op_list_status.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_files.failures.max=-1) (action_file_opened.failures.max=-1) (op_glob_status.failures.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.max=7) (op_xattr_get_named_map.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_checksum.failures.max=-1) (multipart_upload_list.max=-1) (committer_load_single_pending_file.max=-1) (op_create.max=-1) (op_xattr_list.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.max=-1) (op_access.failures.max=-1) (op_list_files.max=-1) (op_rename.max=-1) (op_exists.failures.max=-1));
means=((stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=7, mean=7.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:05,147 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:05,147 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,147 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:05,147 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=179&ts=1731778445147
2024-11-16 17:34:05,151 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,151 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,151 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=179&ts=1731778445147
2024-11-16 17:34:05,159 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:05,159 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:05,159 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:05,159 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:05,159 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:05,159 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:05,159 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:05,159 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:05,159 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:05,159 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:05,159 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:05,159 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:05,160 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:05,160 [s3a-transfer-obs-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:05,160 [s3a-transfer-obs-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,160 [s3a-transfer-obs-bucket-unbounded-pool2-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=181&ts=1731778445147
2024-11-16 17:34:05,167 [s3a-transfer-obs-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:05,167 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:34:05,168 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:05,168 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:05,168 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:05,168 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778445106; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:05,168 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:05,168 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:05,169 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:05,169 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:05,169 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:05,169 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:05,169 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:05,169 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:05,169 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:05,169 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:05,169 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:05,169 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:05,170 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=45&ts=1731778445147
2024-11-16 17:34:05,189 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.020s
2024-11-16 17:34:05,189 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.020s
2024-11-16 17:34:05,189 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.020s
2024-11-16 17:34:05,189 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:05,189 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:05,190 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:05,190 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:05,190 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:05,190 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:05,190 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000121&t0=179&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=45&ts=1731778445147
2024-11-16 17:34:05,207 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:34:05,207 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:34:05,207 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.018s
2024-11-16 17:34:05,207 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.038s
2024-11-16 17:34:05,207 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.038s
2024-11-16 17:34:05,207 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.048s
2024-11-16 17:34:05,208 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:05,208 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:05,217 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:05,228 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 31, active threads = 0, queued tasks = 0, completed tasks = 31], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_aborted=0) (files_delete_rejected=0) (committer_stage_file_upload.failures=0) (stream_read_bytes_discarded_in_abort=0) (ignored_errors=0) (op_is_file.failures=0) (committer_jobs_completed=0) (committer_load_single_pending_file=0) (object_bulk_delete_request.failures=0) (op_get_file_checksum=0) (object_copy_requests=0) (stream_read_close_operations=20) (committer_commits_aborted=0) (fake_directories_deleted=25) (delegation_tokens_issued=0) (audit_failure=0) (object_list_request.failures=0) (stream_read_remote_stream_drain=3) (committer_commit_job.failures=0) (object_delete_objects=50) (op_rename.failures=0) (object_multipart_initiated.failures=0) (fake_directories_created=0) (committer_commits_created=0) (committer_commits_completed=0) (op_glob_status=0) (action_http_get_request=22) (stream_read_seek_forward_operations=0) (committer_magic_marker_put.failures=0) (committer_tasks_failed=0) (op_copy_from_local_file=0) (op_openfile=0) (directories_deleted=0) (stream_read_remote_stream_aborted.failures=0) (object_put_bytes=1638400) (multipart_upload_list=0) (object_continue_list_request=0) (committer_stage_file_upload=0) (op_xattr_get_named=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_read_bytes=6663) (object_multipart_initiated=0) (op_access.failures=0) (stream_read_vectored_combined_ranges=21) (action_file_opened=20) (stream_read_vectored_incoming_ranges=50) (object_put_request.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (op_create.failures=0) (op_createfile=0) (op_exists.failures=0) (object_delete_request.failures=0) (op_createfile.failures=0) (object_list_request=100) (op_is_file=0) (object_bulk_delete_request=50) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_started=0) (multipart_upload_part_put_bytes=0) (op_abort=0) (op_get_content_summary.failures=0) (action_file_opened.failures=0) (op_xattr_get_map.failures=0) (op_mkdirs.failures=0) (store_exists_probe.failures=0) (stream_read_fully_operations=1) (audit_request_execution=292) (action_http_head_request.failures=0) (op_access=0) (op_create=25) (op_delete=25) (directories_created=25) (op_hflush=0) (op_get_delegation_token=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request.failures=0) (op_list_located_status=0) (op_rename=0) (files_deleted=25) (stream_write_bytes=1638400) (stream_read_seek_policy_changed=21) (stream_read_seek_operations=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_map=0) (op_list_files.failures=0) (object_metadata_request=70) (stream_read_operations_incomplete=0) (multipart_upload_list.failures=0) (audit_access_check_failure=0) (op_xattr_get_named.failures=0) (stream_read_vectored_operations=16) (stream_read_total_bytes=202671) (store_exists_probe=0) (action_http_head_request=70) (op_abort.failures=0) (stream_write_total_data=3276800) (op_get_content_summary=0) (delegation_tokens_issued.failures=0) (multipart_instantiated=0) (store_io_retry=0) (stream_read_exceptions=0) (files_created=25) (stream_read_opened=3) (op_create_non_recursive=0) (op_xattr_get_named_map=0) (committer_materialize_file.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (committer_bytes_uploaded=0) (committer_commit_job=0) (stream_write_queue_duration.failures=0) (op_get_file_status=1) (multipart_upload_part_put=0) (multipart_upload_abort_under_path_invoked=0) (store_io_throttled=0) (op_list_status=0) (object_multipart_aborted=0) (committer_bytes_committed=0) (stream_read_operations=3) (object_delete_request=0) (op_copy_from_local_file.failures=0) (op_glob_status.failures=0) (object_put_request=50) (stream_write_total_time=0) (committer_tasks_completed=0) (object_put_request_completed=50) (stream_write_block_uploads=25) (files_copied_bytes=0) (op_open=20) (action_executor_acquired.failures=0) (committer_magic_files_created=0) (committer_commits.failures=0) (stream_read_vectored_read_bytes_discarded=24523) (op_is_directory=0) (files_copied=0) (stream_read_bytes_discarded_in_close=196008) (committer_commits_reverted=0) (stream_aborted=0) (op_exists=0) (committer_load_single_pending_file.failures=0) (op_xattr_get_named_map.failures=0) (object_continue_list_request.failures=0) (store_io_request=292) (audit_span_creation=97) (multipart_upload_completed=0) (op_hsync=0) (op_mkdirs=25) (stream_write_block_uploads_committed=0) (stream_write_exceptions_completing_upload=0) (stream_read_version_mismatches=0) (op_is_directory.failures=0) (committer_jobs_failed=0) (op_get_file_status.failures=0) (op_get_delegation_token.failures=0) (op_delete.failures=0) (op_xattr_list=0) (stream_read_unbuffered=1) (op_list_files=0) (stream_read_closed=3) (op_list_status.failures=0) (stream_write_queue_duration=0) (committer_materialize_file=0) (object_select_requests=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list.failures=0) (op_get_file_checksum.failures=0));
gauges=((stream_write_block_uploads_pending=25) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((op_createfile.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_commit_job.min=-1) (action_http_head_request.failures.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.failures.min=-1) (op_glob_status.min=-1) (object_delete_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_list.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_rename.failures.min=-1) (action_http_head_request.min=3) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_delete_request.min=-1) (op_get_file_status.failures.min=-1) (op_access.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=73) (op_is_file.min=-1) (stream_read_remote_stream_drain.min=1) (op_delete.failures.min=-1) (object_multipart_aborted.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_abort.failures.min=-1) (op_rename.min=-1) (op_createfile.min=-1) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.min=12) (delegation_tokens_issued.min=-1) (op_mkdirs.min=32) (op_copy_from_local_file.failures.min=-1) (op_is_file.failures.min=-1) (op_abort.min=-1) (op_xattr_get_named.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=19) (op_get_file_checksum.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_status.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_aborted.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_content_summary.min=-1) (object_list_request.min=6) (object_list_request.failures.min=-1) (op_delete.min=43) (op_glob_status.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.min=9) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_delegation_token.min=-1) (op_access.failures.min=-1) (op_list_files.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_exists.min=-1) (committer_materialize_file.min=-1) (multipart_upload_list.min=-1) (op_create.min=9) (store_exists_probe.failures.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_directory.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_create.failures.min=-1));
maximums=((action_http_head_request.failures.max=-1) (op_glob_status.failures.max=-1) (action_executor_acquired.max=-1) (committer_commit_job.max=-1) (object_bulk_delete_request.max=38) (op_mkdirs.failures.max=-1) (store_exists_probe.max=-1) (op_is_file.max=-1) (op_xattr_get_named.max=-1) (op_get_file_status.max=9) (committer_load_single_pending_file.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_status.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.max=-1) (op_get_content_summary.max=-1) (multipart_upload_list.failures.max=-1) (op_abort.max=-1) (object_list_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_delete.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_file_opened.max=18) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.max=-1) (op_access.max=-1) (op_xattr_get_map.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (op_access.failures.max=-1) (op_glob_status.max=-1) (committer_materialize_file.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_directory.max=-1) (op_is_file.failures.max=-1) (object_put_request.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_aborted.max=-1) (action_http_head_request.max=17) (op_rename.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_mkdirs.max=395) (stream_read_remote_stream_drain.max=1) (committer_stage_file_upload.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=63) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_exists.max=-1) (op_xattr_get_map.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.failures.max=-1) (object_put_request.max=132) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_rename.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.max=243) (op_list_files.failures.max=-1) (action_http_get_request.max=95) (op_get_file_checksum.max=-1) (op_list_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_delete.max=101) (op_is_directory.failures.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_delete_request.max=-1) (op_list_files.max=-1) (op_xattr_list.max=-1));
means=((op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=70, sum=535, mean=7.6429)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=50, sum=1025, mean=20.5000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=25, sum=491, mean=19.6400)) (object_list_request.mean=(samples=100, sum=1557, mean=15.5700)) (object_put_request.mean=(samples=50, sum=2876, mean=57.5200)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=25, sum=1680, mean=67.2000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=25, sum=1917, mean=76.6800)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=173, mean=8.6500)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=729, mean=33.1364)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:05,228 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:05,228 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:05,228 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,229 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,229 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,229 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000122 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000122&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=182&ts=1731778445228
2024-11-16 17:34:05,235 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:05,235 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:05,236 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:05,236 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,236 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:05,236 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000122 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000122&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=182&ts=1731778445228
2024-11-16 17:34:05,239 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:05,240 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:05,240 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:05,240 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:05,240 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000122 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000122&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=182&ts=1731778445228
2024-11-16 17:34:05,259 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:05,259 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:05,259 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.019s
2024-11-16 17:34:05,259 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:05,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:05,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,260 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,260 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000123 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000123&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=182&ts=1731778445260
2024-11-16 17:34:05,266 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:05,266 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,266 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:05,267 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3986414592594732323.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:05,267 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3986414592594732323.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_total_time=0) (op_hflush=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_block_uploads=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (object_put_request=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3986414592594732323.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,268 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:05,268 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:05,268 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3986414592594732323.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:05,268 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:05,268 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:05,268 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:05,268 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:05,268 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000123 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000123&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=47&ts=1731778445260
2024-11-16 17:34:05,314 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:05,314 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:05,314 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.046s
2024-11-16 17:34:05,314 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3986414592594732323.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:05,314 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3986414592594732323.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,314 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3986414592594732323.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,314 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:05,315 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:05,317 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (object_put_request=1) (stream_write_total_data=65536) (multipart_upload_part_put=0) (op_hflush=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (op_hsync=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (op_abort=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (object_put_request.min=46) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=46) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=46, mean=46.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:05,318 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:05,319 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:05,319 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,319 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:05,319 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000124 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000124/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000124&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=182&ts=1731778445319
2024-11-16 17:34:05,325 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:05,325 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:05,326 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,326 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:05,326 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:05,326 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:05,326 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,326 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,326 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:05,326 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [49] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000124 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000124/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000124&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=49&ts=1731778445319
2024-11-16 17:34:05,327 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:05,327 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=0) (stream_read_block_read=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_operations=0) (stream_aborted=0) (stream_read_remote_stream_aborted=0) (action_file_opened=1) (stream_read_prefetch_operations.failures=0) (stream_read_version_mismatches=0) (stream_read_fully_operations=0) (action_http_get_request=1) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired=0) (stream_read_block_acquire_read=0) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (action_executor_acquired.failures=0) (stream_read_bytes=0) (stream_read_block_read.failures=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_read_operations=0) (stream_read_vectored_operations=1) (stream_read_vectored_incoming_ranges=2) (stream_read_seek_policy_changed=1) (stream_read_vectored_combined_ranges=1) (stream_read_closed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1) (stream_read_opened=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_prefetch_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=6) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=6) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:05,344 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:34:05,344 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1055)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:34:05,344 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,345 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:05,345 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,345 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:05,346 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000125 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000125&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=182&ts=1731778445345
2024-11-16 17:34:05,350 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:05,350 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:05,350 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,351 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:05,351 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:05,351 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:05,351 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,351 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,351 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:05,351 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [50] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000125 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000125&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=50&ts=1731778445345
2024-11-16 17:34:05,352 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:05,364 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:34:05,364 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:34:05,364 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,365 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request=1) (stream_read_vectored_combined_ranges=1) (stream_read_seek_policy_changed=1) (stream_read_closed=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=1) (stream_read_seek_operations=0) (stream_read_prefetch_operations=0) (stream_read_block_read.failures=0) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=2) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (stream_read_block_read=0) (stream_read_total_bytes=150) (stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_bytes_discarded_in_close=0) (stream_aborted=0) (stream_read_bytes=150) (stream_read_remote_stream_aborted=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (stream_read_remote_stream_drain=0) (stream_read_opened=0) (stream_read_vectored_operations=1));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=13) (stream_read_prefetch_operations.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_file_opened.max=5) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=13) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=13, mean=13.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:05,366 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:05,367 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,367 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:05,367 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=182&ts=1731778445366
2024-11-16 17:34:05,372 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,372 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,372 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=182&ts=1731778445366
2024-11-16 17:34:05,380 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:05,381 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:05,381 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:05,381 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:05,381 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:05,381 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:05,381 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:05,381 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:05,381 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:05,381 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:05,382 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:05,382 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:05,382 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:05,382 [s3a-transfer-obs-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:05,382 [s3a-transfer-obs-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,382 [s3a-transfer-obs-bucket-unbounded-pool2-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [183] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=183&ts=1731778445366
2024-11-16 17:34:05,395 [s3a-transfer-obs-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:34:05,396 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:34:05,396 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:05,397 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:05,397 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:05,397 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778445307; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:05,398 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:05,398 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:05,398 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:05,399 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:05,399 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:05,399 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:05,399 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:05,399 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:05,399 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:05,399 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:05,399 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:05,400 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=51&ts=1731778445366
2024-11-16 17:34:05,401 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:05,417 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:34:05,417 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:34:05,417 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.018s
2024-11-16 17:34:05,417 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:05,417 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:05,417 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:05,417 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:05,417 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:05,417 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:05,418 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000126&t0=182&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=51&ts=1731778445366
2024-11-16 17:34:05,430 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:34:05,430 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:34:05,430 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:34:05,430 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:34:05,430 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.029s
2024-11-16 17:34:05,431 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.050s
2024-11-16 17:34:05,431 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:05,431 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:05,432 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:05,447 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 32, active threads = 0, queued tasks = 0, completed tasks = 32], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_discarded=0) (object_multipart_initiated=0) (op_get_delegation_token=0) (stream_read_operations_incomplete=0) (stream_read_seek_policy_changed=23) (committer_stage_file_upload=0) (committer_load_single_pending_file=0) (files_delete_rejected=0) (multipart_upload_list.failures=0) (committer_bytes_committed=0) (op_list_status.failures=0) (multipart_upload_part_put_bytes=0) (object_multipart_aborted.failures=0) (object_put_bytes=1703936) (op_exists=0) (stream_write_exceptions_completing_upload=0) (object_continue_list_request=0) (fake_directories_created=0) (committer_commits_completed=0) (op_get_file_status.failures=0) (op_get_file_status=1) (stream_read_remote_stream_aborted.failures=0) (op_createfile=0) (stream_write_queue_duration.failures=0) (op_access=0) (stream_read_exceptions=0) (stream_read_unbuffered=1) (ignored_errors=0) (op_xattr_get_named_map=0) (op_rename.failures=0) (object_multipart_initiated.failures=0) (object_delete_objects=52) (files_copied_bytes=0) (delegation_tokens_issued=0) (op_is_file=0) (stream_read_bytes_discarded_in_abort=0) (committer_commits_aborted=0) (op_get_content_summary=0) (object_list_request.failures=0) (object_list_request=104) (store_io_request=306) (stream_aborted=0) (action_http_get_request.failures=0) (op_xattr_get_map.failures=0) (object_bulk_delete_request.failures=0) (op_get_file_checksum=0) (multipart_upload_aborted=0) (op_get_delegation_token.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_read_opened=3) (op_list_located_status=0) (op_create.failures=0) (op_hsync=0) (audit_span_creation=102) (op_get_content_summary.failures=0) (stream_read_vectored_operations=18) (op_glob_status.failures=0) (op_is_directory.failures=0) (committer_jobs_failed=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_list_files=0) (object_delete_request=0) (directories_deleted=0) (op_xattr_get_map=0) (object_put_request_completed=52) (committer_stage_file_upload.failures=0) (directories_created=26) (stream_write_block_uploads=26) (stream_write_block_uploads_committed=0) (op_access.failures=0) (delegation_tokens_issued.failures=0) (stream_read_vectored_combined_ranges=23) (fake_directories_deleted=26) (stream_read_seek_backward_operations=0) (committer_bytes_uploaded=0) (op_abort.failures=0) (store_io_throttled=0) (stream_write_total_time=0) (files_copied=0) (committer_tasks_completed=0) (action_executor_acquired.failures=0) (files_created=26) (op_xattr_list=0) (action_http_head_request.failures=0) (op_delete=26) (op_copy_from_local_file.failures=0) (stream_read_vectored_read_bytes_discarded=24533) (object_put_request.failures=0) (stream_read_fully_operations=1) (multipart_upload_part_put=0) (stream_read_seek_operations=0) (object_continue_list_request.failures=0) (op_delete.failures=0) (op_mkdirs=26) (object_metadata_request=74) (stream_write_exceptions=0) (op_hflush=0) (stream_read_seek_forward_operations=0) (object_bulk_delete_request=52) (committer_commits_reverted=0) (audit_failure=0) (action_executor_acquired=0) (store_exists_probe=0) (stream_write_queue_duration=0) (op_list_status=0) (multipart_upload_list=0) (files_deleted=26) (committer_commits_created=0) (object_multipart_aborted=0) (multipart_upload_abort_under_path_invoked=0) (op_is_directory=0) (stream_read_total_bytes=202821) (committer_materialize_file=0) (stream_read_seek_bytes_skipped=0) (object_delete_request.failures=0) (committer_load_single_pending_file.failures=0) (audit_access_check_failure=0) (stream_read_vectored_incoming_ranges=54) (committer_jobs_completed=0) (op_glob_status=0) (object_select_requests=0) (op_xattr_get_named.failures=0) (op_xattr_list.failures=0) (committer_commit_job.failures=0) (action_http_head_request=74) (object_put_request=52) (op_xattr_get_named=0) (committer_magic_files_created=0) (op_abort=0) (stream_read_version_mismatches=0) (stream_read_close_operations=22) (stream_write_bytes=1703936) (op_mkdirs.failures=0) (stream_read_operations=3) (op_open=22) (committer_magic_marker_put.failures=0) (op_create=26) (stream_read_remote_stream_drain=3) (op_exists.failures=0) (stream_read_bytes=6813) (action_http_get_request=24) (committer_commits.failures=0) (stream_read_closed=3) (committer_tasks_failed=0) (audit_request_execution=306) (op_xattr_get_named_map.failures=0) (committer_commit_job=0) (stream_write_block_uploads_aborted=0) (op_createfile.failures=0) (op_get_file_checksum.failures=0) (op_is_file.failures=0) (multipart_upload_completed=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=22) (op_openfile=0) (op_list_files.failures=0) (multipart_upload_started=0) (store_io_retry=0) (op_create_non_recursive=0) (op_copy_from_local_file=0) (object_copy_requests=0) (multipart_instantiated=0) (store_exists_probe.failures=0) (stream_write_total_data=3407872) (op_rename=0) (committer_materialize_file.failures=0) (committer_magic_marker_put=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_write_block_uploads_pending=26) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0));
minimums=((committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.min=6) (committer_magic_marker_put.min=-1) (op_delete.min=43) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.min=-1) (op_rename.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_list.min=-1) (stream_write_queue_duration.min=-1) (committer_load_single_pending_file.failures.min=-1) (store_exists_probe.min=-1) (object_put_request.failures.min=-1) (op_access.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.min=5) (delegation_tokens_issued.min=-1) (action_http_head_request.min=3) (object_bulk_delete_request.min=12) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_list_files.min=-1) (op_create.failures.min=-1) (action_http_get_request.min=13) (op_xattr_get_named.failures.min=-1) (op_access.failures.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_create.min=7) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.failures.min=-1) (op_list_files.failures.min=-1) (op_get_file_checksum.min=-1) (object_delete_request.failures.min=-1) (op_rename.failures.min=-1) (op_list_status.min=-1) (op_createfile.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.min=-1) (op_is_file.failures.min=-1) (op_is_file.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.min=46) (stream_read_remote_stream_aborted.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_map.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (action_http_head_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.min=32) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.min=-1) (object_delete_request.min=-1) (op_xattr_list.failures.min=-1) (object_continue_list_request.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.min=9) (op_glob_status.failures.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.min=-1) (op_list_status.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.failures.min=-1) (op_createfile.failures.min=-1) (op_delete.failures.min=-1) (committer_load_single_pending_file.min=-1));
maximums=((op_get_file_checksum.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (op_rename.failures.max=-1) (op_list_files.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_map.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=38) (action_http_get_request.failures.max=-1) (op_is_directory.failures.max=-1) (action_http_get_request.max=95) (op_copy_from_local_file.failures.max=-1) (committer_magic_marker_put.max=-1) (store_exists_probe.max=-1) (multipart_upload_list.max=-1) (op_list_files.max=-1) (object_multipart_aborted.max=-1) (op_get_file_status.max=9) (op_createfile.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_abort.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.max=17) (op_create.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=132) (object_list_request.max=243) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_is_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_status.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (op_create.max=63) (op_xattr_list.failures.max=-1) (object_delete_request.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_aborted.max=-1) (multipart_upload_list.failures.max=-1) (object_continue_list_request.max=-1) (op_glob_status.failures.max=-1) (op_access.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_delete.failures.max=-1) (op_copy_from_local_file.max=-1) (action_file_opened.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.max=-1) (op_delete.max=101) (op_xattr_get_named.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named.failures.max=-1) (op_mkdirs.max=395) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.failures.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_get_content_summary.max=-1) (op_xattr_get_map.failures.max=-1) (committer_commit_job.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.failures.max=-1) (op_exists.failures.max=-1) (object_put_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.max=-1) (action_file_opened.max=18) (op_get_file_checksum.max=-1) (op_access.failures.max=-1) (object_list_request.failures.max=-1) (op_get_delegation_token.max=-1) (op_exists.max=-1) (op_mkdirs.failures.max=-1));
means=((multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=26, sum=498, mean=19.1538)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=23, sum=742, mean=32.2609)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=104, sum=1590, mean=15.2885)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=74, sum=554, mean=7.4865)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=26, sum=1949, mean=74.9615)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=52, sum=2941, mean=56.5577)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=52, sum=1055, mean=20.2885)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=22, sum=184, mean=8.3636)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=26, sum=1730, mean=66.5385)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:05,448 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:05,448 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:05,448 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,448 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,448 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,448 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000127 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000127&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=184&ts=1731778445448
2024-11-16 17:34:05,455 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:05,456 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:05,456 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:05,456 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,456 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:05,456 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000127 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000127&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=184&ts=1731778445448
2024-11-16 17:34:05,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:05,460 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:05,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:05,461 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:05,461 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000127 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000127&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=184&ts=1731778445448
2024-11-16 17:34:05,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:05,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:05,494 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.034s
2024-11-16 17:34:05,494 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:05,495 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:05,495 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,495 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,495 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,496 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000128 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000128&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=184&ts=1731778445495
2024-11-16 17:34:05,503 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:05,503 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,504 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:05,504 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16460168334605010114.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:05,505 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16460168334605010114.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired.failures=0) (object_put_request=0) (multipart_upload_part_put=0) (op_hsync=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_total_data=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (op_abort.failures=0) (op_abort=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16460168334605010114.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,505 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:05,505 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:05,506 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16460168334605010114.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:05,506 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:05,506 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:05,506 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:05,506 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:05,506 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000128 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000128&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=53&ts=1731778445495
2024-11-16 17:34:05,607 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:05,607 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:05,607 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.101s
2024-11-16 17:34:05,607 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16460168334605010114.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:05,607 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16460168334605010114.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,607 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16460168334605010114.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,607 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:05,608 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:05,609 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (op_hflush=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (op_abort=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (op_hsync=0) (stream_write_total_time=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (object_put_request=1) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=101) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_put_request.max=101) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=101, mean=101.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:05,610 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:05,614 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:05,614 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,615 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:05,615 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000129 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000129&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=184&ts=1731778445614
2024-11-16 17:34:05,624 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:05,625 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:05,625 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,625 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:05,625 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:05,626 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:05,626 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:05,626 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,626 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:34:05,626 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,627 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((stream_read_total_bytes=0) (stream_read_vectored_combined_ranges=1) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted=0) (stream_read_operations=0) (action_http_get_request=0) (stream_read_bytes=0) (stream_aborted=0) (stream_read_block_acquire_read.failures=0) (action_file_opened=1) (stream_read_vectored_operations=1) (action_executor_acquired=0) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=1) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_read=0) (action_file_opened.failures=0) (stream_read_closed=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_incoming_ranges=2) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (stream_read_close_operations=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_file_opened.min=11) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((action_file_opened.max=11) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:05,627 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:34:05,627 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:05,627 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,628 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:05,628 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:05,628 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:05,628 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,628 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,628 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:05,628 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000129 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000129&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=63&ts=1731778445614
2024-11-16 17:34:05,656 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.028s
2024-11-16 17:34:05,656 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:34:05,656 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,657 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain.failures=0) (stream_read_fully_operations=0) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_read_block_acquire_read.failures=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (stream_read_seek_forward_operations=0) (stream_read_block_read=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=2) (stream_read_prefetch_operations.failures=0) (stream_read_exceptions=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=10) (stream_aborted=0) (stream_read_unbuffered=1) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=2) (stream_read_opened=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=150) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=2) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=1) (stream_read_total_bytes=150) (stream_read_prefetch_operations=0) (action_http_get_request=1) (stream_read_vectored_incoming_ranges=4) (stream_read_remote_stream_drain=0) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=1));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=11) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=28) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (action_http_get_request.max=28) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=11) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=28, mean=28.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:05,657 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:05,657 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,658 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:05,658 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=184&ts=1731778445657
2024-11-16 17:34:05,663 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,663 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,663 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=184&ts=1731778445657
2024-11-16 17:34:05,676 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:34:05,677 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:05,677 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:05,677 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:05,677 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:05,677 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:05,677 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:05,677 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:05,677 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:05,677 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:05,677 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:05,677 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:05,678 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:05,678 [s3a-transfer-obs-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:05,678 [s3a-transfer-obs-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,678 [s3a-transfer-obs-bucket-unbounded-pool2-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [185] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=185&ts=1731778445657
2024-11-16 17:34:05,698 [s3a-transfer-obs-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.020s
2024-11-16 17:34:05,698 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.020s
2024-11-16 17:34:05,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:05,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:05,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:05,699 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778445587; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:05,699 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:05,699 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:05,699 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:05,699 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:05,699 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:05,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:05,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:05,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:05,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:05,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:05,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:05,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:05,700 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=65&ts=1731778445657
2024-11-16 17:34:05,717 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:34:05,717 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:34:05,718 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.019s
2024-11-16 17:34:05,718 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:05,718 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:05,718 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:05,718 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:05,718 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:05,718 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:05,718 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000130&t0=184&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=65&ts=1731778445657
2024-11-16 17:34:05,737 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.019s
2024-11-16 17:34:05,737 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:34:05,737 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.019s
2024-11-16 17:34:05,737 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.038s
2024-11-16 17:34:05,737 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.038s
2024-11-16 17:34:05,737 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.060s
2024-11-16 17:34:05,738 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:05,738 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:05,739 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:05,750 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 33, active threads = 0, queued tasks = 0, completed tasks = 33], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_materialize_file.failures=0) (directories_created=27) (op_is_directory=0) (committer_bytes_committed=0) (stream_read_bytes_discarded_in_close=196008) (committer_commits_aborted=0) (files_delete_rejected=0) (stream_write_total_data=3538944) (op_copy_from_local_file=0) (audit_failure=0) (op_openfile=0) (op_delete.failures=0) (op_get_content_summary.failures=0) (op_xattr_list=0) (object_delete_request.failures=0) (object_multipart_aborted.failures=0) (object_select_requests=0) (op_is_directory.failures=0) (op_glob_status=0) (action_file_opened.failures=0) (stream_read_seek_policy_changed=25) (multipart_upload_list.failures=0) (store_io_request=318) (op_create_non_recursive=0) (op_createfile.failures=0) (committer_magic_marker_put.failures=0) (object_metadata_request=77) (op_create.failures=0) (op_xattr_get_map.failures=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (stream_read_version_mismatches=0) (op_get_content_summary=0) (committer_magic_marker_put=0) (op_access.failures=0) (committer_materialize_file=0) (op_abort.failures=0) (op_is_file=0) (stream_read_close_operations=23) (stream_read_vectored_combined_ranges=25) (op_get_file_checksum=0) (op_createfile=0) (op_copy_from_local_file.failures=0) (files_copied_bytes=0) (op_rename=0) (multipart_upload_part_put=0) (committer_commits_reverted=0) (audit_span_creation=106) (stream_read_remote_stream_drain=3) (stream_read_vectored_incoming_ranges=58) (op_hflush=0) (object_bulk_delete_request.failures=0) (op_list_located_status=0) (object_bulk_delete_request=54) (committer_tasks_completed=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (audit_access_check_failure=0) (files_deleted=27) (fake_directories_deleted=27) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_map=0) (stream_read_seek_operations=0) (committer_bytes_uploaded=0) (stream_read_bytes=6963) (committer_commit_job=0) (fake_directories_created=0) (object_multipart_initiated.failures=0) (committer_stage_file_upload=0) (stream_read_opened=3) (stream_write_bytes=1769472) (op_delete=27) (op_get_file_checksum.failures=0) (object_put_request.failures=0) (committer_jobs_failed=0) (action_http_head_request.failures=0) (multipart_instantiated=0) (object_continue_list_request.failures=0) (op_get_delegation_token=0) (action_http_head_request=77) (committer_commits_completed=0) (committer_commit_job.failures=0) (op_xattr_get_named_map=0) (committer_stage_file_upload.failures=0) (committer_commits.failures=0) (stream_write_total_time=0) (op_list_files=0) (store_io_throttled=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_get_file_status=1) (multipart_upload_aborted=0) (op_glob_status.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named_map.failures=0) (store_exists_probe=0) (object_list_request.failures=0) (store_io_retry=0) (stream_read_vectored_operations=20) (op_open=23) (audit_request_execution=318) (op_exists=0) (committer_load_single_pending_file.failures=0) (object_put_request_completed=54) (stream_read_closed=3) (action_http_get_request=25) (stream_write_queue_duration=0) (op_list_files.failures=0) (object_list_request=108) (stream_write_exceptions=0) (op_create=27) (stream_write_exceptions_completing_upload=0) (stream_read_unbuffered=2) (committer_tasks_failed=0) (files_copied=0) (op_list_status=0) (committer_jobs_completed=0) (stream_read_total_bytes=202971) (multipart_upload_completed=0) (committer_load_single_pending_file=0) (object_multipart_aborted=0) (object_copy_requests=0) (op_mkdirs.failures=0) (stream_write_queue_duration.failures=0) (op_mkdirs=27) (stream_read_vectored_read_bytes_discarded=24543) (object_put_bytes=1769472) (stream_aborted=0) (stream_read_exceptions=0) (op_get_delegation_token.failures=0) (op_list_status.failures=0) (op_xattr_list.failures=0) (directories_deleted=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_abort_under_path_invoked=0) (action_executor_acquired=0) (stream_read_fully_operations=1) (stream_read_seek_bytes_skipped=0) (committer_magic_files_created=0) (action_file_opened=23) (files_created=27) (object_delete_request=0) (object_continue_list_request=0) (op_rename.failures=0) (stream_read_seek_backward_operations=0) (op_is_file.failures=0) (op_get_file_status.failures=0) (op_abort=0) (stream_write_block_uploads=27) (action_executor_acquired.failures=0) (op_exists.failures=0) (ignored_errors=0) (committer_commits_created=0) (op_access=0) (object_multipart_initiated=0) (op_hsync=0) (delegation_tokens_issued=0) (stream_write_block_uploads_committed=0) (store_exists_probe.failures=0) (op_xattr_get_named.failures=0) (stream_write_block_uploads_aborted=0) (multipart_upload_list=0) (delegation_tokens_issued.failures=0) (object_delete_objects=54) (object_put_request=54) (stream_read_operations=3) (multipart_upload_started=0) (op_xattr_get_named=0));
gauges=((stream_write_block_uploads_pending=27) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_copy_from_local_file.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_list_request.min=6) (op_is_directory.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_rename.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.min=101) (op_abort.min=-1) (committer_commit_job.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_drain.min=1) (object_continue_list_request.failures.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.min=11) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=3) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.min=-1) (action_executor_acquired.min=-1) (op_mkdirs.min=32) (op_xattr_list.min=-1) (op_xattr_list.failures.min=-1) (op_delete.failures.min=-1) (object_multipart_initiated.min=-1) (op_get_content_summary.failures.min=-1) (store_exists_probe.failures.min=-1) (multipart_upload_list.min=-1) (op_list_status.min=-1) (op_list_files.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.min=-1) (stream_write_queue_duration.failures.min=-1) (object_delete_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_rename.failures.min=-1) (op_list_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_is_file.min=-1) (object_put_request.failures.min=-1) (op_createfile.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.failures.min=-1) (op_create.failures.min=-1) (op_createfile.min=-1) (op_exists.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_named.min=-1) (committer_materialize_file.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_access.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.min=-1) (object_multipart_initiated.failures.min=-1) (action_file_opened.failures.min=-1) (object_bulk_delete_request.min=12) (op_get_content_summary.min=-1) (delegation_tokens_issued.failures.min=-1) (op_mkdirs.failures.min=-1) (op_exists.min=-1) (committer_load_single_pending_file.min=-1) (op_create.min=7) (op_glob_status.min=-1) (op_get_delegation_token.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_access.failures.min=-1) (op_delete.min=43) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.min=9) (action_http_get_request.min=28) (object_delete_request.min=-1));
maximums=((op_xattr_get_named_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_create.failures.max=-1) (op_copy_from_local_file.max=-1) (op_delete.failures.max=-1) (object_bulk_delete_request.max=38) (op_xattr_get_map.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_access.max=-1) (op_glob_status.max=-1) (op_xattr_get_named_map.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.max=-1) (op_createfile.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_list_status.failures.max=-1) (op_delete.max=101) (committer_magic_marker_put.max=-1) (op_is_file.failures.max=-1) (action_http_head_request.max=17) (stream_write_queue_duration.failures.max=-1) (op_is_directory.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.max=95) (delegation_tokens_issued.failures.max=-1) (object_put_request.max=132) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_delete_request.max=-1) (op_get_file_checksum.max=-1) (op_list_status.max=-1) (object_multipart_aborted.max=-1) (op_list_files.failures.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_list_request.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_create.max=63) (object_list_request.max=243) (op_copy_from_local_file.failures.max=-1) (op_rename.failures.max=-1) (op_mkdirs.max=395) (op_get_delegation_token.failures.max=-1) (op_exists.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_remote_stream_aborted.max=-1) (op_exists.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_content_summary.max=-1) (committer_commit_job.max=-1) (action_http_get_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_createfile.max=-1) (action_file_opened.failures.max=-1) (object_continue_list_request.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_status.max=9) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_directory.failures.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_list.max=-1) (op_access.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_map.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_delegation_token.max=-1) (committer_materialize_file.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_status.failures.max=-1) (action_file_opened.max=18) (op_rename.max=-1) (op_abort.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_put_request.failures.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=27, sum=1791, mean=66.3333)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=27, sum=1995, mean=73.8889)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=195, mean=8.4783)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=108, sum=1637, mean=15.1574)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=54, sum=1091, mean=20.2037)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=77, sum=572, mean=7.4286)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=54, sum=3075, mean=56.9444)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=24, sum=770, mean=32.0833)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=27, sum=507, mean=18.7778)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:05,750 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:05,751 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:05,751 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,751 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,751 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,751 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000131 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000131&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=186&ts=1731778445750
2024-11-16 17:34:05,758 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:05,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:05,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:05,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:05,759 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000131 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000131&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=186&ts=1731778445750
2024-11-16 17:34:05,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:05,763 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:05,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:05,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:05,763 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000131 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000131&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=186&ts=1731778445750
2024-11-16 17:34:05,789 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:05,789 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:05,789 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.026s
2024-11-16 17:34:05,790 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:05,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:05,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,790 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,790 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000132 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000132&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=186&ts=1731778445790
2024-11-16 17:34:05,800 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:05,801 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,801 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:05,801 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4893245110730115876.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:05,802 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4893245110730115876.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (op_abort=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (op_abort.failures=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_exceptions=0) (op_hflush=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (object_put_request=0) (stream_write_total_time=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4893245110730115876.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,803 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:05,803 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:05,803 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4893245110730115876.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:05,804 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:05,804 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:05,804 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:05,805 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:05,805 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000132 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000132&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=77&ts=1731778445790
2024-11-16 17:34:05,858 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:05,859 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:05,859 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.055s
2024-11-16 17:34:05,859 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4893245110730115876.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:05,859 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4893245110730115876.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,859 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4893245110730115876.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:05,859 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:05,859 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:05,861 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (op_abort=0) (op_hflush=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (object_put_request=1) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (op_hsync=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=53) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=53) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=53, mean=53.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:05,861 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:05,861 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:34:05,861 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:34:05,862 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:34:05,863 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:05,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:34:05,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:34:05,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:34:05,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:34:05,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:34:05,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:34:05,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:34:05,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:34:05,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:34:05,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:34:05,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='4ac1662d-0aba-4b0a-b438-4dedc9a637ab', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:34:05,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='4ac1662d-0aba-4b0a-b438-4dedc9a637ab', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:34:05,868 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='4ac1662d-0aba-4b0a-b438-4dedc9a637ab', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:34:05,868 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:34:05,868 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:34:05,868 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:34:05,868 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:34:05,872 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:34:05,874 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:34:05,874 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4ff13dae]
2024-11-16 17:34:05,874 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4ff13dae]
2024-11-16 17:34:05,874 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:34:05,874 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:34:05,877 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:34:05,877 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:34:05,877 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:34:05,877 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:34:05,881 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:34:05,881 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:34:05,881 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:34:05,881 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:34:05,881 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:34:05,882 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:34:05,886 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:34:05,887 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:34:05,887 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:34:05,888 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:34:05,888 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:34:05,888 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:34:05,888 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:34:05,888 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:34:05,888 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:34:05,888 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:34:05,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:34:05,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:34:05,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:34:05,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:34:05,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:34:05,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:34:05,890 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:05,890 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:05,890 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:05,890 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] 4ac1662d-0aba-4b0a-b438-4dedc9a637ab-00000135 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/4ac1662d-0aba-4b0a-b438-4dedc9a637ab-00000135/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=4ac1662d-0aba-4b0a-b438-4dedc9a637ab-00000135&t0=186&fs=4ac1662d-0aba-4b0a-b438-4dedc9a637ab&t1=186&ts=1731778445890
2024-11-16 17:34:05,891 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:34:05,891 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:34:05,892 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:34:05,892 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:34:05,908 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:05,909 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778445000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:34:05,915 [s3a-transfer-obs-bucket-unbounded-pool17-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:05,915 [s3a-transfer-obs-bucket-unbounded-pool17-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,915 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:34:05,916 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:05,916 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:05,916 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:34:05,916 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,916 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,916 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:05,916 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:34:05,916 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] 4ac1662d-0aba-4b0a-b438-4dedc9a637ab-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/4ac1662d-0aba-4b0a-b438-4dedc9a637ab-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=100-1099&id=4ac1662d-0aba-4b0a-b438-4dedc9a637ab-00000136&t0=188&fs=4ac1662d-0aba-4b0a-b438-4dedc9a637ab&t1=189&ts=1731778445915
2024-11-16 17:34:05,917 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:05,917 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:05,918 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:34:05,918 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,918 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:05,919 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:05,919 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [190] 4ac1662d-0aba-4b0a-b438-4dedc9a637ab-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/4ac1662d-0aba-4b0a-b438-4dedc9a637ab-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=100-1099&id=4ac1662d-0aba-4b0a-b438-4dedc9a637ab-00000136&t0=188&fs=4ac1662d-0aba-4b0a-b438-4dedc9a637ab&t1=190&ts=1731778445915
2024-11-16 17:34:05,939 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.023s
2024-11-16 17:34:05,939 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:34:05,940 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,940 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:05,942 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_close_operations=1) (stream_aborted=0) (action_executor_acquired=0) (stream_read_vectored_operations=2) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_backward_operations=0) (stream_read_operations=0) (stream_read_fully_operations=0) (stream_read_exceptions=0) (stream_read_closed=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_incoming_ranges=4) (stream_read_block_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read=0) (stream_read_seek_policy_changed=1) (stream_read_seek_bytes_skipped=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=2000) (action_file_opened=1) (stream_read_total_bytes=2000) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=2) (stream_read_unbuffered=0) (action_http_get_request=2));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=21) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=0) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=24) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=0) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=45, mean=22.5000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:05,944 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:34:05,945 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:34:05,946 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:05,946 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@431eacb9[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:34:05,946 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:05,946 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics8-obs-bucket
2024-11-16 17:34:05,946 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:34:05,947 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4ff13dae] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:05,947 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@4ff13dae] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:05,948 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_exceptions=0) (files_delete_rejected=0) (op_get_file_checksum=0) (op_delete.failures=0) (multipart_upload_list.failures=0) (stream_write_queue_duration.failures=0) (delegation_tokens_issued.failures=0) (stream_read_vectored_combined_ranges=2) (op_get_file_status=1) (stream_read_version_mismatches=0) (op_abort.failures=0) (op_xattr_get_named_map.failures=0) (store_exists_probe.failures=0) (stream_read_remote_stream_drain=0) (op_create=0) (stream_write_exceptions_completing_upload=0) (committer_load_single_pending_file.failures=0) (action_file_opened=1) (op_createfile=0) (committer_tasks_completed=0) (action_http_head_request.failures=0) (op_xattr_get_named.failures=0) (action_http_get_request.failures=0) (stream_write_total_time=0) (committer_magic_files_created=0) (committer_stage_file_upload.failures=0) (committer_load_single_pending_file=0) (op_copy_from_local_file=0) (op_access=0) (committer_bytes_uploaded=0) (committer_stage_file_upload=0) (op_rename.failures=0) (multipart_upload_part_put=0) (object_delete_request=0) (stream_read_unbuffered=0) (object_delete_objects=0) (op_xattr_list=0) (directories_deleted=0) (op_is_directory=0) (stream_read_seek_policy_changed=1) (stream_read_operations=0) (fake_directories_created=0) (stream_read_seek_operations=0) (stream_write_bytes=0) (object_bulk_delete_request.failures=0) (action_executor_acquired=0) (files_copied=0) (committer_commits_completed=0) (object_put_request=0) (stream_write_block_uploads_aborted=0) (op_glob_status=0) (committer_commits_aborted=0) (audit_request_execution=3) (object_multipart_initiated=0) (stream_read_opened=0) (object_metadata_request=1) (action_executor_acquired.failures=0) (op_get_delegation_token=0) (op_list_files=0) (op_get_content_summary=0) (op_is_file=0) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0) (op_openfile=0) (stream_write_queue_duration=0) (store_exists_probe=0) (multipart_upload_aborted=0) (committer_materialize_file.failures=0) (stream_write_block_uploads=0) (object_list_request=0) (store_io_request=3) (committer_commit_job=0) (stream_read_bytes=2000) (stream_write_exceptions=0) (multipart_upload_list=0) (stream_read_close_operations=1) (files_copied_bytes=0) (op_is_file.failures=0) (audit_access_check_failure=0) (op_xattr_get_named=0) (op_copy_from_local_file.failures=0) (op_mkdirs.failures=0) (op_get_delegation_token.failures=0) (stream_read_operations_incomplete=0) (object_multipart_initiated.failures=0) (object_list_request.failures=0) (store_io_throttled=0) (op_hsync=0) (op_is_directory.failures=0) (object_select_requests=0) (stream_read_seek_forward_operations=0) (directories_created=0) (op_abort=0) (object_put_request.failures=0) (op_exists.failures=0) (op_hflush=0) (stream_read_seek_bytes_skipped=0) (committer_bytes_committed=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (object_copy_requests=0) (op_glob_status.failures=0) (fake_directories_deleted=0) (op_get_file_checksum.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_started=0) (multipart_upload_completed=0) (op_open=1) (audit_failure=0) (op_xattr_get_map.failures=0) (stream_read_bytes_discarded_in_close=0) (committer_commits_reverted=0) (op_delete=0) (files_created=0) (op_xattr_get_named_map=0) (op_list_status=0) (action_http_get_request=2) (stream_read_total_bytes=2000) (committer_magic_marker_put=0) (op_createfile.failures=0) (object_continue_list_request.failures=0) (op_mkdirs=0) (files_deleted=0) (multipart_upload_abort_under_path_invoked=0) (action_file_opened.failures=0) (op_rename=0) (stream_read_remote_stream_aborted.failures=0) (op_exists=0) (multipart_upload_part_put_bytes=0) (op_access.failures=0) (object_put_bytes=0) (op_list_files.failures=0) (committer_commits_created=0) (committer_jobs_failed=0) (stream_read_vectored_operations=2) (stream_read_vectored_incoming_ranges=4) (committer_tasks_failed=0) (op_get_file_status.failures=0) (action_http_head_request=1) (stream_read_fully_operations=0) (committer_commits.failures=0) (op_get_content_summary.failures=0) (multipart_instantiated=0) (stream_read_closed=0) (stream_write_total_data=0) (object_multipart_aborted=0) (op_create_non_recursive=0) (committer_materialize_file=0) (op_list_located_status=0) (delegation_tokens_issued=0) (stream_write_block_uploads_committed=0) (object_delete_request.failures=0) (object_bulk_delete_request=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (ignored_errors=0) (op_xattr_get_map=0) (audit_span_creation=3) (committer_jobs_completed=0) (stream_read_remote_stream_drain.failures=0) (op_create.failures=0) (op_list_status.failures=0) (store_io_retry=0) (committer_magic_marker_put.failures=0) (object_continue_list_request=0) (committer_commit_job.failures=0) (op_xattr_list.failures=0) (object_put_request_completed=0));
gauges=((object_put_request_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0));
minimums=((op_exists.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.failures.min=-1) (op_copy_from_local_file.min=-1) (op_create.min=-1) (op_get_file_status.failures.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.min=-1) (object_bulk_delete_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_list_files.min=-1) (op_access.failures.min=-1) (committer_commit_job.min=-1) (op_list_files.failures.min=-1) (op_createfile.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_directory.failures.min=-1) (op_mkdirs.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_get_request.min=21) (op_access.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.min=-1) (object_continue_list_request.min=-1) (op_get_file_checksum.min=-1) (stream_write_queue_duration.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.failures.min=-1) (action_http_head_request.min=18) (op_xattr_list.min=-1) (op_rename.min=-1) (op_is_file.min=-1) (object_list_request.failures.min=-1) (op_is_directory.min=-1) (op_get_file_status.min=19) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=0) (op_mkdirs.min=-1) (object_delete_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_content_summary.min=-1) (committer_commit_job.failures.min=-1) (multipart_upload_list.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_checksum.failures.min=-1) (object_delete_request.min=-1) (op_list_status.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_status.min=-1) (object_put_request.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.failures.min=-1) (op_rename.failures.min=-1) (object_multipart_initiated.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_glob_status.failures.min=-1) (object_list_request.min=-1) (op_abort.min=-1));
maximums=((op_copy_from_local_file.max=-1) (op_is_file.max=-1) (op_get_file_status.max=19) (object_multipart_aborted.max=-1) (committer_load_single_pending_file.max=-1) (op_create.failures.max=-1) (op_xattr_list.max=-1) (op_delete.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_list.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=18) (op_xattr_get_named_map.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_status.failures.max=-1) (op_get_file_status.failures.max=-1) (op_list_status.max=-1) (op_glob_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.failures.max=-1) (delegation_tokens_issued.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.max=-1) (op_access.failures.max=-1) (multipart_upload_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_files.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_list.max=-1) (op_exists.failures.max=-1) (op_access.max=-1) (op_mkdirs.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=0) (committer_magic_marker_put.failures.max=-1) (committer_stage_file_upload.max=-1) (object_delete_request.max=-1) (op_delete.max=-1) (stream_read_remote_stream_drain.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.failures.max=-1) (action_http_get_request.max=24) (op_rename.max=-1) (op_createfile.failures.max=-1) (op_createfile.max=-1) (object_list_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_initiated.failures.max=-1) (object_bulk_delete_request.max=-1) (op_rename.failures.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_continue_list_request.max=-1) (object_list_request.max=-1) (store_exists_probe.max=-1) (op_is_directory.max=-1) (op_abort.failures.max=-1) (op_is_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.failures.max=-1) (object_put_request.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_exists.max=-1) (committer_materialize_file.max=-1) (op_get_delegation_token.max=-1) (action_http_get_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.max=-1) (committer_commit_job.failures.max=-1) (op_abort.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_map.failures.max=-1));
means=((op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=19, mean=19.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=45, mean=22.5000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=18, mean=18.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:05,949 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:05,949 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:05,949 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:05,949 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=186&ts=1731778445949
2024-11-16 17:34:05,954 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:05,954 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,954 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=186&ts=1731778445949
2024-11-16 17:34:05,965 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:34:05,965 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:05,966 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:05,966 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:05,966 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:05,966 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:05,966 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:05,966 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:05,967 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:05,967 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:05,967 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:05,967 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:05,967 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:05,968 [s3a-transfer-obs-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:05,968 [s3a-transfer-obs-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:05,968 [s3a-transfer-obs-bucket-unbounded-pool2-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [193] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=193&ts=1731778445949
2024-11-16 17:34:05,979 [s3a-transfer-obs-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:34:05,980 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:34:05,980 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:05,980 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:05,980 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:05,981 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778445853; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:05,981 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:05,981 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:05,981 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:05,982 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:05,982 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:05,982 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:05,982 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:05,982 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:05,982 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:05,982 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:05,982 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:05,982 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:05,982 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=79&ts=1731778445949
2024-11-16 17:34:06,006 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.024s
2024-11-16 17:34:06,006 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.024s
2024-11-16 17:34:06,007 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.025s
2024-11-16 17:34:06,007 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:06,007 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:06,007 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:06,007 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:06,007 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:06,007 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:06,007 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000137&t0=186&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=79&ts=1731778445949
2024-11-16 17:34:06,028 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:34:06,028 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.021s
2024-11-16 17:34:06,028 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.021s
2024-11-16 17:34:06,028 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.046s
2024-11-16 17:34:06,028 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.046s
2024-11-16 17:34:06,028 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.061s
2024-11-16 17:34:06,028 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:06,028 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:06,031 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:06,046 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 34, active threads = 0, queued tasks = 0, completed tasks = 34], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_get_named=0) (stream_read_seek_forward_operations=0) (store_io_throttled=0) (stream_read_remote_stream_aborted.failures=0) (committer_commits_completed=0) (op_get_delegation_token=0) (object_delete_request.failures=0) (store_io_retry=0) (stream_write_bytes=1835008) (stream_write_queue_duration=0) (store_io_request=328) (op_is_file.failures=0) (object_multipart_initiated.failures=0) (committer_commits.failures=0) (op_create_non_recursive=0) (stream_read_seek_policy_changed=25) (stream_read_bytes_backwards_on_seek=0) (store_exists_probe.failures=0) (object_select_requests=0) (op_exists.failures=0) (audit_request_execution=328) (stream_write_block_uploads=28) (committer_commit_job=0) (action_executor_acquired.failures=0) (object_put_bytes=1835008) (stream_read_vectored_operations=20) (stream_read_closed=3) (op_delete.failures=0) (committer_materialize_file.failures=0) (op_createfile.failures=0) (op_xattr_get_map=0) (op_access=0) (action_http_get_request=25) (audit_access_check_failure=0) (op_list_located_status=0) (multipart_instantiated=0) (action_http_head_request.failures=0) (op_get_content_summary=0) (op_is_directory=0) (committer_bytes_uploaded=0) (files_delete_rejected=0) (committer_commits_reverted=0) (object_bulk_delete_request.failures=0) (op_abort.failures=0) (op_hsync=0) (multipart_upload_part_put=0) (committer_materialize_file=0) (stream_read_remote_stream_drain=3) (stream_read_exceptions=0) (multipart_upload_list=0) (multipart_upload_started=0) (op_hflush=0) (stream_read_close_operations=23) (action_file_opened.failures=0) (object_delete_objects=56) (object_multipart_initiated=0) (op_is_file=0) (op_xattr_get_named.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_get_file_checksum.failures=0) (stream_write_total_data=3670016) (committer_magic_files_created=0) (object_put_request.failures=0) (op_mkdirs.failures=0) (stream_write_block_uploads_committed=0) (committer_commits_created=0) (fake_directories_created=0) (op_create.failures=0) (action_http_head_request=79) (op_xattr_get_named_map.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_read_version_mismatches=0) (op_abort=0) (stream_read_remote_stream_aborted=0) (op_get_file_status.failures=0) (stream_read_unbuffered=2) (multipart_upload_completed=0) (ignored_errors=0) (op_openfile=0) (op_exists=0) (stream_read_seek_operations=0) (stream_read_fully_operations=1) (stream_read_bytes_discarded_in_abort=0) (op_list_status.failures=0) (committer_jobs_completed=0) (op_glob_status=0) (multipart_upload_part_put_bytes=0) (object_continue_list_request=0) (committer_magic_marker_put=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_aborted=0) (stream_read_vectored_combined_ranges=25) (op_get_file_checksum=0) (committer_commit_job.failures=0) (op_list_files.failures=0) (files_deleted=28) (stream_read_vectored_incoming_ranges=58) (committer_commits_aborted=0) (committer_load_single_pending_file=0) (committer_magic_marker_put.failures=0) (object_continue_list_request.failures=0) (object_put_request=56) (object_delete_request=0) (object_put_request_completed=56) (stream_read_seek_bytes_skipped=0) (committer_stage_file_upload.failures=0) (directories_deleted=0) (stream_aborted=0) (op_xattr_get_named_map=0) (files_created=28) (stream_write_exceptions_completing_upload=0) (stream_read_vectored_read_bytes_discarded=24543) (committer_tasks_failed=0) (action_http_get_request.failures=0) (stream_read_opened=3) (op_open=23) (multipart_upload_list.failures=0) (object_list_request.failures=0) (stream_read_operations=3) (object_list_request=112) (op_list_files=0) (op_create=28) (stream_read_total_bytes=202971) (audit_failure=0) (fake_directories_deleted=28) (committer_tasks_completed=0) (committer_stage_file_upload=0) (op_rename.failures=0) (op_get_content_summary.failures=0) (object_metadata_request=79) (committer_jobs_failed=0) (stream_read_seek_backward_operations=0) (op_delete=28) (object_bulk_delete_request=56) (op_get_delegation_token.failures=0) (op_glob_status.failures=0) (files_copied_bytes=0) (committer_bytes_committed=0) (object_copy_requests=0) (op_xattr_list.failures=0) (stream_read_bytes=6963) (op_copy_from_local_file=0) (op_access.failures=0) (op_rename=0) (store_exists_probe=0) (stream_write_exceptions=0) (op_xattr_get_map.failures=0) (op_mkdirs=28) (stream_write_queue_duration.failures=0) (delegation_tokens_issued.failures=0) (stream_read_operations_incomplete=0) (files_copied=0) (delegation_tokens_issued=0) (stream_write_total_time=0) (audit_span_creation=109) (stream_write_block_uploads_aborted=0) (op_list_status=0) (directories_created=28) (op_get_file_status=1) (op_createfile=0) (op_xattr_list=0) (op_copy_from_local_file.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_seek_bytes_discarded=0) (op_is_directory.failures=0) (action_executor_acquired=0) (action_file_opened=23) (object_multipart_aborted=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=28) (client_side_encryption_enabled=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((op_glob_status.failures.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_materialize_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_access.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.min=-1) (multipart_upload_list.min=-1) (op_abort.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_initiated.failures.min=-1) (object_continue_list_request.min=-1) (op_get_file_status.failures.min=-1) (op_copy_from_local_file.min=-1) (object_list_request.min=6) (op_mkdirs.failures.min=-1) (committer_materialize_file.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_createfile.failures.min=-1) (committer_magic_marker_put.min=-1) (op_delete.min=43) (object_bulk_delete_request.min=12) (op_delete.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_write_queue_duration.min=-1) (multipart_upload_list.failures.min=-1) (store_exists_probe.failures.min=-1) (action_http_get_request.min=28) (op_list_files.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_rename.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.min=-1) (op_abort.min=-1) (op_xattr_get_map.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_file.failures.min=-1) (action_executor_acquired.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.min=-1) (op_xattr_list.min=-1) (op_list_status.failures.min=-1) (op_create.min=7) (object_put_request.min=53) (op_is_directory.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_exists.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.min=-1) (committer_commit_job.min=-1) (op_glob_status.min=-1) (op_get_file_status.min=9) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_create.failures.min=-1) (op_list_status.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_file.min=-1) (action_http_get_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_directory.min=-1) (action_http_head_request.min=3) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.min=-1) (store_exists_probe.min=-1) (op_createfile.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.min=-1) (object_list_request.failures.min=-1) (op_mkdirs.min=32) (op_access.failures.min=-1) (object_multipart_initiated.min=-1) (action_file_opened.min=11) (action_http_head_request.failures.min=-1));
maximums=((action_file_opened.max=18) (op_xattr_get_named.max=-1) (op_is_directory.failures.max=-1) (committer_load_single_pending_file.max=-1) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_mkdirs.max=395) (op_list_status.max=-1) (op_copy_from_local_file.max=-1) (op_abort.max=-1) (committer_commit_job.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_xattr_get_map.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named.failures.max=-1) (op_create.failures.max=-1) (object_put_request.max=132) (committer_commit_job.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.max=-1) (op_get_file_status.max=9) (action_http_head_request.max=17) (op_get_file_checksum.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_list_request.max=243) (action_http_get_request.max=95) (op_rename.max=-1) (object_multipart_initiated.max=-1) (op_createfile.failures.max=-1) (op_rename.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_status.failures.max=-1) (object_continue_list_request.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (op_is_directory.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.failures.max=-1) (op_createfile.max=-1) (committer_materialize_file.max=-1) (op_delete.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.max=-1) (op_exists.max=-1) (op_access.max=-1) (op_abort.failures.max=-1) (op_is_file.failures.max=-1) (object_bulk_delete_request.max=38) (committer_stage_file_upload.failures.max=-1) (object_list_request.failures.max=-1) (op_is_file.max=-1) (object_delete_request.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (op_delete.max=101) (op_access.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.max=63) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.max=-1) (committer_stage_file_upload.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_list.failures.max=-1) (action_http_get_request.failures.max=-1) (multipart_upload_list.failures.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=28, sum=1853, mean=66.1786)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=195, mean=8.4783)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=56, sum=3154, mean=56.3214)) (op_create.mean=(samples=28, sum=519, mean=18.5357)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=56, sum=1136, mean=20.2857)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=24, sum=770, mean=32.0833)) (op_mkdirs.mean=(samples=28, sum=2035, mean=72.6786)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=112, sum=1676, mean=14.9643)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=79, sum=581, mean=7.3544)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:06,047 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:06,047 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:06,047 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,047 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,047 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,047 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000138 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000138&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=194&ts=1731778446047
2024-11-16 17:34:06,054 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:06,054 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:06,054 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:06,054 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,055 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:06,055 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000138 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000138&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=194&ts=1731778446047
2024-11-16 17:34:06,058 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:06,059 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:06,059 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:06,059 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:06,059 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000138 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000138&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=194&ts=1731778446047
2024-11-16 17:34:06,112 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:06,112 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:06,112 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.053s
2024-11-16 17:34:06,112 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:06,112 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:06,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,113 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,113 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000139 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000139&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=194&ts=1731778446112
2024-11-16 17:34:06,125 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:06,125 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,126 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:06,126 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3652483771005444156.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:06,127 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3652483771005444156.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (stream_write_total_time=0) (op_hsync=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (stream_write_total_data=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (op_abort=0) (stream_write_block_uploads=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3652483771005444156.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,127 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:06,128 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:06,128 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3652483771005444156.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:06,128 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:06,128 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:06,128 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:06,128 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:06,129 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000139 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000139&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=80&ts=1731778446112
2024-11-16 17:34:06,182 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:06,182 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:06,183 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.055s
2024-11-16 17:34:06,183 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3652483771005444156.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:06,183 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3652483771005444156.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,183 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3652483771005444156.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,183 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:06,183 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:06,184 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (object_multipart_aborted=0) (op_hsync=0) (op_abort=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (action_executor_acquired.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (action_executor_acquired=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (object_put_request=1) (object_put_request.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=54) (committer_magic_marker_put.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=54) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=54, mean=54.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:06,185 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:06,185 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:34:06,185 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:34:06,186 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:34:06,186 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:06,188 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:34:06,188 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:34:06,189 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:34:06,189 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:34:06,189 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:34:06,189 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:34:06,189 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:34:06,190 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:34:06,190 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:34:06,190 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:34:06,190 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='ef6486f1-8797-4fac-8caf-d2fbe3c006aa', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:34:06,190 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='ef6486f1-8797-4fac-8caf-d2fbe3c006aa', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:34:06,190 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='ef6486f1-8797-4fac-8caf-d2fbe3c006aa', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:34:06,191 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:34:06,191 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:34:06,191 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:34:06,191 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:34:06,191 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:34:06,191 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:34:06,192 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@2fa4323a]
2024-11-16 17:34:06,192 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@2fa4323a]
2024-11-16 17:34:06,192 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:34:06,192 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:34:06,192 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:34:06,192 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:34:06,192 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:34:06,192 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:34:06,193 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:34:06,193 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:34:06,193 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:34:06,193 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:34:06,193 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:34:06,193 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:34:06,195 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:34:06,195 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:34:06,195 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:34:06,196 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:34:06,196 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:34:06,196 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:34:06,196 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:34:06,196 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:34:06,196 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:34:06,196 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:34:06,196 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:34:06,197 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:34:06,197 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:34:06,197 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:34:06,197 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:34:06,197 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:34:06,197 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:06,197 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,198 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:06,198 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000142 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000142/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000142&t0=194&fs=ef6486f1-8797-4fac-8caf-d2fbe3c006aa&t1=194&ts=1731778446197
2024-11-16 17:34:06,198 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:34:06,198 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:34:06,198 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:34:06,199 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:34:06,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:06,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778446000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:34:06,206 [s3a-transfer-obs-bucket-unbounded-pool19-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:06,206 [s3a-transfer-obs-bucket-unbounded-pool19-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,206 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:06,206 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:06,206 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:34:06,206 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:06,206 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:06,207 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,207 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:06,207 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:06,207 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [198] ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=8192-14435&id=ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000143&t0=196&fs=ef6486f1-8797-4fac-8caf-d2fbe3c006aa&t1=198&ts=1731778446205
2024-11-16 17:34:06,207 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,207 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:06,207 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [197] ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=1947-2046&id=ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000143&t0=196&fs=ef6486f1-8797-4fac-8caf-d2fbe3c006aa&t1=197&ts=1731778446205
2024-11-16 17:34:06,208 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:06,208 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,208 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:06,208 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [199] ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=40960-41983&id=ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000143&t0=196&fs=ef6486f1-8797-4fac-8caf-d2fbe3c006aa&t1=199&ts=1731778446205
2024-11-16 17:34:06,229 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:34:06,230 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:34:06,229 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:34:06,230 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:34:06,230 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:34:06,231 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:06,232 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:06,232 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:06,233 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=23));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=23));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=69, mean=23.0000)));

2024-11-16 17:34:06,234 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_block_read.failures=0) (stream_read_vectored_incoming_ranges=5) (action_executor_acquired=0) (action_file_opened.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_operations=1) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain=0) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_vectored_combined_ranges=3) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=3) (stream_read_block_acquire_read=0) (stream_read_opened=0) (stream_read_fully_operations=0) (stream_read_exceptions=0) (action_executor_acquired.failures=0) (stream_read_closed=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_total_bytes=1424) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=5944) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_bytes=1424) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=23) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=0) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((action_http_get_request.max=23) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=69, mean=23.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:06,235 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778446000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:34:06,236 [s3a-transfer-obs-bucket-unbounded-pool19-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:06,236 [s3a-transfer-obs-bucket-unbounded-pool19-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,237 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:06,237 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:34:06,237 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,237 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=10240-65535&id=ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144&t0=203&fs=ef6486f1-8797-4fac-8caf-d2fbe3c006aa&t1=194&ts=1731778446236
2024-11-16 17:34:06,256 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.019s
2024-11-16 17:34:06,257 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:06,257 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:34:06,257 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:06,257 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:34:06,257 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:34:06,258 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:34:06,258 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,259 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://obs-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:34:06,260 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:34:06,260 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,261 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=8192-8291&id=ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144&t0=203&fs=ef6486f1-8797-4fac-8caf-d2fbe3c006aa&t1=194&ts=1731778446236
2024-11-16 17:34:06,280 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.023s
2024-11-16 17:34:06,280 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:06,281 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:34:06,281 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:06,281 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:34:06,281 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:34:06,281 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:34:06,282 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:34:06,282 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,282 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=14336-14435&id=ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144&t0=203&fs=ef6486f1-8797-4fac-8caf-d2fbe3c006aa&t1=194&ts=1731778446236
2024-11-16 17:34:06,299 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.018s
2024-11-16 17:34:06,300 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:06,300 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:34:06,300 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:06,300 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:34:06,300 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:34:06,300 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:34:06,300 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:34:06,301 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,301 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=1947-2046&id=ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144&t0=203&fs=ef6486f1-8797-4fac-8caf-d2fbe3c006aa&t1=194&ts=1731778446236
2024-11-16 17:34:06,314 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.014s
2024-11-16 17:34:06,314 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:06,314 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:34:06,314 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:06,314 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:34:06,314 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:34:06,314 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:34:06,314 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:34:06,315 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,315 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=40960-41983&id=ef6486f1-8797-4fac-8caf-d2fbe3c006aa-00000144&t0=203&fs=ef6486f1-8797-4fac-8caf-d2fbe3c006aa&t1=194&ts=1731778446236
2024-11-16 17:34:06,335 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.021s
2024-11-16 17:34:06,335 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:06,335 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:34:06,336 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=13)
(stream_read_remote_stream_aborted.min=3)
(stream_read_remote_stream_drain.min=0));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=20)
(stream_read_remote_stream_aborted.max=3)
(stream_read_remote_stream_drain.max=1));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=88, mean=17.6000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=1, mean=0.3333)));

2024-11-16 17:34:06,336 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:34:06,336 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:34:06,336 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:34:06,337 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=5) (stream_read_exceptions=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request=5) (stream_read_vectored_combined_ranges=0) (stream_read_seek_policy_changed=2) (action_file_opened=1) (stream_read_remote_stream_drain=4) (action_executor_acquired=0) (stream_read_block_read.failures=0) (stream_read_operations=5) (stream_read_block_read=0) (stream_read_prefetch_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_backwards_on_seek=14637) (stream_read_seek_forward_operations=2) (stream_read_vectored_operations=0) (stream_read_bytes=1424) (stream_read_seek_operations=4) (stream_read_remote_stream_aborted=1) (stream_aborted=1) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=44957) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_operations_incomplete=0) (stream_read_closed=4) (stream_read_version_mismatches=0) (stream_read_total_bytes=1424) (stream_read_fully_operations=5) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_backward_operations=2) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=1) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=0) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=0) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.min=3) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=13) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=3) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=1) (action_file_opened.max=0) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=20) (stream_read_block_acquire_read.failures.max=-1));
means=((action_http_get_request.mean=(samples=5, sum=88, mean=17.6000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=1, mean=0.2500)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:06,338 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:34:06,340 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:34:06,340 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:06,340 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@2ae7422f[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:34:06,340 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:06,340 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics9-obs-bucket
2024-11-16 17:34:06,341 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:34:06,341 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@2fa4323a] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:06,341 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@2fa4323a] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:06,343 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_seek_backward_operations=2) (store_exists_probe=0) (op_abort=0) (stream_read_seek_bytes_discarded=0) (op_hflush=0) (audit_failure=0) (op_exists=0) (op_list_files=0) (object_put_request_completed=0) (op_list_files.failures=0) (directories_created=0) (committer_materialize_file.failures=0) (multipart_upload_started=0) (stream_read_vectored_combined_ranges=3) (files_delete_rejected=0) (stream_write_queue_duration=0) (object_put_bytes=0) (stream_read_operations=5) (committer_tasks_failed=0) (stream_read_remote_stream_aborted=1) (stream_write_block_uploads_committed=0) (committer_magic_marker_put=0) (stream_read_bytes_backwards_on_seek=14637) (object_multipart_aborted=0) (stream_read_version_mismatches=0) (op_glob_status=0) (op_exists.failures=0) (stream_read_fully_operations=5) (object_list_request.failures=0) (op_list_located_status=0) (committer_jobs_completed=0) (multipart_upload_part_put=0) (op_rename=0) (stream_write_block_uploads=0) (op_mkdirs=0) (op_xattr_get_named.failures=0) (op_xattr_list.failures=0) (op_open=2) (store_io_retry=0) (op_create.failures=0) (op_get_delegation_token.failures=0) (op_abort.failures=0) (op_xattr_get_named_map=0) (stream_write_total_data=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_list=0) (committer_bytes_committed=0) (op_is_file.failures=0) (op_delete=0) (audit_access_check_failure=0) (op_rename.failures=0) (files_copied=0) (stream_write_exceptions=0) (committer_commits_reverted=0) (committer_magic_files_created=0) (multipart_upload_completed=0) (action_http_get_request=8) (op_get_file_checksum=0) (stream_read_vectored_read_bytes_discarded=5944) (committer_commit_job=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (op_delete.failures=0) (object_delete_request.failures=0) (op_get_file_status=1) (ignored_errors=0) (stream_read_closed=4) (stream_read_seek_bytes_skipped=44957) (action_executor_acquired.failures=0) (op_create_non_recursive=0) (op_get_file_checksum.failures=0) (fake_directories_created=0) (op_xattr_get_map=0) (op_is_directory=0) (committer_bytes_uploaded=0) (committer_commit_job.failures=0) (committer_commits_created=0) (op_createfile.failures=0) (stream_read_remote_stream_drain=4) (action_http_head_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (action_file_opened=2) (op_get_delegation_token=0) (stream_read_total_bytes=2848) (audit_span_creation=4) (delegation_tokens_issued=0) (op_is_directory.failures=0) (action_file_opened.failures=0) (committer_commits.failures=0) (store_io_request=9) (stream_read_operations_incomplete=0) (action_executor_acquired=0) (stream_read_unbuffered=0) (stream_read_close_operations=2) (committer_load_single_pending_file.failures=0) (op_mkdirs.failures=0) (op_get_file_status.failures=0) (op_access=0) (op_hsync=0) (stream_read_bytes=2848) (directories_deleted=0) (committer_tasks_completed=0) (multipart_instantiated=0) (multipart_upload_aborted=0) (op_copy_from_local_file.failures=0) (op_is_file=0) (op_get_content_summary=0) (op_get_content_summary.failures=0) (object_multipart_initiated.failures=0) (op_xattr_list=0) (object_continue_list_request=0) (object_copy_requests=0) (fake_directories_deleted=0) (stream_write_bytes=0) (stream_read_vectored_incoming_ranges=5) (object_delete_request=0) (committer_commits_completed=0) (stream_write_total_time=0) (stream_write_block_uploads_aborted=0) (files_deleted=0) (stream_read_seek_policy_changed=3) (op_glob_status.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_bytes_discarded_in_close=0) (files_copied_bytes=0) (object_bulk_delete_request=0) (delegation_tokens_issued.failures=0) (stream_read_seek_forward_operations=2) (object_metadata_request=1) (stream_read_bytes_discarded_in_abort=55196) (op_openfile=0) (op_xattr_get_named=0) (committer_jobs_failed=0) (committer_stage_file_upload.failures=0) (committer_stage_file_upload=0) (committer_commits_aborted=0) (op_create=0) (object_bulk_delete_request.failures=0) (op_xattr_get_map.failures=0) (object_put_request=0) (action_http_get_request.failures=0) (action_http_head_request=1) (committer_load_single_pending_file=0) (stream_aborted=1) (op_copy_from_local_file=0) (object_select_requests=0) (store_io_throttled=0) (object_list_request=0) (stream_read_seek_operations=4) (op_xattr_get_named_map.failures=0) (op_createfile=0) (op_list_status.failures=0) (object_put_request.failures=0) (object_continue_list_request.failures=0) (stream_read_exceptions=0) (multipart_upload_list.failures=0) (op_access.failures=0) (files_created=0) (committer_materialize_file=0) (stream_read_remote_stream_drain.failures=0) (store_exists_probe.failures=0) (stream_read_vectored_operations=1) (object_delete_objects=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration.failures=0) (stream_read_opened=5) (audit_request_execution=9) (object_multipart_aborted.failures=0) (op_list_status=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((action_http_get_request.min=13) (op_xattr_list.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.min=-1) (op_get_file_checksum.min=-1) (store_exists_probe.min=-1) (multipart_upload_list.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_map.min=-1) (op_abort.min=-1) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_drain.min=0) (multipart_upload_list.failures.min=-1) (object_multipart_initiated.min=-1) (action_http_head_request.failures.min=-1) (op_createfile.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_map.failures.min=-1) (op_create.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.min=-1) (committer_stage_file_upload.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (op_get_content_summary.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_status.min=-1) (action_file_opened.min=0) (op_xattr_get_named_map.min=-1) (object_put_request.min=-1) (op_access.failures.min=-1) (action_executor_acquired.min=-1) (op_delete.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_rename.min=-1) (store_exists_probe.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_status.failures.min=-1) (delegation_tokens_issued.min=-1) (object_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_delete.min=-1) (committer_magic_marker_put.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=3) (op_get_content_summary.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_access.min=-1) (op_rename.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_create.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.failures.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.failures.min=-1) (op_glob_status.min=-1) (object_bulk_delete_request.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.failures.min=-1) (op_exists.min=-1) (committer_commit_job.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_http_head_request.min=6) (op_xattr_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_named.min=-1) (op_glob_status.failures.min=-1) (op_get_file_status.min=7) (op_get_file_checksum.failures.min=-1) (object_list_request.min=-1) (op_get_delegation_token.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_directory.max=-1) (op_copy_from_local_file.max=-1) (op_list_status.max=-1) (store_exists_probe.failures.max=-1) (op_list_files.max=-1) (op_mkdirs.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_aborted.max=3) (op_access.max=-1) (op_delete.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_directory.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (op_get_delegation_token.max=-1) (op_get_file_checksum.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_commit_job.failures.max=-1) (op_abort.max=-1) (op_get_content_summary.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_materialize_file.max=-1) (stream_write_queue_duration.failures.max=-1) (op_rename.max=-1) (committer_materialize_file.failures.max=-1) (op_create.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_put_request.failures.max=-1) (object_list_request.max=-1) (action_http_get_request.max=23) (object_continue_list_request.max=-1) (multipart_upload_list.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.max=-1) (op_glob_status.max=-1) (op_list_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_access.failures.max=-1) (op_rename.failures.max=-1) (action_http_head_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_exists.failures.max=-1) (action_executor_acquired.max=-1) (object_bulk_delete_request.max=-1) (stream_read_remote_stream_drain.max=1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.failures.max=-1) (op_create.max=-1) (op_exists.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.max=6) (op_is_file.max=-1) (committer_stage_file_upload.max=-1) (op_list_files.failures.max=-1) (op_get_file_status.max=7) (op_get_file_checksum.failures.max=-1) (op_get_file_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.max=0) (op_xattr_list.max=-1) (action_file_opened.failures.max=-1) (object_list_request.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=7, mean=7.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=6, mean=6.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=157, mean=19.6250)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=1, mean=0.2500)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:06,343 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:06,343 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,344 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:06,344 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=194&ts=1731778446343
2024-11-16 17:34:06,349 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,349 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,349 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=194&ts=1731778446343
2024-11-16 17:34:06,366 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:34:06,366 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:06,366 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:06,366 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:06,366 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:06,366 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:06,366 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:06,366 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:06,366 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:06,366 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:06,366 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:06,366 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:06,367 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:06,367 [s3a-transfer-obs-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:06,367 [s3a-transfer-obs-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,367 [s3a-transfer-obs-bucket-unbounded-pool2-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=206&ts=1731778446343
2024-11-16 17:34:06,378 [s3a-transfer-obs-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:34:06,378 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:34:06,378 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:06,378 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:06,379 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:06,379 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778446170; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:06,379 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:06,379 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:06,379 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:06,379 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:06,379 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:06,379 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:06,379 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:06,379 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:06,379 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:06,379 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:06,379 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:06,379 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:06,379 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=82&ts=1731778446343
2024-11-16 17:34:06,394 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:34:06,394 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:34:06,394 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:34:06,394 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:06,395 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:06,395 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:06,395 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:06,395 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:06,395 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:06,395 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000145&t0=194&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=82&ts=1731778446343
2024-11-16 17:34:06,410 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:34:06,411 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:34:06,411 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:34:06,411 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.032s
2024-11-16 17:34:06,411 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.032s
2024-11-16 17:34:06,411 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.045s
2024-11-16 17:34:06,411 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:06,411 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:06,412 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:06,423 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 35, active threads = 0, queued tasks = 0, completed tasks = 35], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_delegation_token.failures=0) (action_http_get_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named_map.failures=0) (op_get_file_checksum=0) (object_put_request=58) (files_copied=0) (op_list_status=0) (committer_commits_reverted=0) (object_list_request=116) (multipart_upload_aborted=0) (op_delete=29) (object_continue_list_request.failures=0) (op_hflush=0) (stream_read_fully_operations=1) (op_abort=0) (action_executor_acquired.failures=0) (files_copied_bytes=0) (op_create=29) (stream_read_operations=3) (stream_read_bytes_discarded_in_close=196008) (stream_write_bytes=1900544) (object_list_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_commit_job.failures=0) (committer_tasks_completed=0) (stream_write_queue_duration=0) (committer_commits.failures=0) (stream_write_block_uploads=29) (object_put_bytes=1900544) (store_exists_probe=0) (store_io_retry=0) (audit_access_check_failure=0) (delegation_tokens_issued.failures=0) (stream_read_vectored_incoming_ranges=58) (object_delete_request=0) (committer_stage_file_upload=0) (audit_span_creation=112) (op_is_file=0) (store_exists_probe.failures=0) (op_xattr_list.failures=0) (stream_read_version_mismatches=0) (ignored_errors=0) (object_delete_objects=58) (committer_magic_marker_put=0) (committer_magic_files_created=0) (op_copy_from_local_file.failures=0) (stream_read_remote_stream_drain=3) (op_rename=0) (op_mkdirs.failures=0) (op_list_files.failures=0) (action_executor_acquired=0) (directories_created=29) (directories_deleted=0) (op_access.failures=0) (committer_load_single_pending_file.failures=0) (op_glob_status.failures=0) (action_http_head_request.failures=0) (op_list_located_status=0) (stream_read_seek_operations=0) (audit_request_execution=338) (stream_read_vectored_read_bytes_discarded=24543) (action_file_opened.failures=0) (op_mkdirs=29) (delegation_tokens_issued=0) (stream_read_opened=3) (stream_read_remote_stream_aborted.failures=0) (object_copy_requests=0) (op_is_directory=0) (multipart_upload_started=0) (object_multipart_initiated.failures=0) (files_deleted=29) (op_create.failures=0) (stream_read_unbuffered=2) (op_exists.failures=0) (object_delete_request.failures=0) (op_create_non_recursive=0) (committer_tasks_failed=0) (op_access=0) (stream_write_block_uploads_committed=0) (store_io_request=338) (stream_write_exceptions=0) (committer_load_single_pending_file=0) (op_get_file_checksum.failures=0) (stream_write_total_data=3801088) (stream_read_close_operations=23) (op_is_file.failures=0) (committer_magic_marker_put.failures=0) (committer_materialize_file.failures=0) (multipart_upload_completed=0) (files_created=29) (op_get_content_summary.failures=0) (committer_bytes_uploaded=0) (stream_read_remote_stream_drain.failures=0) (object_bulk_delete_request=58) (multipart_upload_part_put=0) (stream_read_closed=3) (stream_read_seek_backward_operations=0) (store_io_throttled=0) (stream_write_queue_duration.failures=0) (stream_read_seek_policy_changed=25) (multipart_upload_list=0) (op_xattr_get_named.failures=0) (multipart_upload_part_put_bytes=0) (op_abort.failures=0) (op_rename.failures=0) (audit_failure=0) (committer_jobs_failed=0) (object_bulk_delete_request.failures=0) (op_open=23) (object_multipart_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (multipart_instantiated=0) (object_metadata_request=81) (op_copy_from_local_file=0) (action_http_get_request=25) (op_hsync=0) (op_xattr_get_named_map=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_vectored_operations=20) (committer_commits_created=0) (object_put_request.failures=0) (files_delete_rejected=0) (op_list_files=0) (stream_write_total_time=0) (multipart_upload_list.failures=0) (stream_read_seek_forward_operations=0) (committer_commits_completed=0) (committer_stage_file_upload.failures=0) (op_list_status.failures=0) (op_get_delegation_token=0) (committer_bytes_committed=0) (op_get_file_status=1) (object_put_request_completed=58) (op_get_file_status.failures=0) (op_delete.failures=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_map=0) (op_xattr_get_map.failures=0) (op_is_directory.failures=0) (fake_directories_created=0) (op_openfile=0) (stream_read_exceptions=0) (op_xattr_get_named=0) (op_xattr_list=0) (stream_read_seek_bytes_skipped=0) (committer_jobs_completed=0) (object_multipart_initiated=0) (stream_read_vectored_combined_ranges=25) (committer_commits_aborted=0) (committer_materialize_file=0) (stream_read_remote_stream_aborted=0) (object_continue_list_request=0) (object_multipart_aborted=0) (op_createfile=0) (stream_read_operations_incomplete=0) (action_http_head_request=81) (op_createfile.failures=0) (stream_read_bytes=6963) (stream_read_total_bytes=202971) (stream_write_block_uploads_aborted=0) (action_file_opened=23) (committer_commit_job=0) (fake_directories_deleted=29) (op_glob_status=0) (op_get_content_summary=0) (op_exists=0) (object_select_requests=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=29) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((committer_stage_file_upload.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_get_map.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named.failures.min=-1) (store_exists_probe.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.min=-1) (op_mkdirs.min=32) (object_continue_list_request.min=-1) (object_delete_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.failures.min=-1) (op_get_content_summary.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_directory.failures.min=-1) (op_glob_status.min=-1) (op_rename.min=-1) (committer_materialize_file.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_map.min=-1) (committer_materialize_file.min=-1) (action_http_get_request.min=28) (op_glob_status.failures.min=-1) (store_exists_probe.failures.min=-1) (op_list_files.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.min=11) (op_xattr_list.min=-1) (op_is_directory.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_status.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_file_checksum.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_head_request.min=3) (op_xattr_list.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_files.failures.min=-1) (op_get_file_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.min=-1) (op_create.min=7) (op_is_file.failures.min=-1) (op_create.failures.min=-1) (op_rename.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (object_bulk_delete_request.min=12) (op_get_delegation_token.failures.min=-1) (op_access.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_delete.min=43) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.min=6) (object_put_request.min=54) (object_multipart_initiated.min=-1) (stream_write_queue_duration.min=-1) (op_abort.failures.min=-1) (op_get_file_checksum.failures.min=-1) (multipart_upload_list.min=-1) (committer_load_single_pending_file.min=-1) (op_list_status.failures.min=-1) (op_exists.min=-1) (op_get_file_status.min=9) (op_createfile.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_exists.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.min=-1));
maximums=((op_xattr_list.failures.max=-1) (store_exists_probe.failures.max=-1) (op_rename.failures.max=-1) (op_list_files.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_drain.max=1) (op_is_directory.failures.max=-1) (op_delete.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=63) (committer_load_single_pending_file.max=-1) (op_access.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_list.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.max=38) (op_createfile.failures.max=-1) (op_exists.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_list.max=-1) (op_get_file_status.max=9) (stream_write_queue_duration.failures.max=-1) (object_delete_request.max=-1) (action_http_get_request.failures.max=-1) (op_rename.max=-1) (action_http_head_request.max=17) (object_put_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_delete.max=101) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=132) (committer_commit_job.max=-1) (op_create.failures.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.failures.max=-1) (op_mkdirs.failures.max=-1) (op_abort.failures.max=-1) (op_list_status.failures.max=-1) (op_createfile.max=-1) (action_http_get_request.max=95) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_is_file.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_file_checksum.max=-1) (committer_magic_marker_put.failures.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_get_map.max=-1) (committer_materialize_file.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.failures.max=-1) (op_get_content_summary.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (op_abort.max=-1) (op_is_directory.max=-1) (object_list_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_copy_from_local_file.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.max=-1) (action_file_opened.max=18) (object_bulk_delete_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_glob_status.max=-1) (op_access.max=-1) (op_mkdirs.max=395) (object_list_request.max=243));
means=((committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=24, sum=770, mean=32.0833)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=29, sum=533, mean=18.3793)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=58, sum=1166, mean=20.1034)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=116, sum=1723, mean=14.8534)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=81, sum=589, mean=7.2716)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=58, sum=3260, mean=56.2069)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=29, sum=1898, mean=65.4483)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=29, sum=2100, mean=72.4138)) (action_file_opened.mean=(samples=23, sum=195, mean=8.4783)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:06,424 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:06,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:06,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,424 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,424 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000146 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000146&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=207&ts=1731778446424
2024-11-16 17:34:06,432 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:06,433 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:06,433 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:06,433 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,433 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:06,433 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000146 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000146&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=207&ts=1731778446424
2024-11-16 17:34:06,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:06,438 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:06,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:06,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:06,438 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000146 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000146&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=207&ts=1731778446424
2024-11-16 17:34:06,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:06,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:06,471 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.033s
2024-11-16 17:34:06,471 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:06,472 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:06,472 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,473 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,473 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,473 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000147 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000147&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=207&ts=1731778446472
2024-11-16 17:34:06,485 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:06,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,485 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:06,486 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1211468302432920377.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:06,487 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1211468302432920377.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_queue_duration=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (object_put_request=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (op_abort=0) (op_hsync=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (object_put_request.failures=0) (op_abort.failures=0) (stream_write_total_time=0) (op_hflush=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1211468302432920377.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,487 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:06,487 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:06,487 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1211468302432920377.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:06,487 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:06,487 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:06,487 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:06,488 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000147 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000147&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=84&ts=1731778446472
2024-11-16 17:34:06,489 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:06,550 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:06,550 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:06,550 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.063s
2024-11-16 17:34:06,564 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1211468302432920377.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:06,564 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1211468302432920377.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,564 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1211468302432920377.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,564 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:06,564 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:06,567 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (stream_write_total_data=65536) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (op_hsync=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (object_put_request=1) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (op_abort=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (object_multipart_aborted=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=63) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=63) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=63, mean=63.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:06,567 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:06,568 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:06,568 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,568 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:06,569 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000148 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000148&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=207&ts=1731778446568
2024-11-16 17:34:06,582 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:06,582 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:06,583 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,583 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:06,583 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:06,583 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:06,583 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:06,583 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,583 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:06,584 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000148&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=87&ts=1731778446568
2024-11-16 17:34:06,586 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:06,586 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:06,586 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:34:06,586 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,587 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-65535&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000148&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=207&ts=1731778446568
2024-11-16 17:34:06,622 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.039s
2024-11-16 17:34:06,622 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:34:06,622 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.040s
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7443 bytes
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:06,626 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8741 bytes
2024-11-16 17:34:06,627 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:34:06,627 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:34:06,627 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=2) (stream_read_opened=1) (stream_read_seek_backward_operations=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (action_http_get_request.failures=0) (stream_read_block_read.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=1) (stream_read_vectored_read_bytes_discarded=10) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_aborted=0) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (stream_read_closed=1) (stream_read_operations=1) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=1) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_read_block_read=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_read_unbuffered=0) (action_http_get_request=2) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_close_operations=1) (stream_read_total_bytes=65686) (stream_read_exceptions=0) (stream_read_bytes=350) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=14) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_file_opened.failures.min=-1) (action_http_get_request.min=39) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=39) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=14) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=14, mean=14.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=78, mean=39.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:06,628 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:06,628 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,628 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:06,628 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=207&ts=1731778446627
2024-11-16 17:34:06,639 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,640 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,641 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=207&ts=1731778446627
2024-11-16 17:34:06,657 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:34:06,657 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:06,657 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:06,658 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:06,658 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:06,658 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:06,658 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:06,658 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:06,658 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:06,658 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:06,658 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:06,658 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:06,659 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:06,659 [s3a-transfer-obs-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:06,659 [s3a-transfer-obs-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,659 [s3a-transfer-obs-bucket-unbounded-pool2-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=211&ts=1731778446627
2024-11-16 17:34:06,670 [s3a-transfer-obs-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:34:06,673 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:34:06,673 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:06,673 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:06,673 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:06,673 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778446543; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:06,673 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:06,674 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:06,674 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:06,674 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:06,674 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:06,674 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:06,674 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:06,674 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:06,674 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:06,674 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:06,674 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:06,674 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:06,675 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=89&ts=1731778446627
2024-11-16 17:34:06,687 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:34:06,688 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:34:06,688 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:34:06,688 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:06,688 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:06,688 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:06,688 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:06,688 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:06,688 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:06,688 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000149&t0=207&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=89&ts=1731778446627
2024-11-16 17:34:06,707 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.019s
2024-11-16 17:34:06,707 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:34:06,708 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.020s
2024-11-16 17:34:06,708 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.034s
2024-11-16 17:34:06,708 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.034s
2024-11-16 17:34:06,708 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.050s
2024-11-16 17:34:06,709 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:06,709 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:06,710 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:06,721 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 36, active threads = 0, queued tasks = 0, completed tasks = 36], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_block_uploads=30) (object_multipart_initiated.failures=0) (op_openfile=0) (op_access=0) (op_is_file=0) (stream_write_block_uploads_aborted=0) (committer_stage_file_upload=0) (op_list_status.failures=0) (op_create_non_recursive=0) (committer_commit_job.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_bytes=1966080) (audit_span_creation=116) (object_bulk_delete_request=60) (stream_write_queue_duration=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (action_http_head_request.failures=0) (stream_write_exceptions=0) (files_copied_bytes=0) (op_get_delegation_token=0) (committer_commits_aborted=0) (object_put_request=60) (committer_stage_file_upload.failures=0) (op_glob_status=0) (op_xattr_get_map=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (action_http_head_request=84) (object_continue_list_request.failures=0) (committer_jobs_completed=0) (object_list_request=120) (stream_read_unbuffered=2) (stream_write_block_uploads_committed=0) (stream_read_vectored_read_bytes_discarded=24553) (op_abort=0) (files_delete_rejected=0) (stream_read_seek_forward_operations=0) (committer_bytes_uploaded=0) (stream_read_version_mismatches=0) (op_abort.failures=0) (multipart_upload_part_put_bytes=0) (store_io_throttled=0) (stream_read_exceptions=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (committer_commits.failures=0) (op_xattr_get_named.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_policy_changed=26) (stream_read_remote_stream_drain.failures=0) (op_hflush=0) (fake_directories_created=0) (store_exists_probe=0) (committer_jobs_failed=0) (multipart_upload_aborted=0) (object_copy_requests=0) (delegation_tokens_issued.failures=0) (object_continue_list_request=0) (files_deleted=30) (stream_read_close_operations=24) (stream_read_vectored_incoming_ranges=60) (op_copy_from_local_file.failures=0) (op_mkdirs=30) (op_xattr_get_named_map.failures=0) (op_createfile=0) (stream_read_fully_operations=1) (op_access.failures=0) (op_get_file_checksum=0) (op_createfile.failures=0) (directories_deleted=0) (op_get_delegation_token.failures=0) (object_put_request.failures=0) (stream_read_bytes_discarded_in_close=261344) (committer_commit_job=0) (op_list_located_status=0) (op_mkdirs.failures=0) (fake_directories_deleted=30) (stream_read_bytes=7313) (stream_read_seek_bytes_skipped=0) (directories_created=30) (op_xattr_get_map.failures=0) (stream_read_operations_incomplete=0) (object_delete_request.failures=0) (committer_load_single_pending_file.failures=0) (object_multipart_aborted=0) (committer_materialize_file=0) (object_delete_objects=60) (stream_read_seek_operations=0) (op_get_file_status=1) (stream_read_vectored_combined_ranges=26) (committer_tasks_completed=0) (op_list_files=0) (stream_read_closed=4) (stream_read_opened=4) (action_http_get_request=27) (op_get_content_summary.failures=0) (stream_write_total_data=3932160) (object_bulk_delete_request.failures=0) (action_file_opened=24) (stream_read_total_bytes=268657) (committer_magic_files_created=0) (audit_access_check_failure=0) (op_get_file_status.failures=0) (stream_write_queue_duration.failures=0) (op_is_file.failures=0) (stream_read_operations=4) (op_delete=30) (store_io_retry=0) (op_exists.failures=0) (stream_read_remote_stream_drain=4) (op_get_content_summary=0) (op_list_status=0) (op_exists=0) (op_xattr_list.failures=0) (object_list_request.failures=0) (committer_magic_marker_put.failures=0) (stream_read_seek_backward_operations=0) (files_copied=0) (committer_bytes_committed=0) (stream_read_bytes_discarded_in_abort=0) (op_is_directory=0) (committer_load_single_pending_file=0) (action_file_opened.failures=0) (op_glob_status.failures=0) (op_rename=0) (object_metadata_request=84) (op_delete.failures=0) (committer_commits_completed=0) (object_select_requests=0) (object_delete_request=0) (op_create=30) (action_http_get_request.failures=0) (audit_failure=0) (stream_read_remote_stream_aborted.failures=0) (op_hsync=0) (multipart_upload_started=0) (multipart_upload_list.failures=0) (object_put_bytes=1966080) (object_put_request_completed=60) (object_multipart_initiated=0) (op_list_files.failures=0) (committer_commits_created=0) (stream_read_seek_bytes_discarded=0) (store_io_request=351) (ignored_errors=0) (op_rename.failures=0) (multipart_instantiated=0) (stream_aborted=0) (op_xattr_get_named=0) (op_copy_from_local_file=0) (committer_tasks_failed=0) (files_created=30) (stream_read_vectored_operations=21) (op_xattr_get_named_map=0) (audit_request_execution=351) (op_open=24) (action_executor_acquired.failures=0) (committer_materialize_file.failures=0) (store_exists_probe.failures=0) (delegation_tokens_issued=0) (op_xattr_list=0) (op_get_file_checksum.failures=0) (multipart_upload_list=0) (op_is_directory.failures=0) (op_create.failures=0) (committer_commits_reverted=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=30) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0));
minimums=((action_http_get_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_access.failures.min=-1) (committer_commit_job.min=-1) (op_delete.min=43) (committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named.min=-1) (object_list_request.min=6) (action_executor_acquired.min=-1) (op_access.min=-1) (multipart_upload_list.min=-1) (op_exists.min=-1) (op_get_file_status.min=9) (committer_magic_marker_put.min=-1) (action_http_head_request.min=3) (op_glob_status.min=-1) (action_http_get_request.min=39) (op_get_file_checksum.failures.min=-1) (object_multipart_aborted.min=-1) (store_exists_probe.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (op_mkdirs.min=32) (op_get_delegation_token.failures.min=-1) (op_is_directory.min=-1) (op_rename.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_list.min=-1) (action_http_head_request.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.min=-1) (op_create.min=7) (object_continue_list_request.failures.min=-1) (object_put_request.min=63) (action_file_opened.failures.min=-1) (op_rename.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_directory.failures.min=-1) (op_delete.failures.min=-1) (object_delete_request.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_list_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1) (object_bulk_delete_request.min=12) (op_xattr_get_named_map.min=-1) (op_list_status.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_content_summary.min=-1) (op_list_status.failures.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (op_create.failures.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_put_request.failures.min=-1) (store_exists_probe.failures.min=-1) (object_delete_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_createfile.min=-1) (op_xattr_get_map.min=-1) (op_list_files.min=-1) (committer_load_single_pending_file.min=-1) (action_file_opened.min=14) (action_executor_acquired.failures.min=-1) (op_get_file_status.failures.min=-1));
maximums=((object_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_multipart_initiated.max=-1) (op_get_file_checksum.max=-1) (op_list_status.failures.max=-1) (op_access.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.max=-1) (stream_write_queue_duration.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_exists.failures.max=-1) (action_http_head_request.max=17) (op_list_files.max=-1) (multipart_upload_list.max=-1) (op_delete.max=101) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_status.max=-1) (op_xattr_get_named_map.max=-1) (action_executor_acquired.failures.max=-1) (op_list_files.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_directory.failures.max=-1) (object_delete_request.failures.max=-1) (store_exists_probe.max=-1) (committer_commit_job.failures.max=-1) (committer_commit_job.max=-1) (op_create.failures.max=-1) (committer_materialize_file.max=-1) (op_is_file.max=-1) (op_glob_status.max=-1) (op_is_directory.max=-1) (object_put_request.failures.max=-1) (op_get_delegation_token.max=-1) (action_executor_acquired.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_drain.max=1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_file_opened.max=18) (op_rename.failures.max=-1) (op_rename.max=-1) (action_file_opened.failures.max=-1) (op_create.max=63) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_put_request.max=132) (committer_load_single_pending_file.failures.max=-1) (action_http_get_request.failures.max=-1) (op_access.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_continue_list_request.max=-1) (object_bulk_delete_request.max=38) (op_is_file.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.max=95) (op_xattr_list.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_write_queue_duration.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_status.max=9) (op_exists.max=-1) (object_list_request.max=243) (stream_read_remote_stream_drain.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named.max=-1) (op_createfile.max=-1) (op_xattr_get_map.max=-1) (op_mkdirs.max=395) (op_get_content_summary.max=-1) (object_continue_list_request.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=30, sum=1949, mean=64.9667)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=60, sum=3356, mean=55.9333)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=26, sum=848, mean=32.6154)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=120, sum=1771, mean=14.7583)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=30, sum=2148, mean=71.6000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=84, sum=619, mean=7.3690)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=24, sum=209, mean=8.7083)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=60, sum=1198, mean=19.9667)) (op_create.mean=(samples=30, sum=547, mean=18.2333)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:06,721 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:06,721 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:06,721 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,721 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,721 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,721 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000150 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000150&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=212&ts=1731778446721
2024-11-16 17:34:06,729 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:06,729 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:06,730 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:06,730 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,730 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:06,730 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000150 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000150&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=212&ts=1731778446721
2024-11-16 17:34:06,733 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:06,734 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:06,734 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:06,734 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:06,734 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000150 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000150&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=212&ts=1731778446721
2024-11-16 17:34:06,759 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:06,759 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:06,759 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.025s
2024-11-16 17:34:06,760 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:06,760 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:06,761 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,761 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,761 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,762 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000151 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000151&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=212&ts=1731778446760
2024-11-16 17:34:06,768 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:06,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,769 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:06,770 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16055985067752601349.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:06,771 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16055985067752601349.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (op_hsync=0) (stream_write_block_uploads=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (op_abort=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (object_put_request=0) (stream_write_total_data=0) (stream_write_exceptions=0) (object_put_request.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16055985067752601349.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,771 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:06,771 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:06,772 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16055985067752601349.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:06,772 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:06,772 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:06,773 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:06,773 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:06,773 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000151 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000151&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=90&ts=1731778446760
2024-11-16 17:34:06,826 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:06,826 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:06,827 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.055s
2024-11-16 17:34:06,827 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16055985067752601349.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:06,827 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16055985067752601349.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,827 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16055985067752601349.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,827 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:06,831 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:06,832 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (stream_write_queue_duration=0) (stream_write_total_time=0) (stream_write_bytes=65536) (op_hsync=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (op_hflush=0) (object_put_request=1) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (op_abort=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=53) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=53) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=53, mean=53.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:06,832 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:06,837 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:06,837 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,837 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:06,837 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [214] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000152 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000152/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000152&t0=214&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=214&ts=1731778446837
2024-11-16 17:34:06,842 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:06,842 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:06,842 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:06,842 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:34:06,848 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened=1) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes=0) (stream_read_remote_stream_aborted=0) (action_http_get_request.failures=0) (stream_read_operations_incomplete=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_fully_operations=0) (stream_read_opened=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=0) (stream_read_total_bytes=0) (stream_read_block_read=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (stream_read_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_read_bytes_discarded=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_policy_changed=1) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (action_http_get_request=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=5) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=5) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:06,849 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:06,849 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,849 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:06,849 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=212&ts=1731778446849
2024-11-16 17:34:06,853 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,853 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,853 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=212&ts=1731778446849
2024-11-16 17:34:06,861 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:06,862 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:06,862 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:06,863 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:06,863 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:06,863 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:06,864 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:06,864 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:06,865 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:06,865 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:06,865 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:06,866 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:06,867 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:06,867 [s3a-transfer-obs-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:06,867 [s3a-transfer-obs-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,867 [s3a-transfer-obs-bucket-unbounded-pool2-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [215] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=215&ts=1731778446849
2024-11-16 17:34:06,874 [s3a-transfer-obs-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:06,876 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:34:06,876 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:06,876 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:06,876 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:06,876 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778446819; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:06,876 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:06,877 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:06,877 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:06,877 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:06,877 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:06,877 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:06,877 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:06,877 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:06,877 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:06,877 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:06,877 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:06,877 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:06,878 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=92&ts=1731778446849
2024-11-16 17:34:06,891 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:34:06,891 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:34:06,891 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:34:06,891 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:06,891 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:06,891 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:06,891 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:06,891 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:06,892 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:06,892 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000153&t0=212&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=92&ts=1731778446849
2024-11-16 17:34:06,911 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.019s
2024-11-16 17:34:06,911 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.020s
2024-11-16 17:34:06,911 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.020s
2024-11-16 17:34:06,911 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.034s
2024-11-16 17:34:06,912 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.035s
2024-11-16 17:34:06,912 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.047s
2024-11-16 17:34:06,912 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:06,912 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:06,913 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:06,929 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 38, active threads = 0, queued tasks = 0, completed tasks = 38], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_fully_operations=1) (action_file_opened.failures=0) (store_exists_probe=0) (store_exists_probe.failures=0) (op_access.failures=0) (op_create_non_recursive=0) (committer_load_single_pending_file.failures=0) (stream_read_operations=4) (stream_write_block_uploads_committed=0) (stream_read_total_bytes=268657) (object_multipart_initiated=0) (multipart_upload_part_put=0) (stream_read_version_mismatches=0) (stream_read_opened=4) (op_openfile=0) (action_http_head_request=87) (stream_read_vectored_operations=21) (committer_magic_marker_put=0) (stream_read_exceptions=0) (multipart_upload_list=0) (stream_read_remote_stream_drain=4) (stream_aborted=0) (op_hflush=0) (audit_request_execution=362) (op_get_delegation_token=0) (stream_write_block_uploads=31) (committer_commits_aborted=0) (committer_stage_file_upload=0) (op_list_located_status=0) (op_xattr_get_named_map=0) (object_list_request.failures=0) (multipart_upload_completed=0) (stream_read_seek_policy_changed=27) (files_copied=0) (op_delete=31) (stream_write_total_time=0) (op_create=31) (stream_write_queue_duration.failures=0) (action_http_get_request=27) (stream_read_seek_operations=0) (stream_write_queue_duration=0) (stream_read_unbuffered=2) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (files_created=31) (multipart_instantiated=0) (object_put_bytes=2031616) (store_io_request=362) (op_list_files=0) (stream_read_bytes=7313) (op_delete.failures=0) (committer_materialize_file=0) (op_glob_status.failures=0) (stream_read_vectored_combined_ranges=26) (object_put_request=62) (op_hsync=0) (op_get_file_checksum=0) (audit_span_creation=120) (op_createfile.failures=0) (op_is_file.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=4) (stream_read_vectored_read_bytes_discarded=24553) (op_get_file_status.failures=0) (object_bulk_delete_request=62) (committer_magic_files_created=0) (op_abort=0) (object_continue_list_request.failures=0) (op_list_files.failures=0) (committer_commit_job.failures=0) (committer_tasks_failed=0) (stream_write_bytes=2031616) (op_get_content_summary=0) (committer_commit_job=0) (audit_failure=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_close=261344) (op_mkdirs=31) (object_multipart_aborted=0) (files_deleted=31) (delegation_tokens_issued.failures=0) (op_list_status=0) (object_list_request=124) (op_open=25) (store_io_throttled=0) (delegation_tokens_issued=0) (op_xattr_get_named=0) (object_multipart_aborted.failures=0) (committer_jobs_completed=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_bytes_skipped=0) (ignored_errors=0) (multipart_upload_list.failures=0) (op_xattr_get_map.failures=0) (op_xattr_get_named_map.failures=0) (op_access=0) (op_copy_from_local_file.failures=0) (op_get_content_summary.failures=0) (stream_write_total_data=4063232) (op_get_delegation_token.failures=0) (action_http_get_request.failures=0) (action_file_opened=25) (op_rename.failures=0) (op_mkdirs.failures=0) (op_is_directory=0) (multipart_upload_abort_under_path_invoked=0) (fake_directories_deleted=31) (committer_jobs_failed=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list=0) (committer_tasks_completed=0) (multipart_upload_aborted=0) (committer_commits_created=0) (op_rename=0) (files_copied_bytes=0) (op_create.failures=0) (op_xattr_get_named.failures=0) (fake_directories_created=0) (object_metadata_request=87) (committer_commits.failures=0) (op_list_status.failures=0) (op_xattr_list.failures=0) (action_executor_acquired.failures=0) (object_delete_request.failures=0) (op_is_directory.failures=0) (op_copy_from_local_file=0) (audit_access_check_failure=0) (object_continue_list_request=0) (directories_created=31) (files_delete_rejected=0) (stream_write_block_uploads_aborted=0) (op_glob_status=0) (op_createfile=0) (op_is_file=0) (stream_read_remote_stream_aborted.failures=0) (directories_deleted=0) (op_get_file_status=1) (committer_stage_file_upload.failures=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations_incomplete=0) (op_xattr_get_map=0) (action_http_head_request.failures=0) (op_exists=0) (store_io_retry=0) (multipart_upload_started=0) (committer_bytes_uploaded=0) (committer_materialize_file.failures=0) (object_bulk_delete_request.failures=0) (committer_bytes_committed=0) (action_executor_acquired=0) (object_put_request.failures=0) (object_delete_request=0) (object_copy_requests=0) (multipart_upload_part_put_bytes=0) (op_exists.failures=0) (stream_read_close_operations=25) (object_select_requests=0) (op_get_file_checksum.failures=0) (op_abort.failures=0) (committer_commits_completed=0) (stream_read_vectored_incoming_ranges=60) (stream_read_remote_stream_aborted=0) (committer_commits_reverted=0) (committer_load_single_pending_file=0) (stream_write_exceptions=0) (object_delete_objects=62) (object_put_request_completed=62));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=31) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0));
minimums=((op_is_directory.failures.min=-1) (op_list_files.failures.min=-1) (store_exists_probe.failures.min=-1) (op_delete.min=43) (op_list_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.failures.min=-1) (committer_load_single_pending_file.min=-1) (multipart_upload_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (committer_stage_file_upload.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_aborted.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.min=-1) (op_get_content_summary.min=-1) (op_get_delegation_token.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.min=-1) (object_continue_list_request.min=-1) (action_http_get_request.min=39) (op_create.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_exists.min=-1) (op_glob_status.min=-1) (op_xattr_get_named.min=-1) (committer_commit_job.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_put_request.min=53) (op_is_file.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_createfile.failures.min=-1) (op_rename.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_files.min=-1) (action_http_head_request.min=3) (op_mkdirs.min=32) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.min=9) (op_access.min=-1) (op_createfile.min=-1) (object_delete_request.failures.min=-1) (object_list_request.min=6) (op_list_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_map.min=-1) (op_rename.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.min=5) (action_executor_acquired.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_abort.failures.min=-1) (action_file_opened.failures.min=-1) (op_access.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_list.failures.min=-1) (op_create.min=7) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.min=12) (object_delete_request.min=-1) (delegation_tokens_issued.min=-1) (op_glob_status.failures.min=-1) (store_exists_probe.min=-1) (committer_materialize_file.min=-1) (op_is_directory.min=-1) (op_xattr_list.min=-1) (action_executor_acquired.min=-1) (op_get_file_checksum.min=-1));
maximums=((op_xattr_get_named.failures.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.max=-1) (object_continue_list_request.max=-1) (object_multipart_initiated.failures.max=-1) (op_mkdirs.max=395) (action_http_get_request.max=95) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_content_summary.failures.max=-1) (op_access.max=-1) (op_glob_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_bulk_delete_request.max=38) (op_create.max=63) (action_http_head_request.max=17) (op_rename.max=-1) (action_file_opened.failures.max=-1) (op_delete.max=101) (op_get_file_checksum.max=-1) (object_multipart_aborted.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_exists.failures.max=-1) (op_create.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.max=-1) (committer_commit_job.max=-1) (op_is_file.max=-1) (stream_write_queue_duration.failures.max=-1) (op_glob_status.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named.max=-1) (object_put_request.max=132) (op_xattr_get_map.failures.max=-1) (action_http_get_request.failures.max=-1) (op_is_file.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_delegation_token.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (store_exists_probe.max=-1) (op_rename.failures.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_map.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_file_opened.max=18) (object_continue_list_request.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_status.failures.max=-1) (object_list_request.failures.max=-1) (op_is_directory.max=-1) (op_exists.max=-1) (committer_stage_file_upload.max=-1) (op_abort.max=-1) (multipart_upload_list.max=-1) (op_delete.failures.max=-1) (op_xattr_list.max=-1) (object_delete_request.failures.max=-1) (object_list_request.max=243) (committer_materialize_file.failures.max=-1) (op_access.failures.max=-1) (object_put_request.failures.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.max=9) (committer_stage_file_upload.failures.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_drain.max=1) (op_mkdirs.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_materialize_file.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_list_files.max=-1) (op_createfile.max=-1) (committer_load_single_pending_file.max=-1) (op_is_directory.failures.max=-1) (op_list_files.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=62, sum=3434, mean=55.3871)) (op_mkdirs.mean=(samples=31, sum=2187, mean=70.5484)) (op_delete.mean=(samples=31, sum=1998, mean=64.4516)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=26, sum=848, mean=32.6154)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=87, sum=631, mean=7.2529)) (action_file_opened.mean=(samples=25, sum=214, mean=8.5600)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=31, sum=557, mean=17.9677)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=62, sum=1231, mean=19.8548)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=124, sum=1800, mean=14.5161)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:06,930 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:06,930 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:06,930 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,930 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,930 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,930 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000154 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000154&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=216&ts=1731778446930
2024-11-16 17:34:06,936 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:06,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:06,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:06,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:06,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:06,937 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000154 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000154&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=216&ts=1731778446930
2024-11-16 17:34:06,940 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:06,940 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:06,940 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:06,940 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:06,940 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000154 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000154&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=216&ts=1731778446930
2024-11-16 17:34:06,969 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:06,969 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:06,970 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.029s
2024-11-16 17:34:06,970 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:06,970 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:06,970 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,970 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:06,970 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:06,970 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000155 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000155&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=216&ts=1731778446970
2024-11-16 17:34:06,980 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:06,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:06,980 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:06,981 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15484101991192215709.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:06,981 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15484101991192215709.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (op_hsync=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_abort.failures=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15484101991192215709.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:06,982 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:06,982 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:06,982 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15484101991192215709.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:06,982 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:06,982 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:06,982 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:06,982 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:06,982 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000155 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000155&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=94&ts=1731778446970
2024-11-16 17:34:07,036 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:07,037 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:07,037 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.055s
2024-11-16 17:34:07,037 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15484101991192215709.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:07,037 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15484101991192215709.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,037 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15484101991192215709.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,038 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:07,038 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:07,039 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (op_abort.failures=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_total_data=65536) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (op_abort=0) (stream_write_block_uploads=1) (action_executor_acquired=0) (stream_write_queue_duration=0) (op_hsync=0) (object_put_request=1) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=54) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=54) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=54, mean=54.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:07,040 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:07,041 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:07,041 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,041 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:07,041 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000156 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000156&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=216&ts=1731778447041
2024-11-16 17:34:07,048 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:07,049 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:07,049 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,049 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:34:07,049 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:07,050 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:34:07,050 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,050 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:34:07,050 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,050 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:07,050 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000156 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-999&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000156&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=96&ts=1731778447041
2024-11-16 17:34:07,082 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.032s
2024-11-16 17:34:07,082 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,085 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_block_read.failures=0) (stream_read_block_read=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request=1) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened.failures=0) (stream_read_total_bytes=1000) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (stream_read_opened=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired=0) (stream_read_operations=0) (stream_read_bytes=1000) (stream_read_closed=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_aborted=0) (action_file_opened=1) (stream_read_vectored_incoming_ranges=10) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_operations=1) (stream_read_remote_stream_drain=0) (stream_read_fully_operations=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_http_get_request.min=32) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=8) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=32) (action_file_opened.failures.max=-1) (action_file_opened.max=8) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=32, mean=32.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:07,086 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:07,086 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,086 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:07,087 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=216&ts=1731778447086
2024-11-16 17:34:07,095 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,096 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,096 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=216&ts=1731778447086
2024-11-16 17:34:07,122 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.026s
2024-11-16 17:34:07,122 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:07,122 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:07,122 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:07,122 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:07,122 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:07,122 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:07,123 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:07,123 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:07,123 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:07,123 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:07,123 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:07,124 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:07,127 [s3a-transfer-obs-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:07,128 [s3a-transfer-obs-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,128 [s3a-transfer-obs-bucket-unbounded-pool2-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [217] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=217&ts=1731778447086
2024-11-16 17:34:07,149 [s3a-transfer-obs-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.021s
2024-11-16 17:34:07,151 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.027s
2024-11-16 17:34:07,152 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:07,152 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:07,152 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:07,152 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778447031; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:07,152 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:07,152 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:07,152 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:07,152 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:07,153 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:07,155 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:07,155 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:07,155 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:07,155 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:07,155 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:07,155 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:07,156 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:07,156 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=98&ts=1731778447086
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.023s
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.024s
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.024s
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:07,179 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000157&t0=216&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=98&ts=1731778447086
2024-11-16 17:34:07,199 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.020s
2024-11-16 17:34:07,199 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.020s
2024-11-16 17:34:07,199 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.020s
2024-11-16 17:34:07,199 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.044s
2024-11-16 17:34:07,199 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.046s
2024-11-16 17:34:07,199 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.076s
2024-11-16 17:34:07,199 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:07,199 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:07,200 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:07,218 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 39, active threads = 0, queued tasks = 0, completed tasks = 39], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_head_request.failures=0) (object_continue_list_request.failures=0) (committer_tasks_completed=0) (object_bulk_delete_request.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_started=0) (committer_commits_created=0) (stream_read_seek_backward_operations=0) (committer_commit_job.failures=0) (committer_magic_marker_put=0) (files_copied=0) (op_get_file_status=1) (stream_read_operations=4) (committer_materialize_file.failures=0) (object_put_request.failures=0) (op_open=26) (op_delete=32) (audit_request_execution=374) (object_copy_requests=0) (stream_read_operations_incomplete=0) (stream_write_total_time=0) (action_executor_acquired=0) (op_rename=0) (files_delete_rejected=0) (object_put_bytes=2097152) (op_glob_status=0) (op_list_located_status=0) (object_multipart_initiated=0) (stream_read_vectored_combined_ranges=27) (op_create=32) (stream_write_total_data=4194304) (directories_deleted=0) (op_xattr_get_named=0) (audit_span_creation=124) (op_list_files=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (op_copy_from_local_file.failures=0) (committer_commits.failures=0) (multipart_upload_part_put=0) (op_access=0) (op_list_files.failures=0) (committer_stage_file_upload=0) (multipart_instantiated=0) (stream_read_closed=4) (stream_write_block_uploads=32) (op_is_file=0) (op_is_directory.failures=0) (stream_read_opened=4) (committer_magic_files_created=0) (op_get_file_checksum=0) (op_createfile=0) (stream_write_queue_duration.failures=0) (action_file_opened.failures=0) (object_select_requests=0) (committer_commits_aborted=0) (stream_read_bytes=8313) (stream_read_vectored_operations=22) (action_http_get_request.failures=0) (committer_stage_file_upload.failures=0) (stream_read_bytes_discarded_in_close=261344) (op_xattr_get_map.failures=0) (op_abort.failures=0) (store_exists_probe=0) (op_delete.failures=0) (committer_materialize_file=0) (op_list_status.failures=0) (stream_read_remote_stream_drain=4) (op_get_file_status.failures=0) (files_deleted=32) (stream_read_seek_bytes_discarded=0) (stream_write_block_uploads_committed=0) (audit_access_check_failure=0) (op_abort=0) (stream_write_block_uploads_aborted=0) (files_copied_bytes=0) (delegation_tokens_issued.failures=0) (op_create.failures=0) (object_delete_objects=64) (directories_created=32) (object_list_request.failures=0) (stream_aborted=0) (op_get_delegation_token.failures=0) (committer_magic_marker_put.failures=0) (committer_tasks_failed=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (op_exists=0) (committer_commit_job=0) (op_xattr_get_named_map=0) (op_hsync=0) (object_continue_list_request=0) (stream_read_bytes_discarded_in_abort=0) (op_create_non_recursive=0) (store_io_throttled=0) (delegation_tokens_issued=0) (op_mkdirs.failures=0) (op_mkdirs=32) (stream_read_seek_operations=0) (action_file_opened=26) (op_xattr_get_map=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_completed=0) (committer_jobs_failed=0) (files_created=32) (stream_read_total_bytes=269657) (stream_read_vectored_incoming_ranges=70) (multipart_upload_list.failures=0) (committer_bytes_committed=0) (committer_jobs_completed=0) (op_access.failures=0) (stream_write_bytes=2097152) (op_glob_status.failures=0) (object_put_request_completed=64) (stream_read_seek_bytes_skipped=0) (action_http_head_request=90) (op_is_file.failures=0) (op_createfile.failures=0) (op_is_directory=0) (object_multipart_initiated.failures=0) (op_get_content_summary=0) (object_delete_request.failures=0) (stream_read_seek_forward_operations=0) (op_xattr_get_named.failures=0) (store_io_request=374) (store_io_retry=0) (op_xattr_get_named_map.failures=0) (ignored_errors=0) (object_put_request=64) (committer_load_single_pending_file=0) (op_list_status=0) (object_delete_request=0) (op_exists.failures=0) (stream_write_queue_duration=0) (store_exists_probe.failures=0) (object_bulk_delete_request=64) (object_multipart_aborted.failures=0) (committer_load_single_pending_file.failures=0) (fake_directories_deleted=32) (stream_read_version_mismatches=0) (object_metadata_request=90) (op_get_file_checksum.failures=0) (committer_commits_completed=0) (op_rename.failures=0) (op_xattr_list.failures=0) (committer_bytes_uploaded=0) (stream_read_unbuffered=2) (object_list_request=128) (op_copy_from_local_file=0) (multipart_upload_part_put_bytes=0) (op_xattr_list=0) (op_openfile=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (multipart_upload_aborted=0) (audit_failure=0) (action_http_get_request=28) (fake_directories_created=0) (stream_read_remote_stream_drain.failures=0) (op_hflush=0) (stream_read_seek_policy_changed=28) (op_get_content_summary.failures=0) (stream_read_close_operations=26) (committer_commits_reverted=0) (op_get_delegation_token=0) (stream_read_fully_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_read_bytes_discarded=24553) (multipart_upload_list=0));
gauges=((stream_write_block_uploads_pending=32) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_list_status.failures.min=-1) (action_http_get_request.min=32) (op_glob_status.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_continue_list_request.min=-1) (op_list_status.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_list_request.failures.min=-1) (object_bulk_delete_request.min=12) (op_xattr_list.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named.failures.min=-1) (op_createfile.min=-1) (op_rename.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.failures.min=-1) (op_get_file_status.min=9) (op_get_file_checksum.min=-1) (committer_materialize_file.failures.min=-1) (op_abort.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_initiated.min=-1) (action_http_head_request.min=3) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_list_request.min=6) (op_is_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.min=-1) (multipart_upload_list.failures.min=-1) (store_exists_probe.min=-1) (stream_write_queue_duration.min=-1) (object_put_request.min=54) (committer_load_single_pending_file.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.failures.min=-1) (multipart_upload_list.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_create.min=7) (committer_stage_file_upload.min=-1) (op_xattr_get_named.min=-1) (op_rename.failures.min=-1) (op_delete.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_list.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_copy_from_local_file.min=-1) (op_access.min=-1) (committer_commit_job.min=-1) (op_is_file.failures.min=-1) (store_exists_probe.failures.min=-1) (op_mkdirs.min=32) (op_delete.min=43) (op_list_files.min=-1) (op_is_directory.failures.min=-1) (object_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_delete_request.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_drain.min=1) (action_file_opened.min=8) (op_exists.min=-1));
maximums=((action_http_head_request.max=17) (object_multipart_aborted.failures.max=-1) (op_get_file_status.failures.max=-1) (op_exists.max=-1) (op_abort.failures.max=-1) (op_get_file_status.max=9) (op_rename.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_file.max=-1) (op_rename.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_directory.failures.max=-1) (committer_commit_job.failures.max=-1) (store_exists_probe.max=-1) (op_delete.max=101) (op_delete.failures.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_list.failures.max=-1) (object_list_request.max=243) (op_createfile.failures.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.max=-1) (object_delete_request.max=-1) (multipart_upload_list.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.max=-1) (op_get_file_checksum.max=-1) (op_glob_status.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=18) (stream_read_remote_stream_aborted.max=-1) (committer_materialize_file.max=-1) (object_bulk_delete_request.failures.max=-1) (op_glob_status.max=-1) (action_http_get_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.max=-1) (op_list_files.failures.max=-1) (action_file_opened.failures.max=-1) (op_list_status.max=-1) (op_access.failures.max=-1) (op_createfile.max=-1) (op_get_content_summary.failures.max=-1) (op_access.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.max=-1) (op_get_delegation_token.failures.max=-1) (op_exists.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_create.max=63) (action_http_get_request.max=95) (op_copy_from_local_file.failures.max=-1) (op_is_file.failures.max=-1) (object_continue_list_request.max=-1) (op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (op_is_directory.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_files.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=132) (committer_magic_marker_put.max=-1) (op_mkdirs.max=395) (object_bulk_delete_request.max=38) (multipart_upload_list.max=-1) (object_multipart_initiated.max=-1) (op_get_delegation_token.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_drain.max=1) (action_executor_acquired.max=-1) (op_xattr_get_named.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=27, sum=880, mean=32.5926)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=90, sum=651, mean=7.2333)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=32, sum=568, mean=17.7500)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (object_put_request.mean=(samples=64, sum=3517, mean=54.9531)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=32, sum=2227, mean=69.5938)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=26, sum=222, mean=8.5385)) (op_delete.mean=(samples=32, sum=2075, mean=64.8438)) (object_list_request.mean=(samples=128, sum=1863, mean=14.5547)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=64, sum=1274, mean=19.9063)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:07,219 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:07,220 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:07,220 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,220 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,221 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,221 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000158 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000158&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=218&ts=1731778447219
2024-11-16 17:34:07,229 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:07,229 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:07,230 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:07,230 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:07,231 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000158 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000158&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=218&ts=1731778447219
2024-11-16 17:34:07,235 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:07,236 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:07,236 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:07,236 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:07,237 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000158 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000158&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=218&ts=1731778447219
2024-11-16 17:34:07,253 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:07,253 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:07,253 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.017s
2024-11-16 17:34:07,253 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:07,254 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:07,254 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,254 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,254 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,254 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000159 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000159&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=218&ts=1731778447254
2024-11-16 17:34:07,260 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:07,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,261 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:07,262 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14181887077888596338.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:07,262 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14181887077888596338.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (object_multipart_initiated=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (op_hflush=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (op_abort.failures=0) (multipart_upload_completed=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (op_abort=0) (stream_write_block_uploads=0) (op_hsync=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (stream_write_total_data=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14181887077888596338.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,263 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:07,263 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:07,263 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14181887077888596338.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:07,264 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:07,264 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:07,264 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:07,264 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:07,264 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000159 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000159&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=97&ts=1731778447254
2024-11-16 17:34:07,323 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:07,323 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:07,323 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.059s
2024-11-16 17:34:07,323 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14181887077888596338.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:07,323 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14181887077888596338.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,324 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14181887077888596338.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,324 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:07,324 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:07,325 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed=0) (stream_write_total_time=0) (stream_write_block_uploads=1) (op_abort=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (op_abort.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (stream_write_total_data=65536) (object_multipart_aborted=0) (object_put_request=1) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (op_hflush=0) (op_hsync=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=59));
maximums=((multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=59) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=59, mean=59.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:07,325 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:07,326 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:07,326 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,326 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:07,326 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000160 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000160/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000160&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=218&ts=1731778447325
2024-11-16 17:34:07,331 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:07,331 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778447000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:34:07,332 [s3a-transfer-obs-bucket-unbounded-pool2-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:07,333 [s3a-transfer-obs-bucket-unbounded-pool2-t40] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,333 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:07,333 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:07,333 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:34:07,333 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:07,333 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,333 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,334 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:07,334 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=40960-41983&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000161&t0=219&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=105&ts=1731778447332
2024-11-16 17:34:07,333 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,335 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,335 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:07,335 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=8192-14435&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000161&t0=219&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=102&ts=1731778447332
2024-11-16 17:34:07,333 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,335 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,335 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:07,335 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=1947-2046&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000161&t0=219&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=100&ts=1731778447332
2024-11-16 17:34:07,367 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.032s
2024-11-16 17:34:07,367 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:34:07,367 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:34:07,367 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,400 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.065s
2024-11-16 17:34:07,401 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,406 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.073s
2024-11-16 17:34:07,407 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,409 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_exceptions=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_opened=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request=3) (stream_read_prefetch_operations.failures=0) (stream_read_block_read.failures=0) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (stream_read_bytes=1424) (action_file_opened.failures=0) (stream_read_vectored_operations=1) (stream_read_block_acquire_read=0) (stream_read_vectored_incoming_ranges=5) (stream_read_seek_policy_changed=1) (stream_read_seek_bytes_skipped=0) (stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_vectored_combined_ranges=3) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=1424) (stream_read_prefetch_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((action_http_get_request.min=32) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=0) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=73) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=170, mean=56.6667)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:07,410 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:07,410 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,411 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:07,411 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=218&ts=1731778447410
2024-11-16 17:34:07,414 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,414 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,414 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=218&ts=1731778447410
2024-11-16 17:34:07,424 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:07,424 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:07,424 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:07,425 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:07,425 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:07,425 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:07,425 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:07,425 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:07,425 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:07,425 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:07,425 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:07,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:07,427 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:07,427 [s3a-transfer-obs-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:07,428 [s3a-transfer-obs-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,428 [s3a-transfer-obs-bucket-unbounded-pool2-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [220] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=220&ts=1731778447410
2024-11-16 17:34:07,434 [s3a-transfer-obs-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:07,434 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:34:07,435 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:07,435 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:07,435 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:07,436 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778447312; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:07,436 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:07,436 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:07,437 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:07,437 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:07,437 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:07,438 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:07,438 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:07,438 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:07,438 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:07,438 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:07,438 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:07,438 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=108&ts=1731778447410
2024-11-16 17:34:07,439 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:07,450 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:34:07,450 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:34:07,450 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:34:07,450 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:07,450 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:07,450 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:07,450 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:07,450 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:07,451 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:07,451 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000162&t0=218&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=108&ts=1731778447410
2024-11-16 17:34:07,466 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:34:07,467 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:34:07,467 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:34:07,468 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:34:07,468 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.029s
2024-11-16 17:34:07,468 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.043s
2024-11-16 17:34:07,469 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:07,469 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:07,470 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:07,487 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 41, active threads = 0, queued tasks = 0, completed tasks = 41], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_bytes_uploaded=0) (directories_created=33) (object_multipart_aborted=0) (committer_stage_file_upload.failures=0) (stream_read_total_bytes=271081) (op_rename=0) (committer_commits_created=0) (store_io_request=388) (op_xattr_list.failures=0) (op_exists.failures=0) (op_xattr_get_named.failures=0) (fake_directories_created=0) (multipart_upload_list.failures=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads_committed=0) (committer_jobs_failed=0) (op_create=33) (action_http_head_request.failures=0) (action_executor_acquired=0) (op_hflush=0) (stream_read_seek_forward_operations=0) (committer_commit_job.failures=0) (multipart_upload_aborted=0) (op_xattr_list=0) (action_http_head_request=93) (action_file_opened.failures=0) (op_get_file_checksum.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_exceptions=0) (op_is_file=0) (multipart_instantiated=0) (op_xattr_get_map.failures=0) (committer_tasks_completed=0) (stream_read_vectored_operations=23) (object_put_request=66) (action_executor_acquired.failures=0) (object_list_request=132) (stream_read_unbuffered=2) (stream_read_seek_policy_changed=29) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (op_list_files.failures=0) (stream_write_total_time=0) (delegation_tokens_issued=0) (stream_read_remote_stream_drain.failures=0) (committer_magic_files_created=0) (multipart_upload_part_put_bytes=0) (committer_commits.failures=0) (committer_magic_marker_put.failures=0) (committer_commits_aborted=0) (stream_write_block_uploads=33) (op_get_content_summary.failures=0) (object_continue_list_request=0) (stream_write_queue_duration.failures=0) (stream_read_bytes=9737) (op_rename.failures=0) (object_bulk_delete_request.failures=0) (op_mkdirs=33) (op_glob_status=0) (committer_tasks_failed=0) (object_put_request.failures=0) (ignored_errors=0) (object_continue_list_request.failures=0) (op_get_delegation_token.failures=0) (object_list_request.failures=0) (stream_aborted=0) (object_select_requests=0) (op_is_file.failures=0) (op_createfile=0) (files_created=33) (op_openfile=0) (stream_read_remote_stream_aborted=0) (op_copy_from_local_file=0) (stream_write_total_data=4325376) (op_glob_status.failures=0) (stream_read_seek_backward_operations=0) (op_access.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_part_put=0) (stream_write_bytes=2162688) (object_put_bytes=2162688) (op_get_file_status=2) (files_deleted=33) (stream_read_closed=4) (op_get_file_checksum=0) (op_access=0) (op_is_directory.failures=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_map=0) (stream_read_bytes_discarded_in_close=261344) (stream_read_opened=4) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=4) (stream_read_bytes_discarded_in_abort=0) (op_createfile.failures=0) (multipart_upload_completed=0) (fake_directories_deleted=33) (committer_magic_marker_put=0) (stream_read_exceptions=0) (committer_commit_job=0) (op_exists=0) (object_put_request_completed=66) (op_xattr_get_named=0) (op_list_located_status=0) (stream_read_version_mismatches=0) (stream_read_fully_operations=1) (committer_load_single_pending_file.failures=0) (action_file_opened=27) (committer_stage_file_upload=0) (audit_failure=0) (audit_request_execution=388) (object_delete_request.failures=0) (audit_access_check_failure=0) (op_delete=33) (op_hsync=0) (committer_materialize_file.failures=0) (op_delete.failures=0) (op_list_files=0) (committer_load_single_pending_file=0) (op_xattr_get_named_map.failures=0) (op_xattr_get_named_map=0) (multipart_upload_started=0) (committer_materialize_file=0) (store_io_retry=0) (multipart_upload_abort_under_path_invoked=0) (op_abort.failures=0) (op_get_file_status.failures=0) (op_copy_from_local_file.failures=0) (stream_read_seek_operations=0) (delegation_tokens_issued.failures=0) (stream_read_operations=4) (op_get_delegation_token=0) (action_http_get_request=31) (files_copied=0) (committer_jobs_completed=0) (store_io_throttled=0) (op_list_status=0) (multipart_upload_list=0) (stream_read_vectored_combined_ranges=30) (op_create_non_recursive=0) (object_delete_request=0) (stream_read_remote_stream_aborted.failures=0) (audit_span_creation=129) (directories_deleted=0) (op_open=27) (files_delete_rejected=0) (object_copy_requests=0) (files_copied_bytes=0) (stream_write_exceptions_completing_upload=0) (op_list_status.failures=0) (stream_read_close_operations=27) (op_get_content_summary=0) (store_exists_probe=0) (object_delete_objects=66) (committer_bytes_committed=0) (stream_read_vectored_read_bytes_discarded=30497) (committer_commits_reverted=0) (op_abort=0) (object_bulk_delete_request=66) (op_create.failures=0) (op_mkdirs.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_vectored_incoming_ranges=75) (stream_read_operations_incomplete=0) (committer_commits_completed=0) (store_exists_probe.failures=0) (object_metadata_request=93) (op_is_directory=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=33));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.min=3) (op_access.failures.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.min=32) (committer_commit_job.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.failures.min=-1) (multipart_upload_list.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named_map.min=-1) (op_create.min=7) (op_rename.min=-1) (op_xattr_get_named.failures.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_stage_file_upload.failures.min=-1) (op_exists.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_createfile.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_map.min=-1) (action_http_get_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.failures.min=-1) (op_get_delegation_token.min=-1) (object_multipart_initiated.min=-1) (op_get_content_summary.min=-1) (object_continue_list_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.min=12) (op_createfile.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.min=5) (multipart_upload_list.failures.min=-1) (op_list_status.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_file.failures.min=-1) (op_create.failures.min=-1) (object_delete_request.min=-1) (action_executor_acquired.min=-1) (op_is_file.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.min=43) (object_continue_list_request.min=-1) (op_list_status.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.failures.min=-1) (op_list_files.failures.min=-1) (op_glob_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.failures.min=-1) (object_list_request.min=6) (op_xattr_get_named.min=-1) (op_is_directory.min=-1) (op_delete.failures.min=-1) (op_xattr_list.min=-1) (op_exists.min=-1) (action_http_get_request.min=32) (object_multipart_initiated.failures.min=-1) (op_access.min=-1) (object_multipart_aborted.min=-1) (op_list_files.min=-1) (op_abort.min=-1) (op_glob_status.min=-1) (committer_materialize_file.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.min=-1) (object_put_request.min=59) (action_file_opened.min=0));
maximums=((op_exists.max=-1) (committer_magic_marker_put.max=-1) (committer_materialize_file.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_get_request.max=95) (op_mkdirs.failures.max=-1) (op_get_file_status.max=9) (committer_materialize_file.max=-1) (action_file_opened.failures.max=-1) (op_is_file.max=-1) (op_list_status.failures.max=-1) (object_multipart_aborted.max=-1) (object_list_request.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_access.max=-1) (object_list_request.max=243) (op_xattr_get_map.failures.max=-1) (object_continue_list_request.max=-1) (op_abort.failures.max=-1) (op_glob_status.failures.max=-1) (committer_stage_file_upload.max=-1) (op_rename.failures.max=-1) (committer_commit_job.max=-1) (op_mkdirs.max=395) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_drain.max=1) (op_list_files.failures.max=-1) (action_file_opened.max=18) (op_access.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_initiated.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.max=38) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.failures.max=-1) (op_abort.max=-1) (action_http_head_request.max=17) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_content_summary.failures.max=-1) (stream_write_queue_duration.max=-1) (delegation_tokens_issued.failures.max=-1) (op_create.max=63) (op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (delegation_tokens_issued.max=-1) (action_http_head_request.failures.max=-1) (object_put_request.max=132) (op_createfile.failures.max=-1) (op_is_directory.max=-1) (op_delete.max=101) (op_get_content_summary.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_directory.failures.max=-1) (op_rename.max=-1) (op_exists.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_status.failures.max=-1) (op_glob_status.max=-1) (op_list_files.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.failures.max=-1) (multipart_upload_list.max=-1) (op_is_file.failures.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.failures.max=-1));
means=((committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=93, sum=663, mean=7.1290)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=33, sum=2119, mean=64.2121)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=27, sum=222, mean=8.2222)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=66, sum=3592, mean=54.4242)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=33, sum=2262, mean=68.5455)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=132, sum=1893, mean=14.3409)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=33, sum=576, mean=17.4545)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=30, sum=1050, mean=35.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=66, sum=1301, mean=19.7121)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:07,488 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:07,488 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:07,488 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,488 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,488 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,488 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000163 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000163&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=221&ts=1731778447488
2024-11-16 17:34:07,499 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:34:07,499 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:07,499 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:07,499 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,499 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:07,499 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000163 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000163&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=221&ts=1731778447488
2024-11-16 17:34:07,506 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:07,506 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:07,506 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:07,506 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:07,506 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000163 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000163&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=221&ts=1731778447488
2024-11-16 17:34:07,529 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:07,529 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:07,529 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.023s
2024-11-16 17:34:07,529 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:07,529 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:07,529 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,530 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,530 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,530 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000164 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000164&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=221&ts=1731778447529
2024-11-16 17:34:07,538 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:07,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,538 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:07,539 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-955795954364124944.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:07,540 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-955795954364124944.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (op_hsync=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (stream_write_total_time=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (op_abort.failures=0) (op_hflush=0) (stream_write_total_data=0) (object_put_request=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (op_abort=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-955795954364124944.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,540 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:07,540 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:07,540 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-955795954364124944.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:07,540 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:07,540 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:07,541 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:07,541 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:07,541 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [109] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000164 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000164&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=109&ts=1731778447529
2024-11-16 17:34:07,628 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:07,629 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:07,629 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.089s
2024-11-16 17:34:07,629 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-955795954364124944.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:07,629 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-955795954364124944.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,629 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-955795954364124944.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,629 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:07,629 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:07,630 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (op_abort=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (object_put_request=1) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (op_hflush=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (stream_write_total_time=0) (op_hsync=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_put_request.min=87) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_put_request.max=87) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=87, mean=87.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:07,630 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:07,631 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:07,632 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,632 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:07,632 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [222] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000165 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000165/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000165&t0=222&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=222&ts=1731778447631
2024-11-16 17:34:07,639 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:07,639 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:07,640 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,640 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:34:07,640 [JUnit-testEOFRanges[Buffer type : array]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,640 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_remote_stream_drain=0) (action_http_get_request.failures=0) (stream_read_opened=0) (stream_read_seek_backward_operations=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (stream_read_total_bytes=0) (stream_read_closed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_prefetch_operations=0) (stream_read_operations_incomplete=0) (action_file_opened=1) (stream_read_block_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_operations=0) (action_http_get_request=0) (stream_read_bytes_discarded_in_close=0) (stream_read_version_mismatches=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1) (stream_read_seek_bytes_skipped=0) (action_executor_acquired=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_aborted=0) (stream_read_vectored_combined_ranges=0) (stream_read_unbuffered=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=8) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=8) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:07,642 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:07,642 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,642 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:07,642 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=221&ts=1731778447642
2024-11-16 17:34:07,646 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,647 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,647 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=221&ts=1731778447642
2024-11-16 17:34:07,656 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:07,656 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:07,657 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:07,657 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:07,657 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:07,657 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:07,658 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:07,658 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:07,658 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:07,658 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:07,658 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:07,659 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:07,665 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:07,666 [s3a-transfer-obs-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:07,666 [s3a-transfer-obs-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,666 [s3a-transfer-obs-bucket-unbounded-pool2-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=223&ts=1731778447642
2024-11-16 17:34:07,674 [s3a-transfer-obs-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:07,674 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:34:07,674 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:07,675 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:07,675 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:07,675 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778447618; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:07,675 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:07,675 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:07,675 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:07,675 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:07,675 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:07,675 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:07,675 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:07,675 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:07,675 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:07,676 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:07,676 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:07,676 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=113&ts=1731778447642
2024-11-16 17:34:07,677 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:07,687 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:34:07,688 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:34:07,688 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:34:07,688 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:07,688 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:07,688 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:07,688 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:07,688 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:07,688 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:07,688 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000166&t0=221&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=113&ts=1731778447642
2024-11-16 17:34:07,700 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:34:07,700 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:34:07,700 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:34:07,700 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:34:07,700 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:34:07,700 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.042s
2024-11-16 17:34:07,701 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:07,701 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:07,702 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:07,714 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 43, active threads = 0, queued tasks = 0, completed tasks = 43], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_fully_operations=1) (files_delete_rejected=0) (stream_read_operations=4) (stream_read_operations_incomplete=0) (fake_directories_created=0) (op_list_status.failures=0) (stream_write_block_uploads_committed=0) (audit_span_creation=133) (committer_magic_marker_put=0) (audit_access_check_failure=0) (op_openfile=0) (stream_write_queue_duration.failures=0) (audit_request_execution=399) (object_put_request.failures=0) (op_list_files.failures=0) (stream_read_vectored_operations=23) (committer_stage_file_upload=0) (action_http_head_request.failures=0) (store_io_retry=0) (stream_read_remote_stream_drain=4) (object_delete_request=0) (op_xattr_list=0) (store_io_request=399) (op_rename.failures=0) (multipart_upload_list.failures=0) (directories_created=34) (op_xattr_get_map=0) (stream_read_seek_operations=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (stream_write_queue_duration=0) (object_put_bytes=2228224) (op_mkdirs.failures=0) (op_abort=0) (committer_commits.failures=0) (op_list_located_status=0) (stream_read_seek_forward_operations=0) (stream_read_closed=4) (delegation_tokens_issued=0) (object_continue_list_request.failures=0) (op_rename=0) (committer_materialize_file.failures=0) (stream_read_remote_stream_drain.failures=0) (committer_magic_files_created=0) (object_multipart_aborted=0) (object_continue_list_request=0) (committer_commit_job.failures=0) (object_metadata_request=96) (files_deleted=34) (op_create=34) (object_list_request=136) (committer_load_single_pending_file=0) (op_access=0) (committer_jobs_failed=0) (committer_commits_aborted=0) (fake_directories_deleted=34) (action_file_opened=28) (op_get_file_status=2) (multipart_upload_part_put=0) (object_multipart_initiated=0) (stream_read_close_operations=28) (op_get_file_checksum.failures=0) (committer_magic_marker_put.failures=0) (stream_read_bytes=9737) (op_get_content_summary.failures=0) (stream_write_block_uploads=34) (stream_write_block_uploads_aborted=0) (action_executor_acquired.failures=0) (committer_tasks_failed=0) (op_get_content_summary=0) (op_list_files=0) (stream_read_opened=4) (op_xattr_list.failures=0) (op_hflush=0) (store_exists_probe.failures=0) (files_copied=0) (object_delete_objects=68) (stream_read_vectored_combined_ranges=30) (multipart_upload_list=0) (object_multipart_initiated.failures=0) (committer_load_single_pending_file.failures=0) (op_create.failures=0) (stream_read_remote_stream_aborted=0) (op_is_file.failures=0) (committer_bytes_committed=0) (object_copy_requests=0) (multipart_instantiated=0) (committer_materialize_file=0) (op_get_file_status.failures=0) (ignored_errors=0) (object_put_request_completed=68) (stream_read_vectored_read_bytes_discarded=30497) (op_copy_from_local_file.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_jobs_completed=0) (stream_write_exceptions_completing_upload=0) (store_exists_probe=0) (committer_commits_completed=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_bytes_skipped=0) (op_xattr_get_map.failures=0) (stream_write_exceptions=0) (stream_write_bytes=2228224) (object_put_request=68) (stream_read_seek_backward_operations=0) (op_createfile.failures=0) (committer_bytes_uploaded=0) (committer_commits_reverted=0) (audit_failure=0) (op_exists=0) (directories_deleted=0) (stream_write_total_time=0) (store_io_throttled=0) (op_abort.failures=0) (committer_commit_job=0) (stream_read_seek_policy_changed=30) (action_http_get_request=31) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_named_map=0) (op_is_directory=0) (op_delete.failures=0) (action_http_head_request=96) (stream_read_unbuffered=2) (op_access.failures=0) (stream_write_total_data=4456448) (op_list_status=0) (op_is_file=0) (multipart_upload_part_put_bytes=0) (committer_tasks_completed=0) (op_is_directory.failures=0) (stream_read_bytes_discarded_in_close=261344) (op_exists.failures=0) (stream_read_total_bytes=271081) (op_delete=34) (multipart_upload_completed=0) (action_executor_acquired=0) (op_hsync=0) (op_open=28) (stream_read_bytes_discarded_in_abort=0) (object_select_requests=0) (op_xattr_get_named.failures=0) (stream_aborted=0) (action_file_opened.failures=0) (op_createfile=0) (op_get_delegation_token.failures=0) (object_delete_request.failures=0) (op_get_file_checksum=0) (op_copy_from_local_file=0) (delegation_tokens_issued.failures=0) (action_http_get_request.failures=0) (op_create_non_recursive=0) (stream_read_vectored_incoming_ranges=75) (object_multipart_aborted.failures=0) (op_glob_status=0) (multipart_upload_abort_under_path_invoked=0) (object_bulk_delete_request.failures=0) (object_bulk_delete_request=68) (op_get_delegation_token=0) (files_copied_bytes=0) (committer_stage_file_upload.failures=0) (committer_commits_created=0) (stream_read_exceptions=0) (files_created=34) (op_mkdirs=34) (object_list_request.failures=0) (op_glob_status.failures=0) (multipart_upload_aborted=0) (op_xattr_get_named=0) (multipart_upload_started=0));
gauges=((stream_write_block_uploads_pending=34) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0));
minimums=((op_xattr_list.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_magic_marker_put.min=-1) (op_get_file_checksum.min=-1) (op_xattr_list.failures.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.failures.min=-1) (action_http_head_request.min=3) (op_mkdirs.min=32) (op_exists.min=-1) (object_multipart_aborted.failures.min=-1) (delegation_tokens_issued.min=-1) (multipart_upload_list.min=-1) (op_list_status.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.min=43) (op_exists.failures.min=-1) (op_list_files.min=-1) (op_get_delegation_token.failures.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (op_is_file.min=-1) (action_http_head_request.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_delete.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=32) (op_get_file_checksum.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_create.failures.min=-1) (object_delete_request.min=-1) (committer_materialize_file.failures.min=-1) (committer_materialize_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.failures.min=-1) (object_bulk_delete_request.min=11) (op_get_content_summary.failures.min=-1) (object_list_request.min=6) (action_file_opened.min=8) (object_multipart_aborted.min=-1) (object_put_request.min=87) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_list_request.failures.min=-1) (op_createfile.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_create.min=7) (op_is_directory.min=-1) (committer_magic_marker_put.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.min=-1) (op_createfile.min=-1) (op_get_delegation_token.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (store_exists_probe.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.failures.min=-1) (op_get_file_status.min=5) (op_list_files.failures.min=-1) (object_put_request.failures.min=-1) (op_is_file.failures.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.min=-1) (op_access.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.min=-1));
maximums=((store_exists_probe.max=-1) (op_xattr_get_named.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.max=95) (object_bulk_delete_request.max=38) (multipart_upload_list.failures.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.max=-1) (op_list_status.max=-1) (op_exists.max=-1) (op_get_content_summary.max=-1) (op_abort.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.max=-1) (op_is_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.max=395) (op_mkdirs.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_initiated.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (op_xattr_get_named.failures.max=-1) (op_create.max=63) (op_is_file.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (op_rename.max=-1) (object_list_request.failures.max=-1) (op_copy_from_local_file.max=-1) (object_list_request.max=243) (op_xattr_get_named_map.failures.max=-1) (op_create.failures.max=-1) (object_continue_list_request.max=-1) (action_executor_acquired.max=-1) (op_xattr_list.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.failures.max=-1) (action_file_opened.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_exists.failures.max=-1) (multipart_upload_list.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_delete.max=101) (stream_write_queue_duration.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.max=17) (action_file_opened.max=18) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (op_is_directory.failures.max=-1) (object_put_request.max=132) (op_glob_status.max=-1) (op_glob_status.failures.max=-1) (op_access.failures.max=-1) (op_createfile.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.max=-1) (object_put_request.failures.max=-1) (op_list_status.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_rename.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_status.max=9) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.max=-1) (op_list_files.failures.max=-1) (op_is_directory.max=-1) (store_exists_probe.failures.max=-1));
means=((op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=34, sum=586, mean=17.2353)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=68, sum=3702, mean=54.4412)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=30, sum=1050, mean=35.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=96, sum=681, mean=7.0938)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=34, sum=2303, mean=67.7353)) (object_list_request.mean=(samples=136, sum=1929, mean=14.1838)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=34, sum=2163, mean=63.6176)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (action_file_opened.mean=(samples=28, sum=230, mean=8.2143)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=68, sum=1324, mean=19.4706)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:07,714 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:07,714 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:07,714 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,715 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,715 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,715 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000167 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000167&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=224&ts=1731778447714
2024-11-16 17:34:07,736 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.021s
2024-11-16 17:34:07,737 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:07,737 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:07,737 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,737 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:07,737 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000167 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000167&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=224&ts=1731778447714
2024-11-16 17:34:07,742 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:07,742 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:07,742 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:07,742 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:07,743 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000167 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000167&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=224&ts=1731778447714
2024-11-16 17:34:07,766 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:07,766 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:07,766 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.024s
2024-11-16 17:34:07,766 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:07,767 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:07,767 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,767 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,767 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,767 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000168 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000168&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=224&ts=1731778447766
2024-11-16 17:34:07,773 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:07,773 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,774 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:07,774 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1307297918945830218.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:07,775 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1307297918945830218.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (op_hflush=0) (op_abort=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_exceptions=0) (object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1307297918945830218.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,775 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:07,775 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:07,775 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1307297918945830218.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:07,776 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:07,776 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:07,776 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:07,776 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:07,776 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000168 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000168&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=116&ts=1731778447766
2024-11-16 17:34:07,828 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:07,828 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:07,828 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.052s
2024-11-16 17:34:07,828 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1307297918945830218.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:07,828 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1307297918945830218.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,828 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1307297918945830218.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:07,828 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:07,828 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:07,829 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=1) (object_put_request=1) (object_multipart_initiated=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (op_hflush=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (action_executor_acquired=0) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (op_hsync=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (object_put_request.min=52) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1));
maximums=((op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=52));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=52, mean=52.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:07,830 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:07,830 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:07,831 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:07,831 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:07,831 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000169 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000169&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=224&ts=1731778447830
2024-11-16 17:34:07,835 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:07,835 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:07,835 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,835 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:07,835 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:34:07,835 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,836 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-65535&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000169&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=224&ts=1731778447830
2024-11-16 17:34:07,854 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.019s
2024-11-16 17:34:07,854 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:07,854 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:34:07,855 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:07,855 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:07,855 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:07,855 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:07,855 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,855 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:07,855 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:07,855 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [119] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000169&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=119&ts=1731778447830
2024-11-16 17:34:07,892 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.037s
2024-11-16 17:34:07,892 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:34:07,892 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:07,892 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:34:07,893 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:34:07,893 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:34:07,893 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7443 bytes
2024-11-16 17:34:07,893 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:07,893 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:07,893 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:07,893 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8741 bytes
2024-11-16 17:34:07,893 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:34:07,893 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:34:07,894 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (action_http_get_request=2) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (stream_read_close_operations=1) (stream_read_prefetch_operations=0) (stream_read_bytes=350) (stream_read_opened=1) (stream_read_operations=1) (stream_read_vectored_incoming_ranges=2) (stream_read_fully_operations=0) (stream_read_exceptions=0) (stream_read_seek_operations=0) (stream_read_block_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain=1) (action_http_get_request.failures=0) (stream_read_closed=1) (stream_read_vectored_operations=1) (stream_read_vectored_read_bytes_discarded=10) (stream_read_block_acquire_read=0) (action_file_opened.failures=0) (stream_read_total_bytes=65686) (stream_aborted=0) (stream_read_bytes_discarded_in_close=65336) (action_file_opened=1) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=5) (action_http_get_request.min=18) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((action_http_get_request.max=37) (stream_read_remote_stream_drain.max=0) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=5) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=55, mean=27.5000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:07,895 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:07,895 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,895 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:07,895 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=224&ts=1731778447895
2024-11-16 17:34:07,899 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,899 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,899 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=224&ts=1731778447895
2024-11-16 17:34:07,907 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:07,908 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:07,908 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:07,908 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:07,908 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:07,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:07,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:07,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:07,908 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:07,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:07,908 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:07,908 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:07,909 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:07,909 [s3a-transfer-obs-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:07,909 [s3a-transfer-obs-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,909 [s3a-transfer-obs-bucket-unbounded-pool2-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=225&ts=1731778447895
2024-11-16 17:34:07,916 [s3a-transfer-obs-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:07,916 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:34:07,916 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:07,917 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:07,917 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:07,917 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778447820; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:07,917 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:07,917 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:07,917 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:07,917 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:07,918 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:07,918 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:07,918 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:07,918 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:07,918 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:07,918 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:07,919 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:07,919 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:07,919 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=118&ts=1731778447895
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.018s
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:07,936 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000170&t0=224&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=118&ts=1731778447895
2024-11-16 17:34:07,949 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:34:07,949 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:34:07,949 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:34:07,949 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:34:07,949 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.031s
2024-11-16 17:34:07,950 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.042s
2024-11-16 17:34:07,950 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:07,950 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:07,952 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:07,967 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 44, active threads = 0, queued tasks = 0, completed tasks = 44], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_io_throttled=0) (op_get_content_summary.failures=0) (op_get_file_status.failures=0) (op_get_delegation_token.failures=0) (stream_write_bytes=2293760) (op_xattr_get_named=0) (files_delete_rejected=0) (object_put_request.failures=0) (committer_load_single_pending_file=0) (stream_read_closed=5) (op_create.failures=0) (files_copied_bytes=0) (committer_magic_marker_put.failures=0) (multipart_upload_started=0) (op_copy_from_local_file=0) (stream_read_bytes_discarded_in_close=326680) (op_createfile=0) (op_xattr_get_named_map=0) (stream_write_exceptions=0) (op_create_non_recursive=0) (committer_commits_aborted=0) (action_http_get_request=33) (audit_request_execution=412) (committer_jobs_completed=0) (store_exists_probe.failures=0) (op_hflush=0) (op_rename=0) (op_abort=0) (action_file_opened=29) (op_exists=0) (op_glob_status=0) (committer_materialize_file=0) (stream_read_unbuffered=2) (stream_read_vectored_read_bytes_discarded=30507) (committer_commits_created=0) (multipart_instantiated=0) (op_get_content_summary=0) (stream_read_bytes=10087) (op_mkdirs=35) (files_deleted=35) (multipart_upload_list.failures=0) (object_list_request.failures=0) (multipart_upload_completed=0) (op_create=35) (op_xattr_get_named.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain.failures=0) (delegation_tokens_issued=0) (ignored_errors=0) (multipart_upload_list=0) (action_http_get_request.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_remote_stream_aborted=0) (op_open=29) (op_xattr_list=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_skipped=0) (object_list_request=140) (stream_read_operations_incomplete=0) (object_continue_list_request.failures=0) (fake_directories_created=0) (stream_aborted=0) (op_openfile=0) (op_get_file_status=2) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=5) (object_multipart_aborted=0) (object_delete_request=0) (op_mkdirs.failures=0) (multipart_upload_aborted=0) (committer_tasks_failed=0) (stream_write_queue_duration=0) (object_metadata_request=99) (committer_tasks_completed=0) (stream_read_total_bytes=336767) (delegation_tokens_issued.failures=0) (op_copy_from_local_file.failures=0) (action_http_head_request=99) (stream_read_seek_policy_changed=31) (stream_read_seek_bytes_discarded=0) (files_created=35) (committer_materialize_file.failures=0) (committer_bytes_committed=0) (stream_write_exceptions_completing_upload=0) (committer_magic_files_created=0) (op_glob_status.failures=0) (object_delete_request.failures=0) (op_delete=35) (op_get_delegation_token=0) (object_copy_requests=0) (stream_read_vectored_incoming_ranges=77) (op_delete.failures=0) (store_io_retry=0) (op_createfile.failures=0) (object_put_request_completed=70) (op_xattr_get_map=0) (directories_created=35) (object_multipart_aborted.failures=0) (object_delete_objects=70) (action_executor_acquired.failures=0) (stream_read_vectored_operations=24) (object_multipart_initiated=0) (stream_read_exceptions=0) (object_put_request=70) (object_bulk_delete_request=70) (op_list_status=0) (stream_write_block_uploads_committed=0) (op_get_file_checksum=0) (store_exists_probe=0) (directories_deleted=0) (fake_directories_deleted=35) (audit_failure=0) (audit_span_creation=137) (op_rename.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (committer_stage_file_upload.failures=0) (op_hsync=0) (op_xattr_list.failures=0) (stream_read_seek_forward_operations=0) (op_list_status.failures=0) (op_get_file_checksum.failures=0) (committer_jobs_failed=0) (stream_read_operations=5) (op_is_file=0) (op_list_files=0) (op_access=0) (audit_access_check_failure=0) (stream_write_total_data=4587520) (op_list_files.failures=0) (object_continue_list_request=0) (op_is_directory=0) (committer_commits_completed=0) (op_exists.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (op_list_located_status=0) (stream_read_fully_operations=1) (stream_read_opened=5) (op_is_file.failures=0) (op_access.failures=0) (stream_write_block_uploads_aborted=0) (committer_commit_job.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits.failures=0) (stream_write_total_time=0) (stream_write_queue_duration.failures=0) (op_xattr_get_named_map.failures=0) (store_io_request=412) (stream_read_close_operations=29) (committer_commit_job=0) (object_multipart_initiated.failures=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (object_put_bytes=2293760) (files_copied=0) (stream_read_version_mismatches=0) (committer_magic_marker_put=0) (committer_load_single_pending_file.failures=0) (committer_bytes_uploaded=0) (action_http_head_request.failures=0) (action_executor_acquired=0) (object_select_requests=0) (committer_commits_reverted=0) (stream_read_vectored_combined_ranges=31) (op_is_directory.failures=0) (committer_stage_file_upload=0) (op_xattr_get_map.failures=0) (stream_write_block_uploads=35));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=35));
minimums=((action_executor_acquired.failures.min=-1) (object_continue_list_request.min=-1) (object_delete_request.min=-1) (op_xattr_list.min=-1) (op_xattr_get_map.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.min=32) (committer_load_single_pending_file.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.min=18) (committer_commit_job.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_named.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (op_exists.failures.min=-1) (object_bulk_delete_request.min=11) (object_multipart_initiated.failures.min=-1) (op_create.min=7) (op_xattr_get_map.min=-1) (action_http_head_request.min=3) (op_is_directory.min=-1) (action_http_get_request.failures.min=-1) (op_list_status.failures.min=-1) (op_delete.min=42) (op_create.failures.min=-1) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.min=-1) (op_rename.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.min=5) (stream_read_remote_stream_drain.min=0) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_delegation_token.min=-1) (op_abort.failures.min=-1) (delegation_tokens_issued.min=-1) (op_rename.failures.min=-1) (op_access.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.min=-1) (op_delete.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.min=-1) (op_exists.min=-1) (op_list_files.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_status.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_delete_request.failures.min=-1) (op_createfile.min=-1) (op_access.failures.min=-1) (action_file_opened.failures.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.failures.min=-1) (object_put_request.min=52) (op_createfile.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.min=5) (object_list_request.min=6) (op_mkdirs.failures.min=-1) (multipart_upload_list.min=-1) (object_multipart_initiated.min=-1) (op_is_file.failures.min=-1) (op_abort.min=-1) (committer_materialize_file.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_xattr_list.failures.max=-1) (op_exists.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_rename.failures.max=-1) (op_is_directory.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.failures.max=-1) (op_glob_status.max=-1) (object_list_request.max=243) (action_file_opened.max=18) (multipart_upload_list.max=-1) (object_multipart_aborted.max=-1) (store_exists_probe.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_delegation_token.max=-1) (op_is_file.failures.max=-1) (op_is_file.max=-1) (committer_commit_job.max=-1) (object_bulk_delete_request.max=38) (stream_write_queue_duration.max=-1) (action_file_opened.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.failures.max=-1) (action_http_get_request.max=95) (op_mkdirs.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named.max=-1) (multipart_upload_list.failures.max=-1) (op_list_files.max=-1) (op_delete.max=101) (op_createfile.failures.max=-1) (op_get_file_status.max=9) (op_abort.failures.max=-1) (op_xattr_list.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.max=395) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_map.max=-1) (object_delete_request.failures.max=-1) (op_delete.failures.max=-1) (object_put_request.max=132) (op_create.failures.max=-1) (op_exists.max=-1) (op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_copy_from_local_file.max=-1) (op_glob_status.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_materialize_file.max=-1) (op_get_content_summary.max=-1) (op_rename.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_list_status.max=-1) (object_multipart_aborted.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_create.max=63) (object_continue_list_request.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.max=17) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_get_request.failures.max=-1) (op_access.max=-1) (object_delete_request.max=-1) (op_get_file_checksum.max=-1));
means=((op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=70, sum=3777, mean=53.9571)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=35, sum=2355, mean=67.2857)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=4, mean=0.8000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=32, sum=1105, mean=34.5313)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=35, sum=593, mean=16.9429)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=70, sum=1354, mean=19.3429)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=35, sum=2205, mean=63.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=29, sum=235, mean=8.1034)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=140, sum=1971, mean=14.0786)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=99, sum=694, mean=7.0101)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:07,968 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:07,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:07,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:07,968 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:07,968 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000171 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000171&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=226&ts=1731778447967
2024-11-16 17:34:07,978 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:07,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:07,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:07,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:07,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:07,979 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000171 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000171&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=226&ts=1731778447967
2024-11-16 17:34:07,982 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:07,982 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:07,982 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:07,982 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:07,983 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000171 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000171&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=226&ts=1731778447967
2024-11-16 17:34:08,022 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:08,022 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:08,022 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.040s
2024-11-16 17:34:08,023 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:08,024 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:08,024 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,024 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,024 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,024 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000172 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000172&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=226&ts=1731778448024
2024-11-16 17:34:08,039 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:34:08,039 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,039 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:08,039 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1712941635807265689.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:08,041 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1712941635807265689.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (object_put_request=0) (stream_write_exceptions=0) (action_executor_acquired=0) (op_hflush=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (op_hsync=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1712941635807265689.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,041 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:08,041 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:08,041 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1712941635807265689.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:08,042 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:08,042 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:08,042 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:08,042 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:08,042 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000172 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000172&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=121&ts=1731778448024
2024-11-16 17:34:08,086 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:08,086 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:08,086 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.044s
2024-11-16 17:34:08,087 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1712941635807265689.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:08,087 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1712941635807265689.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,087 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1712941635807265689.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,087 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:08,087 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:08,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (op_abort=0) (op_hflush=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (object_put_request=1) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (object_put_request.min=44) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1));
maximums=((action_executor_acquired.max=-1) (object_put_request.max=44) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=44, mean=44.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:08,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:08,089 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:08,089 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,089 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:08,089 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000173 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000173&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=226&ts=1731778448089
2024-11-16 17:34:08,095 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:08,095 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:08,096 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:08,096 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:34:08,096 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:08,096 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:34:08,096 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:34:08,096 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:08,096 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:08,096 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:08,096 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:08,096 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:08,096 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:08,097 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-4200&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000173&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=123&ts=1731778448089
2024-11-16 17:34:08,097 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=16101-16200&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000173&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=125&ts=1731778448089
2024-11-16 17:34:08,120 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.024s
2024-11-16 17:34:08,121 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.025s
2024-11-16 17:34:08,121 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:34:08,121 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:08,121 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:08,122 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened.failures=0) (stream_read_block_acquire_read=0) (stream_read_seek_forward_operations=0) (stream_read_block_read.failures=0) (stream_read_close_operations=1) (stream_read_total_bytes=300) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=2) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=300) (stream_read_closed=0) (stream_read_vectored_operations=1) (stream_read_operations_incomplete=0) (action_http_get_request=2) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (stream_read_unbuffered=0) (stream_read_vectored_incoming_ranges=3) (action_file_opened=1) (stream_read_block_read=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_vectored_read_bytes_discarded=4001) (stream_read_seek_bytes_discarded=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=24) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=6) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((action_http_get_request.max=25) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=6) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=49, mean=24.5000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:08,123 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:08,123 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,124 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:08,124 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=226&ts=1731778448123
2024-11-16 17:34:08,128 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,128 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,128 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=226&ts=1731778448123
2024-11-16 17:34:08,140 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:34:08,141 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:08,141 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:08,141 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:08,141 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:08,141 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:08,142 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:08,142 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:08,142 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:08,142 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:08,142 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:08,142 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:08,143 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:08,143 [s3a-transfer-obs-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:08,143 [s3a-transfer-obs-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,143 [s3a-transfer-obs-bucket-unbounded-pool2-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=227&ts=1731778448123
2024-11-16 17:34:08,151 [s3a-transfer-obs-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:08,151 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:34:08,151 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:08,152 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:08,152 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:08,152 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778448081; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:08,152 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:08,152 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:08,152 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:08,153 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:08,153 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:08,153 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:08,153 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:08,153 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:08,153 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:08,153 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:08,153 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:08,153 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=127&ts=1731778448123
2024-11-16 17:34:08,155 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:08,174 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:34:08,174 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.021s
2024-11-16 17:34:08,175 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.022s
2024-11-16 17:34:08,175 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:08,175 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:08,175 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:08,175 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:08,175 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:08,175 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:08,176 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000174&t0=226&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=127&ts=1731778448123
2024-11-16 17:34:08,194 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.019s
2024-11-16 17:34:08,194 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:34:08,194 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.019s
2024-11-16 17:34:08,194 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.041s
2024-11-16 17:34:08,194 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.039s
2024-11-16 17:34:08,195 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.053s
2024-11-16 17:34:08,195 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:08,195 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:08,200 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:08,215 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 45, active threads = 0, queued tasks = 0, completed tasks = 45], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_copy_requests=0) (multipart_upload_started=0) (committer_commits_created=0) (op_rename=0) (committer_bytes_committed=0) (action_file_opened.failures=0) (op_xattr_list=0) (delegation_tokens_issued=0) (stream_write_exceptions=0) (committer_load_single_pending_file.failures=0) (committer_load_single_pending_file=0) (committer_tasks_failed=0) (multipart_upload_completed=0) (stream_write_block_uploads=36) (stream_read_operations_incomplete=0) (object_bulk_delete_request=72) (stream_aborted=0) (committer_materialize_file=0) (stream_write_block_uploads_aborted=0) (op_createfile.failures=0) (op_xattr_get_named.failures=0) (op_glob_status=0) (stream_read_bytes_discarded_in_abort=0) (store_exists_probe.failures=0) (multipart_upload_list.failures=0) (stream_read_remote_stream_drain=5) (object_put_request.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_vectored_incoming_ranges=80) (stream_read_seek_backward_operations=0) (stream_write_block_uploads_committed=0) (stream_read_total_bytes=337067) (op_get_delegation_token.failures=0) (op_mkdirs.failures=0) (audit_request_execution=425) (committer_stage_file_upload=0) (op_is_directory.failures=0) (ignored_errors=0) (op_get_content_summary.failures=0) (op_xattr_list.failures=0) (files_created=36) (stream_write_total_time=0) (object_list_request=144) (op_exists=0) (committer_magic_files_created=0) (stream_write_total_data=4718592) (object_multipart_aborted.failures=0) (committer_stage_file_upload.failures=0) (stream_read_operations=5) (stream_read_seek_forward_operations=0) (op_get_file_checksum=0) (audit_access_check_failure=0) (stream_write_bytes=2359296) (action_http_get_request=35) (stream_read_vectored_read_bytes_discarded=34508) (stream_read_exceptions=0) (stream_read_seek_operations=0) (stream_write_queue_duration=0) (op_xattr_get_named_map=0) (op_get_file_status=2) (object_select_requests=0) (op_create_non_recursive=0) (op_openfile=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_close_operations=30) (op_list_located_status=0) (directories_deleted=0) (audit_failure=0) (object_bulk_delete_request.failures=0) (op_abort=0) (fake_directories_deleted=36) (action_executor_acquired=0) (object_metadata_request=102) (op_rename.failures=0) (multipart_upload_list=0) (directories_created=36) (action_http_head_request.failures=0) (delegation_tokens_issued.failures=0) (committer_commits_aborted=0) (object_continue_list_request.failures=0) (object_put_request_completed=72) (committer_commit_job=0) (object_multipart_aborted=0) (committer_jobs_failed=0) (op_glob_status.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=1) (stream_read_seek_bytes_skipped=0) (op_is_file=0) (op_copy_from_local_file.failures=0) (op_get_content_summary=0) (object_delete_request.failures=0) (files_deleted=36) (op_exists.failures=0) (committer_magic_marker_put=0) (files_copied=0) (op_abort.failures=0) (stream_read_bytes_discarded_in_close=326680) (files_delete_rejected=0) (object_put_bytes=2359296) (fake_directories_created=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_map=0) (op_get_delegation_token=0) (op_list_files=0) (stream_write_queue_duration.failures=0) (op_xattr_get_named=0) (op_copy_from_local_file=0) (object_multipart_initiated.failures=0) (op_access=0) (stream_read_seek_policy_changed=32) (action_file_opened=30) (object_put_request=72) (committer_commits_reverted=0) (op_xattr_get_map.failures=0) (store_io_request=425) (object_continue_list_request=0) (store_exists_probe=0) (op_delete.failures=0) (op_create.failures=0) (committer_jobs_completed=0) (op_access.failures=0) (stream_read_opened=5) (action_executor_acquired.failures=0) (multipart_upload_aborted=0) (op_xattr_get_named_map.failures=0) (committer_commits.failures=0) (action_http_head_request=102) (committer_commit_job.failures=0) (audit_span_creation=141) (stream_read_vectored_combined_ranges=33) (store_io_throttled=0) (op_open=30) (op_createfile=0) (committer_magic_marker_put.failures=0) (op_get_file_checksum.failures=0) (op_hsync=0) (op_is_file.failures=0) (stream_read_closed=5) (multipart_instantiated=0) (object_delete_request=0) (committer_tasks_completed=0) (action_http_get_request.failures=0) (stream_read_bytes=10387) (op_is_directory=0) (stream_write_exceptions_completing_upload=0) (object_delete_objects=72) (op_mkdirs=36) (committer_materialize_file.failures=0) (op_list_status=0) (files_copied_bytes=0) (op_get_file_status.failures=0) (object_multipart_initiated=0) (stream_read_version_mismatches=0) (op_list_files.failures=0) (op_create=36) (stream_read_unbuffered=2) (op_list_status.failures=0) (store_io_retry=0) (stream_read_vectored_operations=25) (multipart_upload_part_put=0) (object_list_request.failures=0) (op_hflush=0) (stream_read_remote_stream_drain.failures=0) (committer_commits_completed=0) (stream_read_bytes_backwards_on_seek=0) (op_delete=36) (committer_bytes_uploaded=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_write_block_uploads_pending=36) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0));
minimums=((op_exists.min=-1) (committer_materialize_file.failures.min=-1) (op_list_files.min=-1) (op_delete.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_rename.min=-1) (object_put_request.min=44) (action_http_head_request.min=3) (multipart_upload_list.min=-1) (op_glob_status.failures.min=-1) (op_access.min=-1) (object_multipart_initiated.min=-1) (op_get_delegation_token.min=-1) (object_bulk_delete_request.min=11) (op_abort.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_status.min=-1) (op_createfile.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named_map.min=-1) (object_list_request.min=6) (op_get_file_status.failures.min=-1) (op_delete.min=42) (action_file_opened.min=6) (delegation_tokens_issued.failures.min=-1) (op_abort.failures.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.min=-1) (op_createfile.failures.min=-1) (object_continue_list_request.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_map.failures.min=-1) (object_delete_request.min=-1) (action_http_head_request.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_exists.failures.min=-1) (op_is_directory.failures.min=-1) (op_mkdirs.min=32) (committer_commit_job.min=-1) (op_rename.failures.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.failures.min=-1) (store_exists_probe.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (object_delete_request.failures.min=-1) (op_create.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.min=-1) (op_list_status.failures.min=-1) (op_glob_status.min=-1) (committer_magic_marker_put.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_status.min=5) (committer_commit_job.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_create.min=7) (committer_load_single_pending_file.min=-1) (op_xattr_list.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_checksum.min=-1) (op_is_file.min=-1) (op_copy_from_local_file.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_content_summary.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_drain.min=0) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.min=24) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_remote_stream_drain.max=1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_commit_job.max=-1) (op_list_status.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (op_create.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.max=-1) (op_glob_status.max=-1) (committer_load_single_pending_file.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.failures.max=-1) (op_createfile.failures.max=-1) (op_get_content_summary.max=-1) (op_list_status.max=-1) (op_rename.max=-1) (op_get_file_checksum.max=-1) (object_delete_request.failures.max=-1) (op_exists.max=-1) (op_is_file.max=-1) (op_is_directory.max=-1) (committer_stage_file_upload.failures.max=-1) (op_create.max=63) (delegation_tokens_issued.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named.max=-1) (object_bulk_delete_request.max=38) (op_list_files.failures.max=-1) (object_delete_request.max=-1) (op_access.failures.max=-1) (store_exists_probe.max=-1) (object_put_request.max=132) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_file_opened.max=18) (stream_read_remote_stream_drain.failures.max=-1) (op_delete.max=101) (op_createfile.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (action_http_get_request.max=95) (committer_stage_file_upload.max=-1) (op_abort.failures.max=-1) (op_is_file.failures.max=-1) (action_http_head_request.failures.max=-1) (op_exists.failures.max=-1) (op_rename.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_initiated.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_head_request.max=17) (object_continue_list_request.max=-1) (op_glob_status.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_status.max=9) (store_exists_probe.failures.max=-1) (op_get_file_status.failures.max=-1) (op_access.max=-1) (object_list_request.max=243) (committer_materialize_file.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_files.max=-1) (op_xattr_list.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_mkdirs.max=395) (op_get_content_summary.failures.max=-1));
means=((committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=30, sum=241, mean=8.0333)) (object_list_request.mean=(samples=144, sum=2016, mean=14.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=102, sum=707, mean=6.9314)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=36, sum=609, mean=16.9167)) (object_put_request.mean=(samples=72, sum=3861, mean=53.6250)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=36, sum=2259, mean=62.7500)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=34, sum=1154, mean=33.9412)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=36, sum=2410, mean=66.9444)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=72, sum=1393, mean=19.3472)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=4, mean=0.8000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:08,216 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:08,216 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:08,216 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,216 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,216 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,216 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000175 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000175&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=228&ts=1731778448216
2024-11-16 17:34:08,229 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:34:08,230 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:08,230 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:08,230 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:08,232 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000175 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000175&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=228&ts=1731778448216
2024-11-16 17:34:08,237 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:08,238 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:08,238 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:08,238 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:08,239 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000175 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000175&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=228&ts=1731778448216
2024-11-16 17:34:08,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:08,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:08,261 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.023s
2024-11-16 17:34:08,261 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:08,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:08,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,262 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,262 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,262 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000176 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000176&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=228&ts=1731778448261
2024-11-16 17:34:08,272 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:08,273 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,273 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:08,273 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9159284877229282633.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:08,274 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9159284877229282633.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (op_abort.failures=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_put_request.failures=0) (stream_write_bytes=65536) (action_executor_acquired=0) (stream_write_total_data=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_exceptions=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9159284877229282633.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,274 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:08,274 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:08,274 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9159284877229282633.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:08,275 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:08,275 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:08,275 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:08,275 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:08,275 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000176 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000176&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=128&ts=1731778448261
2024-11-16 17:34:08,330 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:08,330 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:08,330 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.055s
2024-11-16 17:34:08,331 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9159284877229282633.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:08,331 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9159284877229282633.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,331 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9159284877229282633.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,331 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:08,331 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:08,333 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (op_abort=0) (stream_write_block_uploads=1) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (op_abort.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (op_hsync=0) (object_put_request.failures=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (op_hflush=0) (object_put_request=1) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=55) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=55) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=55, mean=55.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:08,333 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:08,334 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:08,334 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,334 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:08,334 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000177 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000177/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000177&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=228&ts=1731778448334
2024-11-16 17:34:08,339 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:08,339 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:08,339 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:08,340 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_total_bytes=0) (stream_read_operations_incomplete=0) (action_executor_acquired=0) (action_file_opened=1) (stream_read_seek_forward_operations=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_closed=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_vectored_operations=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_seek_backward_operations=0) (stream_read_close_operations=1) (stream_read_opened=0) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (action_http_get_request=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0) (stream_read_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_bytes_skipped=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_file_opened.min=5) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=5) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:08,341 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:08,342 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,342 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:08,342 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=228&ts=1731778448341
2024-11-16 17:34:08,345 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,345 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,345 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=228&ts=1731778448341
2024-11-16 17:34:08,353 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:08,353 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:08,353 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:08,354 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:08,354 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:08,354 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:08,354 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:08,354 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:08,354 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:08,354 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:08,354 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:08,355 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:08,355 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:08,355 [s3a-transfer-obs-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:08,355 [s3a-transfer-obs-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,356 [s3a-transfer-obs-bucket-unbounded-pool2-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=229&ts=1731778448341
2024-11-16 17:34:08,362 [s3a-transfer-obs-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:08,362 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:34:08,362 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:08,363 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:08,363 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:08,363 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778448325; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:08,363 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:08,363 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:08,363 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:08,364 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:08,364 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:08,364 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:08,364 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:08,364 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:08,364 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:08,364 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:08,364 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:08,364 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:08,365 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=130&ts=1731778448341
2024-11-16 17:34:08,382 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:34:08,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:34:08,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.019s
2024-11-16 17:34:08,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:08,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:08,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:08,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:08,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:08,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:08,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000178&t0=228&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=130&ts=1731778448341
2024-11-16 17:34:08,394 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:34:08,395 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:34:08,395 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:34:08,395 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:34:08,395 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.031s
2024-11-16 17:34:08,395 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.041s
2024-11-16 17:34:08,395 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:08,395 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:08,396 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:08,411 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 46, active threads = 0, queued tasks = 0, completed tasks = 46], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_fully_operations=1) (op_list_status=0) (stream_write_total_time=0) (store_io_request=436) (op_xattr_list=0) (op_mkdirs.failures=0) (stream_read_seek_operations=0) (store_exists_probe=0) (committer_commits_created=0) (object_delete_request.failures=0) (op_hflush=0) (op_get_delegation_token.failures=0) (stream_read_exceptions=0) (committer_load_single_pending_file=0) (object_bulk_delete_request=74) (stream_write_bytes=2424832) (op_openfile=0) (op_get_content_summary=0) (committer_magic_marker_put.failures=0) (object_put_request_completed=74) (op_copy_from_local_file.failures=0) (object_copy_requests=0) (op_is_directory.failures=0) (op_get_file_checksum=0) (object_list_request.failures=0) (committer_tasks_completed=0) (multipart_upload_completed=0) (committer_commit_job.failures=0) (op_mkdirs=37) (committer_materialize_file=0) (stream_read_remote_stream_drain=5) (stream_aborted=0) (object_put_request.failures=0) (files_deleted=37) (op_exists.failures=0) (op_rename=0) (stream_write_block_uploads=37) (object_multipart_initiated=0) (op_xattr_get_named.failures=0) (multipart_upload_started=0) (store_exists_probe.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_total_bytes=337067) (stream_write_block_uploads_committed=0) (object_metadata_request=105) (committer_jobs_failed=0) (stream_read_seek_bytes_skipped=0) (action_http_get_request.failures=0) (op_abort=0) (object_continue_list_request.failures=0) (object_multipart_aborted.failures=0) (op_glob_status=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits_reverted=0) (op_createfile.failures=0) (action_executor_acquired.failures=0) (op_get_file_checksum.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_list=0) (files_created=37) (multipart_upload_list.failures=0) (op_access=0) (stream_read_remote_stream_aborted.failures=0) (object_multipart_initiated.failures=0) (committer_materialize_file.failures=0) (action_http_head_request=105) (multipart_upload_abort_under_path_invoked=0) (op_access.failures=0) (files_copied_bytes=0) (op_abort.failures=0) (committer_stage_file_upload.failures=0) (fake_directories_created=0) (op_list_files=0) (stream_write_total_data=4849664) (op_open=31) (stream_read_vectored_read_bytes_discarded=34508) (op_is_directory=0) (committer_bytes_uploaded=0) (fake_directories_deleted=37) (audit_access_check_failure=0) (committer_jobs_completed=0) (committer_bytes_committed=0) (op_delete=37) (delegation_tokens_issued=0) (op_xattr_get_named_map.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_is_file.failures=0) (committer_magic_marker_put=0) (op_hsync=0) (audit_span_creation=145) (stream_read_remote_stream_drain.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named_map=0) (op_get_file_status=2) (directories_created=37) (op_get_file_status.failures=0) (stream_read_bytes=10387) (stream_read_bytes_discarded_in_close=326680) (multipart_instantiated=0) (object_put_request=74) (store_io_throttled=0) (action_file_opened.failures=0) (files_copied=0) (object_delete_objects=74) (files_delete_rejected=0) (object_list_request=148) (multipart_upload_part_put=0) (op_glob_status.failures=0) (op_list_files.failures=0) (stream_read_seek_backward_operations=0) (store_io_retry=0) (committer_commits.failures=0) (op_xattr_get_map.failures=0) (op_copy_from_local_file=0) (stream_read_remote_stream_aborted=0) (committer_load_single_pending_file.failures=0) (op_xattr_get_map=0) (object_select_requests=0) (stream_read_unbuffered=2) (op_xattr_get_named=0) (audit_failure=0) (stream_write_exceptions_completing_upload=0) (stream_read_operations_incomplete=0) (committer_stage_file_upload=0) (audit_request_execution=436) (stream_read_seek_bytes_discarded=0) (op_createfile=0) (op_list_status.failures=0) (directories_deleted=0) (committer_commits_completed=0) (committer_tasks_failed=0) (stream_read_close_operations=31) (delegation_tokens_issued.failures=0) (stream_read_seek_forward_operations=0) (ignored_errors=0) (op_is_file=0) (committer_commit_job=0) (object_continue_list_request=0) (object_put_bytes=2424832) (action_executor_acquired=0) (stream_read_closed=5) (op_rename.failures=0) (stream_read_vectored_incoming_ranges=80) (op_create_non_recursive=0) (op_get_content_summary.failures=0) (op_create=37) (committer_commits_aborted=0) (op_get_delegation_token=0) (op_xattr_list.failures=0) (op_list_located_status=0) (committer_magic_files_created=0) (object_delete_request=0) (stream_read_opened=5) (op_exists=0) (stream_read_seek_policy_changed=33) (stream_read_vectored_combined_ranges=33) (stream_read_operations=5) (op_create.failures=0) (stream_read_vectored_operations=25) (object_multipart_aborted=0) (action_file_opened=31) (op_delete.failures=0) (multipart_upload_aborted=0) (action_http_get_request=35) (stream_write_exceptions=0) (stream_write_queue_duration.failures=0) (stream_read_version_mismatches=0) (stream_write_queue_duration=0) (action_http_head_request.failures=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=37) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0));
minimums=((op_get_file_status.min=5) (op_mkdirs.min=32) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (object_delete_request.failures.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_status.min=-1) (op_delete.failures.min=-1) (op_rename.min=-1) (store_exists_probe.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.min=-1) (object_put_request.failures.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.min=55) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.failures.min=-1) (op_delete.min=41) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_drain.min=0) (committer_load_single_pending_file.failures.min=-1) (op_get_file_status.failures.min=-1) (action_http_head_request.min=3) (op_exists.min=-1) (op_create.min=7) (object_continue_list_request.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_materialize_file.min=-1) (object_bulk_delete_request.min=11) (op_xattr_list.min=-1) (op_exists.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_delegation_token.failures.min=-1) (object_delete_request.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_glob_status.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_access.failures.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.failures.min=-1) (action_http_get_request.min=24) (op_xattr_get_named_map.min=-1) (op_is_directory.failures.min=-1) (op_list_files.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.min=-1) (op_access.min=-1) (op_rename.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_aborted.min=-1) (committer_materialize_file.failures.min=-1) (action_executor_acquired.min=-1) (op_list_status.failures.min=-1) (committer_commit_job.failures.min=-1) (op_abort.failures.min=-1) (object_list_request.min=6) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.min=5) (op_createfile.failures.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_is_file.min=-1) (op_abort.min=-1) (store_exists_probe.failures.min=-1));
maximums=((committer_materialize_file.max=-1) (object_multipart_initiated.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_files.failures.max=-1) (op_delete.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_list.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_file.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named_map.max=-1) (op_get_content_summary.failures.max=-1) (object_continue_list_request.max=-1) (committer_materialize_file.failures.max=-1) (action_http_head_request.failures.max=-1) (op_mkdirs.failures.max=-1) (object_delete_request.failures.max=-1) (op_xattr_list.failures.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_aborted.max=-1) (op_access.max=-1) (op_xattr_get_map.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.max=-1) (delegation_tokens_issued.failures.max=-1) (multipart_upload_list.max=-1) (op_is_file.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_status.max=9) (committer_commit_job.max=-1) (op_delete.max=101) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_stage_file_upload.max=-1) (op_exists.failures.max=-1) (action_file_opened.max=18) (stream_read_remote_stream_drain.max=1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_createfile.failures.max=-1) (op_access.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_create.max=63) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.max=38) (op_xattr_get_named.max=-1) (op_exists.max=-1) (committer_load_single_pending_file.failures.max=-1) (store_exists_probe.max=-1) (object_put_request.max=132) (op_rename.max=-1) (action_http_head_request.max=17) (op_list_files.max=-1) (op_abort.failures.max=-1) (action_http_get_request.max=95) (stream_write_queue_duration.failures.max=-1) (op_mkdirs.max=395) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_copy_from_local_file.max=-1) (object_list_request.max=243) (committer_load_single_pending_file.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (op_list_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (delegation_tokens_issued.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (op_glob_status.failures.max=-1) (object_put_request.failures.max=-1) (op_createfile.max=-1) (object_multipart_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_create.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_file_checksum.max=-1) (object_list_request.failures.max=-1) (op_get_content_summary.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=148, sum=2053, mean=13.8716)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=105, sum=721, mean=6.8667)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=4, mean=0.8000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=74, sum=1422, mean=19.2162)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=37, sum=2300, mean=62.1622)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=34, sum=1154, mean=33.9412)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=37, sum=621, mean=16.7838)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=74, sum=3937, mean=53.2027)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=37, sum=2455, mean=66.3514)) (action_file_opened.mean=(samples=31, sum=246, mean=7.9355)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:08,412 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:08,413 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:08,413 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,414 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,414 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,414 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [230] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000179 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000179&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=230&ts=1731778448412
2024-11-16 17:34:08,422 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:08,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:08,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:08,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:08,425 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [230] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000179 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000179&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=230&ts=1731778448412
2024-11-16 17:34:08,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:08,429 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:08,429 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:08,429 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:08,430 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [230] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000179 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000179&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=230&ts=1731778448412
2024-11-16 17:34:08,478 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:08,478 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:08,479 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.049s
2024-11-16 17:34:08,479 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:08,479 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:08,479 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,479 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,479 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,479 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [230] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000180 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000180&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=230&ts=1731778448479
2024-11-16 17:34:08,489 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:08,490 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,490 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:08,491 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18352982034698962027.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:08,492 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18352982034698962027.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_total_data=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (op_hsync=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (object_put_request=0) (object_multipart_initiated=0) (object_put_request.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted.failures=0) (op_abort=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (stream_write_queue_duration=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18352982034698962027.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,492 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:08,493 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:08,493 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18352982034698962027.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:08,494 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:08,494 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:08,494 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:08,494 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:08,494 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000180 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000180&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=132&ts=1731778448479
2024-11-16 17:34:08,580 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:08,580 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:08,580 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.086s
2024-11-16 17:34:08,581 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18352982034698962027.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:08,581 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18352982034698962027.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,581 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18352982034698962027.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,581 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:08,581 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:08,582 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (stream_write_total_time=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (object_put_request=1) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=86) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=86) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=86, mean=86.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:08,582 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:08,583 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:08,583 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,583 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:08,583 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [230] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000181 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000181&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=230&ts=1731778448583
2024-11-16 17:34:08,590 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:08,590 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:08,590 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:08,590 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:34:08,591 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:08,591 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:34:08,591 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:08,591 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:08,591 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:08,591 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000181 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=10-1199&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000181&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=133&ts=1731778448583
2024-11-16 17:34:08,593 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:34:08,608 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:34:08,608 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:34:08,608 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:34:08,608 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:34:08,608 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:08,610 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1) (action_http_get_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_bytes=315) (stream_read_block_acquire_read.failures=0) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (stream_aborted=0) (stream_read_block_read=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=875) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_forward_operations=0) (stream_read_total_bytes=315) (stream_read_operations=0) (stream_read_vectored_operations=1) (stream_read_vectored_incoming_ranges=4) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_read_opened=0) (action_http_get_request=1) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes_discarded_in_abort=0) (action_file_opened=1) (stream_read_bytes_discarded_in_close=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=17) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=7) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=17) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=7) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=17, mean=17.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:08,611 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:08,611 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,612 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:08,612 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [230] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=230&ts=1731778448611
2024-11-16 17:34:08,618 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,618 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,618 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [230] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=230&ts=1731778448611
2024-11-16 17:34:08,628 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:08,628 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:08,628 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:08,628 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:08,628 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:08,628 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:08,628 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:08,628 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:08,628 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:08,628 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:08,628 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:08,628 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:08,629 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:08,629 [s3a-transfer-obs-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:08,630 [s3a-transfer-obs-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,630 [s3a-transfer-obs-bucket-unbounded-pool2-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [231] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=231&ts=1731778448611
2024-11-16 17:34:08,635 [s3a-transfer-obs-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:34:08,635 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:34:08,635 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:08,635 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:08,635 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:08,635 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778448554; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:08,635 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:08,635 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:08,635 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:08,635 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:08,636 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:08,636 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:08,636 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:08,636 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:08,636 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:08,636 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:08,636 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:08,636 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:08,636 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=135&ts=1731778448611
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:08,649 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000182&t0=230&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=135&ts=1731778448611
2024-11-16 17:34:08,667 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:34:08,667 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:34:08,667 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.018s
2024-11-16 17:34:08,667 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:34:08,667 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.031s
2024-11-16 17:34:08,667 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.039s
2024-11-16 17:34:08,667 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:08,667 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:08,670 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:08,683 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 47, active threads = 0, queued tasks = 0, completed tasks = 47], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_rename=0) (op_xattr_get_named_map=0) (stream_read_seek_operations=0) (op_exists=0) (directories_deleted=0) (op_copy_from_local_file=0) (stream_read_operations=5) (stream_read_bytes_backwards_on_seek=0) (stream_write_total_data=4980736) (stream_read_remote_stream_aborted=0) (op_list_located_status=0) (object_delete_request.failures=0) (op_get_file_checksum=0) (op_xattr_get_map.failures=0) (object_delete_objects=76) (multipart_upload_list=0) (committer_commit_job=0) (op_get_delegation_token=0) (op_get_content_summary=0) (audit_access_check_failure=0) (op_list_status=0) (stream_read_version_mismatches=0) (stream_read_opened=5) (stream_read_fully_operations=1) (op_hsync=0) (stream_read_close_operations=32) (op_copy_from_local_file.failures=0) (op_xattr_get_named_map.failures=0) (files_copied_bytes=0) (stream_write_total_time=0) (op_is_file=0) (multipart_upload_completed=0) (object_continue_list_request=0) (files_created=38) (committer_load_single_pending_file.failures=0) (stream_write_bytes=2490368) (op_abort.failures=0) (committer_commits.failures=0) (object_select_requests=0) (stream_read_vectored_read_bytes_discarded=35383) (op_abort=0) (stream_read_seek_bytes_discarded=0) (op_mkdirs=38) (object_put_request_completed=76) (committer_jobs_failed=0) (object_metadata_request=108) (multipart_upload_abort_under_path_invoked=0) (op_is_directory.failures=0) (stream_read_bytes_discarded_in_abort=0) (committer_stage_file_upload.failures=0) (committer_stage_file_upload=0) (op_list_files=0) (stream_read_unbuffered=2) (stream_read_seek_backward_operations=0) (stream_read_closed=5) (fake_directories_created=0) (committer_commit_job.failures=0) (stream_read_total_bytes=337382) (stream_write_exceptions_completing_upload=0) (committer_tasks_failed=0) (multipart_upload_part_put_bytes=0) (committer_jobs_completed=0) (committer_magic_marker_put=0) (op_createfile.failures=0) (store_io_throttled=0) (op_list_files.failures=0) (op_openfile=0) (op_glob_status=0) (committer_bytes_committed=0) (committer_magic_files_created=0) (op_xattr_list.failures=0) (delegation_tokens_issued=0) (op_glob_status.failures=0) (object_bulk_delete_request.failures=0) (op_access.failures=0) (stream_read_remote_stream_drain=5) (stream_write_exceptions=0) (action_file_opened=32) (committer_commits_completed=0) (files_copied=0) (stream_read_vectored_combined_ranges=34) (committer_load_single_pending_file=0) (object_multipart_aborted=0) (stream_read_remote_stream_aborted.failures=0) (op_get_file_status.failures=0) (multipart_upload_part_put=0) (op_delete=38) (action_executor_acquired.failures=0) (object_list_request.failures=0) (object_bulk_delete_request=76) (op_create=38) (multipart_instantiated=0) (op_delete.failures=0) (action_http_head_request.failures=0) (action_executor_acquired=0) (action_http_get_request=36) (action_http_get_request.failures=0) (object_list_request=152) (store_io_retry=0) (op_get_delegation_token.failures=0) (committer_tasks_completed=0) (object_put_request.failures=0) (op_create.failures=0) (op_get_content_summary.failures=0) (committer_commits_aborted=0) (op_open=32) (stream_write_queue_duration.failures=0) (action_http_head_request=108) (op_is_file.failures=0) (stream_read_seek_policy_changed=34) (action_file_opened.failures=0) (files_deleted=38) (op_xattr_get_map=0) (op_exists.failures=0) (stream_read_seek_bytes_skipped=0) (stream_write_block_uploads_committed=0) (committer_commits_reverted=0) (stream_read_vectored_incoming_ranges=84) (object_multipart_initiated=0) (directories_created=38) (op_create_non_recursive=0) (committer_materialize_file.failures=0) (files_delete_rejected=0) (op_xattr_get_named=0) (stream_read_bytes=10702) (object_continue_list_request.failures=0) (audit_failure=0) (object_multipart_initiated.failures=0) (op_xattr_get_named.failures=0) (fake_directories_deleted=38) (audit_request_execution=448) (op_mkdirs.failures=0) (stream_write_queue_duration=0) (object_put_request=76) (op_rename.failures=0) (object_put_bytes=2490368) (store_exists_probe=0) (stream_read_exceptions=0) (op_list_status.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_list.failures=0) (op_xattr_list=0) (stream_read_remote_stream_drain.failures=0) (store_exists_probe.failures=0) (multipart_upload_started=0) (stream_write_block_uploads=38) (multipart_upload_aborted=0) (op_createfile=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_operations=26) (op_get_file_status=2) (store_io_request=448) (object_copy_requests=0) (op_get_file_checksum.failures=0) (delegation_tokens_issued.failures=0) (committer_materialize_file=0) (object_multipart_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_aborted=0) (ignored_errors=0) (committer_bytes_uploaded=0) (stream_write_block_uploads_aborted=0) (audit_span_creation=149) (op_hflush=0) (stream_read_bytes_discarded_in_close=326680) (op_access=0) (op_is_directory=0) (committer_commits_created=0) (object_delete_request=0));
gauges=((stream_write_block_uploads_pending=38) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_access.min=-1) (object_list_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.min=3) (op_mkdirs.min=32) (stream_write_queue_duration.failures.min=-1) (op_list_files.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.failures.min=-1) (store_exists_probe.min=-1) (op_is_file.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=0) (committer_materialize_file.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.min=-1) (object_delete_request.min=-1) (object_bulk_delete_request.min=11) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_magic_marker_put.min=-1) (object_list_request.min=5) (op_xattr_get_named.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (op_rename.min=-1) (object_multipart_initiated.min=-1) (op_xattr_list.min=-1) (op_create.min=7) (op_list_files.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.min=-1) (delegation_tokens_issued.min=-1) (op_abort.min=-1) (multipart_upload_list.failures.min=-1) (action_file_opened.min=7) (op_mkdirs.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named.min=-1) (delegation_tokens_issued.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_list.failures.min=-1) (op_createfile.failures.min=-1) (object_put_request.min=86) (op_get_file_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.min=-1) (op_list_status.failures.min=-1) (op_list_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_is_directory.min=-1) (action_executor_acquired.min=-1) (op_access.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_get_request.min=17) (op_get_file_checksum.min=-1) (op_is_directory.failures.min=-1) (op_exists.failures.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_delete.min=39) (action_http_head_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_file_status.min=5) (op_delete.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.min=-1) (op_rename.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_load_single_pending_file.min=-1));
maximums=((op_xattr_list.failures.max=-1) (action_http_head_request.max=17) (op_xattr_get_named.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_put_request.failures.max=-1) (op_is_file.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_directory.max=-1) (op_list_status.failures.max=-1) (op_mkdirs.max=395) (op_create.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_access.failures.max=-1) (object_put_request.max=132) (stream_write_queue_duration.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_list_request.failures.max=-1) (op_create.max=63) (action_http_get_request.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.max=-1) (op_access.max=-1) (committer_stage_file_upload.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_exists.max=-1) (op_glob_status.max=-1) (committer_commit_job.failures.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.max=-1) (op_abort.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_materialize_file.max=-1) (store_exists_probe.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_list.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (op_xattr_list.max=-1) (op_glob_status.failures.max=-1) (action_http_get_request.max=95) (object_continue_list_request.failures.max=-1) (op_abort.max=-1) (op_createfile.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_map.failures.max=-1) (stream_write_queue_duration.max=-1) (op_rename.max=-1) (op_get_file_checksum.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (op_delete.failures.max=-1) (committer_commit_job.max=-1) (object_list_request.max=243) (op_get_delegation_token.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_http_head_request.failures.max=-1) (op_get_file_status.max=9) (stream_read_remote_stream_drain.max=1) (action_file_opened.max=18) (op_createfile.failures.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.max=-1) (op_delete.max=101) (op_rename.failures.max=-1) (op_list_files.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_content_summary.max=-1) (object_multipart_aborted.failures.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_initiated.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_status.failures.max=-1) (op_list_status.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_directory.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.max=38) (object_multipart_initiated.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=38, sum=633, mean=16.6579)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=108, sum=738, mean=6.8333)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=76, sum=4071, mean=53.5658)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=152, sum=2086, mean=13.7237)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=76, sum=1453, mean=19.1184)) (action_http_get_request.mean=(samples=35, sum=1171, mean=33.4571)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=38, sum=2522, mean=66.3684)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=4, mean=0.8000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=38, sum=2339, mean=61.5526)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=32, sum=253, mean=7.9063)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:08,684 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:08,684 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:08,684 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,684 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,684 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,684 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [232] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000183 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000183&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=232&ts=1731778448684
2024-11-16 17:34:08,690 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:08,690 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:08,690 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:08,690 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,690 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:08,691 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [232] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000183 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000183&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=232&ts=1731778448684
2024-11-16 17:34:08,693 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:08,693 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:08,694 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:08,694 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:08,694 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [232] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000183 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000183&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=232&ts=1731778448684
2024-11-16 17:34:08,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:08,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:08,712 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.019s
2024-11-16 17:34:08,712 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:08,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:08,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,713 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,713 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,713 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [232] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000184 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000184&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=232&ts=1731778448712
2024-11-16 17:34:08,719 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:08,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,720 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:08,720 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17904719860988000848.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:08,721 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17904719860988000848.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (op_abort.failures=0) (stream_write_total_data=0) (op_abort=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (object_multipart_aborted=0) (op_hsync=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17904719860988000848.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,721 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:08,721 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:08,721 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17904719860988000848.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:08,722 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:08,722 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:08,722 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:08,722 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:08,722 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [137] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000184 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000184&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=137&ts=1731778448712
2024-11-16 17:34:08,782 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:08,782 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:08,782 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.060s
2024-11-16 17:34:08,782 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17904719860988000848.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:08,782 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17904719860988000848.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,782 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17904719860988000848.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,782 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:08,783 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:08,784 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (stream_write_bytes=65536) (stream_write_total_time=0) (op_abort=0) (object_multipart_aborted.failures=0) (stream_write_total_data=65536) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (object_put_request=1) (multipart_upload_completed=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=60) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=60) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=60, mean=60.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:08,784 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:08,785 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:08,785 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,785 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:08,785 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [232] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000185 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000185&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=232&ts=1731778448785
2024-11-16 17:34:08,789 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:08,789 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:08,789 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:08,789 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:34:08,789 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:08,790 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:34:08,790 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:34:08,790 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:08,790 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:08,790 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:08,790 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [139] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000185 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-7998&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000185&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=139&ts=1731778448785
2024-11-16 17:34:08,807 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:34:08,808 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:34:08,808 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:34:08,808 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:08,809 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired=0) (stream_aborted=0) (stream_read_vectored_incoming_ranges=3) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (action_file_opened=1) (action_http_get_request=1) (stream_read_exceptions=0) (stream_read_total_bytes=300) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read=0) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_close_operations=1) (stream_read_bytes=300) (stream_read_vectored_operations=1));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_file_opened.min=4) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=17) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_http_get_request.max=17) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=4) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=17, mean=17.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:08,810 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:08,810 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,810 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:08,810 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [232] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=232&ts=1731778448810
2024-11-16 17:34:08,816 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,816 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,816 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [232] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=232&ts=1731778448810
2024-11-16 17:34:08,823 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:08,823 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:08,823 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:08,823 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:08,823 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:08,823 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:08,824 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:08,824 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:08,824 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:08,824 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:08,824 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:08,824 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:08,824 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:08,825 [s3a-transfer-obs-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:08,825 [s3a-transfer-obs-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,825 [s3a-transfer-obs-bucket-unbounded-pool2-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [233] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=233&ts=1731778448810
2024-11-16 17:34:08,832 [s3a-transfer-obs-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:08,832 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:34:08,832 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:08,832 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:08,832 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:08,832 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778448771; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:08,832 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:08,833 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:08,833 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:08,834 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:08,834 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:08,834 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:08,834 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:08,834 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:08,834 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:08,834 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:08,834 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:08,834 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:08,834 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [140] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=140&ts=1731778448810
2024-11-16 17:34:08,848 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:34:08,848 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:34:08,848 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:34:08,849 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:08,849 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:08,849 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:08,849 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:08,849 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:08,849 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:08,850 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [140] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000186&t0=232&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=140&ts=1731778448810
2024-11-16 17:34:08,880 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.030s
2024-11-16 17:34:08,880 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.031s
2024-11-16 17:34:08,880 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.031s
2024-11-16 17:34:08,880 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.046s
2024-11-16 17:34:08,880 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.046s
2024-11-16 17:34:08,880 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.056s
2024-11-16 17:34:08,880 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:08,880 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:08,882 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:08,892 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 48, active threads = 0, queued tasks = 0, completed tasks = 48], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_total_data=5111808) (object_put_request_completed=78) (store_exists_probe.failures=0) (op_get_file_checksum.failures=0) (object_copy_requests=0) (stream_read_vectored_operations=27) (stream_aborted=0) (op_create_non_recursive=0) (action_http_head_request.failures=0) (committer_magic_marker_put=0) (op_is_file=0) (stream_read_vectored_read_bytes_discarded=43082) (stream_write_queue_duration.failures=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (op_list_files=0) (multipart_upload_list.failures=0) (op_glob_status.failures=0) (object_select_requests=0) (committer_magic_files_created=0) (stream_read_remote_stream_drain.failures=0) (object_continue_list_request.failures=0) (op_get_delegation_token=0) (action_file_opened.failures=0) (object_metadata_request=111) (object_multipart_initiated.failures=0) (multipart_upload_list=0) (op_xattr_list=0) (object_list_request=156) (op_exists.failures=0) (op_get_file_status=2) (multipart_upload_started=0) (stream_read_exceptions=0) (committer_jobs_failed=0) (committer_bytes_committed=0) (store_exists_probe=0) (files_copied_bytes=0) (delegation_tokens_issued=0) (fake_directories_created=0) (committer_materialize_file=0) (op_createfile=0) (op_rename=0) (op_create.failures=0) (stream_read_vectored_incoming_ranges=87) (op_access.failures=0) (committer_bytes_uploaded=0) (op_get_file_checksum=0) (op_abort.failures=0) (object_continue_list_request=0) (multipart_upload_aborted=0) (directories_created=39) (stream_read_remote_stream_drain=5) (stream_read_fully_operations=1) (stream_write_block_uploads_committed=0) (op_mkdirs=39) (stream_read_remote_stream_aborted=0) (committer_commit_job=0) (action_executor_acquired.failures=0) (audit_failure=0) (committer_materialize_file.failures=0) (stream_read_seek_policy_changed=35) (multipart_instantiated=0) (op_hflush=0) (object_delete_objects=78) (op_list_status=0) (stream_read_total_bytes=337682) (committer_magic_marker_put.failures=0) (ignored_errors=0) (committer_tasks_failed=0) (stream_read_seek_operations=0) (committer_commits_completed=0) (op_glob_status=0) (op_openfile=0) (op_xattr_get_named.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_list_files.failures=0) (stream_read_vectored_combined_ranges=35) (stream_read_seek_backward_operations=0) (op_access=0) (stream_read_operations_incomplete=0) (committer_tasks_completed=0) (op_mkdirs.failures=0) (object_bulk_delete_request.failures=0) (stream_read_version_mismatches=0) (object_put_request.failures=0) (op_delete=39) (stream_write_total_time=0) (store_io_throttled=0) (stream_read_closed=5) (object_multipart_aborted.failures=0) (files_deleted=39) (committer_jobs_completed=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named_map.failures=0) (op_list_status.failures=0) (delegation_tokens_issued.failures=0) (audit_request_execution=460) (op_createfile.failures=0) (stream_read_operations=5) (action_http_get_request.failures=0) (committer_commits_reverted=0) (committer_load_single_pending_file=0) (stream_read_bytes_discarded_in_close=326680) (op_open=33) (object_multipart_aborted=0) (op_copy_from_local_file=0) (op_is_directory.failures=0) (committer_commit_job.failures=0) (directories_deleted=0) (stream_write_bytes=2555904) (stream_write_queue_duration=0) (op_is_file.failures=0) (op_xattr_get_map.failures=0) (stream_read_close_operations=33) (object_list_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (committer_stage_file_upload.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_list.failures=0) (op_exists=0) (stream_read_unbuffered=2) (stream_read_bytes=11002) (op_delete.failures=0) (op_xattr_get_map=0) (op_create=39) (op_get_file_status.failures=0) (committer_stage_file_upload=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_opened=5) (op_get_delegation_token.failures=0) (op_rename.failures=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named_map=0) (stream_write_block_uploads=39) (op_get_content_summary.failures=0) (files_delete_rejected=0) (audit_span_creation=153) (committer_load_single_pending_file.failures=0) (store_io_request=460) (multipart_upload_part_put_bytes=0) (store_io_retry=0) (audit_access_check_failure=0) (action_file_opened=33) (committer_commits_created=0) (action_executor_acquired=0) (object_delete_request=0) (multipart_upload_completed=0) (op_xattr_get_named=0) (op_is_directory=0) (op_list_located_status=0) (stream_write_exceptions=0) (committer_commits.failures=0) (stream_read_seek_forward_operations=0) (object_multipart_initiated=0) (object_put_request=78) (fake_directories_deleted=39) (op_abort=0) (object_delete_request.failures=0) (files_created=39) (object_bulk_delete_request=78) (committer_commits_aborted=0) (action_http_head_request=111) (action_http_get_request=37) (op_copy_from_local_file.failures=0) (op_get_content_summary=0) (multipart_upload_part_put=0) (stream_read_seek_bytes_skipped=0) (files_copied=0) (object_put_bytes=2555904));
gauges=((stream_write_block_uploads_pending=39) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((op_xattr_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=17) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (action_http_head_request.min=3) (op_access.min=-1) (op_list_files.failures.min=-1) (store_exists_probe.failures.min=-1) (op_rename.failures.min=-1) (object_delete_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.failures.min=-1) (op_list_status.min=-1) (op_get_content_summary.min=-1) (op_rename.min=-1) (op_delete.min=39) (op_copy_from_local_file.min=-1) (op_xattr_list.min=-1) (action_http_head_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.failures.min=-1) (committer_materialize_file.min=-1) (object_put_request.min=60) (committer_load_single_pending_file.failures.min=-1) (op_list_files.min=-1) (op_exists.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_map.min=-1) (op_create.min=7) (action_executor_acquired.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_list_request.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.min=-1) (object_put_request.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_drain.min=0) (op_createfile.failures.min=-1) (store_exists_probe.min=-1) (op_create.failures.min=-1) (action_file_opened.min=4) (op_is_directory.min=-1) (action_file_opened.failures.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.min=11) (op_get_file_checksum.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_status.min=5) (op_mkdirs.min=28) (stream_write_queue_duration.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.min=5) (op_xattr_get_map.failures.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.min=-1) (op_get_file_status.failures.min=-1) (op_glob_status.min=-1) (committer_materialize_file.failures.min=-1) (delegation_tokens_issued.min=-1) (op_exists.min=-1) (object_continue_list_request.min=-1) (multipart_upload_list.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_content_summary.failures.min=-1));
maximums=((op_glob_status.failures.max=-1) (object_put_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_list_files.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (op_mkdirs.failures.max=-1) (op_glob_status.max=-1) (op_create.max=63) (op_get_delegation_token.max=-1) (multipart_upload_list.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_status.max=-1) (action_file_opened.max=18) (op_is_directory.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.max=395) (op_get_content_summary.max=-1) (op_get_file_checksum.max=-1) (op_is_file.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.max=38) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_exists.failures.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_get_request.max=95) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (committer_materialize_file.max=-1) (committer_stage_file_upload.max=-1) (action_file_opened.failures.max=-1) (op_access.failures.max=-1) (op_rename.failures.max=-1) (store_exists_probe.max=-1) (op_abort.max=-1) (object_list_request.failures.max=-1) (op_exists.max=-1) (op_is_directory.max=-1) (op_access.max=-1) (op_copy_from_local_file.max=-1) (action_executor_acquired.max=-1) (object_continue_list_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.failures.max=-1) (action_http_head_request.max=17) (object_multipart_initiated.failures.max=-1) (op_delete.max=101) (object_delete_request.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_http_get_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named_map.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_status.failures.max=-1) (op_rename.max=-1) (op_is_file.failures.max=-1) (op_xattr_list.max=-1) (op_list_files.failures.max=-1) (op_createfile.failures.max=-1) (object_put_request.max=132) (object_list_request.max=243) (op_xattr_get_named.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_status.max=9) (op_delete.failures.max=-1));
means=((action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=111, sum=751, mean=6.7658)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=4, mean=0.8000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=78, sum=1496, mean=19.1795)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=36, sum=1188, mean=33.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=39, sum=2550, mean=65.3846)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=78, sum=4148, mean=53.1795)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=33, sum=257, mean=7.7879)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=39, sum=641, mean=16.4359)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=156, sum=2112, mean=13.5385)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=39, sum=2396, mean=61.4359)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:08,893 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:08,893 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:08,893 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,893 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,893 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,893 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [234] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000187 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000187&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=234&ts=1731778448893
2024-11-16 17:34:08,899 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:08,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:08,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:08,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:08,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:08,900 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [234] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000187 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000187&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=234&ts=1731778448893
2024-11-16 17:34:08,904 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:08,904 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:08,904 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:08,905 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:08,905 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [234] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000187 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000187&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=234&ts=1731778448893
2024-11-16 17:34:08,935 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:08,935 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:08,935 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.031s
2024-11-16 17:34:08,936 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:08,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:08,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:08,937 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:08,937 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [234] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000188 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000188&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=234&ts=1731778448936
2024-11-16 17:34:08,947 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:08,948 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:08,948 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:08,948 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12468588176523847860.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:08,949 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12468588176523847860.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (stream_write_total_time=0) (object_multipart_aborted=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (op_abort=0) (object_put_request=0) (multipart_upload_completed=0) (stream_write_total_data=0) (stream_write_exceptions=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12468588176523847860.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:08,949 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:08,949 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:08,950 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12468588176523847860.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:08,950 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:08,951 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:08,951 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:08,951 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:08,951 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [138] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000188 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000188&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=138&ts=1731778448936
2024-11-16 17:34:08,999 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:08,999 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:08,999 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.048s
2024-11-16 17:34:09,003 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12468588176523847860.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:09,003 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12468588176523847860.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,003 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12468588176523847860.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,003 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:09,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:09,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (object_multipart_initiated=0) (op_abort.failures=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (op_abort=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (stream_write_block_uploads=1) (object_put_request=1) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (object_put_request.min=48) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=48) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=48, mean=48.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:09,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:09,007 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,007 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,007 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:09,007 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [234] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=234&ts=1731778449007
2024-11-16 17:34:09,012 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:09,013 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:09,013 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,013 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:09,013 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:09,013 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:34:09,013 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:34:09,013 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,013 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,014 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,014 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:09,014 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=8192-14435&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=149&ts=1731778449007
2024-11-16 17:34:09,013 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,015 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,015 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:09,015 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=1947-2046&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=147&ts=1731778449007
2024-11-16 17:34:09,013 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,015 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:09,016 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=40960-41983&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000189&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=150&ts=1731778449007
2024-11-16 17:34:09,032 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:34:09,032 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:34:09,032 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:34:09,033 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,033 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:34:09,033 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,035 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:34:09,036 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,036 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_opened=0) (stream_read_vectored_combined_ranges=3) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_read.failures=0) (stream_read_total_bytes=1424) (stream_read_remote_stream_aborted.failures=0) (stream_read_closed=0) (action_file_opened=1) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read.failures=0) (action_file_opened.failures=0) (stream_read_unbuffered=0) (stream_read_block_read=0) (stream_read_bytes=1424) (stream_read_operations=0) (stream_read_vectored_incoming_ranges=5) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_read_remote_stream_drain=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations=0) (action_http_get_request=3) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_seek_backward_operations=0) (stream_read_vectored_operations=1) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_read_exceptions=0) (stream_read_seek_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=6) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=18) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=6) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=20) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=56, mean=18.6667)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:09,038 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:09,038 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,038 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,038 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [234] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=234&ts=1731778449037
2024-11-16 17:34:09,043 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,043 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,043 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [234] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=234&ts=1731778449037
2024-11-16 17:34:09,050 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:09,050 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:09,050 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:09,051 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:09,051 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:09,051 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:09,051 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:09,051 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:09,051 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:09,051 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:09,051 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:09,051 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:09,052 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:09,052 [s3a-transfer-obs-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:09,052 [s3a-transfer-obs-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,052 [s3a-transfer-obs-bucket-unbounded-pool2-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [240] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=240&ts=1731778449037
2024-11-16 17:34:09,060 [s3a-transfer-obs-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:09,060 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:34:09,061 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:09,061 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:09,061 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:09,061 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778448993; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:09,061 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:09,061 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:09,061 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:09,062 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:09,062 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:09,062 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:09,062 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:09,062 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:09,062 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,062 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,062 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:09,062 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,062 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=152&ts=1731778449037
2024-11-16 17:34:09,076 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:34:09,076 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:34:09,076 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:34:09,077 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:09,077 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:09,077 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,077 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,077 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:09,077 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,077 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000190&t0=234&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=152&ts=1731778449037
2024-11-16 17:34:09,088 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:34:09,088 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:34:09,088 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:34:09,088 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.026s
2024-11-16 17:34:09,088 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.026s
2024-11-16 17:34:09,089 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.038s
2024-11-16 17:34:09,089 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:09,089 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:09,091 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:09,103 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 49, active threads = 0, queued tasks = 0, completed tasks = 49], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_close_operations=34) (fake_directories_deleted=40) (multipart_upload_list.failures=0) (op_xattr_list=0) (stream_read_opened=5) (committer_bytes_uploaded=0) (committer_stage_file_upload.failures=0) (files_delete_rejected=0) (op_xattr_get_map.failures=0) (store_io_request=474) (files_deleted=40) (stream_read_operations_incomplete=0) (files_copied=0) (op_create=40) (stream_write_exceptions=0) (committer_jobs_failed=0) (committer_commits_aborted=0) (multipart_upload_completed=0) (action_http_head_request.failures=0) (action_file_opened=34) (committer_commits_completed=0) (stream_read_exceptions=0) (op_glob_status.failures=0) (op_get_file_status=2) (committer_commits_created=0) (object_put_request_completed=80) (op_is_directory=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_aborted=0) (op_list_status.failures=0) (object_delete_objects=80) (op_get_file_checksum.failures=0) (stream_read_total_bytes=339106) (multipart_upload_abort_under_path_invoked=0) (action_http_head_request=114) (op_create_non_recursive=0) (stream_read_bytes_discarded_in_abort=0) (object_copy_requests=0) (audit_failure=0) (stream_write_queue_duration=0) (object_bulk_delete_request=80) (op_get_content_summary.failures=0) (stream_read_operations=5) (stream_read_vectored_incoming_ranges=92) (audit_span_creation=157) (stream_read_remote_stream_aborted.failures=0) (op_exists.failures=0) (action_file_opened.failures=0) (delegation_tokens_issued.failures=0) (op_open=34) (op_delete.failures=0) (op_rename.failures=0) (op_glob_status=0) (files_created=40) (op_mkdirs=40) (op_list_status=0) (audit_request_execution=474) (op_xattr_get_named.failures=0) (op_mkdirs.failures=0) (stream_aborted=0) (committer_materialize_file=0) (committer_tasks_failed=0) (object_metadata_request=114) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (op_access.failures=0) (store_exists_probe=0) (stream_read_remote_stream_drain=5) (op_get_file_checksum=0) (committer_commits.failures=0) (op_rename=0) (op_is_directory.failures=0) (op_list_located_status=0) (op_createfile=0) (stream_read_seek_operations=0) (fake_directories_created=0) (object_continue_list_request.failures=0) (multipart_instantiated=0) (committer_tasks_completed=0) (stream_read_seek_backward_operations=0) (committer_load_single_pending_file=0) (committer_commits_reverted=0) (delegation_tokens_issued=0) (object_multipart_initiated=0) (store_io_retry=0) (stream_read_bytes=12426) (stream_write_queue_duration.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads=40) (multipart_upload_started=0) (committer_commit_job.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_discarded_in_close=326680) (committer_stage_file_upload=0) (object_delete_request.failures=0) (multipart_upload_list=0) (stream_read_closed=5) (op_hflush=0) (action_http_get_request=40) (committer_commit_job=0) (op_xattr_list.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (op_abort.failures=0) (op_is_file.failures=0) (committer_materialize_file.failures=0) (stream_read_vectored_read_bytes_discarded=49026) (op_abort=0) (stream_read_seek_policy_changed=36) (stream_read_unbuffered=2) (op_xattr_get_named_map.failures=0) (committer_magic_files_created=0) (object_put_bytes=2621440) (stream_write_total_time=0) (stream_write_block_uploads_committed=0) (multipart_upload_part_put=0) (op_xattr_get_named=0) (op_createfile.failures=0) (stream_read_vectored_combined_ranges=38) (object_delete_request=0) (stream_read_fully_operations=1) (op_copy_from_local_file.failures=0) (stream_write_bytes=2621440) (stream_read_seek_bytes_skipped=0) (committer_jobs_completed=0) (store_exists_probe.failures=0) (committer_bytes_committed=0) (directories_deleted=0) (multipart_upload_part_put_bytes=0) (op_openfile=0) (op_exists=0) (action_executor_acquired=0) (op_copy_from_local_file=0) (action_executor_acquired.failures=0) (op_get_content_summary=0) (committer_load_single_pending_file.failures=0) (op_access=0) (op_get_delegation_token.failures=0) (store_io_throttled=0) (op_get_delegation_token=0) (op_get_file_status.failures=0) (stream_write_block_uploads_aborted=0) (action_http_get_request.failures=0) (directories_created=40) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_forward_operations=0) (ignored_errors=0) (object_list_request.failures=0) (object_put_request=80) (stream_read_vectored_operations=28) (op_list_files=0) (object_list_request=160) (stream_write_total_data=5242880) (op_hsync=0) (object_multipart_aborted.failures=0) (object_bulk_delete_request.failures=0) (op_create.failures=0) (stream_read_remote_stream_drain.failures=0) (op_xattr_get_map=0) (audit_access_check_failure=0) (object_select_requests=0) (op_delete=40) (files_copied_bytes=0) (op_is_file=0) (stream_read_version_mismatches=0) (object_continue_list_request=0) (op_xattr_get_named_map=0) (op_list_files.failures=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=40) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0));
minimums=((op_get_file_checksum.min=-1) (op_get_delegation_token.failures.min=-1) (committer_stage_file_upload.min=-1) (object_bulk_delete_request.min=11) (op_createfile.min=-1) (multipart_upload_list.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.failures.min=-1) (committer_commit_job.min=-1) (object_put_request.failures.min=-1) (object_list_request.min=5) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_delete.min=38) (multipart_upload_list.failures.min=-1) (object_put_request.min=48) (op_abort.min=-1) (delegation_tokens_issued.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (op_get_file_checksum.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.min=-1) (object_list_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_list.failures.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.min=5) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named_map.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_directory.min=-1) (action_http_head_request.min=3) (op_createfile.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_write_queue_duration.min=-1) (store_exists_probe.min=-1) (op_rename.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_list.min=-1) (op_rename.failures.min=-1) (op_exists.failures.min=-1) (action_file_opened.min=6) (stream_read_remote_stream_drain.min=0) (committer_materialize_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_file.min=-1) (committer_stage_file_upload.failures.min=-1) (op_create.min=7) (op_mkdirs.min=28) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (op_access.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_delete_request.min=-1) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_content_summary.min=-1) (op_delete.failures.min=-1) (op_exists.min=-1) (action_http_get_request.min=18) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.min=-1));
maximums=((op_abort.max=-1) (op_is_file.max=-1) (op_list_status.failures.max=-1) (op_rename.max=-1) (op_list_status.max=-1) (action_file_opened.failures.max=-1) (op_is_file.failures.max=-1) (op_exists.max=-1) (object_continue_list_request.failures.max=-1) (op_create.max=63) (op_get_file_checksum.max=-1) (action_http_get_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_file_status.max=9) (action_http_get_request.max=95) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.max=38) (committer_load_single_pending_file.max=-1) (op_xattr_list.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.failures.max=-1) (action_http_head_request.max=17) (committer_load_single_pending_file.failures.max=-1) (committer_materialize_file.max=-1) (object_list_request.max=243) (object_list_request.failures.max=-1) (action_file_opened.max=18) (object_continue_list_request.max=-1) (op_xattr_get_named_map.max=-1) (committer_magic_marker_put.failures.max=-1) (op_access.failures.max=-1) (op_create.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.max=-1) (op_is_directory.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.max=-1) (op_rename.failures.max=-1) (op_get_file_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_delete.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_bulk_delete_request.failures.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_directory.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named.max=-1) (multipart_upload_list.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_list.max=-1) (action_executor_acquired.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.max=-1) (op_delete.max=101) (op_createfile.failures.max=-1) (op_list_files.max=-1) (op_get_delegation_token.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_abort.failures.max=-1) (object_delete_request.failures.max=-1) (op_glob_status.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.max=395) (stream_read_remote_stream_aborted.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=132) (op_access.max=-1) (op_list_files.failures.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=80, sum=4226, mean=52.8250)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=34, sum=263, mean=7.7353)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (object_list_request.mean=(samples=160, sum=2143, mean=13.3938)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=4, mean=0.8000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=40, sum=2434, mean=60.8500)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=114, sum=765, mean=6.7105)) (op_create.mean=(samples=40, sum=654, mean=16.3500)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=80, sum=1521, mean=19.0125)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=40, sum=2593, mean=64.8250)) (action_http_get_request.mean=(samples=39, sum=1244, mean=31.8974)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:09,103 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:09,103 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,104 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,104 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,104 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,104 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000191 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000191&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=241&ts=1731778449103
2024-11-16 17:34:09,122 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:34:09,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,123 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000191 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000191&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=241&ts=1731778449103
2024-11-16 17:34:09,127 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,127 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:09,127 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:09,127 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:09,128 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000191 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000191&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=241&ts=1731778449103
2024-11-16 17:34:09,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:09,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:09,151 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.024s
2024-11-16 17:34:09,151 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:09,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,153 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,153 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,154 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000192 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000192&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=241&ts=1731778449152
2024-11-16 17:34:09,160 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:09,160 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,160 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:09,161 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5743887252589874877.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:09,161 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5743887252589874877.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (stream_write_bytes=65536) (object_put_request=0) (action_executor_acquired=0) (stream_write_total_data=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (op_abort=0) (stream_write_block_uploads=0) (op_abort.failures=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (op_hsync=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5743887252589874877.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,162 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:09,162 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:09,162 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5743887252589874877.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:09,162 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:09,162 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:09,162 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:09,163 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:09,163 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000192 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000192&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=154&ts=1731778449152
2024-11-16 17:34:09,232 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:09,232 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:09,232 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.070s
2024-11-16 17:34:09,232 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5743887252589874877.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:09,232 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5743887252589874877.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,232 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5743887252589874877.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,232 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:09,232 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:09,233 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (op_abort.failures=0) (object_put_request.failures=0) (op_hsync=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_abort=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_total_data=65536) (object_put_request=1) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=69));
maximums=((multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=69) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=69, mean=69.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:09,234 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:09,234 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,234 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,235 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:09,235 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000193 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000193&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=241&ts=1731778449234
2024-11-16 17:34:09,240 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:09,241 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:09,241 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,241 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:34:09,241 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:34:09,241 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:34:09,241 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:34:09,241 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:34:09,242 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,242 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=100-65535&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000193&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=241&ts=1731778449234
2024-11-16 17:34:09,244 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,244 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,244 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:34:09,244 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=100-199&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000193&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=157&ts=1731778449234
2024-11-16 17:34:09,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.015s
2024-11-16 17:34:09,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,263 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.022s
2024-11-16 17:34:09,263 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:34:09,263 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7538 bytes
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8746 bytes
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16284 bytes
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:34:09,264 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:34:09,265 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_acquire_read=0) (stream_read_operations=1) (action_executor_acquired=0) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_incoming_ranges=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_read_opened=1) (stream_read_closed=1) (stream_read_bytes_discarded_in_close=65336) (stream_read_bytes=200) (stream_read_seek_policy_changed=1) (action_file_opened.failures=0) (stream_read_block_read.failures=0) (stream_read_total_bytes=65536) (stream_read_exceptions=0) (stream_read_vectored_read_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=1) (action_http_get_request=2) (stream_read_seek_forward_operations=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_drain=1) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=1) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (stream_read_seek_backward_operations=0) (stream_read_version_mismatches=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=7) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=15) (stream_read_remote_stream_drain.min=0) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=21) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=7) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=0) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=36, mean=18.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:09,266 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:09,266 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,266 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,266 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=241&ts=1731778449266
2024-11-16 17:34:09,270 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,270 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,270 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=241&ts=1731778449266
2024-11-16 17:34:09,286 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:34:09,287 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:09,287 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:09,287 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:09,287 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:09,287 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:09,287 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:09,287 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:09,287 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:09,288 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:09,288 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:09,288 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:09,288 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:09,288 [s3a-transfer-obs-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:09,288 [s3a-transfer-obs-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,289 [s3a-transfer-obs-bucket-unbounded-pool2-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=242&ts=1731778449266
2024-11-16 17:34:09,298 [s3a-transfer-obs-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:09,298 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:34:09,298 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:09,299 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:09,299 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:09,299 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778449223; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:09,299 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:09,299 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:09,299 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:09,299 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:09,299 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:09,299 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:09,299 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:09,299 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:09,300 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,300 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,300 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:09,300 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,300 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=159&ts=1731778449266
2024-11-16 17:34:09,319 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.019s
2024-11-16 17:34:09,319 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:34:09,319 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.020s
2024-11-16 17:34:09,320 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:09,320 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:09,320 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,320 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,320 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:09,320 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,320 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000194&t0=241&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=159&ts=1731778449266
2024-11-16 17:34:09,343 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.023s
2024-11-16 17:34:09,344 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.024s
2024-11-16 17:34:09,344 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.024s
2024-11-16 17:34:09,344 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.045s
2024-11-16 17:34:09,344 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.045s
2024-11-16 17:34:09,344 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.057s
2024-11-16 17:34:09,344 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:09,344 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:09,346 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:09,358 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 50, active threads = 0, queued tasks = 0, completed tasks = 50], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_bytes_uploaded=0) (stream_read_remote_stream_drain.failures=0) (stream_write_total_data=5373952) (multipart_upload_list=0) (object_delete_request=0) (op_list_located_status=0) (op_xattr_get_named=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_forward_operations=0) (op_access.failures=0) (op_glob_status.failures=0) (object_multipart_initiated.failures=0) (stream_read_total_bytes=404642) (committer_magic_marker_put=0) (stream_write_block_uploads=41) (stream_read_fully_operations=2) (stream_write_queue_duration=0) (stream_read_operations_incomplete=0) (stream_read_closed=6) (action_executor_acquired.failures=0) (multipart_upload_part_put_bytes=0) (action_http_head_request.failures=0) (stream_read_opened=6) (op_get_file_checksum.failures=0) (op_xattr_get_named_map.failures=0) (op_mkdirs.failures=0) (op_rename.failures=0) (op_exists.failures=0) (op_list_files=0) (stream_read_remote_stream_drain=6) (committer_jobs_failed=0) (op_rename=0) (stream_read_remote_stream_aborted.failures=0) (object_multipart_initiated=0) (multipart_upload_aborted=0) (object_continue_list_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_mkdirs=41) (committer_load_single_pending_file=0) (committer_magic_files_created=0) (stream_read_vectored_combined_ranges=39) (delegation_tokens_issued=0) (op_delete.failures=0) (committer_tasks_completed=0) (action_executor_acquired=0) (action_http_get_request=42) (audit_access_check_failure=0) (object_put_bytes=2686976) (op_get_delegation_token=0) (object_delete_objects=82) (files_deleted=41) (op_is_directory.failures=0) (object_bulk_delete_request=82) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=35) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (audit_span_creation=161) (stream_aborted=0) (files_copied_bytes=0) (op_list_status=0) (op_delete=41) (object_copy_requests=0) (stream_read_seek_backward_operations=0) (files_copied=0) (committer_stage_file_upload.failures=0) (stream_write_bytes=2686976) (stream_read_vectored_read_bytes_discarded=49026) (op_hsync=0) (op_is_directory=0) (object_list_request=164) (action_http_head_request=117) (committer_materialize_file=0) (files_delete_rejected=0) (op_create_non_recursive=0) (op_get_delegation_token.failures=0) (store_exists_probe.failures=0) (stream_read_vectored_operations=29) (stream_read_version_mismatches=0) (directories_created=41) (audit_request_execution=487) (committer_materialize_file.failures=0) (stream_read_remote_stream_aborted=0) (committer_commits_completed=0) (committer_commits_created=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits.failures=0) (op_copy_from_local_file.failures=0) (action_file_opened=35) (committer_stage_file_upload=0) (store_io_request=487) (multipart_instantiated=0) (op_list_files.failures=0) (stream_write_block_uploads_committed=0) (stream_read_seek_policy_changed=37) (committer_commits_aborted=0) (store_io_retry=0) (stream_read_seek_bytes_skipped=0) (op_get_file_status=2) (op_create.failures=0) (committer_commit_job.failures=0) (op_list_status.failures=0) (op_xattr_list.failures=0) (stream_read_operations=6) (op_xattr_get_named.failures=0) (directories_deleted=0) (op_xattr_get_map.failures=0) (op_createfile=0) (stream_read_seek_operations=0) (ignored_errors=0) (fake_directories_created=0) (op_glob_status=0) (stream_write_queue_duration.failures=0) (object_list_request.failures=0) (action_file_opened.failures=0) (op_create=41) (object_bulk_delete_request.failures=0) (op_openfile=0) (stream_read_unbuffered=2) (multipart_upload_part_put=0) (object_metadata_request=117) (stream_read_bytes=12626) (op_get_file_status.failures=0) (op_xattr_get_map=0) (object_delete_request.failures=0) (delegation_tokens_issued.failures=0) (op_abort=0) (audit_failure=0) (multipart_upload_completed=0) (op_xattr_list=0) (multipart_upload_started=0) (op_copy_from_local_file=0) (op_hflush=0) (op_access=0) (op_is_file=0) (fake_directories_deleted=41) (object_continue_list_request=0) (op_get_file_checksum=0) (committer_commit_job=0) (files_created=41) (op_open=35) (committer_bytes_committed=0) (stream_read_vectored_incoming_ranges=93) (object_select_requests=0) (object_put_request_completed=82) (op_get_content_summary.failures=0) (committer_tasks_failed=0) (stream_write_total_time=0) (committer_commits_reverted=0) (stream_read_exceptions=0) (op_exists=0) (object_multipart_aborted.failures=0) (multipart_upload_list.failures=0) (stream_write_exceptions=0) (committer_load_single_pending_file.failures=0) (op_get_content_summary=0) (object_put_request.failures=0) (store_io_throttled=0) (op_is_file.failures=0) (action_http_get_request.failures=0) (store_exists_probe=0) (committer_jobs_completed=0) (op_abort.failures=0) (op_createfile.failures=0) (stream_read_bytes_discarded_in_close=392016) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named_map=0) (object_put_request=82));
gauges=((object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=41) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (object_put_request_active=0));
minimums=((op_copy_from_local_file.failures.min=-1) (op_is_directory.min=-1) (action_http_get_request.min=15) (op_get_file_checksum.failures.min=-1) (op_access.min=-1) (op_delete.min=38) (op_exists.min=-1) (op_xattr_get_map.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_commit_job.min=-1) (action_http_head_request.min=3) (committer_load_single_pending_file.failures.min=-1) (op_get_file_status.min=5) (action_executor_acquired.failures.min=-1) (op_mkdirs.min=28) (action_http_get_request.failures.min=-1) (action_file_opened.min=7) (op_access.failures.min=-1) (op_get_content_summary.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_is_file.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.failures.min=-1) (object_delete_request.failures.min=-1) (object_put_request.min=69) (stream_read_remote_stream_aborted.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_delete.failures.min=-1) (op_abort.min=-1) (stream_write_queue_duration.min=-1) (op_glob_status.failures.min=-1) (object_bulk_delete_request.min=11) (object_delete_request.min=-1) (op_glob_status.min=-1) (op_is_directory.failures.min=-1) (op_abort.failures.min=-1) (committer_stage_file_upload.min=-1) (store_exists_probe.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_list_status.min=-1) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.min=-1) (object_continue_list_request.min=-1) (action_http_head_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.min=-1) (op_rename.min=-1) (op_createfile.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.failures.min=-1) (delegation_tokens_issued.min=-1) (store_exists_probe.min=-1) (op_list_files.min=-1) (op_get_file_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.failures.min=-1) (op_list_status.failures.min=-1) (op_list_files.failures.min=-1) (object_list_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_list.failures.min=-1) (op_create.min=7) (op_xattr_get_map.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.min=0) (committer_stage_file_upload.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.min=5) (op_get_delegation_token.min=-1));
maximums=((action_executor_acquired.max=-1) (op_delete.failures.max=-1) (op_list_files.max=-1) (op_list_files.failures.max=-1) (action_http_get_request.failures.max=-1) (op_is_directory.max=-1) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (object_list_request.max=243) (store_exists_probe.max=-1) (action_executor_acquired.failures.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_content_summary.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_access.failures.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=38) (action_http_get_request.max=95) (op_get_delegation_token.max=-1) (action_file_opened.failures.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_exists.max=-1) (committer_materialize_file.failures.max=-1) (op_access.max=-1) (op_get_delegation_token.failures.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.max=63) (multipart_upload_list.failures.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.failures.max=-1) (op_exists.failures.max=-1) (action_file_opened.max=18) (op_list_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_file.max=-1) (object_put_request.max=132) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.max=9) (op_get_file_checksum.max=-1) (object_multipart_aborted.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_write_queue_duration.max=-1) (op_create.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_list.max=-1) (object_continue_list_request.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_createfile.failures.max=-1) (action_http_head_request.max=17) (stream_read_remote_stream_drain.max=1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_directory.failures.max=-1) (op_list_status.failures.max=-1) (op_mkdirs.max=395) (op_glob_status.max=-1) (op_get_content_summary.failures.max=-1) (op_delete.max=101) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_delete_request.failures.max=-1) (object_delete_request.max=-1));
means=((op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=82, sum=4317, mean=52.6463)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=41, sum=1280, mean=31.2195)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=41, sum=2491, mean=60.7561)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=35, sum=270, mean=7.7143)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=41, sum=663, mean=16.1707)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=117, sum=779, mean=6.6581)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=4, mean=0.6667)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=82, sum=1563, mean=19.0610)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=41, sum=2642, mean=64.4390)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=164, sum=2193, mean=13.3720)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:09,359 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:09,359 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,360 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,360 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,360 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,361 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000195 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000195&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=243&ts=1731778449359
2024-11-16 17:34:09,368 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:09,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,369 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,369 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000195 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000195&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=243&ts=1731778449359
2024-11-16 17:34:09,374 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,374 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:09,374 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:09,374 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:09,375 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000195 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000195&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=243&ts=1731778449359
2024-11-16 17:34:09,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:09,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:09,401 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.027s
2024-11-16 17:34:09,402 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:09,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,403 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,404 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000196 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000196&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=243&ts=1731778449403
2024-11-16 17:34:09,409 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:09,409 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,410 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:09,411 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150492496908004823.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:09,411 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150492496908004823.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_bytes=65536) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (op_hsync=0) (action_executor_acquired=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (stream_write_block_uploads=0) (op_abort.failures=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150492496908004823.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,412 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:09,412 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:09,412 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150492496908004823.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:09,413 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:09,413 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:09,413 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:09,413 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:09,413 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000196 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000196&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=162&ts=1731778449403
2024-11-16 17:34:09,455 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:09,455 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:09,455 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.042s
2024-11-16 17:34:09,455 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150492496908004823.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:09,455 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150492496908004823.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,455 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4150492496908004823.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,455 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:09,456 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:09,458 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (op_hflush=0) (multipart_upload_part_put=0) (op_hsync=0) (object_multipart_initiated=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (op_abort=0) (stream_write_block_uploads=1) (object_put_request=1) (object_multipart_aborted=0) (action_executor_acquired=0) (stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=42) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=42) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=42, mean=42.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:09,458 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:09,459 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,459 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,459 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:09,459 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000197 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000197/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000197&t0=244&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=244&ts=1731778449459
2024-11-16 17:34:09,463 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:09,463 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:09,463 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,463 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:34:09,464 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_backwards_on_seek=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_seek_policy_changed=1) (stream_read_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_drain=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=0) (action_file_opened=1) (action_executor_acquired=0) (stream_read_version_mismatches=0) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=0) (stream_read_bytes=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=0) (stream_read_vectored_operations=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (action_http_get_request=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.min=-1) (action_file_opened.min=4) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:09,465 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:09,465 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,466 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,466 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=243&ts=1731778449465
2024-11-16 17:34:09,469 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,469 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,469 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=243&ts=1731778449465
2024-11-16 17:34:09,479 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:09,479 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:09,479 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:09,479 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:09,479 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:09,479 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:09,480 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:09,480 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:09,480 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:09,480 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:09,480 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:09,480 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:09,481 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:09,481 [s3a-transfer-obs-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:09,481 [s3a-transfer-obs-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,481 [s3a-transfer-obs-bucket-unbounded-pool2-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=245&ts=1731778449465
2024-11-16 17:34:09,487 [s3a-transfer-obs-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:09,488 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:34:09,488 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:09,488 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:09,488 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:09,488 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778449445; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:09,488 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:09,488 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:09,489 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:09,489 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:09,489 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:09,489 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:09,489 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:09,489 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:09,489 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,489 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,489 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:09,489 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,489 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=164&ts=1731778449465
2024-11-16 17:34:09,505 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:34:09,505 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:34:09,505 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.016s
2024-11-16 17:34:09,505 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:09,505 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:09,506 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,506 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,506 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:09,506 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,506 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000198&t0=243&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=164&ts=1731778449465
2024-11-16 17:34:09,517 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:34:09,517 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:34:09,517 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:34:09,517 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.028s
2024-11-16 17:34:09,518 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.029s
2024-11-16 17:34:09,518 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.038s
2024-11-16 17:34:09,518 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:09,518 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:09,519 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:09,530 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 52, active threads = 0, queued tasks = 0, completed tasks = 52], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_file_status=2) (op_exists=0) (committer_bytes_committed=0) (stream_read_operations=6) (multipart_upload_abort_under_path_invoked=0) (op_rename.failures=0) (op_create.failures=0) (stream_read_version_mismatches=0) (op_list_status.failures=0) (op_copy_from_local_file=0) (stream_write_block_uploads=42) (committer_commits_reverted=0) (op_xattr_get_named_map=0) (object_put_request_completed=84) (fake_directories_deleted=42) (op_createfile.failures=0) (committer_commits.failures=0) (files_created=42) (object_put_bytes=2752512) (committer_jobs_completed=0) (object_multipart_aborted=0) (op_mkdirs=42) (stream_read_seek_policy_changed=38) (op_mkdirs.failures=0) (op_access.failures=0) (object_put_request.failures=0) (op_open=36) (action_file_opened=36) (stream_read_opened=6) (stream_write_exceptions=0) (stream_aborted=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (action_http_head_request=120) (op_get_delegation_token=0) (store_io_request=498) (op_is_file.failures=0) (op_xattr_get_named=0) (stream_write_total_data=5505024) (files_delete_rejected=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_named_map.failures=0) (committer_tasks_completed=0) (multipart_upload_list.failures=0) (multipart_instantiated=0) (store_io_retry=0) (store_io_throttled=0) (multipart_upload_list=0) (stream_read_operations_incomplete=0) (op_get_file_checksum.failures=0) (multipart_upload_part_put=0) (stream_read_closed=6) (committer_commit_job=0) (stream_write_exceptions_completing_upload=0) (op_list_files.failures=0) (committer_commits_aborted=0) (committer_commits_created=0) (stream_read_total_bytes=404642) (op_get_file_status.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_delete=42) (delegation_tokens_issued=0) (committer_commit_job.failures=0) (delegation_tokens_issued.failures=0) (stream_read_remote_stream_drain=6) (stream_read_remote_stream_drain.failures=0) (committer_stage_file_upload.failures=0) (op_xattr_get_map=0) (multipart_upload_part_put_bytes=0) (object_bulk_delete_request.failures=0) (op_get_content_summary.failures=0) (directories_deleted=0) (action_http_get_request=42) (object_copy_requests=0) (stream_read_bytes_discarded_in_close=392016) (op_delete.failures=0) (action_http_get_request.failures=0) (committer_load_single_pending_file.failures=0) (op_is_file=0) (action_executor_acquired=0) (op_createfile=0) (committer_bytes_uploaded=0) (stream_read_vectored_operations=29) (audit_span_creation=165) (audit_access_check_failure=0) (committer_magic_marker_put.failures=0) (stream_read_seek_bytes_skipped=0) (object_list_request.failures=0) (object_delete_request.failures=0) (object_multipart_initiated=0) (op_get_file_checksum=0) (stream_read_fully_operations=2) (stream_read_close_operations=36) (fake_directories_created=0) (op_glob_status.failures=0) (object_list_request=168) (stream_read_seek_backward_operations=0) (op_exists.failures=0) (committer_load_single_pending_file=0) (op_xattr_list=0) (object_bulk_delete_request=84) (op_list_located_status=0) (store_exists_probe=0) (store_exists_probe.failures=0) (op_get_content_summary=0) (audit_request_execution=498) (op_get_delegation_token.failures=0) (multipart_upload_aborted=0) (op_xattr_get_named.failures=0) (stream_write_block_uploads_aborted=0) (op_create_non_recursive=0) (committer_magic_marker_put=0) (object_select_requests=0) (audit_failure=0) (action_http_head_request.failures=0) (op_list_files=0) (op_abort.failures=0) (committer_jobs_failed=0) (op_abort=0) (committer_tasks_failed=0) (op_is_directory.failures=0) (op_rename=0) (stream_read_exceptions=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=49026) (stream_read_bytes=12626) (stream_write_total_time=0) (stream_read_unbuffered=2) (stream_write_queue_duration.failures=0) (files_copied_bytes=0) (object_put_request=84) (op_copy_from_local_file.failures=0) (committer_materialize_file=0) (committer_materialize_file.failures=0) (object_metadata_request=120) (ignored_errors=0) (stream_write_block_uploads_committed=0) (op_create=42) (directories_created=42) (op_hsync=0) (committer_stage_file_upload=0) (stream_read_vectored_combined_ranges=39) (stream_read_seek_operations=0) (multipart_upload_started=0) (op_glob_status=0) (action_executor_acquired.failures=0) (op_hflush=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=93) (stream_write_bytes=2752512) (files_deleted=42) (op_openfile=0) (multipart_upload_completed=0) (op_list_status=0) (committer_commits_completed=0) (object_multipart_initiated.failures=0) (committer_magic_files_created=0) (object_continue_list_request.failures=0) (object_delete_request=0) (op_xattr_list.failures=0) (op_access=0) (op_xattr_get_map.failures=0) (object_delete_objects=84) (op_is_directory=0) (files_copied=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=42));
minimums=((op_xattr_get_named.min=-1) (committer_stage_file_upload.min=-1) (op_createfile.failures.min=-1) (action_http_get_request.failures.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.min=11) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1) (op_exists.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.min=-1) (store_exists_probe.min=-1) (op_xattr_get_map.min=-1) (op_rename.min=-1) (store_exists_probe.failures.min=-1) (op_mkdirs.min=28) (delegation_tokens_issued.failures.min=-1) (op_is_directory.failures.min=-1) (action_file_opened.min=4) (op_get_delegation_token.min=-1) (committer_commit_job.min=-1) (op_get_file_checksum.failures.min=-1) (op_delete.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_abort.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (op_rename.failures.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.min=-1) (action_http_head_request.min=3) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_create.failures.min=-1) (op_is_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_put_request.min=42) (committer_magic_marker_put.min=-1) (op_get_file_checksum.min=-1) (op_create.min=7) (op_xattr_get_named.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_list.min=-1) (op_list_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.min=-1) (op_get_content_summary.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.min=-1) (op_get_file_status.min=5) (action_http_get_request.min=15) (op_access.min=-1) (op_abort.failures.min=-1) (committer_materialize_file.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_list.failures.min=-1) (object_delete_request.min=-1) (action_executor_acquired.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.min=-1) (object_delete_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_drain.min=0) (op_delete.min=38) (op_list_files.min=-1) (op_get_content_summary.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.min=5) (op_get_file_status.failures.min=-1) (op_exists.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (action_file_opened.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((op_get_delegation_token.max=-1) (committer_magic_marker_put.failures.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.failures.max=-1) (object_multipart_aborted.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.max=17) (action_http_get_request.max=95) (op_is_directory.max=-1) (op_xattr_list.max=-1) (delegation_tokens_issued.max=-1) (op_exists.failures.max=-1) (committer_stage_file_upload.max=-1) (object_list_request.max=243) (op_copy_from_local_file.failures.max=-1) (op_list_files.max=-1) (op_create.failures.max=-1) (op_rename.failures.max=-1) (op_get_file_status.max=9) (op_xattr_get_map.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_list_files.failures.max=-1) (op_exists.max=-1) (object_multipart_initiated.failures.max=-1) (op_access.max=-1) (op_get_content_summary.max=-1) (op_createfile.failures.max=-1) (op_is_directory.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_access.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_bulk_delete_request.max=38) (op_get_content_summary.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_file_opened.failures.max=-1) (op_create.max=63) (store_exists_probe.max=-1) (op_list_status.failures.max=-1) (committer_magic_marker_put.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.failures.max=-1) (action_file_opened.max=18) (stream_write_queue_duration.max=-1) (op_xattr_list.failures.max=-1) (op_rename.max=-1) (committer_commit_job.max=-1) (object_put_request.max=132) (op_xattr_get_named.failures.max=-1) (store_exists_probe.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.max=-1) (op_get_file_checksum.max=-1) (committer_commit_job.failures.max=-1) (committer_materialize_file.max=-1) (object_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_createfile.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_status.max=-1) (op_delete.max=101) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.max=-1) (op_abort.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_remote_stream_aborted.max=-1) (object_put_request.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.max=-1) (committer_materialize_file.failures.max=-1) (op_mkdirs.max=395) (delegation_tokens_issued.failures.max=-1));
means=((op_mkdirs.mean=(samples=42, sum=2685, mean=63.9286)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=42, sum=2530, mean=60.2381)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=42, sum=671, mean=15.9762)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=41, sum=1280, mean=31.2195)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=84, sum=1590, mean=18.9286)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=120, sum=790, mean=6.5833)) (action_file_opened.mean=(samples=36, sum=274, mean=7.6111)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=168, sum=2221, mean=13.2202)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=4, mean=0.6667)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (object_put_request.mean=(samples=84, sum=4385, mean=52.2024)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:09,531 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:09,531 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,531 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,531 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,531 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,531 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000199 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000199&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=246&ts=1731778449531
2024-11-16 17:34:09,537 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:09,537 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,538 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000199 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000199&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=246&ts=1731778449531
2024-11-16 17:34:09,541 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,541 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:09,541 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:09,541 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:09,542 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000199 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000199&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=246&ts=1731778449531
2024-11-16 17:34:09,578 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:09,578 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:09,578 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.037s
2024-11-16 17:34:09,578 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:09,578 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,578 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,578 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,579 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,579 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000200 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000200&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=246&ts=1731778449578
2024-11-16 17:34:09,593 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:34:09,593 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,593 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:09,594 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6708791928773760845.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:09,594 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6708791928773760845.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (object_put_request=0) (op_abort=0) (action_executor_acquired=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6708791928773760845.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,594 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:09,594 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:09,594 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6708791928773760845.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:09,595 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:09,595 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:09,595 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:09,595 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:09,595 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000200 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000200&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=166&ts=1731778449578
2024-11-16 17:34:09,643 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:09,644 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:09,644 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.049s
2024-11-16 17:34:09,644 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6708791928773760845.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:09,644 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6708791928773760845.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,644 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6708791928773760845.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,644 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:09,644 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:09,645 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (op_hflush=0) (stream_write_total_data=65536) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (op_abort=0) (multipart_upload_completed=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (stream_write_total_time=0) (object_put_request=1) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=48) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=48) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_put_request.mean=(samples=1, sum=48, mean=48.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:09,645 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:09,646 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,646 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,646 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:09,646 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [247] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000201 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000201/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000201&t0=247&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=247&ts=1731778449646
2024-11-16 17:34:09,654 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:09,655 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:09,655 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,655 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:34:09,658 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (stream_read_bytes=0) (action_file_opened.failures=0) (stream_read_vectored_operations=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_incoming_ranges=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1) (stream_aborted=0) (stream_read_total_bytes=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=0) (action_http_get_request.failures=0) (stream_read_seek_policy_changed=1) (action_executor_acquired.failures=0) (stream_read_opened=0) (stream_read_block_read.failures=0) (action_file_opened=1) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_exceptions=0) (stream_read_operations=0) (stream_read_remote_stream_drain=0) (stream_read_closed=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=9) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((action_file_opened.max=9) (action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=9, mean=9.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:09,658 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:09,658 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,658 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,659 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=246&ts=1731778449658
2024-11-16 17:34:09,662 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,662 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,662 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=246&ts=1731778449658
2024-11-16 17:34:09,668 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:09,668 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:09,668 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:09,668 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:09,668 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:09,669 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:09,669 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:09,669 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:09,669 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:09,669 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:09,669 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:09,669 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:09,670 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:09,670 [s3a-transfer-obs-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:09,670 [s3a-transfer-obs-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,670 [s3a-transfer-obs-bucket-unbounded-pool2-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [248] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=248&ts=1731778449658
2024-11-16 17:34:09,680 [s3a-transfer-obs-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:09,680 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:34:09,680 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:09,680 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:09,680 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:09,680 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778449637; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:09,681 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:09,681 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:09,681 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:09,681 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:09,681 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:09,681 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:09,681 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:09,681 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:09,681 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,681 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,681 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:09,682 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,682 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=165&ts=1731778449658
2024-11-16 17:34:09,703 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:34:09,704 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:34:09,704 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.023s
2024-11-16 17:34:09,704 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:09,704 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:09,704 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,704 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,704 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:09,704 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,704 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000202&t0=246&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=165&ts=1731778449658
2024-11-16 17:34:09,714 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:34:09,714 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:34:09,715 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:34:09,715 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.034s
2024-11-16 17:34:09,715 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.034s
2024-11-16 17:34:09,715 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.046s
2024-11-16 17:34:09,715 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:09,715 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:09,717 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:09,728 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 54, active threads = 0, queued tasks = 0, completed tasks = 54], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_io_retry=0) (stream_write_bytes=2818048) (op_delete.failures=0) (fake_directories_created=0) (op_get_file_status=2) (committer_jobs_completed=0) (op_create=43) (committer_commits_reverted=0) (stream_read_operations=6) (committer_jobs_failed=0) (stream_read_seek_backward_operations=0) (stream_write_block_uploads_aborted=0) (multipart_instantiated=0) (stream_read_operations_incomplete=0) (op_access=0) (files_copied_bytes=0) (directories_deleted=0) (stream_read_remote_stream_aborted=0) (op_list_files=0) (action_file_opened.failures=0) (committer_tasks_failed=0) (op_get_delegation_token.failures=0) (op_list_status.failures=0) (delegation_tokens_issued=0) (multipart_upload_part_put_bytes=0) (files_created=43) (committer_stage_file_upload.failures=0) (object_continue_list_request.failures=0) (op_create_non_recursive=0) (stream_read_remote_stream_drain.failures=0) (op_glob_status.failures=0) (directories_created=43) (fake_directories_deleted=43) (stream_read_seek_forward_operations=0) (multipart_upload_list=0) (object_put_bytes=2818048) (op_list_files.failures=0) (op_createfile.failures=0) (op_openfile=0) (object_multipart_initiated.failures=0) (committer_commits_aborted=0) (stream_read_total_bytes=404642) (audit_span_creation=169) (object_put_request=86) (object_list_request=172) (stream_read_vectored_incoming_ranges=93) (object_multipart_initiated=0) (object_copy_requests=0) (op_get_file_checksum=0) (committer_commit_job.failures=0) (op_xattr_get_map=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits.failures=0) (files_delete_rejected=0) (action_executor_acquired=0) (audit_failure=0) (committer_bytes_uploaded=0) (op_createfile=0) (stream_write_queue_duration.failures=0) (stream_read_version_mismatches=0) (committer_stage_file_upload=0) (action_http_get_request.failures=0) (multipart_upload_completed=0) (committer_commits_created=0) (object_delete_request=0) (multipart_upload_started=0) (multipart_upload_abort_under_path_invoked=0) (op_mkdirs=43) (op_list_status=0) (op_xattr_list=0) (op_open=37) (object_select_requests=0) (op_exists.failures=0) (audit_access_check_failure=0) (object_put_request.failures=0) (op_is_directory=0) (op_abort=0) (stream_write_queue_duration=0) (op_xattr_list.failures=0) (action_http_head_request.failures=0) (stream_read_vectored_operations=29) (stream_aborted=0) (committer_magic_marker_put=0) (op_glob_status=0) (op_is_directory.failures=0) (committer_magic_marker_put.failures=0) (committer_bytes_committed=0) (op_delete=43) (op_xattr_get_named=0) (store_io_request=509) (op_hflush=0) (op_hsync=0) (stream_read_unbuffered=2) (op_mkdirs.failures=0) (stream_read_bytes=12626) (files_copied=0) (stream_read_closed=6) (object_multipart_aborted=0) (stream_read_opened=6) (multipart_upload_part_put=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (multipart_upload_list.failures=0) (op_get_file_checksum.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_close_operations=37) (committer_load_single_pending_file=0) (delegation_tokens_issued.failures=0) (op_rename=0) (action_http_head_request=123) (audit_request_execution=509) (stream_read_remote_stream_drain=6) (multipart_upload_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=39) (op_xattr_get_named.failures=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_abort=0) (op_get_file_status.failures=0) (op_rename.failures=0) (object_continue_list_request=0) (store_io_throttled=0) (action_http_get_request=42) (op_xattr_get_map.failures=0) (files_deleted=43) (store_exists_probe.failures=0) (committer_materialize_file=0) (op_create.failures=0) (stream_read_fully_operations=2) (stream_read_seek_policy_changed=39) (stream_read_seek_bytes_skipped=0) (op_access.failures=0) (op_list_located_status=0) (stream_write_block_uploads=43) (op_get_content_summary.failures=0) (op_get_delegation_token=0) (committer_commits_completed=0) (stream_read_seek_operations=0) (object_bulk_delete_request.failures=0) (object_put_request_completed=86) (stream_write_block_uploads_committed=0) (committer_materialize_file.failures=0) (committer_commit_job=0) (object_delete_request.failures=0) (object_bulk_delete_request=86) (stream_read_vectored_read_bytes_discarded=49026) (stream_read_bytes_discarded_in_close=392016) (committer_load_single_pending_file.failures=0) (committer_magic_files_created=0) (store_exists_probe=0) (ignored_errors=0) (op_abort.failures=0) (op_xattr_get_named_map.failures=0) (stream_write_total_time=0) (object_delete_objects=86) (op_copy_from_local_file=0) (op_exists=0) (action_file_opened=37) (op_is_file.failures=0) (committer_tasks_completed=0) (stream_read_seek_bytes_discarded=0) (op_copy_from_local_file.failures=0) (op_is_file=0) (object_list_request.failures=0) (op_get_content_summary=0) (op_xattr_get_named_map=0) (object_metadata_request=123) (stream_write_total_data=5636096));
gauges=((stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=43) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0));
minimums=((action_http_get_request.min=15) (op_mkdirs.min=28) (action_executor_acquired.min=-1) (object_list_request.min=5) (stream_read_remote_stream_drain.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_drain.min=0) (op_createfile.failures.min=-1) (op_get_file_checksum.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_rename.failures.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.failures.min=-1) (multipart_upload_list.min=-1) (committer_stage_file_upload.min=-1) (op_get_delegation_token.min=-1) (object_list_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_bulk_delete_request.min=10) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.min=-1) (committer_magic_marker_put.min=-1) (op_exists.failures.min=-1) (op_access.min=-1) (stream_write_queue_duration.min=-1) (op_glob_status.min=-1) (op_is_directory.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_list.failures.min=-1) (op_abort.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_status.min=5) (committer_materialize_file.failures.min=-1) (op_get_content_summary.min=-1) (op_glob_status.failures.min=-1) (op_createfile.min=-1) (op_xattr_list.min=-1) (object_continue_list_request.failures.min=-1) (committer_materialize_file.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_file_opened.min=9) (multipart_upload_list.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (op_access.failures.min=-1) (action_http_head_request.min=3) (op_xattr_get_named_map.min=-1) (op_list_files.min=-1) (object_delete_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_put_request.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_initiated.min=-1) (op_create.min=7) (op_xattr_get_named.min=-1) (op_delete.min=38) (op_exists.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_file.min=-1) (object_put_request.min=48) (op_xattr_get_named_map.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_commit_job.min=-1) (op_delete.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_status.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_map.min=-1) (object_delete_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1));
maximums=((action_http_get_request.max=95) (object_multipart_initiated.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_directory.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.failures.max=-1) (object_delete_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named.max=-1) (op_list_status.max=-1) (op_get_file_status.max=9) (action_http_get_request.failures.max=-1) (op_is_file.max=-1) (op_exists.max=-1) (object_put_request.failures.max=-1) (op_delete.max=101) (committer_materialize_file.failures.max=-1) (store_exists_probe.failures.max=-1) (object_list_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_glob_status.max=-1) (op_is_directory.max=-1) (op_xattr_get_map.failures.max=-1) (object_put_request.max=132) (op_exists.failures.max=-1) (op_get_file_checksum.max=-1) (action_http_head_request.failures.max=-1) (object_delete_request.max=-1) (action_file_opened.max=18) (action_executor_acquired.failures.max=-1) (op_is_file.failures.max=-1) (action_file_opened.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_status.failures.max=-1) (op_list_files.max=-1) (op_rename.max=-1) (op_createfile.max=-1) (object_multipart_initiated.max=-1) (op_delete.failures.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.max=63) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.max=-1) (action_executor_acquired.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_list_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (store_exists_probe.max=-1) (op_access.failures.max=-1) (object_list_request.max=243) (op_create.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (op_copy_from_local_file.max=-1) (object_continue_list_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_access.max=-1) (op_get_content_summary.max=-1) (op_mkdirs.max=395) (committer_materialize_file.max=-1) (object_multipart_aborted.max=-1) (op_list_files.failures.max=-1) (op_abort.failures.max=-1) (object_bulk_delete_request.max=38) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (op_rename.failures.max=-1) (action_http_head_request.max=17) (multipart_upload_list.max=-1) (op_glob_status.failures.max=-1) (op_copy_from_local_file.failures.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=43, sum=2732, mean=63.5349)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=43, sum=687, mean=15.9767)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=172, sum=2257, mean=13.1221)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=43, sum=2576, mean=59.9070)) (action_http_get_request.mean=(samples=41, sum=1280, mean=31.2195)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=4, mean=0.6667)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=86, sum=1621, mean=18.8488)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=37, sum=283, mean=7.6486)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=123, sum=805, mean=6.5447)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=86, sum=4470, mean=51.9767)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:09,729 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:09,729 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,729 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,729 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,729 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,729 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000203 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000203&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=249&ts=1731778449729
2024-11-16 17:34:09,735 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:09,735 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,735 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,735 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,735 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,736 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000203 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000203&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=249&ts=1731778449729
2024-11-16 17:34:09,741 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,741 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:09,741 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:09,741 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:09,741 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000203 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000203&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=249&ts=1731778449729
2024-11-16 17:34:09,768 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:09,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:09,769 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.028s
2024-11-16 17:34:09,769 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:09,770 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,770 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,770 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,770 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,770 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000204 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000204&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=249&ts=1731778449770
2024-11-16 17:34:09,778 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:09,778 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,779 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:09,779 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6848136487536114412.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:09,780 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6848136487536114412.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (stream_write_total_data=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (op_abort=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (stream_write_block_uploads=0) (object_put_request=0) (op_abort.failures=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6848136487536114412.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,780 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:09,780 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:09,780 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6848136487536114412.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:09,781 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:09,781 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:09,781 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:09,781 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:09,781 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000204 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000204&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=168&ts=1731778449770
2024-11-16 17:34:09,827 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:09,827 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:09,827 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.046s
2024-11-16 17:34:09,827 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6848136487536114412.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:09,827 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6848136487536114412.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,827 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6848136487536114412.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:09,827 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:09,827 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:09,828 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (multipart_upload_completed=0) (op_hsync=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (object_put_request=1) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (op_abort.failures=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=46) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1));
maximums=((op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=46) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((object_put_request.mean=(samples=1, sum=46, mean=46.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:09,828 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:09,829 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,829 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,829 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:09,830 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000205 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000205&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=249&ts=1731778449829
2024-11-16 17:34:09,835 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:09,835 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:09,835 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,835 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:09,835 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:09,835 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:09,836 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:09,836 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:09,836 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,836 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,836 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:09,836 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:09,836 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:34:09,836 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [170] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000205&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=170&ts=1731778449829
2024-11-16 17:34:09,836 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:34:09,836 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,837 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:09,837 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:09,837 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=0-159&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000205&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=173&ts=1731778449829
2024-11-16 17:34:09,852 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:34:09,852 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:34:09,852 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:34:09,852 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,853 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:34:09,853 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:09,854 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=2) (stream_read_vectored_incoming_ranges=4) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_bytes=300) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_total_bytes=300) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_operations=2) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_operations_incomplete=0) (stream_read_closed=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (action_executor_acquired.failures=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request=2) (stream_read_vectored_read_bytes_discarded=20) (action_executor_acquired=0) (stream_read_fully_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=6) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=15) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=16) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=6) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=31, mean=15.5000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:09,855 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:09,855 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,855 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,855 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=249&ts=1731778449854
2024-11-16 17:34:09,868 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,869 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,869 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=249&ts=1731778449854
2024-11-16 17:34:09,878 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:34:09,878 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:09,878 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:09,878 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:09,879 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:09,879 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:09,879 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:09,879 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:09,879 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:09,879 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:09,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:09,880 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:09,881 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:09,881 [s3a-transfer-obs-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:09,881 [s3a-transfer-obs-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,882 [s3a-transfer-obs-bucket-unbounded-pool2-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=250&ts=1731778449854
2024-11-16 17:34:09,889 [s3a-transfer-obs-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:34:09,889 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:34:09,889 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:09,890 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:09,890 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:09,891 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778449821; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:09,891 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:09,891 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:09,891 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:09,892 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:09,892 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:09,892 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:09,892 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:09,892 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:09,892 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,892 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,893 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:09,893 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,893 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=31&ts=1731778449854
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.029s
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.030s
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.030s
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:09,922 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000206&t0=249&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=31&ts=1731778449854
2024-11-16 17:34:09,951 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.029s
2024-11-16 17:34:09,951 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.029s
2024-11-16 17:34:09,951 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.029s
2024-11-16 17:34:09,951 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.059s
2024-11-16 17:34:09,952 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.060s
2024-11-16 17:34:09,952 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.073s
2024-11-16 17:34:09,952 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:09,952 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:09,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:09,967 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 55, active threads = 0, queued tasks = 0, completed tasks = 55], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe.failures=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (object_put_request_completed=88) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (stream_write_block_uploads_committed=0) (op_create=44) (committer_bytes_uploaded=0) (committer_commit_job.failures=0) (op_get_delegation_token.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=2) (stream_read_seek_bytes_skipped=0) (stream_read_operations=6) (stream_read_remote_stream_aborted=0) (op_hsync=0) (stream_write_block_uploads_aborted=0) (object_copy_requests=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=49046) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=2) (op_is_file.failures=0) (op_delete=44) (object_delete_objects=88) (committer_bytes_committed=0) (op_exists=0) (object_multipart_initiated=0) (op_mkdirs=44) (op_get_delegation_token=0) (stream_read_vectored_incoming_ranges=97) (object_multipart_initiated.failures=0) (stream_read_version_mismatches=0) (files_copied=0) (op_glob_status.failures=0) (action_file_opened.failures=0) (object_list_request=176) (action_http_head_request.failures=0) (op_access.failures=0) (stream_read_seek_operations=0) (object_put_bytes=2883584) (op_get_content_summary.failures=0) (audit_failure=0) (op_is_file=0) (committer_materialize_file=0) (op_get_file_checksum=0) (committer_commit_job=0) (op_list_files.failures=0) (stream_read_remote_stream_drain=6) (op_list_files=0) (op_create_non_recursive=0) (directories_created=44) (action_http_head_request=126) (audit_request_execution=522) (committer_tasks_failed=0) (object_list_request.failures=0) (stream_write_block_uploads=44) (object_multipart_aborted.failures=0) (committer_stage_file_upload=0) (committer_load_single_pending_file.failures=0) (action_http_get_request=44) (committer_materialize_file.failures=0) (committer_commits_created=0) (op_openfile=0) (object_delete_request=0) (files_created=44) (op_xattr_get_map.failures=0) (committer_magic_marker_put.failures=0) (op_xattr_get_named_map.failures=0) (op_list_status.failures=0) (stream_aborted=0) (object_multipart_aborted=0) (op_access=0) (files_delete_rejected=0) (op_rename.failures=0) (op_rename=0) (op_abort=0) (stream_write_total_time=0) (stream_read_seek_backward_operations=0) (multipart_upload_completed=0) (object_continue_list_request=0) (store_io_throttled=0) (stream_read_opened=6) (multipart_instantiated=0) (fake_directories_created=0) (op_xattr_get_named=0) (op_copy_from_local_file.failures=0) (committer_jobs_failed=0) (stream_read_remote_stream_drain.failures=0) (committer_commits_reverted=0) (stream_read_vectored_combined_ranges=41) (stream_read_operations_incomplete=0) (stream_write_bytes=2883584) (committer_commits_aborted=0) (committer_magic_files_created=0) (committer_load_single_pending_file=0) (multipart_upload_part_put=0) (multipart_upload_part_put_bytes=0) (op_mkdirs.failures=0) (op_createfile.failures=0) (stream_read_seek_forward_operations=0) (op_get_content_summary=0) (delegation_tokens_issued=0) (op_get_file_status.failures=0) (files_copied_bytes=0) (committer_magic_marker_put=0) (object_bulk_delete_request=88) (ignored_errors=0) (op_get_file_checksum.failures=0) (op_list_located_status=0) (object_bulk_delete_request.failures=0) (op_is_directory.failures=0) (committer_stage_file_upload.failures=0) (op_is_directory=0) (fake_directories_deleted=44) (object_metadata_request=126) (action_executor_acquired=0) (stream_read_close_operations=38) (stream_write_total_data=5767168) (op_xattr_list.failures=0) (object_put_request.failures=0) (op_xattr_get_map=0) (stream_read_vectored_operations=31) (committer_commits_completed=0) (stream_read_bytes=12926) (object_select_requests=0) (op_createfile=0) (delegation_tokens_issued.failures=0) (store_io_request=522) (store_exists_probe=0) (store_io_retry=0) (object_put_request=88) (op_delete.failures=0) (multipart_upload_list.failures=0) (directories_deleted=0) (op_xattr_get_named_map=0) (multipart_upload_aborted=0) (op_open=38) (action_file_opened=38) (stream_write_exceptions=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_closed=6) (op_xattr_list=0) (audit_access_check_failure=0) (op_abort.failures=0) (object_continue_list_request.failures=0) (op_get_file_status=2) (stream_read_total_bytes=404942) (op_xattr_get_named.failures=0) (object_delete_request.failures=0) (op_hflush=0) (audit_span_creation=173) (committer_commits.failures=0) (stream_read_seek_policy_changed=40) (committer_jobs_completed=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_list=0) (op_exists.failures=0) (op_glob_status=0) (stream_write_queue_duration.failures=0) (files_deleted=44) (op_create.failures=0) (committer_tasks_completed=0) (stream_read_bytes_discarded_in_close=392016) (multipart_upload_started=0) (op_copy_from_local_file=0) (op_list_status=0));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=44) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0));
minimums=((object_bulk_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_delete.failures.min=-1) (op_createfile.failures.min=-1) (op_glob_status.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_rename.min=-1) (action_file_opened.min=6) (op_list_files.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_list.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_drain.min=0) (op_list_files.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_map.min=-1) (object_put_request.failures.min=-1) (op_create.min=7) (delegation_tokens_issued.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.min=15) (op_get_file_checksum.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_content_summary.min=-1) (action_http_get_request.failures.min=-1) (op_is_directory.min=-1) (op_get_file_status.failures.min=-1) (op_abort.failures.min=-1) (op_get_delegation_token.min=-1) (object_list_request.min=5) (object_continue_list_request.min=-1) (op_xattr_get_map.failures.min=-1) (op_createfile.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_list_status.failures.min=-1) (op_create.failures.min=-1) (committer_materialize_file.min=-1) (op_delete.min=38) (op_access.failures.min=-1) (multipart_upload_list.min=-1) (object_continue_list_request.failures.min=-1) (object_bulk_delete_request.min=10) (op_is_file.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (op_get_file_status.min=5) (object_put_request.min=46) (op_access.min=-1) (store_exists_probe.min=-1) (object_delete_request.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_list.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.min=-1) (action_executor_acquired.min=-1) (op_exists.min=-1) (op_mkdirs.min=28) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=3) (op_rename.failures.min=-1) (op_list_status.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1) (op_is_directory.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_abort.min=-1) (op_xattr_get_named_map.min=-1) (action_http_head_request.failures.min=-1) (op_mkdirs.failures.min=-1));
maximums=((committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_createfile.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.max=9) (object_put_request.max=132) (op_access.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.failures.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.max=95) (committer_magic_marker_put.max=-1) (action_file_opened.failures.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (object_list_request.failures.max=-1) (action_http_head_request.max=17) (op_get_content_summary.failures.max=-1) (action_http_head_request.failures.max=-1) (object_put_request.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.max=-1) (object_bulk_delete_request.max=38) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.max=-1) (op_mkdirs.max=395) (op_delete.failures.max=-1) (op_xattr_get_named_map.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.failures.max=-1) (op_create.max=63) (op_access.failures.max=-1) (object_delete_request.failures.max=-1) (op_is_directory.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_map.max=-1) (op_mkdirs.failures.max=-1) (action_file_opened.max=18) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.max=-1) (action_executor_acquired.failures.max=-1) (op_get_delegation_token.max=-1) (delegation_tokens_issued.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_files.max=-1) (op_list_files.failures.max=-1) (multipart_upload_list.max=-1) (op_exists.max=-1) (op_is_file.max=-1) (object_multipart_initiated.max=-1) (op_get_file_checksum.max=-1) (op_rename.failures.max=-1) (op_glob_status.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.max=-1) (op_delete.max=101) (op_list_status.failures.max=-1) (op_list_status.max=-1) (op_abort.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_create.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_list.failures.max=-1) (store_exists_probe.max=-1) (object_list_request.max=243) (op_xattr_get_named.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.max=1) (multipart_upload_list.failures.max=-1));
means=((op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=44, sum=2772, mean=63.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=4, mean=0.6667)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=44, sum=2649, mean=60.2045)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=43, sum=1311, mean=30.4884)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=176, sum=2288, mean=13.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=38, sum=289, mean=7.6053)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=88, sum=1679, mean=19.0795)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=44, sum=696, mean=15.8182)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=88, sum=4543, mean=51.6250)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=126, sum=830, mean=6.5873)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:09,968 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:09,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,968 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,968 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [251] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000207 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000207&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=251&ts=1731778449968
2024-11-16 17:34:09,975 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:09,975 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,976 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:09,976 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:09,976 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:09,976 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [251] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000207 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000207&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=251&ts=1731778449968
2024-11-16 17:34:09,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:09,979 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:09,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:09,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:09,979 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [251] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000207 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000207&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=251&ts=1731778449968
2024-11-16 17:34:09,996 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:09,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:09,997 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.018s
2024-11-16 17:34:09,997 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:09,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:09,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:09,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:09,997 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:09,997 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [251] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000208 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000208&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=251&ts=1731778449997
2024-11-16 17:34:10,003 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:10,003 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:10,003 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:10,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15715362070964824893.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:10,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15715362070964824893.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (op_hsync=0) (op_hflush=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (op_abort=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (op_abort.failures=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1));
maximums=((object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15715362070964824893.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:10,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:10,005 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:10,005 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15715362070964824893.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:10,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:10,005 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:10,005 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:10,005 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:10,005 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000208 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000208&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=36&ts=1731778449997
2024-11-16 17:34:10,049 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:10,049 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:10,049 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.044s
2024-11-16 17:34:10,049 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15715362070964824893.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:10,049 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15715362070964824893.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:10,049 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15715362070964824893.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:10,049 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:10,049 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:10,050 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (stream_write_total_data=65536) (op_hflush=0) (multipart_upload_completed=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (stream_write_total_time=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (op_abort=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_put_request.min=44) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_put_request.max=44) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=44, mean=44.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:10,050 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:10,052 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:10,052 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:10,053 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:10,053 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [252] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000209 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000209/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000209&t0=252&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=252&ts=1731778450052
2024-11-16 17:34:10,058 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:10,058 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:10,059 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:10,059 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:34:10,060 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (stream_read_closed=0) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_total_bytes=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=0) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_combined_ranges=0) (stream_read_vectored_operations=0) (action_file_opened=1) (action_http_get_request=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_block_read.failures=0) (stream_read_block_read=0) (action_executor_acquired=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.min=6) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1));
maximums=((action_file_opened.max=6) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:34:10,061 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:10,061 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:10,062 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:10,062 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [251] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=251&ts=1731778450061
2024-11-16 17:34:10,068 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:10,068 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:10,069 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [251] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=251&ts=1731778450061
2024-11-16 17:34:10,078 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:34:10,079 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:10,079 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:10,079 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:10,079 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:10,079 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:10,079 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:10,079 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:10,079 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:10,080 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:10,080 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:10,080 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:10,080 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:10,081 [s3a-transfer-obs-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:10,081 [s3a-transfer-obs-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:10,081 [s3a-transfer-obs-bucket-unbounded-pool2-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [253] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=253&ts=1731778450061
2024-11-16 17:34:10,088 [s3a-transfer-obs-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:10,088 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:34:10,088 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:10,088 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:10,088 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:10,089 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778450043; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:10,089 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:10,089 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:10,089 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:10,089 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:10,089 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:10,089 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:10,089 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:10,089 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:10,089 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:10,090 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:10,090 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:10,090 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=38&ts=1731778450061
2024-11-16 17:34:10,091 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:10,104 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:34:10,104 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:34:10,104 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:34:10,104 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:10,104 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:10,104 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:10,104 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:10,104 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:10,105 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:10,105 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000210&t0=251&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=38&ts=1731778450061
2024-11-16 17:34:10,118 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:34:10,119 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:34:10,119 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.015s
2024-11-16 17:34:10,119 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:34:10,119 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.028s
2024-11-16 17:34:10,119 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.040s
2024-11-16 17:34:10,119 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:10,120 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:10,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:34:10,148 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@241e0995, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a457bfaa-b9f1-40c7-b547-9cd4f54d6c56', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7014d0e0[Running, pool size = 57, active threads = 0, queued tasks = 0, completed tasks = 57], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_get_map.failures=0) (multipart_upload_part_put_bytes=0) (op_delete=45) (multipart_upload_abort_under_path_invoked=0) (committer_jobs_completed=0) (op_get_content_summary.failures=0) (committer_magic_marker_put=0) (op_list_located_status=0) (action_http_head_request.failures=0) (op_is_directory.failures=0) (op_is_file=0) (stream_write_block_uploads_aborted=0) (stream_read_close_operations=39) (committer_commit_job.failures=0) (op_abort=0) (files_deleted=45) (stream_read_remote_stream_aborted=0) (stream_write_queue_duration.failures=0) (op_open=39) (store_io_request=533) (object_continue_list_request=0) (op_openfile=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (stream_write_exceptions=0) (op_get_delegation_token.failures=0) (op_exists.failures=0) (object_delete_objects=90) (stream_write_block_uploads=45) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits_reverted=0) (op_get_file_checksum.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (directories_deleted=0) (object_list_request.failures=0) (stream_read_remote_stream_drain=6) (stream_read_opened=6) (committer_jobs_failed=0) (op_get_file_status.failures=0) (stream_write_total_time=0) (object_bulk_delete_request=90) (op_xattr_list.failures=0) (object_select_requests=0) (committer_load_single_pending_file=0) (committer_stage_file_upload.failures=0) (action_http_head_request=129) (object_multipart_aborted=0) (op_xattr_get_named_map.failures=0) (committer_bytes_committed=0) (stream_read_exceptions=0) (object_continue_list_request.failures=0) (stream_read_vectored_operations=31) (stream_read_seek_forward_operations=0) (object_put_request_completed=90) (stream_read_unbuffered=2) (op_get_file_status=2) (stream_read_bytes_discarded_in_close=392016) (action_executor_acquired.failures=0) (op_create.failures=0) (op_create_non_recursive=0) (op_mkdirs=45) (op_rename.failures=0) (op_is_directory=0) (stream_read_seek_bytes_skipped=0) (files_copied_bytes=0) (stream_read_closed=6) (op_delete.failures=0) (audit_span_creation=177) (object_delete_request=0) (op_list_files=0) (stream_write_total_data=5898240) (stream_write_exceptions_completing_upload=0) (action_http_get_request=44) (multipart_upload_list.failures=0) (object_list_request=180) (committer_commits_aborted=0) (delegation_tokens_issued.failures=0) (store_io_throttled=0) (op_hflush=0) (stream_read_vectored_incoming_ranges=97) (stream_read_seek_backward_operations=0) (object_put_bytes=2949120) (op_mkdirs.failures=0) (object_metadata_request=129) (object_put_request.failures=0) (op_xattr_get_named_map=0) (action_file_opened.failures=0) (stream_read_fully_operations=2) (object_multipart_initiated.failures=0) (object_put_request=90) (stream_read_seek_operations=0) (op_list_status.failures=0) (op_is_file.failures=0) (fake_directories_created=0) (committer_load_single_pending_file.failures=0) (op_hsync=0) (op_xattr_get_map=0) (stream_aborted=0) (delegation_tokens_issued=0) (committer_commits_completed=0) (op_access.failures=0) (committer_bytes_uploaded=0) (op_copy_from_local_file.failures=0) (op_rename=0) (store_exists_probe=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=0) (committer_magic_files_created=0) (action_file_opened=39) (op_exists=0) (object_delete_request.failures=0) (op_get_file_checksum=0) (committer_tasks_completed=0) (audit_request_execution=533) (multipart_upload_completed=0) (op_createfile=0) (op_glob_status=0) (store_io_retry=0) (op_xattr_get_named=0) (stream_read_seek_policy_changed=41) (stream_read_seek_bytes_discarded=0) (files_created=45) (committer_commits.failures=0) (committer_commit_job=0) (store_exists_probe.failures=0) (op_get_content_summary=0) (stream_read_operations=6) (stream_write_block_uploads_committed=0) (multipart_upload_aborted=0) (object_multipart_initiated=0) (stream_read_bytes=12926) (directories_created=45) (ignored_errors=0) (multipart_upload_list=0) (committer_materialize_file.failures=0) (op_create=45) (multipart_instantiated=0) (op_access=0) (op_createfile.failures=0) (op_copy_from_local_file=0) (object_multipart_aborted.failures=0) (op_get_delegation_token=0) (committer_materialize_file=0) (op_xattr_get_named.failures=0) (action_http_get_request.failures=0) (files_delete_rejected=0) (object_bulk_delete_request.failures=0) (files_copied=0) (op_glob_status.failures=0) (committer_commits_created=0) (stream_read_total_bytes=404942) (stream_read_remote_stream_drain.failures=0) (committer_tasks_failed=0) (stream_read_vectored_combined_ranges=41) (audit_failure=0) (object_copy_requests=0) (op_xattr_list=0) (stream_write_bytes=2949120) (fake_directories_deleted=45) (op_list_files.failures=0) (committer_stage_file_upload=0) (stream_read_vectored_read_bytes_discarded=49046) (multipart_upload_started=0) (audit_access_check_failure=0) (op_list_status=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=45) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=15) (op_create.min=7) (object_delete_request.failures.min=-1) (op_abort.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_file_opened.min=6) (op_access.min=-1) (delegation_tokens_issued.min=-1) (multipart_upload_list.min=-1) (committer_magic_marker_put.min=-1) (op_createfile.min=-1) (op_delete.failures.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_file.min=-1) (op_list_files.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_rename.min=-1) (op_get_file_status.failures.min=-1) (op_list_status.failures.min=-1) (op_rename.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.min=-1) (store_exists_probe.min=-1) (object_multipart_initiated.min=-1) (op_mkdirs.min=28) (op_get_file_status.min=5) (op_xattr_list.min=-1) (action_http_head_request.failures.min=-1) (op_get_delegation_token.min=-1) (op_get_content_summary.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=0) (op_exists.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_materialize_file.min=-1) (op_delete.min=38) (op_is_directory.failures.min=-1) (object_multipart_aborted.min=-1) (op_exists.failures.min=-1) (committer_commit_job.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_checksum.min=-1) (object_delete_request.min=-1) (op_create.failures.min=-1) (op_createfile.failures.min=-1) (op_copy_from_local_file.min=-1) (op_glob_status.min=-1) (op_is_directory.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.min=5) (op_glob_status.failures.min=-1) (op_list_status.min=-1) (object_list_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_map.min=-1) (store_exists_probe.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=44) (committer_magic_marker_put.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.min=3) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.min=10));
maximums=((action_executor_acquired.failures.max=-1) (op_is_directory.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=63) (op_delete.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (op_rename.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (op_createfile.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_list.max=-1) (op_access.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_checksum.failures.max=-1) (op_createfile.max=-1) (multipart_upload_list.failures.max=-1) (object_delete_request.max=-1) (op_get_file_status.max=9) (object_continue_list_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_is_file.max=-1) (op_glob_status.max=-1) (op_copy_from_local_file.max=-1) (stream_write_queue_duration.failures.max=-1) (op_abort.max=-1) (object_put_request.max=132) (multipart_upload_list.max=-1) (op_get_delegation_token.failures.max=-1) (store_exists_probe.max=-1) (committer_magic_marker_put.max=-1) (op_delete.max=101) (object_bulk_delete_request.failures.max=-1) (action_file_opened.max=18) (committer_stage_file_upload.max=-1) (object_multipart_initiated.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_list_request.max=243) (op_is_directory.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.max=17) (op_list_status.max=-1) (op_exists.max=-1) (action_http_get_request.max=95) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_commit_job.failures.max=-1) (object_list_request.failures.max=-1) (op_mkdirs.max=395) (action_executor_acquired.max=-1) (object_bulk_delete_request.max=38) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_list.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_delegation_token.max=-1) (object_multipart_initiated.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_get_map.max=-1) (committer_stage_file_upload.failures.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_drain.max=1) (stream_write_queue_duration.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.max=-1) (op_list_files.failures.max=-1) (action_http_get_request.failures.max=-1) (op_list_files.max=-1) (object_put_request.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.max=-1) (op_list_status.failures.max=-1) (op_mkdirs.failures.max=-1));
means=((op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=45, sum=2690, mean=59.7778)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=90, sum=4604, mean=51.1556)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=4, mean=0.6667)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=90, sum=1706, mean=18.9556)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=39, sum=295, mean=7.5641)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=180, sum=2317, mean=12.8722)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=45, sum=2801, mean=62.2444)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=45, sum=703, mean=15.6222)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=129, sum=844, mean=6.5426)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=43, sum=1311, mean=30.4884)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:34:10,150 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:34:10,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:10,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:10,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:10,151 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:10,151 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000211 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000211&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=254&ts=1731778450150
2024-11-16 17:34:10,165 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:34:10,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:10,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:34:10,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:10,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:10,166 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000211 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000211&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=254&ts=1731778450150
2024-11-16 17:34:10,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:34:10,170 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:34:10,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:34:10,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:34:10,171 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000211 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000211&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=254&ts=1731778450150
2024-11-16 17:34:10,190 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:34:10,190 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:34:10,190 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.020s
2024-11-16 17:34:10,190 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:34:10,191 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:10,191 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:10,191 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:10,191 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:10,191 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000212 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000212&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=254&ts=1731778450191
2024-11-16 17:34:10,197 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:34:10,198 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:10,198 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:34:10,198 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9441658372369234044.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:34:10,199 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9441658372369234044.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (op_hsync=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_total_data=0) (op_hflush=0) (multipart_upload_completed=0) (action_executor_acquired=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (object_put_request=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9441658372369234044.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:34:10,200 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:10,200 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:34:10,200 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9441658372369234044.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:34:10,200 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:34:10,200 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:34:10,200 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:34:10,200 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000212 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000212&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=41&ts=1731778450191
2024-11-16 17:34:10,202 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:34:10,243 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:34:10,243 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:34:10,243 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.043s
2024-11-16 17:34:10,243 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9441658372369234044.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:34:10,243 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9441658372369234044.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:10,243 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9441658372369234044.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:34:10,243 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:34:10,244 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:34:10,246 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired.failures=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (op_hflush=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (op_abort=0) (op_hsync=0) (object_put_request=1) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=43) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=43) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=43, mean=43.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:34:10,246 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:34:10,247 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:34:10,247 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:34:10,247 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:34:10,247 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000213 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000213&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=254&ts=1731778450247
2024-11-16 17:34:10,260 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:34:10,260 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:34:10,260 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:10,260 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:34:10,260 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:34:10,260 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:34:10,260 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:34:10,260 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:10,261 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:34:10,261 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:34:10,261 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000213 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&rg=500-899&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000213&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=43&ts=1731778450247
2024-11-16 17:34:10,282 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:34:10,282 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:34:10,283 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_backward_operations=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (action_file_opened=1) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (action_http_get_request=1) (stream_read_unbuffered=0) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_read=0) (stream_read_bytes=400) (stream_read_version_mismatches=0) (stream_read_total_bytes=400) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (stream_read_vectored_combined_ranges=1) (stream_read_closed=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=3) (stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_forward_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=21) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=13) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((action_file_opened.max=13) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=21) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=21, mean=21.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=13, mean=13.0000)));

2024-11-16 17:34:10,284 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:34:10,284 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:34:10,284 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:34:10,284 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=254&ts=1731778450284
2024-11-16 17:34:10,288 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:34:10,288 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:10,288 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=254&ts=1731778450284
2024-11-16 17:34:10,303 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:34:10,304 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:34:10,304 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:34:10,304 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:34:10,304 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:34:10,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:34:10,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:34:10,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:34:10,304 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:34:10,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:34:10,304 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:34:10,304 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:34:10,305 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:34:10,305 [s3a-transfer-obs-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:34:10,305 [s3a-transfer-obs-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:34:10,305 [s3a-transfer-obs-bucket-unbounded-pool2-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [255] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=255&ts=1731778450284
2024-11-16 17:34:10,312 [s3a-transfer-obs-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:34:10,312 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:34:10,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:34:10,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:34:10,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:34:10,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778450237; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:34:10,313 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:34:10,313 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:34:10,313 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:34:10,314 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:34:10,314 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:34:10,314 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:34:10,314 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:34:10,314 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:10,314 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:10,314 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:34:10,314 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:10,314 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=44&ts=1731778450284
2024-11-16 17:34:10,316 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:34:10,327 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=eb6549de-d6ed-49db-8e86-a8a35abdbda4&ks=1&id=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56-00000214&t0=254&fs=a457bfaa-b9f1-40c7-b547-9cd4f54d6c56&t1=44&ts=1731778450284
2024-11-16 17:34:10,339 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:34:10,339 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:34:10,340 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:34:10,340 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.026s
2024-11-16 17:34:10,341 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:34:10,341 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.037s
2024-11-16 17:34:10,341 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:34:10,342 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:34:10,365 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:34:10,374 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:34:10,376 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:10,376 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@7014d0e0[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 58]. Waiting max 30 SECONDS
2024-11-16 17:34:10,376 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:34:10,377 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics1-obs-bucket
2024-11-16 17:34:10,377 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(733)) - Shutting down metrics publisher
2024-11-16 17:34:10,378 [shutdown-hook-0] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:34:10,379 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:10,379 [shutdown-hook-0] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6b2c1ec8] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:34:10,380 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((files_created=46) (op_access.failures=0) (op_exists=0) (object_list_request.failures=0) (committer_tasks_completed=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted=0) (multipart_upload_started=0) (op_list_located_status=0) (store_io_throttled=0) (multipart_upload_completed=0) (stream_read_closed=6) (op_open=40) (op_get_delegation_token.failures=0) (op_list_files.failures=0) (directories_created=46) (multipart_upload_list=0) (object_put_request_completed=92) (object_continue_list_request.failures=0) (files_copied_bytes=0) (multipart_upload_part_put_bytes=0) (stream_aborted=0) (multipart_instantiated=0) (op_xattr_get_named.failures=0) (op_list_status=0) (committer_commits_reverted=0) (stream_read_remote_stream_drain=6) (committer_bytes_committed=0) (op_glob_status.failures=0) (op_get_file_status.failures=0) (committer_stage_file_upload=0) (stream_read_operations=6) (store_io_request=545) (stream_read_vectored_read_bytes_discarded=49046) (op_create.failures=0) (committer_commits_created=0) (audit_access_check_failure=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (op_create=46) (committer_load_single_pending_file.failures=0) (committer_magic_marker_put.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_block_uploads=46) (committer_tasks_failed=0) (action_file_opened=40) (ignored_errors=0) (stream_read_seek_forward_operations=0) (multipart_upload_list.failures=0) (stream_write_total_time=0) (object_bulk_delete_request.failures=0) (committer_jobs_completed=0) (stream_read_unbuffered=2) (audit_request_execution=545) (store_exists_probe.failures=0) (stream_read_fully_operations=2) (object_multipart_initiated=0) (object_select_requests=0) (op_get_delegation_token=0) (stream_write_total_data=6029312) (stream_read_seek_policy_changed=42) (store_io_retry=0) (stream_read_seek_backward_operations=0) (object_copy_requests=0) (stream_write_bytes=3014656) (op_xattr_list.failures=0) (op_hflush=0) (multipart_upload_aborted=0) (op_is_directory.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_close=392016) (directories_deleted=0) (object_delete_objects=92) (op_xattr_get_named=0) (object_delete_request.failures=0) (op_exists.failures=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=100) (op_create_non_recursive=0) (op_glob_status=0) (op_createfile.failures=0) (op_is_file=0) (stream_read_seek_bytes_discarded=0) (op_get_file_checksum.failures=0) (stream_read_exceptions=0) (op_mkdirs=46) (stream_read_version_mismatches=0) (object_put_request=92) (fake_directories_deleted=46) (op_xattr_list=0) (committer_commits_aborted=0) (committer_materialize_file=0) (committer_bytes_uploaded=0) (action_http_head_request=132) (committer_commits.failures=0) (op_rename=0) (action_http_get_request=45) (action_http_head_request.failures=0) (audit_failure=0) (op_get_content_summary.failures=0) (files_copied=0) (op_openfile=0) (op_get_file_checksum=0) (stream_read_seek_bytes_skipped=0) (committer_commit_job=0) (stream_read_bytes=13326) (delegation_tokens_issued=0) (stream_write_exceptions_completing_upload=0) (op_list_files=0) (action_http_get_request.failures=0) (op_abort=0) (object_put_request.failures=0) (stream_write_queue_duration.failures=0) (op_rename.failures=0) (committer_commits_completed=0) (op_delete=46) (committer_load_single_pending_file=0) (op_get_content_summary=0) (op_abort.failures=0) (op_xattr_get_named_map=0) (store_exists_probe=0) (stream_read_seek_operations=0) (stream_write_block_uploads_committed=0) (op_mkdirs.failures=0) (op_delete.failures=0) (stream_write_exceptions=0) (op_access=0) (op_createfile=0) (committer_commit_job.failures=0) (op_list_status.failures=0) (object_delete_request=0) (committer_jobs_failed=0) (stream_read_total_bytes=405342) (stream_read_vectored_operations=32) (op_copy_from_local_file=0) (op_copy_from_local_file.failures=0) (stream_read_opened=6) (op_is_file.failures=0) (object_multipart_aborted=0) (committer_materialize_file.failures=0) (object_bulk_delete_request=92) (op_xattr_get_map.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_is_directory=0) (op_xattr_get_named_map.failures=0) (stream_read_vectored_combined_ranges=42) (stream_write_queue_duration=0) (committer_magic_files_created=0) (delegation_tokens_issued.failures=0) (audit_span_creation=181) (object_metadata_request=132) (stream_read_operations_incomplete=0) (stream_write_block_uploads_aborted=0) (fake_directories_created=0) (op_hsync=0) (object_put_bytes=3014656) (committer_stage_file_upload.failures=0) (object_list_request=184) (files_delete_rejected=0) (committer_magic_marker_put=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_map=0) (files_deleted=46) (op_get_file_status=2) (stream_read_bytes_backwards_on_seek=0) (stream_read_close_operations=40));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=46) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0));
minimums=((committer_materialize_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (store_exists_probe.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_content_summary.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.min=-1) (op_get_delegation_token.min=-1) (object_put_request.failures.min=-1) (object_list_request.min=5) (committer_commit_job.min=-1) (object_list_request.failures.min=-1) (op_access.failures.min=-1) (op_createfile.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_directory.min=-1) (op_exists.failures.min=-1) (op_delete.failures.min=-1) (object_put_request.min=43) (action_http_get_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.failures.min=-1) (op_rename.min=-1) (op_delete.min=38) (op_copy_from_local_file.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.min=10) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.min=-1) (op_list_status.min=-1) (op_exists.min=-1) (action_http_get_request.min=21) (op_get_file_checksum.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_rename.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_mkdirs.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_mkdirs.min=28) (op_glob_status.min=-1) (action_http_head_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_access.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.min=-1) (op_get_file_checksum.failures.min=-1) (op_glob_status.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.min=5) (op_list_status.failures.min=-1) (op_is_directory.failures.min=-1) (action_http_head_request.min=3) (op_abort.failures.min=-1) (op_abort.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.min=0) (op_create.min=7) (multipart_upload_list.min=-1) (action_file_opened.min=13) (committer_commit_job.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_create.failures.min=-1) (object_delete_request.min=-1) (object_multipart_initiated.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_list.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (object_put_request.max=132) (op_get_file_checksum.max=-1) (object_list_request.failures.max=-1) (op_is_file.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_status.max=9) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (committer_materialize_file.max=-1) (object_list_request.max=243) (multipart_upload_list.failures.max=-1) (committer_commit_job.max=-1) (action_http_head_request.failures.max=-1) (op_mkdirs.max=395) (op_createfile.max=-1) (delegation_tokens_issued.failures.max=-1) (op_exists.max=-1) (op_xattr_get_named.failures.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_content_summary.max=-1) (op_rename.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_status.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_get_map.max=-1) (object_continue_list_request.max=-1) (committer_commit_job.failures.max=-1) (op_create.max=63) (op_xattr_list.max=-1) (op_access.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.max=101) (op_abort.max=-1) (op_get_content_summary.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (action_http_get_request.failures.max=-1) (op_mkdirs.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.max=18) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_glob_status.max=-1) (op_list_files.failures.max=-1) (op_createfile.failures.max=-1) (object_multipart_aborted.max=-1) (object_bulk_delete_request.max=38) (op_xattr_list.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_create.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (multipart_upload_list.max=-1) (object_delete_request.max=-1) (op_glob_status.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (delegation_tokens_issued.max=-1) (object_put_request.failures.max=-1) (op_copy_from_local_file.max=-1) (action_http_head_request.max=17) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.max=95) (op_list_files.max=-1) (store_exists_probe.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (op_access.failures.max=-1) (op_list_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_exists.failures.max=-1) (action_executor_acquired.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=40, sum=308, mean=7.7000)) (object_bulk_delete_request.mean=(samples=92, sum=1731, mean=18.8152)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=44, sum=1332, mean=30.2727)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=46, sum=2841, mean=61.7609)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=14, mean=7.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=184, sum=2359, mean=12.8207)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=132, sum=865, mean=6.5530)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=4, mean=0.6667)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=46, sum=2728, mean=59.3043)) (op_create.mean=(samples=46, sum=711, mean=15.4565)) (object_put_request.mean=(samples=92, sum=4667, mean=50.7283)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)));

