<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20241001 11:17:48.662" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.4.0-1.5.0-SNAPSHOT-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:03:42.160" endtime="20241001 11:03:42.161"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:42.167" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:42.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:42.173" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:03:42.162" endtime="20241001 11:03:42.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:42.174" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:03:42.173" endtime="20241001 11:03:42.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:42.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:42.174" endtime="20241001 11:03:42.174"/>
</kw>
<status status="PASS" starttime="20241001 11:03:42.162" endtime="20241001 11:03:42.175"/>
</kw>
<msg timestamp="20241001 11:03:42.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:42.162" endtime="20241001 11:03:42.175"/>
</kw>
<msg timestamp="20241001 11:03:42.175" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:03:42.161" endtime="20241001 11:03:42.175"/>
</kw>
<msg timestamp="20241001 11:03:42.175" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:42.161" endtime="20241001 11:03:42.175"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:03:42.176" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:42.175" endtime="20241001 11:03:42.176"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:42.179" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:42.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:42.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:42.177" endtime="20241001 11:03:42.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:42.221" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:42.220" endtime="20241001 11:03:42.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:42.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:42.221" endtime="20241001 11:03:42.221"/>
</kw>
<status status="PASS" starttime="20241001 11:03:42.177" endtime="20241001 11:03:42.222"/>
</kw>
<msg timestamp="20241001 11:03:42.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:42.177" endtime="20241001 11:03:42.222"/>
</kw>
<status status="PASS" starttime="20241001 11:03:42.176" endtime="20241001 11:03:42.222"/>
</kw>
<status status="PASS" starttime="20241001 11:03:42.176" endtime="20241001 11:03:42.222"/>
</kw>
<status status="PASS" starttime="20241001 11:03:42.160" endtime="20241001 11:03:42.222"/>
</kw>
<status status="PASS" starttime="20241001 11:03:42.160" endtime="20241001 11:03:42.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:42.226" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:42.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:42.229" level="INFO">${output} = OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
...</msg>
<status status="PASS" starttime="20241001 11:03:42.223" endtime="20241001 11:03:42.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:42.230" level="INFO">OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
HOSTNAME=scm3.org
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE_LOG_DIR=/var/log/hadoop
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
JAVA_HOME=/usr/local/jdk-17.0.2
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.server.default.replication=3
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
CORE-SITE.XML_dfs.data.transfer.protection=authentication
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
PWD=/opt/hadoop
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HOME=/opt/hadoop
LC_CTYPE=C.UTF-8
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
WAITFOR=scm2.org:9894
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.address=recon:9891
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
SHLVL=1
OZONE-SITE.XML_ozone.om.ratis.enable=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/jdk-17.0.2/bin:/opt/hadoop/bin
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.security.authorization=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.security.enabled=true
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
_=/usr/bin/env</msg>
<status status="PASS" starttime="20241001 11:03:42.230" endtime="20241001 11:03:42.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:42.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:42.231" endtime="20241001 11:03:42.231"/>
</kw>
<status status="PASS" starttime="20241001 11:03:42.223" endtime="20241001 11:03:42.231"/>
</kw>
<msg timestamp="20241001 11:03:42.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:42.223" endtime="20241001 11:03:42.231"/>
</kw>
<msg timestamp="20241001 11:03:42.232" level="INFO">${result} = OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
...</msg>
<status status="PASS" starttime="20241001 11:03:42.222" endtime="20241001 11:03:42.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:42.232" level="INFO">OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
HOSTNAME=scm3.org
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE_LOG_DIR=/var/log/hadoop
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
JAVA_HOME=/usr/local/jdk-17.0.2
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.server.default.replication=3
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
CORE-SITE.XML_dfs.data.transfer.protection=authentication
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
PWD=/opt/hadoop
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HOME=/opt/hadoop
LC_CTYPE=C.UTF-8
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
WAITFOR=scm2.org:9894
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.address=recon:9891
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
SHLVL=1
OZONE-SITE.XML_ozone.om.ratis.enable=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/jdk-17.0.2/bin:/opt/hadoop/bin
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.security.authorization=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.security.enabled=true
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
_=/usr/bin/env</msg>
<status status="PASS" starttime="20241001 11:03:42.232" endtime="20241001 11:03:42.232"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:03:42.232" endtime="20241001 11:03:42.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:42.235" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:44.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:44.638" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20241001 11:03:42.234" endtime="20241001 11:03:44.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:44.639" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20241001 11:03:44.639" endtime="20241001 11:03:44.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:44.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:44.640" endtime="20241001 11:03:44.640"/>
</kw>
<status status="PASS" starttime="20241001 11:03:42.233" endtime="20241001 11:03:44.640"/>
</kw>
<msg timestamp="20241001 11:03:44.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:42.233" endtime="20241001 11:03:44.640"/>
</kw>
<msg timestamp="20241001 11:03:44.641" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20241001 11:03:42.233" endtime="20241001 11:03:44.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:44.641" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20241001 11:03:44.641" endtime="20241001 11:03:44.641"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20241001 11:03:44.641" endtime="20241001 11:03:44.641"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241001 11:03:42.159" endtime="20241001 11:03:44.642"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:03:44.644" endtime="20241001 11:03:44.644"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:44.649" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:44.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:44.653" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:03:44.646" endtime="20241001 11:03:44.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:44.653" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:03:44.653" endtime="20241001 11:03:44.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:44.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:44.654" endtime="20241001 11:03:44.654"/>
</kw>
<status status="PASS" starttime="20241001 11:03:44.646" endtime="20241001 11:03:44.654"/>
</kw>
<msg timestamp="20241001 11:03:44.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:44.645" endtime="20241001 11:03:44.654"/>
</kw>
<msg timestamp="20241001 11:03:44.655" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:03:44.645" endtime="20241001 11:03:44.655"/>
</kw>
<msg timestamp="20241001 11:03:44.655" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:44.645" endtime="20241001 11:03:44.655"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:03:44.655" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:44.655" endtime="20241001 11:03:44.655"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:44.659" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:44.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:44.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:44.657" endtime="20241001 11:03:44.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:44.730" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:44.729" endtime="20241001 11:03:44.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:44.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:44.730" endtime="20241001 11:03:44.730"/>
</kw>
<status status="PASS" starttime="20241001 11:03:44.656" endtime="20241001 11:03:44.730"/>
</kw>
<msg timestamp="20241001 11:03:44.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:44.656" endtime="20241001 11:03:44.731"/>
</kw>
<status status="PASS" starttime="20241001 11:03:44.656" endtime="20241001 11:03:44.731"/>
</kw>
<status status="PASS" starttime="20241001 11:03:44.655" endtime="20241001 11:03:44.731"/>
</kw>
<status status="PASS" starttime="20241001 11:03:44.644" endtime="20241001 11:03:44.731"/>
</kw>
<status status="PASS" starttime="20241001 11:03:44.643" endtime="20241001 11:03:44.731"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:03:44.731" endtime="20241001 11:03:44.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:44.735" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:47.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:47.130" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:03:44.732" endtime="20241001 11:03:47.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:47.131" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:03:47.131" endtime="20241001 11:03:47.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:47.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:47.131" endtime="20241001 11:03:47.132"/>
</kw>
<status status="PASS" starttime="20241001 11:03:44.732" endtime="20241001 11:03:47.132"/>
</kw>
<msg timestamp="20241001 11:03:47.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:44.732" endtime="20241001 11:03:47.132"/>
</kw>
<msg timestamp="20241001 11:03:47.132" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:03:44.731" endtime="20241001 11:03:47.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:47.133" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:03:47.132" endtime="20241001 11:03:47.133"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20241001 11:03:47.133" endtime="20241001 11:03:47.133"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241001 11:03:44.643" endtime="20241001 11:03:47.133"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20241001 11:03:42.116" endtime="20241001 11:03:47.134"/>
</suite>
<suite id="s1-s2" name="1.4.0-1.5.0-SNAPSHOT-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:03:47.881" endtime="20241001 11:03:47.882"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:47.885" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:47.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:47.889" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:03:47.883" endtime="20241001 11:03:47.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:47.890" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:03:47.890" endtime="20241001 11:03:47.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:47.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:47.890" endtime="20241001 11:03:47.891"/>
</kw>
<status status="PASS" starttime="20241001 11:03:47.882" endtime="20241001 11:03:47.891"/>
</kw>
<msg timestamp="20241001 11:03:47.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:47.882" endtime="20241001 11:03:47.891"/>
</kw>
<msg timestamp="20241001 11:03:47.891" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:03:47.882" endtime="20241001 11:03:47.891"/>
</kw>
<msg timestamp="20241001 11:03:47.891" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:47.882" endtime="20241001 11:03:47.891"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:03:47.892" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:47.891" endtime="20241001 11:03:47.892"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:47.895" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:47.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:47.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:47.893" endtime="20241001 11:03:47.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:47.975" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:47.974" endtime="20241001 11:03:47.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:47.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:47.975" endtime="20241001 11:03:47.975"/>
</kw>
<status status="PASS" starttime="20241001 11:03:47.893" endtime="20241001 11:03:47.975"/>
</kw>
<msg timestamp="20241001 11:03:47.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:47.893" endtime="20241001 11:03:47.975"/>
</kw>
<status status="PASS" starttime="20241001 11:03:47.892" endtime="20241001 11:03:47.976"/>
</kw>
<status status="PASS" starttime="20241001 11:03:47.892" endtime="20241001 11:03:47.976"/>
</kw>
<status status="PASS" starttime="20241001 11:03:47.881" endtime="20241001 11:03:47.976"/>
</kw>
<status status="PASS" starttime="20241001 11:03:47.880" endtime="20241001 11:03:47.976"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:47.980" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:50.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:50.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:47.978" endtime="20241001 11:03:50.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:50.747" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:50.746" endtime="20241001 11:03:50.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:50.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:50.747" endtime="20241001 11:03:50.748"/>
</kw>
<status status="PASS" starttime="20241001 11:03:47.977" endtime="20241001 11:03:50.748"/>
</kw>
<msg timestamp="20241001 11:03:50.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:47.977" endtime="20241001 11:03:50.748"/>
</kw>
<msg timestamp="20241001 11:03:50.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:47.977" endtime="20241001 11:03:50.748"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:03:50.748" endtime="20241001 11:03:50.749"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:50.756" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:53.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:53.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:50.753" endtime="20241001 11:03:53.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:53.647" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:53.647" endtime="20241001 11:03:53.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:53.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:53.648" endtime="20241001 11:03:53.648"/>
</kw>
<status status="PASS" starttime="20241001 11:03:50.750" endtime="20241001 11:03:53.648"/>
</kw>
<msg timestamp="20241001 11:03:53.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:50.750" endtime="20241001 11:03:53.648"/>
</kw>
<msg timestamp="20241001 11:03:53.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:50.749" endtime="20241001 11:03:53.649"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:03:53.649" endtime="20241001 11:03:53.649"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:03:47.976" endtime="20241001 11:03:53.649"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:53.653" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:03:53.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:53.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:53.651" endtime="20241001 11:03:53.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:53.656" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:53.656" endtime="20241001 11:03:53.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:53.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:53.656" endtime="20241001 11:03:53.657"/>
</kw>
<status status="PASS" starttime="20241001 11:03:53.651" endtime="20241001 11:03:53.657"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:53.660" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:58.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:58.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:53.658" endtime="20241001 11:03:58.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:58.235" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:58.234" endtime="20241001 11:03:58.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:58.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:58.235" endtime="20241001 11:03:58.236"/>
</kw>
<status status="PASS" starttime="20241001 11:03:53.658" endtime="20241001 11:03:58.236"/>
</kw>
<msg timestamp="20241001 11:03:58.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:53.658" endtime="20241001 11:03:58.236"/>
</kw>
<msg timestamp="20241001 11:03:58.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:53.657" endtime="20241001 11:03:58.236"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:03:58.236" endtime="20241001 11:03:58.237"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:58.239" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:58.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:58.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:58.237" endtime="20241001 11:03:58.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:58.244" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:58.244" endtime="20241001 11:03:58.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:58.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:58.244" endtime="20241001 11:03:58.245"/>
</kw>
<status status="PASS" starttime="20241001 11:03:58.237" endtime="20241001 11:03:58.245"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:03:53.650" endtime="20241001 11:03:58.245"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:58.249" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:01.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:01.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:58.247" endtime="20241001 11:04:01.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:01.246" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:01.245" endtime="20241001 11:04:01.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:01.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:01.246" endtime="20241001 11:04:01.247"/>
</kw>
<status status="PASS" starttime="20241001 11:03:58.247" endtime="20241001 11:04:01.247"/>
</kw>
<msg timestamp="20241001 11:04:01.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:58.247" endtime="20241001 11:04:01.247"/>
</kw>
<msg timestamp="20241001 11:04:01.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:58.246" endtime="20241001 11:04:01.247"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:01.247" endtime="20241001 11:04:01.248"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:03:58.245" endtime="20241001 11:04:01.248"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:01.252" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:04:01.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:01.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:01.250" endtime="20241001 11:04:01.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:01.255" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:01.254" endtime="20241001 11:04:01.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:01.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:01.255" endtime="20241001 11:04:01.255"/>
</kw>
<status status="PASS" starttime="20241001 11:04:01.249" endtime="20241001 11:04:01.255"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:01.258" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:05.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:05.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:01.257" endtime="20241001 11:04:05.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:05.743" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:05.742" endtime="20241001 11:04:05.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:05.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:05.743" endtime="20241001 11:04:05.744"/>
</kw>
<status status="PASS" starttime="20241001 11:04:01.256" endtime="20241001 11:04:05.744"/>
</kw>
<msg timestamp="20241001 11:04:05.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:01.256" endtime="20241001 11:04:05.744"/>
</kw>
<msg timestamp="20241001 11:04:05.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:01.255" endtime="20241001 11:04:05.744"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:05.744" endtime="20241001 11:04:05.745"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:05.747" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:05.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:05.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:05.745" endtime="20241001 11:04:05.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:05.752" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:05.751" endtime="20241001 11:04:05.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:05.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:05.752" endtime="20241001 11:04:05.753"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.745" endtime="20241001 11:04:05.753"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:04:01.248" endtime="20241001 11:04:05.753"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:04:05.755" endtime="20241001 11:04:05.755"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:05.759" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:05.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:05.763" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:04:05.757" endtime="20241001 11:04:05.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:05.763" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:04:05.763" endtime="20241001 11:04:05.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:05.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:05.764" endtime="20241001 11:04:05.764"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.756" endtime="20241001 11:04:05.764"/>
</kw>
<msg timestamp="20241001 11:04:05.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:05.756" endtime="20241001 11:04:05.764"/>
</kw>
<msg timestamp="20241001 11:04:05.764" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:04:05.756" endtime="20241001 11:04:05.764"/>
</kw>
<msg timestamp="20241001 11:04:05.765" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:05.755" endtime="20241001 11:04:05.765"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:04:05.765" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:05.765" endtime="20241001 11:04:05.765"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:05.769" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:05.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:05.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:05.767" endtime="20241001 11:04:05.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:05.840" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:05.840" endtime="20241001 11:04:05.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:05.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:05.841" endtime="20241001 11:04:05.841"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.766" endtime="20241001 11:04:05.841"/>
</kw>
<msg timestamp="20241001 11:04:05.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:05.766" endtime="20241001 11:04:05.842"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.766" endtime="20241001 11:04:05.842"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.765" endtime="20241001 11:04:05.842"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.755" endtime="20241001 11:04:05.842"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.754" endtime="20241001 11:04:05.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:05.846" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:08.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:08.175" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=be6e42c49f14bcfbc2e44982af4d286ff772329b3a1a2780314a23df33c584f6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:04:05.844" endtime="20241001 11:04:08.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:08.176" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=be6e42c49f14bcfbc2e44982af4d286ff772329b3a1a2780314a23df33c584f6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:04:08.175" endtime="20241001 11:04:08.176"/>
</kw>
<msg timestamp="20241001 11:04:08.176" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=be6e42c49f14bcfbc2e44982af4d286ff772329b3a1a2780314a23df33c584f6
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:04:05.843" endtime="20241001 11:04:08.176"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20241001 11:04:08.177" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=be6e42c49f14bcfbc2e44982af4d286ff772329b3a1a2780314a23df33c584f6
isDeleted=false
transactionLogIndex=0' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20241001 11:04:08.177" endtime="20241001 11:04:08.177"/>
</kw>
<msg timestamp="20241001 11:04:08.177" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20241001 11:04:08.176" endtime="20241001 11:04:08.177"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20241001 11:04:08.178" endtime="20241001 11:04:08.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20241001 11:04:08.178" endtime="20241001 11:04:08.178"/>
</kw>
<status status="NOT RUN" starttime="20241001 11:04:08.178" endtime="20241001 11:04:08.178"/>
</branch>
<status status="PASS" starttime="20241001 11:04:08.178" endtime="20241001 11:04:08.178"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:04:08.179" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:04:08.178" endtime="20241001 11:04:08.179"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:04:08.179" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:04:08.179" endtime="20241001 11:04:08.179"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:04:08.180" level="INFO">${secret} = ['be6e42c49f14bcfbc2e44982af4d286ff772329b3a1a2780314a23df33c584f6']</msg>
<status status="PASS" starttime="20241001 11:04:08.179" endtime="20241001 11:04:08.180"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:04:08.181" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:08.180" endtime="20241001 11:04:08.181"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:04:08.182" level="INFO">${secret} = be6e42c49f14bcfbc2e44982af4d286ff772329b3a1a2780314a23df33c584f6</msg>
<status status="PASS" starttime="20241001 11:04:08.181" endtime="20241001 11:04:08.182"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:08.185" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:08.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:08.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:08.183" endtime="20241001 11:04:08.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:08.622" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:08.621" endtime="20241001 11:04:08.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:08.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:08.622" endtime="20241001 11:04:08.622"/>
</kw>
<status status="PASS" starttime="20241001 11:04:08.183" endtime="20241001 11:04:08.623"/>
</kw>
<msg timestamp="20241001 11:04:08.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:08.182" endtime="20241001 11:04:08.623"/>
</kw>
<status status="PASS" starttime="20241001 11:04:08.182" endtime="20241001 11:04:08.623"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:08.627" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:09.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:09.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:08.625" endtime="20241001 11:04:09.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:09.024" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:09.023" endtime="20241001 11:04:09.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:09.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:09.024" endtime="20241001 11:04:09.024"/>
</kw>
<status status="PASS" starttime="20241001 11:04:08.624" endtime="20241001 11:04:09.025"/>
</kw>
<msg timestamp="20241001 11:04:09.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:08.624" endtime="20241001 11:04:09.025"/>
</kw>
<status status="PASS" starttime="20241001 11:04:08.623" endtime="20241001 11:04:09.025"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:09.028" level="INFO">Running command 'aws configure set aws_secret_access_key be6e42c49f14bcfbc2e44982af4d286ff772329b3a1a2780314a23df33c584f6 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:09.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:09.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:09.026" endtime="20241001 11:04:09.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:09.423" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:09.422" endtime="20241001 11:04:09.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:09.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:09.423" endtime="20241001 11:04:09.423"/>
</kw>
<status status="PASS" starttime="20241001 11:04:09.026" endtime="20241001 11:04:09.424"/>
</kw>
<msg timestamp="20241001 11:04:09.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:09.025" endtime="20241001 11:04:09.424"/>
</kw>
<status status="PASS" starttime="20241001 11:04:09.025" endtime="20241001 11:04:09.424"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:09.427" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:09.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:09.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:09.425" endtime="20241001 11:04:09.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:09.821" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:09.820" endtime="20241001 11:04:09.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:09.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:09.821" endtime="20241001 11:04:09.821"/>
</kw>
<status status="PASS" starttime="20241001 11:04:09.425" endtime="20241001 11:04:09.822"/>
</kw>
<msg timestamp="20241001 11:04:09.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:09.424" endtime="20241001 11:04:09.822"/>
</kw>
<status status="PASS" starttime="20241001 11:04:09.424" endtime="20241001 11:04:09.822"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:09.826" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:10.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:10.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:09.823" endtime="20241001 11:04:10.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:10.239" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:10.239" endtime="20241001 11:04:10.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:10.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:10.239" endtime="20241001 11:04:10.240"/>
</kw>
<status status="PASS" starttime="20241001 11:04:09.823" endtime="20241001 11:04:10.240"/>
</kw>
<msg timestamp="20241001 11:04:10.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:09.822" endtime="20241001 11:04:10.240"/>
</kw>
<status status="PASS" starttime="20241001 11:04:09.822" endtime="20241001 11:04:10.240"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.843" endtime="20241001 11:04:10.240"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.842" endtime="20241001 11:04:10.240"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:04:10.241" endtime="20241001 11:04:10.241"/>
</kw>
<status status="PASS" starttime="20241001 11:04:05.754" endtime="20241001 11:04:10.241"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:04:10.242" level="INFO">${randStr} = 0807930839</msg>
<status status="PASS" starttime="20241001 11:04:10.241" endtime="20241001 11:04:10.242"/>
</kw>
<msg timestamp="20241001 11:04:10.242" level="INFO">${random} = ozone-test-0807930839</msg>
<status status="PASS" starttime="20241001 11:04:10.241" endtime="20241001 11:04:10.242"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:10.246" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-0807930839 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:11.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:11.894" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0807930839"
}</msg>
<status status="PASS" starttime="20241001 11:04:10.244" endtime="20241001 11:04:11.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:11.895" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0807930839"
}</msg>
<status status="PASS" starttime="20241001 11:04:11.894" endtime="20241001 11:04:11.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:11.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:11.895" endtime="20241001 11:04:11.896"/>
</kw>
<status status="PASS" starttime="20241001 11:04:10.244" endtime="20241001 11:04:11.896"/>
</kw>
<msg timestamp="20241001 11:04:11.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:10.244" endtime="20241001 11:04:11.896"/>
</kw>
<msg timestamp="20241001 11:04:11.896" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0807930839"
}</msg>
<status status="PASS" starttime="20241001 11:04:10.243" endtime="20241001 11:04:11.896"/>
</kw>
<msg timestamp="20241001 11:04:11.897" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-0807930839"
}</msg>
<status status="PASS" starttime="20241001 11:04:10.243" endtime="20241001 11:04:11.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:11.897" endtime="20241001 11:04:11.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:11.897" endtime="20241001 11:04:11.897"/>
</kw>
<msg timestamp="20241001 11:04:11.897" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20241001 11:04:10.242" endtime="20241001 11:04:11.898"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241001 11:04:11.898" endtime="20241001 11:04:11.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:04:05.753" endtime="20241001 11:04:11.898"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:11.902" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:04:11.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:11.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:11.900" endtime="20241001 11:04:11.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:11.905" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:11.904" endtime="20241001 11:04:11.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:11.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:11.905" endtime="20241001 11:04:11.906"/>
</kw>
<status status="PASS" starttime="20241001 11:04:11.899" endtime="20241001 11:04:11.906"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:11.909" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:13.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:13.303" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:04:11.907" endtime="20241001 11:04:13.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:13.305" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:04:13.304" endtime="20241001 11:04:13.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:13.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:13.305" endtime="20241001 11:04:13.305"/>
</kw>
<msg timestamp="20241001 11:04:13.305" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:04:11.906" endtime="20241001 11:04:13.305"/>
</kw>
<msg timestamp="20241001 11:04:13.306" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:04:11.906" endtime="20241001 11:04:13.306"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:13.306" endtime="20241001 11:04:13.306"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:13.309" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:13.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:13.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:13.307" endtime="20241001 11:04:13.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:13.314" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:13.313" endtime="20241001 11:04:13.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:13.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:13.314" endtime="20241001 11:04:13.314"/>
</kw>
<status status="PASS" starttime="20241001 11:04:13.306" endtime="20241001 11:04:13.314"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:04:11.899" endtime="20241001 11:04:13.314"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241001 11:03:47.811" endtime="20241001 11:04:13.316"/>
</suite>
<suite id="s1-s3" name="1.4.0-1.5.0-SNAPSHOT-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:04:14.083" endtime="20241001 11:04:14.083"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:14.087" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:14.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:14.091" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:04:14.084" endtime="20241001 11:04:14.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:14.092" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:04:14.091" endtime="20241001 11:04:14.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:14.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:14.092" endtime="20241001 11:04:14.092"/>
</kw>
<status status="PASS" starttime="20241001 11:04:14.084" endtime="20241001 11:04:14.092"/>
</kw>
<msg timestamp="20241001 11:04:14.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:14.084" endtime="20241001 11:04:14.092"/>
</kw>
<msg timestamp="20241001 11:04:14.093" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:04:14.083" endtime="20241001 11:04:14.093"/>
</kw>
<msg timestamp="20241001 11:04:14.093" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:14.083" endtime="20241001 11:04:14.093"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:04:14.093" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:14.093" endtime="20241001 11:04:14.093"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:14.097" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:14.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:14.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:14.095" endtime="20241001 11:04:14.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:14.134" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:14.134" endtime="20241001 11:04:14.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:14.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:14.134" endtime="20241001 11:04:14.135"/>
</kw>
<status status="PASS" starttime="20241001 11:04:14.095" endtime="20241001 11:04:14.135"/>
</kw>
<msg timestamp="20241001 11:04:14.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:14.094" endtime="20241001 11:04:14.135"/>
</kw>
<status status="PASS" starttime="20241001 11:04:14.094" endtime="20241001 11:04:14.135"/>
</kw>
<status status="PASS" starttime="20241001 11:04:14.093" endtime="20241001 11:04:14.135"/>
</kw>
<status status="PASS" starttime="20241001 11:04:14.082" endtime="20241001 11:04:14.135"/>
</kw>
<status status="PASS" starttime="20241001 11:04:14.082" endtime="20241001 11:04:14.135"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:04:14.137" level="INFO">${random} = 34728</msg>
<status status="PASS" starttime="20241001 11:04:14.136" endtime="20241001 11:04:14.137"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:14.140" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-34728 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:18.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:18.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:14.138" endtime="20241001 11:04:18.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:18.244" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:18.244" endtime="20241001 11:04:18.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:18.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:18.244" endtime="20241001 11:04:18.245"/>
</kw>
<status status="PASS" starttime="20241001 11:04:14.138" endtime="20241001 11:04:18.245"/>
</kw>
<msg timestamp="20241001 11:04:18.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:14.137" endtime="20241001 11:04:18.245"/>
</kw>
<msg timestamp="20241001 11:04:18.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:14.137" endtime="20241001 11:04:18.245"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:18.246" endtime="20241001 11:04:18.246"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:18.249" level="INFO">Running command 'cat /tmp/key-34728 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:18.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:18.253" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:04:18.247" endtime="20241001 11:04:18.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:18.254" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:04:18.254" endtime="20241001 11:04:18.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:18.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:18.254" endtime="20241001 11:04:18.255"/>
</kw>
<msg timestamp="20241001 11:04:18.255" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:04:18.246" endtime="20241001 11:04:18.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:18.255" endtime="20241001 11:04:18.255"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:18.262" level="INFO">Running command 'rm /tmp/key-34728 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:18.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:18.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:18.256" endtime="20241001 11:04:18.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:18.266" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:18.265" endtime="20241001 11:04:18.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:18.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:18.266" endtime="20241001 11:04:18.266"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.255" endtime="20241001 11:04:18.266"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:04:14.136" endtime="20241001 11:04:18.267"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:04:18.269" endtime="20241001 11:04:18.269"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:18.272" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:18.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:18.276" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:04:18.270" endtime="20241001 11:04:18.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:18.277" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:04:18.277" endtime="20241001 11:04:18.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:18.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:18.277" endtime="20241001 11:04:18.278"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.270" endtime="20241001 11:04:18.278"/>
</kw>
<msg timestamp="20241001 11:04:18.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:18.270" endtime="20241001 11:04:18.278"/>
</kw>
<msg timestamp="20241001 11:04:18.278" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:04:18.269" endtime="20241001 11:04:18.278"/>
</kw>
<msg timestamp="20241001 11:04:18.278" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:18.269" endtime="20241001 11:04:18.278"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:04:18.279" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:18.278" endtime="20241001 11:04:18.279"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:18.282" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:18.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:18.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:18.280" endtime="20241001 11:04:18.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:18.324" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:18.323" endtime="20241001 11:04:18.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:18.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:18.324" endtime="20241001 11:04:18.324"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.280" endtime="20241001 11:04:18.324"/>
</kw>
<msg timestamp="20241001 11:04:18.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:18.280" endtime="20241001 11:04:18.325"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.279" endtime="20241001 11:04:18.325"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.279" endtime="20241001 11:04:18.325"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.268" endtime="20241001 11:04:18.325"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.268" endtime="20241001 11:04:18.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:18.328" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:20.581" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:04:20.581" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:04:18.326" endtime="20241001 11:04:20.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:20.582" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:04:20.581" endtime="20241001 11:04:20.582"/>
</kw>
<msg timestamp="20241001 11:04:20.582" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:04:18.326" endtime="20241001 11:04:20.582"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:20.583" endtime="20241001 11:04:20.583"/>
</kw>
<msg timestamp="20241001 11:04:20.584" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:04:20.583" endtime="20241001 11:04:20.584"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:20.588" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:22.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:22.857" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:04:20.585" endtime="20241001 11:04:22.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:22.858" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:04:22.858" endtime="20241001 11:04:22.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:22.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:22.859" endtime="20241001 11:04:22.859"/>
</kw>
<status status="PASS" starttime="20241001 11:04:20.585" endtime="20241001 11:04:22.859"/>
</kw>
<msg timestamp="20241001 11:04:22.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:20.585" endtime="20241001 11:04:22.859"/>
</kw>
<status status="PASS" starttime="20241001 11:04:20.584" endtime="20241001 11:04:22.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:22.863" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:25.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:25.152" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ba331d3ed96e50891dd1d69106c0e4e9bf3ad9aac0da670b1871f20c06a28389
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:04:22.861" endtime="20241001 11:04:25.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:25.153" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ba331d3ed96e50891dd1d69106c0e4e9bf3ad9aac0da670b1871f20c06a28389
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:04:25.152" endtime="20241001 11:04:25.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:25.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:25.153" endtime="20241001 11:04:25.154"/>
</kw>
<status status="PASS" starttime="20241001 11:04:22.860" endtime="20241001 11:04:25.154"/>
</kw>
<msg timestamp="20241001 11:04:25.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:22.860" endtime="20241001 11:04:25.154"/>
</kw>
<msg timestamp="20241001 11:04:25.154" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ba331d3ed96e50891dd1d69106c0e4e9bf3ad9aac0da670b1871f20c06a28389
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:04:22.860" endtime="20241001 11:04:25.154"/>
</kw>
<status status="PASS" starttime="20241001 11:04:20.584" endtime="20241001 11:04:25.154"/>
</branch>
<status status="PASS" starttime="20241001 11:04:20.584" endtime="20241001 11:04:25.154"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:04:25.155" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:04:25.154" endtime="20241001 11:04:25.155"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:04:25.155" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:04:25.155" endtime="20241001 11:04:25.155"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:04:25.156" level="INFO">${secret} = ['ba331d3ed96e50891dd1d69106c0e4e9bf3ad9aac0da670b1871f20c06a28389']</msg>
<status status="PASS" starttime="20241001 11:04:25.155" endtime="20241001 11:04:25.156"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:04:25.157" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:25.156" endtime="20241001 11:04:25.157"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:04:25.158" level="INFO">${secret} = ba331d3ed96e50891dd1d69106c0e4e9bf3ad9aac0da670b1871f20c06a28389</msg>
<status status="PASS" starttime="20241001 11:04:25.157" endtime="20241001 11:04:25.158"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:25.161" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:25.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:25.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:25.159" endtime="20241001 11:04:25.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:25.568" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:25.567" endtime="20241001 11:04:25.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:25.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:25.568" endtime="20241001 11:04:25.568"/>
</kw>
<status status="PASS" starttime="20241001 11:04:25.159" endtime="20241001 11:04:25.569"/>
</kw>
<msg timestamp="20241001 11:04:25.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:25.158" endtime="20241001 11:04:25.569"/>
</kw>
<status status="PASS" starttime="20241001 11:04:25.158" endtime="20241001 11:04:25.569"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:25.573" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:25.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:25.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:25.570" endtime="20241001 11:04:25.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:25.987" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:25.986" endtime="20241001 11:04:25.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:25.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:25.987" endtime="20241001 11:04:25.987"/>
</kw>
<status status="PASS" starttime="20241001 11:04:25.570" endtime="20241001 11:04:25.987"/>
</kw>
<msg timestamp="20241001 11:04:25.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:25.570" endtime="20241001 11:04:25.988"/>
</kw>
<status status="PASS" starttime="20241001 11:04:25.569" endtime="20241001 11:04:25.988"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:25.991" level="INFO">Running command 'aws configure set aws_secret_access_key ba331d3ed96e50891dd1d69106c0e4e9bf3ad9aac0da670b1871f20c06a28389 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:26.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:26.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:25.989" endtime="20241001 11:04:26.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:26.402" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:26.401" endtime="20241001 11:04:26.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:26.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:26.402" endtime="20241001 11:04:26.402"/>
</kw>
<status status="PASS" starttime="20241001 11:04:25.989" endtime="20241001 11:04:26.402"/>
</kw>
<msg timestamp="20241001 11:04:26.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:25.988" endtime="20241001 11:04:26.403"/>
</kw>
<status status="PASS" starttime="20241001 11:04:25.988" endtime="20241001 11:04:26.403"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:26.406" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:26.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:26.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:26.404" endtime="20241001 11:04:26.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:26.818" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:26.818" endtime="20241001 11:04:26.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:26.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:26.818" endtime="20241001 11:04:26.819"/>
</kw>
<status status="PASS" starttime="20241001 11:04:26.403" endtime="20241001 11:04:26.819"/>
</kw>
<msg timestamp="20241001 11:04:26.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:26.403" endtime="20241001 11:04:26.819"/>
</kw>
<status status="PASS" starttime="20241001 11:04:26.403" endtime="20241001 11:04:26.819"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:26.823" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:27.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:27.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:26.820" endtime="20241001 11:04:27.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:27.227" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:27.226" endtime="20241001 11:04:27.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:27.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:27.227" endtime="20241001 11:04:27.228"/>
</kw>
<status status="PASS" starttime="20241001 11:04:26.820" endtime="20241001 11:04:27.228"/>
</kw>
<msg timestamp="20241001 11:04:27.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:26.820" endtime="20241001 11:04:27.228"/>
</kw>
<status status="PASS" starttime="20241001 11:04:26.819" endtime="20241001 11:04:27.228"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.325" endtime="20241001 11:04:27.228"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.325" endtime="20241001 11:04:27.228"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:04:27.229" endtime="20241001 11:04:27.229"/>
</kw>
<status status="PASS" starttime="20241001 11:04:18.268" endtime="20241001 11:04:27.229"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:27.233" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:27.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:27.928" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:05 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:04:27.230" endtime="20241001 11:04:27.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:27.929" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:05 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:04:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:04:27.929" endtime="20241001 11:04:27.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:27.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:27.929" endtime="20241001 11:04:27.930"/>
</kw>
<msg timestamp="20241001 11:04:27.930" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:05 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:04:27.230" endtime="20241001 11:04:27.930"/>
</kw>
<msg timestamp="20241001 11:04:27.930" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:05 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:04:27.229" endtime="20241001 11:04:27.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:27.930" endtime="20241001 11:04:27.931"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:27.933" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:27.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:27.937" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:04:27.931" endtime="20241001 11:04:27.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:27.938" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:04:27.937" endtime="20241001 11:04:27.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:27.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:27.938" endtime="20241001 11:04:27.938"/>
</kw>
<msg timestamp="20241001 11:04:27.939" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:04:27.931" endtime="20241001 11:04:27.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:27.939" endtime="20241001 11:04:27.939"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:27.942" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:27.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:27.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:27.940" endtime="20241001 11:04:27.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:27.946" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:27.946" endtime="20241001 11:04:27.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:27.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:27.946" endtime="20241001 11:04:27.947"/>
</kw>
<status status="PASS" starttime="20241001 11:04:27.939" endtime="20241001 11:04:27.947"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:04:18.267" endtime="20241001 11:04:27.947"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:04:27.949" endtime="20241001 11:04:27.950"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:27.953" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:27.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:27.957" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:04:27.951" endtime="20241001 11:04:27.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:27.958" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:04:27.957" endtime="20241001 11:04:27.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:27.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:27.958" endtime="20241001 11:04:27.959"/>
</kw>
<status status="PASS" starttime="20241001 11:04:27.951" endtime="20241001 11:04:27.959"/>
</kw>
<msg timestamp="20241001 11:04:27.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:27.950" endtime="20241001 11:04:27.959"/>
</kw>
<msg timestamp="20241001 11:04:27.959" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:04:27.950" endtime="20241001 11:04:27.959"/>
</kw>
<msg timestamp="20241001 11:04:27.959" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:27.950" endtime="20241001 11:04:27.959"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:04:27.960" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:27.959" endtime="20241001 11:04:27.960"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:27.963" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:28.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:28.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:27.962" endtime="20241001 11:04:28.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:28.001" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:28.000" endtime="20241001 11:04:28.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:28.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:28.001" endtime="20241001 11:04:28.002"/>
</kw>
<status status="PASS" starttime="20241001 11:04:27.961" endtime="20241001 11:04:28.002"/>
</kw>
<msg timestamp="20241001 11:04:28.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:27.961" endtime="20241001 11:04:28.002"/>
</kw>
<status status="PASS" starttime="20241001 11:04:27.960" endtime="20241001 11:04:28.002"/>
</kw>
<status status="PASS" starttime="20241001 11:04:27.960" endtime="20241001 11:04:28.002"/>
</kw>
<status status="PASS" starttime="20241001 11:04:27.949" endtime="20241001 11:04:28.002"/>
</kw>
<status status="PASS" starttime="20241001 11:04:27.949" endtime="20241001 11:04:28.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:28.006" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:30.156" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:04:30.156" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:04:28.004" endtime="20241001 11:04:30.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:30.157" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:04:30.156" endtime="20241001 11:04:30.157"/>
</kw>
<msg timestamp="20241001 11:04:30.157" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:04:28.003" endtime="20241001 11:04:30.157"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:30.157" endtime="20241001 11:04:30.158"/>
</kw>
<msg timestamp="20241001 11:04:30.158" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:04:30.157" endtime="20241001 11:04:30.158"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:30.162" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:32.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:32.541" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:04:30.159" endtime="20241001 11:04:32.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:32.542" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:04:32.541" endtime="20241001 11:04:32.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:32.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:32.542" endtime="20241001 11:04:32.542"/>
</kw>
<status status="PASS" starttime="20241001 11:04:30.159" endtime="20241001 11:04:32.543"/>
</kw>
<msg timestamp="20241001 11:04:32.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:30.159" endtime="20241001 11:04:32.543"/>
</kw>
<status status="PASS" starttime="20241001 11:04:30.158" endtime="20241001 11:04:32.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:32.546" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:34.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:34.769" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=25930c22de6cac784b64a10ff85777e0e8b64f218757a5a28a3dcd575a91797d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:04:32.544" endtime="20241001 11:04:34.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:34.770" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=25930c22de6cac784b64a10ff85777e0e8b64f218757a5a28a3dcd575a91797d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:04:34.770" endtime="20241001 11:04:34.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:34.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:34.770" endtime="20241001 11:04:34.771"/>
</kw>
<status status="PASS" starttime="20241001 11:04:32.544" endtime="20241001 11:04:34.771"/>
</kw>
<msg timestamp="20241001 11:04:34.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:32.543" endtime="20241001 11:04:34.771"/>
</kw>
<msg timestamp="20241001 11:04:34.772" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=25930c22de6cac784b64a10ff85777e0e8b64f218757a5a28a3dcd575a91797d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:04:32.543" endtime="20241001 11:04:34.772"/>
</kw>
<status status="PASS" starttime="20241001 11:04:30.158" endtime="20241001 11:04:34.772"/>
</branch>
<status status="PASS" starttime="20241001 11:04:30.158" endtime="20241001 11:04:34.772"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:04:34.772" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:04:34.772" endtime="20241001 11:04:34.772"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:04:34.773" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:04:34.772" endtime="20241001 11:04:34.773"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:04:34.773" level="INFO">${secret} = ['25930c22de6cac784b64a10ff85777e0e8b64f218757a5a28a3dcd575a91797d']</msg>
<status status="PASS" starttime="20241001 11:04:34.773" endtime="20241001 11:04:34.773"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:04:34.774" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:34.773" endtime="20241001 11:04:34.774"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:04:34.775" level="INFO">${secret} = 25930c22de6cac784b64a10ff85777e0e8b64f218757a5a28a3dcd575a91797d</msg>
<status status="PASS" starttime="20241001 11:04:34.774" endtime="20241001 11:04:34.775"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:34.778" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:35.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:35.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:34.776" endtime="20241001 11:04:35.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:35.219" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:35.218" endtime="20241001 11:04:35.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:35.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:35.219" endtime="20241001 11:04:35.220"/>
</kw>
<status status="PASS" starttime="20241001 11:04:34.776" endtime="20241001 11:04:35.220"/>
</kw>
<msg timestamp="20241001 11:04:35.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:34.776" endtime="20241001 11:04:35.220"/>
</kw>
<status status="PASS" starttime="20241001 11:04:34.775" endtime="20241001 11:04:35.220"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:35.224" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:35.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:35.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:35.221" endtime="20241001 11:04:35.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:35.726" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:35.725" endtime="20241001 11:04:35.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:35.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:35.726" endtime="20241001 11:04:35.726"/>
</kw>
<status status="PASS" starttime="20241001 11:04:35.221" endtime="20241001 11:04:35.726"/>
</kw>
<msg timestamp="20241001 11:04:35.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:35.221" endtime="20241001 11:04:35.726"/>
</kw>
<status status="PASS" starttime="20241001 11:04:35.220" endtime="20241001 11:04:35.727"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:35.730" level="INFO">Running command 'aws configure set aws_secret_access_key 25930c22de6cac784b64a10ff85777e0e8b64f218757a5a28a3dcd575a91797d 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:36.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:36.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:35.728" endtime="20241001 11:04:36.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:36.173" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:36.172" endtime="20241001 11:04:36.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:36.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:36.173" endtime="20241001 11:04:36.173"/>
</kw>
<status status="PASS" starttime="20241001 11:04:35.727" endtime="20241001 11:04:36.174"/>
</kw>
<msg timestamp="20241001 11:04:36.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:35.727" endtime="20241001 11:04:36.174"/>
</kw>
<status status="PASS" starttime="20241001 11:04:35.727" endtime="20241001 11:04:36.174"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:36.178" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:36.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:36.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:36.175" endtime="20241001 11:04:36.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:36.621" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:36.620" endtime="20241001 11:04:36.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:36.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:36.621" endtime="20241001 11:04:36.621"/>
</kw>
<status status="PASS" starttime="20241001 11:04:36.175" endtime="20241001 11:04:36.621"/>
</kw>
<msg timestamp="20241001 11:04:36.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:36.174" endtime="20241001 11:04:36.621"/>
</kw>
<status status="PASS" starttime="20241001 11:04:36.174" endtime="20241001 11:04:36.622"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:36.625" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:37.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:37.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:36.623" endtime="20241001 11:04:37.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:37.031" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:37.030" endtime="20241001 11:04:37.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:37.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:37.031" endtime="20241001 11:04:37.032"/>
</kw>
<status status="PASS" starttime="20241001 11:04:36.622" endtime="20241001 11:04:37.032"/>
</kw>
<msg timestamp="20241001 11:04:37.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:36.622" endtime="20241001 11:04:37.032"/>
</kw>
<status status="PASS" starttime="20241001 11:04:36.622" endtime="20241001 11:04:37.032"/>
</kw>
<status status="PASS" starttime="20241001 11:04:28.003" endtime="20241001 11:04:37.032"/>
</kw>
<status status="PASS" starttime="20241001 11:04:28.003" endtime="20241001 11:04:37.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:04:37.032" endtime="20241001 11:04:37.033"/>
</kw>
<status status="PASS" starttime="20241001 11:04:27.948" endtime="20241001 11:04:37.033"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:37.036" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:37.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:37.570" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:13 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:04:37.034" endtime="20241001 11:04:37.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:37.571" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:13 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:04:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:04:37.571" endtime="20241001 11:04:37.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:37.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:37.571" endtime="20241001 11:04:37.572"/>
</kw>
<msg timestamp="20241001 11:04:37.572" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:13 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:04:37.033" endtime="20241001 11:04:37.572"/>
</kw>
<msg timestamp="20241001 11:04:37.572" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:13 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:04:37.033" endtime="20241001 11:04:37.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:37.572" endtime="20241001 11:04:37.573"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:37.576" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:37.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:37.579" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:04:37.573" endtime="20241001 11:04:37.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:37.580" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:04:37.580" endtime="20241001 11:04:37.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:37.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:37.581" endtime="20241001 11:04:37.581"/>
</kw>
<msg timestamp="20241001 11:04:37.581" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:04:37.573" endtime="20241001 11:04:37.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:37.581" endtime="20241001 11:04:37.582"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:37.584" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:37.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:37.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:37.582" endtime="20241001 11:04:37.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:37.589" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:37.588" endtime="20241001 11:04:37.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:37.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:37.589" endtime="20241001 11:04:37.589"/>
</kw>
<status status="PASS" starttime="20241001 11:04:37.582" endtime="20241001 11:04:37.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:04:27.948" endtime="20241001 11:04:37.590"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:04:14.011" endtime="20241001 11:04:37.591"/>
</suite>
<suite id="s1-s4" name="1.4.0-1.5.0-SNAPSHOT-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:04:38.337" endtime="20241001 11:04:38.337"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:38.341" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:38.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:38.346" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:04:38.339" endtime="20241001 11:04:38.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:38.346" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:04:38.346" endtime="20241001 11:04:38.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:38.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:38.347" endtime="20241001 11:04:38.347"/>
</kw>
<status status="PASS" starttime="20241001 11:04:38.338" endtime="20241001 11:04:38.347"/>
</kw>
<msg timestamp="20241001 11:04:38.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:38.338" endtime="20241001 11:04:38.347"/>
</kw>
<msg timestamp="20241001 11:04:38.347" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:04:38.338" endtime="20241001 11:04:38.347"/>
</kw>
<msg timestamp="20241001 11:04:38.348" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:38.337" endtime="20241001 11:04:38.348"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:04:38.348" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:04:38.348" endtime="20241001 11:04:38.348"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:38.352" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:38.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:38.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:38.350" endtime="20241001 11:04:38.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:38.413" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:38.413" endtime="20241001 11:04:38.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:38.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:38.413" endtime="20241001 11:04:38.414"/>
</kw>
<status status="PASS" starttime="20241001 11:04:38.349" endtime="20241001 11:04:38.414"/>
</kw>
<msg timestamp="20241001 11:04:38.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:38.349" endtime="20241001 11:04:38.414"/>
</kw>
<status status="PASS" starttime="20241001 11:04:38.349" endtime="20241001 11:04:38.414"/>
</kw>
<status status="PASS" starttime="20241001 11:04:38.348" endtime="20241001 11:04:38.414"/>
</kw>
<status status="PASS" starttime="20241001 11:04:38.337" endtime="20241001 11:04:38.414"/>
</kw>
<status status="PASS" starttime="20241001 11:04:38.336" endtime="20241001 11:04:38.414"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:04:38.414" endtime="20241001 11:04:38.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:38.418" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:46.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:46.059" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20241001 11:04:38.416" endtime="20241001 11:04:46.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:46.061" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20241001 11:04:46.060" endtime="20241001 11:04:46.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:46.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:46.061" endtime="20241001 11:04:46.061"/>
</kw>
<status status="PASS" starttime="20241001 11:04:38.416" endtime="20241001 11:04:46.061"/>
</kw>
<msg timestamp="20241001 11:04:46.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:38.415" endtime="20241001 11:04:46.062"/>
</kw>
<msg timestamp="20241001 11:04:46.062" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20241001 11:04:38.415" endtime="20241001 11:04:46.062"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:46.062" endtime="20241001 11:04:46.062"/>
</kw>
<status status="PASS" starttime="20241001 11:04:46.062" endtime="20241001 11:04:46.062"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:04:38.335" endtime="20241001 11:04:46.063"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20241001 11:04:38.294" endtime="20241001 11:04:46.063"/>
</suite>
<suite id="s1-s5" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:06:17.939" endtime="20241001 11:06:17.939"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:17.943" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:17.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:17.947" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:06:17.940" endtime="20241001 11:06:17.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:17.947" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:06:17.947" endtime="20241001 11:06:17.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:17.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:17.948" endtime="20241001 11:06:17.948"/>
</kw>
<status status="PASS" starttime="20241001 11:06:17.940" endtime="20241001 11:06:17.948"/>
</kw>
<msg timestamp="20241001 11:06:17.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:17.940" endtime="20241001 11:06:17.948"/>
</kw>
<msg timestamp="20241001 11:06:17.949" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:06:17.939" endtime="20241001 11:06:17.949"/>
</kw>
<msg timestamp="20241001 11:06:17.949" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:17.939" endtime="20241001 11:06:17.949"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:06:17.949" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:17.949" endtime="20241001 11:06:17.949"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:17.953" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:17.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:17.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:17.951" endtime="20241001 11:06:17.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:17.975" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:17.974" endtime="20241001 11:06:17.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:17.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:17.975" endtime="20241001 11:06:17.975"/>
</kw>
<status status="PASS" starttime="20241001 11:06:17.951" endtime="20241001 11:06:17.976"/>
</kw>
<msg timestamp="20241001 11:06:17.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:17.950" endtime="20241001 11:06:17.976"/>
</kw>
<status status="PASS" starttime="20241001 11:06:17.950" endtime="20241001 11:06:17.976"/>
</kw>
<status status="PASS" starttime="20241001 11:06:17.949" endtime="20241001 11:06:17.976"/>
</kw>
<status status="PASS" starttime="20241001 11:06:17.939" endtime="20241001 11:06:17.976"/>
</kw>
<status status="PASS" starttime="20241001 11:06:17.938" endtime="20241001 11:06:17.976"/>
</kw>
<test id="s1-s5-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:06:17.978" level="INFO">${random} = 23808</msg>
<status status="PASS" starttime="20241001 11:06:17.977" endtime="20241001 11:06:17.978"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:17.982" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-23808 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:22.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:22.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:17.979" endtime="20241001 11:06:22.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:22.658" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:22.657" endtime="20241001 11:06:22.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:22.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:22.658" endtime="20241001 11:06:22.659"/>
</kw>
<status status="PASS" starttime="20241001 11:06:17.979" endtime="20241001 11:06:22.659"/>
</kw>
<msg timestamp="20241001 11:06:22.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:17.979" endtime="20241001 11:06:22.659"/>
</kw>
<msg timestamp="20241001 11:06:22.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:17.978" endtime="20241001 11:06:22.659"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:22.659" endtime="20241001 11:06:22.660"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:22.663" level="INFO">Running command 'cat /tmp/key-23808 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:22.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:22.667" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:06:22.660" endtime="20241001 11:06:22.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:22.668" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:06:22.667" endtime="20241001 11:06:22.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:22.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:22.668" endtime="20241001 11:06:22.668"/>
</kw>
<msg timestamp="20241001 11:06:22.669" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:06:22.660" endtime="20241001 11:06:22.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:22.669" endtime="20241001 11:06:22.669"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:22.671" level="INFO">Running command 'rm /tmp/key-23808 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:22.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:22.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:22.670" endtime="20241001 11:06:22.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:22.676" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:22.675" endtime="20241001 11:06:22.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:22.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:22.676" endtime="20241001 11:06:22.676"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.669" endtime="20241001 11:06:22.677"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:06:17.976" endtime="20241001 11:06:22.677"/>
</test>
<test id="s1-s5-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:06:22.679" endtime="20241001 11:06:22.679"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:22.683" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:22.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:22.686" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:06:22.681" endtime="20241001 11:06:22.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:22.687" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:06:22.686" endtime="20241001 11:06:22.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:22.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:22.687" endtime="20241001 11:06:22.688"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.680" endtime="20241001 11:06:22.688"/>
</kw>
<msg timestamp="20241001 11:06:22.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:22.680" endtime="20241001 11:06:22.688"/>
</kw>
<msg timestamp="20241001 11:06:22.688" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:06:22.680" endtime="20241001 11:06:22.688"/>
</kw>
<msg timestamp="20241001 11:06:22.688" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:22.679" endtime="20241001 11:06:22.688"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:06:22.689" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:22.688" endtime="20241001 11:06:22.689"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:22.693" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:22.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:22.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:22.691" endtime="20241001 11:06:22.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:22.735" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:22.734" endtime="20241001 11:06:22.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:22.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:22.735" endtime="20241001 11:06:22.736"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.690" endtime="20241001 11:06:22.736"/>
</kw>
<msg timestamp="20241001 11:06:22.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:22.690" endtime="20241001 11:06:22.736"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.689" endtime="20241001 11:06:22.736"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.689" endtime="20241001 11:06:22.736"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.679" endtime="20241001 11:06:22.736"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.678" endtime="20241001 11:06:22.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:22.740" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:25.039" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:06:25.039" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:06:22.737" endtime="20241001 11:06:25.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:25.040" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:06:25.040" endtime="20241001 11:06:25.040"/>
</kw>
<msg timestamp="20241001 11:06:25.041" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:06:22.737" endtime="20241001 11:06:25.041"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:25.041" endtime="20241001 11:06:25.042"/>
</kw>
<msg timestamp="20241001 11:06:25.042" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:06:25.041" endtime="20241001 11:06:25.042"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:25.046" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:27.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:27.410" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:06:25.044" endtime="20241001 11:06:27.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:27.411" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:06:27.410" endtime="20241001 11:06:27.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:27.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:27.411" endtime="20241001 11:06:27.412"/>
</kw>
<status status="PASS" starttime="20241001 11:06:25.043" endtime="20241001 11:06:27.412"/>
</kw>
<msg timestamp="20241001 11:06:27.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:25.043" endtime="20241001 11:06:27.412"/>
</kw>
<status status="PASS" starttime="20241001 11:06:25.042" endtime="20241001 11:06:27.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:27.415" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:29.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:29.516" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8e2ce3b21ac8957c42b73c28c57c46cb43416f126d9962587ca4fbb9c1107e78</msg>
<status status="PASS" starttime="20241001 11:06:27.413" endtime="20241001 11:06:29.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:29.517" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8e2ce3b21ac8957c42b73c28c57c46cb43416f126d9962587ca4fbb9c1107e78</msg>
<status status="PASS" starttime="20241001 11:06:29.516" endtime="20241001 11:06:29.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:29.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:29.517" endtime="20241001 11:06:29.518"/>
</kw>
<status status="PASS" starttime="20241001 11:06:27.413" endtime="20241001 11:06:29.518"/>
</kw>
<msg timestamp="20241001 11:06:29.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:27.413" endtime="20241001 11:06:29.518"/>
</kw>
<msg timestamp="20241001 11:06:29.518" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8e2ce3b21ac8957c42b73c28c57c46cb43416f126d9962587ca4fbb9c1107e78</msg>
<status status="PASS" starttime="20241001 11:06:27.412" endtime="20241001 11:06:29.518"/>
</kw>
<status status="PASS" starttime="20241001 11:06:25.042" endtime="20241001 11:06:29.518"/>
</branch>
<status status="PASS" starttime="20241001 11:06:25.042" endtime="20241001 11:06:29.519"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:06:29.519" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:06:29.519" endtime="20241001 11:06:29.519"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:06:29.520" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:06:29.519" endtime="20241001 11:06:29.520"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:06:29.520" level="INFO">${secret} = ['8e2ce3b21ac8957c42b73c28c57c46cb43416f126d9962587ca4fbb9c1107e78']</msg>
<status status="PASS" starttime="20241001 11:06:29.520" endtime="20241001 11:06:29.520"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:06:29.522" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:29.521" endtime="20241001 11:06:29.522"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:06:29.522" level="INFO">${secret} = 8e2ce3b21ac8957c42b73c28c57c46cb43416f126d9962587ca4fbb9c1107e78</msg>
<status status="PASS" starttime="20241001 11:06:29.522" endtime="20241001 11:06:29.522"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:29.526" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:29.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:29.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:29.524" endtime="20241001 11:06:29.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:29.928" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:29.928" endtime="20241001 11:06:29.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:29.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:29.929" endtime="20241001 11:06:29.929"/>
</kw>
<status status="PASS" starttime="20241001 11:06:29.523" endtime="20241001 11:06:29.929"/>
</kw>
<msg timestamp="20241001 11:06:29.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:29.523" endtime="20241001 11:06:29.929"/>
</kw>
<status status="PASS" starttime="20241001 11:06:29.523" endtime="20241001 11:06:29.929"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:29.933" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:30.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:30.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:29.931" endtime="20241001 11:06:30.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:30.335" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:30.335" endtime="20241001 11:06:30.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:30.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:30.336" endtime="20241001 11:06:30.336"/>
</kw>
<status status="PASS" starttime="20241001 11:06:29.930" endtime="20241001 11:06:30.336"/>
</kw>
<msg timestamp="20241001 11:06:30.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:29.930" endtime="20241001 11:06:30.336"/>
</kw>
<status status="PASS" starttime="20241001 11:06:29.930" endtime="20241001 11:06:30.337"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:30.340" level="INFO">Running command 'aws configure set aws_secret_access_key 8e2ce3b21ac8957c42b73c28c57c46cb43416f126d9962587ca4fbb9c1107e78 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:30.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:30.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:30.338" endtime="20241001 11:06:30.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:30.735" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:30.734" endtime="20241001 11:06:30.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:30.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:30.735" endtime="20241001 11:06:30.735"/>
</kw>
<status status="PASS" starttime="20241001 11:06:30.338" endtime="20241001 11:06:30.736"/>
</kw>
<msg timestamp="20241001 11:06:30.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:30.337" endtime="20241001 11:06:30.736"/>
</kw>
<status status="PASS" starttime="20241001 11:06:30.337" endtime="20241001 11:06:30.736"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:30.740" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:31.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:31.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:30.738" endtime="20241001 11:06:31.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:31.133" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:31.132" endtime="20241001 11:06:31.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:31.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:31.133" endtime="20241001 11:06:31.134"/>
</kw>
<status status="PASS" starttime="20241001 11:06:30.737" endtime="20241001 11:06:31.134"/>
</kw>
<msg timestamp="20241001 11:06:31.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:30.737" endtime="20241001 11:06:31.134"/>
</kw>
<status status="PASS" starttime="20241001 11:06:30.736" endtime="20241001 11:06:31.134"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:31.137" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:31.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:31.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:31.135" endtime="20241001 11:06:31.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:31.534" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:31.533" endtime="20241001 11:06:31.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:31.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:31.534" endtime="20241001 11:06:31.535"/>
</kw>
<status status="PASS" starttime="20241001 11:06:31.135" endtime="20241001 11:06:31.535"/>
</kw>
<msg timestamp="20241001 11:06:31.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:31.135" endtime="20241001 11:06:31.535"/>
</kw>
<status status="PASS" starttime="20241001 11:06:31.134" endtime="20241001 11:06:31.535"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.737" endtime="20241001 11:06:31.535"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.736" endtime="20241001 11:06:31.535"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:06:31.535" endtime="20241001 11:06:31.536"/>
</kw>
<status status="PASS" starttime="20241001 11:06:22.678" endtime="20241001 11:06:31.536"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:31.539" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:33.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:33.503" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:06:31.537" endtime="20241001 11:06:33.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:33.504" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:06:32 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:06:33.504" endtime="20241001 11:06:33.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:33.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:33.505" endtime="20241001 11:06:33.505"/>
</kw>
<msg timestamp="20241001 11:06:33.505" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:06:31.536" endtime="20241001 11:06:33.505"/>
</kw>
<msg timestamp="20241001 11:06:33.506" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:06:31.536" endtime="20241001 11:06:33.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:33.506" endtime="20241001 11:06:33.506"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:33.509" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:33.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:33.513" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:06:33.507" endtime="20241001 11:06:33.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:33.514" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:06:33.513" endtime="20241001 11:06:33.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:33.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:33.514" endtime="20241001 11:06:33.514"/>
</kw>
<msg timestamp="20241001 11:06:33.515" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:06:33.506" endtime="20241001 11:06:33.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:33.515" endtime="20241001 11:06:33.515"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:33.518" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:33.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:33.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:33.516" endtime="20241001 11:06:33.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:33.522" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:33.522" endtime="20241001 11:06:33.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:33.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:33.522" endtime="20241001 11:06:33.523"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.515" endtime="20241001 11:06:33.523"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:06:22.677" endtime="20241001 11:06:33.523"/>
</test>
<test id="s1-s5-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:06:33.525" endtime="20241001 11:06:33.525"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:33.529" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:33.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:33.532" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:06:33.527" endtime="20241001 11:06:33.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:33.533" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:06:33.533" endtime="20241001 11:06:33.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:33.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:33.533" endtime="20241001 11:06:33.534"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.526" endtime="20241001 11:06:33.534"/>
</kw>
<msg timestamp="20241001 11:06:33.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:33.526" endtime="20241001 11:06:33.534"/>
</kw>
<msg timestamp="20241001 11:06:33.534" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:06:33.526" endtime="20241001 11:06:33.534"/>
</kw>
<msg timestamp="20241001 11:06:33.534" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:33.525" endtime="20241001 11:06:33.534"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:06:33.535" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:33.535" endtime="20241001 11:06:33.535"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:33.538" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:33.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:33.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:33.536" endtime="20241001 11:06:33.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:33.562" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:33.561" endtime="20241001 11:06:33.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:33.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:33.562" endtime="20241001 11:06:33.562"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.536" endtime="20241001 11:06:33.562"/>
</kw>
<msg timestamp="20241001 11:06:33.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:33.536" endtime="20241001 11:06:33.562"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.535" endtime="20241001 11:06:33.563"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.535" endtime="20241001 11:06:33.563"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.525" endtime="20241001 11:06:33.563"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.524" endtime="20241001 11:06:33.563"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:33.566" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:35.837" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:06:35.837" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:06:33.564" endtime="20241001 11:06:35.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:35.838" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:06:35.838" endtime="20241001 11:06:35.839"/>
</kw>
<msg timestamp="20241001 11:06:35.845" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:06:33.564" endtime="20241001 11:06:35.845"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:35.846" endtime="20241001 11:06:35.846"/>
</kw>
<msg timestamp="20241001 11:06:35.846" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:06:35.845" endtime="20241001 11:06:35.846"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:35.850" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:38.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:38.340" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:06:35.848" endtime="20241001 11:06:38.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:38.341" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:06:38.340" endtime="20241001 11:06:38.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:38.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:38.341" endtime="20241001 11:06:38.342"/>
</kw>
<status status="PASS" starttime="20241001 11:06:35.847" endtime="20241001 11:06:38.342"/>
</kw>
<msg timestamp="20241001 11:06:38.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:35.847" endtime="20241001 11:06:38.342"/>
</kw>
<status status="PASS" starttime="20241001 11:06:35.846" endtime="20241001 11:06:38.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:38.346" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:40.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:40.575" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f5dedeb6b221b8863a979c9481f581c28dde7183d1af0898a79e85eaed5f56ec</msg>
<status status="PASS" starttime="20241001 11:06:38.343" endtime="20241001 11:06:40.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:40.577" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f5dedeb6b221b8863a979c9481f581c28dde7183d1af0898a79e85eaed5f56ec</msg>
<status status="PASS" starttime="20241001 11:06:40.576" endtime="20241001 11:06:40.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:40.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:40.577" endtime="20241001 11:06:40.577"/>
</kw>
<status status="PASS" starttime="20241001 11:06:38.343" endtime="20241001 11:06:40.577"/>
</kw>
<msg timestamp="20241001 11:06:40.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:38.343" endtime="20241001 11:06:40.578"/>
</kw>
<msg timestamp="20241001 11:06:40.578" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f5dedeb6b221b8863a979c9481f581c28dde7183d1af0898a79e85eaed5f56ec</msg>
<status status="PASS" starttime="20241001 11:06:38.342" endtime="20241001 11:06:40.578"/>
</kw>
<status status="PASS" starttime="20241001 11:06:35.846" endtime="20241001 11:06:40.578"/>
</branch>
<status status="PASS" starttime="20241001 11:06:35.846" endtime="20241001 11:06:40.578"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:06:40.579" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:06:40.578" endtime="20241001 11:06:40.579"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:06:40.579" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:06:40.579" endtime="20241001 11:06:40.579"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:06:40.579" level="INFO">${secret} = ['f5dedeb6b221b8863a979c9481f581c28dde7183d1af0898a79e85eaed5f56ec']</msg>
<status status="PASS" starttime="20241001 11:06:40.579" endtime="20241001 11:06:40.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:06:40.580" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:40.580" endtime="20241001 11:06:40.581"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:06:40.581" level="INFO">${secret} = f5dedeb6b221b8863a979c9481f581c28dde7183d1af0898a79e85eaed5f56ec</msg>
<status status="PASS" starttime="20241001 11:06:40.581" endtime="20241001 11:06:40.581"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:40.585" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:40.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:40.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:40.582" endtime="20241001 11:06:40.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:40.987" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:40.986" endtime="20241001 11:06:40.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:40.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:40.987" endtime="20241001 11:06:40.988"/>
</kw>
<status status="PASS" starttime="20241001 11:06:40.582" endtime="20241001 11:06:40.988"/>
</kw>
<msg timestamp="20241001 11:06:40.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:40.582" endtime="20241001 11:06:40.988"/>
</kw>
<status status="PASS" starttime="20241001 11:06:40.582" endtime="20241001 11:06:40.988"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:40.991" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:41.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:41.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:40.989" endtime="20241001 11:06:41.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:41.392" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:41.391" endtime="20241001 11:06:41.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:41.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:41.392" endtime="20241001 11:06:41.392"/>
</kw>
<status status="PASS" starttime="20241001 11:06:40.989" endtime="20241001 11:06:41.393"/>
</kw>
<msg timestamp="20241001 11:06:41.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:40.989" endtime="20241001 11:06:41.393"/>
</kw>
<status status="PASS" starttime="20241001 11:06:40.988" endtime="20241001 11:06:41.393"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:41.396" level="INFO">Running command 'aws configure set aws_secret_access_key f5dedeb6b221b8863a979c9481f581c28dde7183d1af0898a79e85eaed5f56ec 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:41.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:41.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:41.394" endtime="20241001 11:06:41.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:41.785" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:41.785" endtime="20241001 11:06:41.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:41.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:41.785" endtime="20241001 11:06:41.786"/>
</kw>
<status status="PASS" starttime="20241001 11:06:41.394" endtime="20241001 11:06:41.786"/>
</kw>
<msg timestamp="20241001 11:06:41.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:41.393" endtime="20241001 11:06:41.786"/>
</kw>
<status status="PASS" starttime="20241001 11:06:41.393" endtime="20241001 11:06:41.786"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:41.790" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:42.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:42.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:41.788" endtime="20241001 11:06:42.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:42.203" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:42.202" endtime="20241001 11:06:42.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:42.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:42.203" endtime="20241001 11:06:42.203"/>
</kw>
<status status="PASS" starttime="20241001 11:06:41.787" endtime="20241001 11:06:42.203"/>
</kw>
<msg timestamp="20241001 11:06:42.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:41.787" endtime="20241001 11:06:42.204"/>
</kw>
<status status="PASS" starttime="20241001 11:06:41.787" endtime="20241001 11:06:42.204"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:42.207" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:42.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:42.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:42.205" endtime="20241001 11:06:42.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:42.635" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:42.634" endtime="20241001 11:06:42.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:42.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:42.635" endtime="20241001 11:06:42.635"/>
</kw>
<status status="PASS" starttime="20241001 11:06:42.205" endtime="20241001 11:06:42.636"/>
</kw>
<msg timestamp="20241001 11:06:42.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:42.204" endtime="20241001 11:06:42.636"/>
</kw>
<status status="PASS" starttime="20241001 11:06:42.204" endtime="20241001 11:06:42.636"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.563" endtime="20241001 11:06:42.636"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.563" endtime="20241001 11:06:42.636"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:06:42.636" endtime="20241001 11:06:42.636"/>
</kw>
<status status="PASS" starttime="20241001 11:06:33.524" endtime="20241001 11:06:42.636"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:42.640" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:43.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:43.189" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:13 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:06:42.638" endtime="20241001 11:06:43.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:43.190" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:13 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:06:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:06:43.189" endtime="20241001 11:06:43.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:43.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:43.190" endtime="20241001 11:06:43.190"/>
</kw>
<msg timestamp="20241001 11:06:43.191" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:13 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:06:42.637" endtime="20241001 11:06:43.191"/>
</kw>
<msg timestamp="20241001 11:06:43.191" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:04:13 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:06:42.637" endtime="20241001 11:06:43.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:43.191" endtime="20241001 11:06:43.191"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:43.194" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:43.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:43.198" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:06:43.192" endtime="20241001 11:06:43.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:43.199" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:06:43.198" endtime="20241001 11:06:43.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:43.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:43.199" endtime="20241001 11:06:43.199"/>
</kw>
<msg timestamp="20241001 11:06:43.199" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:06:43.191" endtime="20241001 11:06:43.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:43.200" endtime="20241001 11:06:43.200"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:43.202" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:43.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:43.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:43.201" endtime="20241001 11:06:43.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:43.207" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:43.206" endtime="20241001 11:06:43.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:43.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:43.207" endtime="20241001 11:06:43.207"/>
</kw>
<status status="PASS" starttime="20241001 11:06:43.200" endtime="20241001 11:06:43.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:06:33.523" endtime="20241001 11:06:43.208"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:06:17.867" endtime="20241001 11:06:43.209"/>
</suite>
<suite id="s1-s6" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-old1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:06:44.131" endtime="20241001 11:06:44.132"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:44.136" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:44.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:44.140" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:06:44.133" endtime="20241001 11:06:44.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:44.141" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:06:44.141" endtime="20241001 11:06:44.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:44.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:44.142" endtime="20241001 11:06:44.142"/>
</kw>
<status status="PASS" starttime="20241001 11:06:44.133" endtime="20241001 11:06:44.142"/>
</kw>
<msg timestamp="20241001 11:06:44.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:44.133" endtime="20241001 11:06:44.142"/>
</kw>
<msg timestamp="20241001 11:06:44.142" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:06:44.132" endtime="20241001 11:06:44.142"/>
</kw>
<msg timestamp="20241001 11:06:44.143" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:44.132" endtime="20241001 11:06:44.143"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:06:44.143" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:44.143" endtime="20241001 11:06:44.143"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:44.147" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:44.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:44.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:44.145" endtime="20241001 11:06:44.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:44.170" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:44.170" endtime="20241001 11:06:44.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:44.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:44.170" endtime="20241001 11:06:44.171"/>
</kw>
<status status="PASS" starttime="20241001 11:06:44.145" endtime="20241001 11:06:44.171"/>
</kw>
<msg timestamp="20241001 11:06:44.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:44.144" endtime="20241001 11:06:44.171"/>
</kw>
<status status="PASS" starttime="20241001 11:06:44.144" endtime="20241001 11:06:44.171"/>
</kw>
<status status="PASS" starttime="20241001 11:06:44.143" endtime="20241001 11:06:44.171"/>
</kw>
<status status="PASS" starttime="20241001 11:06:44.131" endtime="20241001 11:06:44.171"/>
</kw>
<status status="PASS" starttime="20241001 11:06:44.130" endtime="20241001 11:06:44.171"/>
</kw>
<test id="s1-s6-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:44.175" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:06:44.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:44.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:44.173" endtime="20241001 11:06:44.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:44.178" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:44.178" endtime="20241001 11:06:44.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:44.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:44.178" endtime="20241001 11:06:44.179"/>
</kw>
<status status="PASS" starttime="20241001 11:06:44.172" endtime="20241001 11:06:44.179"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:44.183" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:49.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:49.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:44.180" endtime="20241001 11:06:49.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:49.022" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:49.021" endtime="20241001 11:06:49.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:49.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:49.023" endtime="20241001 11:06:49.023"/>
</kw>
<status status="PASS" starttime="20241001 11:06:44.180" endtime="20241001 11:06:49.023"/>
</kw>
<msg timestamp="20241001 11:06:49.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:44.180" endtime="20241001 11:06:49.023"/>
</kw>
<msg timestamp="20241001 11:06:49.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:44.179" endtime="20241001 11:06:49.023"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:49.024" endtime="20241001 11:06:49.024"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:49.027" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:49.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:49.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:49.025" endtime="20241001 11:06:49.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:49.031" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:49.031" endtime="20241001 11:06:49.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:49.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:49.032" endtime="20241001 11:06:49.032"/>
</kw>
<status status="PASS" starttime="20241001 11:06:49.024" endtime="20241001 11:06:49.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:06:44.172" endtime="20241001 11:06:49.032"/>
</test>
<test id="s1-s6-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:49.036" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:06:49.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:49.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:49.034" endtime="20241001 11:06:49.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:49.039" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:49.038" endtime="20241001 11:06:49.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:49.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:49.039" endtime="20241001 11:06:49.039"/>
</kw>
<status status="PASS" starttime="20241001 11:06:49.033" endtime="20241001 11:06:49.039"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:49.043" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:53.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:53.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:49.041" endtime="20241001 11:06:53.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:53.443" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:53.443" endtime="20241001 11:06:53.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:53.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:53.444" endtime="20241001 11:06:53.444"/>
</kw>
<status status="PASS" starttime="20241001 11:06:49.040" endtime="20241001 11:06:53.444"/>
</kw>
<msg timestamp="20241001 11:06:53.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:49.040" endtime="20241001 11:06:53.444"/>
</kw>
<msg timestamp="20241001 11:06:53.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:49.040" endtime="20241001 11:06:53.445"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:53.445" endtime="20241001 11:06:53.445"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:53.448" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:53.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:53.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:53.446" endtime="20241001 11:06:53.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:53.452" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:53.452" endtime="20241001 11:06:53.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:53.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:53.453" endtime="20241001 11:06:53.453"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.445" endtime="20241001 11:06:53.453"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:06:49.033" endtime="20241001 11:06:53.453"/>
</test>
<test id="s1-s6-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:06:53.455" endtime="20241001 11:06:53.455"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:53.459" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:53.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:53.463" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:06:53.457" endtime="20241001 11:06:53.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:53.463" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:06:53.463" endtime="20241001 11:06:53.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:53.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:53.464" endtime="20241001 11:06:53.464"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.457" endtime="20241001 11:06:53.464"/>
</kw>
<msg timestamp="20241001 11:06:53.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:53.457" endtime="20241001 11:06:53.464"/>
</kw>
<msg timestamp="20241001 11:06:53.465" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:06:53.456" endtime="20241001 11:06:53.465"/>
</kw>
<msg timestamp="20241001 11:06:53.465" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:53.456" endtime="20241001 11:06:53.465"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:06:53.465" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:06:53.465" endtime="20241001 11:06:53.465"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:53.469" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:53.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:53.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:06:53.467" endtime="20241001 11:06:53.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:53.491" level="INFO"/>
<status status="PASS" starttime="20241001 11:06:53.491" endtime="20241001 11:06:53.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:53.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:53.491" endtime="20241001 11:06:53.492"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.466" endtime="20241001 11:06:53.492"/>
</kw>
<msg timestamp="20241001 11:06:53.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:53.466" endtime="20241001 11:06:53.492"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.466" endtime="20241001 11:06:53.492"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.465" endtime="20241001 11:06:53.492"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.455" endtime="20241001 11:06:53.492"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.455" endtime="20241001 11:06:53.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:53.497" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:55.759" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:06:55.759" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:06:53.494" endtime="20241001 11:06:55.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:55.761" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:06:55.759" endtime="20241001 11:06:55.761"/>
</kw>
<msg timestamp="20241001 11:06:55.761" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:06:53.494" endtime="20241001 11:06:55.761"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:06:55.762" endtime="20241001 11:06:55.763"/>
</kw>
<msg timestamp="20241001 11:06:55.763" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:06:55.762" endtime="20241001 11:06:55.763"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:55.767" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:06:58.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:06:58.094" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:06:55.765" endtime="20241001 11:06:58.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:06:58.096" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:06:58.095" endtime="20241001 11:06:58.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:06:58.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:06:58.096" endtime="20241001 11:06:58.096"/>
</kw>
<status status="PASS" starttime="20241001 11:06:55.764" endtime="20241001 11:06:58.096"/>
</kw>
<msg timestamp="20241001 11:06:58.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:55.764" endtime="20241001 11:06:58.096"/>
</kw>
<status status="PASS" starttime="20241001 11:06:55.763" endtime="20241001 11:06:58.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:06:58.100" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:00.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:00.357" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=20f575537a9704c5c65ba6ef5ee2701473ae001a37266ae1399032b6b264ebb5</msg>
<status status="PASS" starttime="20241001 11:06:58.098" endtime="20241001 11:07:00.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:00.359" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=20f575537a9704c5c65ba6ef5ee2701473ae001a37266ae1399032b6b264ebb5</msg>
<status status="PASS" starttime="20241001 11:07:00.358" endtime="20241001 11:07:00.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:00.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:00.359" endtime="20241001 11:07:00.359"/>
</kw>
<status status="PASS" starttime="20241001 11:06:58.097" endtime="20241001 11:07:00.359"/>
</kw>
<msg timestamp="20241001 11:07:00.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:06:58.097" endtime="20241001 11:07:00.360"/>
</kw>
<msg timestamp="20241001 11:07:00.360" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=20f575537a9704c5c65ba6ef5ee2701473ae001a37266ae1399032b6b264ebb5</msg>
<status status="PASS" starttime="20241001 11:06:58.097" endtime="20241001 11:07:00.360"/>
</kw>
<status status="PASS" starttime="20241001 11:06:55.763" endtime="20241001 11:07:00.360"/>
</branch>
<status status="PASS" starttime="20241001 11:06:55.763" endtime="20241001 11:07:00.360"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:07:00.361" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:07:00.360" endtime="20241001 11:07:00.361"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:07:00.361" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:07:00.361" endtime="20241001 11:07:00.361"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:07:00.362" level="INFO">${secret} = ['20f575537a9704c5c65ba6ef5ee2701473ae001a37266ae1399032b6b264ebb5']</msg>
<status status="PASS" starttime="20241001 11:07:00.361" endtime="20241001 11:07:00.362"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:07:00.363" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:00.362" endtime="20241001 11:07:00.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:07:00.364" level="INFO">${secret} = 20f575537a9704c5c65ba6ef5ee2701473ae001a37266ae1399032b6b264ebb5</msg>
<status status="PASS" starttime="20241001 11:07:00.363" endtime="20241001 11:07:00.364"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:00.367" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:00.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:00.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:00.365" endtime="20241001 11:07:00.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:00.773" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:00.772" endtime="20241001 11:07:00.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:00.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:00.773" endtime="20241001 11:07:00.774"/>
</kw>
<status status="PASS" starttime="20241001 11:07:00.365" endtime="20241001 11:07:00.774"/>
</kw>
<msg timestamp="20241001 11:07:00.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:00.364" endtime="20241001 11:07:00.774"/>
</kw>
<status status="PASS" starttime="20241001 11:07:00.364" endtime="20241001 11:07:00.774"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:00.778" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:01.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:01.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:00.776" endtime="20241001 11:07:01.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:01.172" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:01.171" endtime="20241001 11:07:01.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:01.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:01.172" endtime="20241001 11:07:01.172"/>
</kw>
<status status="PASS" starttime="20241001 11:07:00.775" endtime="20241001 11:07:01.172"/>
</kw>
<msg timestamp="20241001 11:07:01.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:00.775" endtime="20241001 11:07:01.173"/>
</kw>
<status status="PASS" starttime="20241001 11:07:00.774" endtime="20241001 11:07:01.173"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:01.176" level="INFO">Running command 'aws configure set aws_secret_access_key 20f575537a9704c5c65ba6ef5ee2701473ae001a37266ae1399032b6b264ebb5 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:01.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:01.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:01.174" endtime="20241001 11:07:01.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:01.578" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:01.577" endtime="20241001 11:07:01.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:01.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:01.578" endtime="20241001 11:07:01.578"/>
</kw>
<status status="PASS" starttime="20241001 11:07:01.174" endtime="20241001 11:07:01.578"/>
</kw>
<msg timestamp="20241001 11:07:01.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:01.173" endtime="20241001 11:07:01.579"/>
</kw>
<status status="PASS" starttime="20241001 11:07:01.173" endtime="20241001 11:07:01.579"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:01.582" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:01.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:01.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:01.580" endtime="20241001 11:07:01.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:01.982" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:01.981" endtime="20241001 11:07:01.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:01.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:01.982" endtime="20241001 11:07:01.982"/>
</kw>
<status status="PASS" starttime="20241001 11:07:01.579" endtime="20241001 11:07:01.982"/>
</kw>
<msg timestamp="20241001 11:07:01.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:01.579" endtime="20241001 11:07:01.983"/>
</kw>
<status status="PASS" starttime="20241001 11:07:01.579" endtime="20241001 11:07:01.983"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:01.986" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:02.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:02.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:01.984" endtime="20241001 11:07:02.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:02.410" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:02.409" endtime="20241001 11:07:02.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:02.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:02.410" endtime="20241001 11:07:02.410"/>
</kw>
<status status="PASS" starttime="20241001 11:07:01.984" endtime="20241001 11:07:02.411"/>
</kw>
<msg timestamp="20241001 11:07:02.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:01.983" endtime="20241001 11:07:02.411"/>
</kw>
<status status="PASS" starttime="20241001 11:07:01.983" endtime="20241001 11:07:02.411"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.493" endtime="20241001 11:07:02.411"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.493" endtime="20241001 11:07:02.411"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:07:02.411" endtime="20241001 11:07:02.411"/>
</kw>
<status status="PASS" starttime="20241001 11:06:53.454" endtime="20241001 11:07:02.411"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:07:02.412" level="INFO">${randStr} = 5039250757</msg>
<status status="PASS" starttime="20241001 11:07:02.412" endtime="20241001 11:07:02.412"/>
</kw>
<msg timestamp="20241001 11:07:02.413" level="INFO">${random} = ozone-test-5039250757</msg>
<status status="PASS" starttime="20241001 11:07:02.412" endtime="20241001 11:07:02.413"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:02.417" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-5039250757 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:03.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:03.045" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5039250757"
}</msg>
<status status="PASS" starttime="20241001 11:07:02.415" endtime="20241001 11:07:03.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:03.048" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5039250757"
}</msg>
<status status="PASS" starttime="20241001 11:07:03.045" endtime="20241001 11:07:03.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:03.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:03.048" endtime="20241001 11:07:03.049"/>
</kw>
<status status="PASS" starttime="20241001 11:07:02.414" endtime="20241001 11:07:03.049"/>
</kw>
<msg timestamp="20241001 11:07:03.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:02.414" endtime="20241001 11:07:03.050"/>
</kw>
<msg timestamp="20241001 11:07:03.050" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5039250757"
}</msg>
<status status="PASS" starttime="20241001 11:07:02.413" endtime="20241001 11:07:03.050"/>
</kw>
<msg timestamp="20241001 11:07:03.051" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5039250757"
}</msg>
<status status="PASS" starttime="20241001 11:07:02.413" endtime="20241001 11:07:03.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:03.052" endtime="20241001 11:07:03.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:03.053" endtime="20241001 11:07:03.054"/>
</kw>
<msg timestamp="20241001 11:07:03.054" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20241001 11:07:02.413" endtime="20241001 11:07:03.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241001 11:07:03.054" endtime="20241001 11:07:03.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:06:53.454" endtime="20241001 11:07:03.056"/>
</test>
<test id="s1-s6-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:03.062" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:07:03.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:03.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:03.059" endtime="20241001 11:07:03.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:03.067" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:03.066" endtime="20241001 11:07:03.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:03.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:03.067" endtime="20241001 11:07:03.067"/>
</kw>
<status status="PASS" starttime="20241001 11:07:03.057" endtime="20241001 11:07:03.068"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:03.072" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:03.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:03.865" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:07:03.069" endtime="20241001 11:07:03.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:03.866" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:07:03.866" endtime="20241001 11:07:03.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:03.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:03.867" endtime="20241001 11:07:03.867"/>
</kw>
<msg timestamp="20241001 11:07:03.867" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:07:03.069" endtime="20241001 11:07:03.867"/>
</kw>
<msg timestamp="20241001 11:07:03.867" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:07:03.068" endtime="20241001 11:07:03.867"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:03.868" endtime="20241001 11:07:03.868"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:03.871" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:03.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:03.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:03.869" endtime="20241001 11:07:03.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:03.876" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:03.875" endtime="20241001 11:07:03.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:03.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:03.876" endtime="20241001 11:07:03.876"/>
</kw>
<status status="PASS" starttime="20241001 11:07:03.868" endtime="20241001 11:07:03.876"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:03.057" endtime="20241001 11:07:03.877"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241001 11:06:44.019" endtime="20241001 11:07:03.878"/>
</suite>
<suite id="s1-s7" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-new1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:07:04.648" endtime="20241001 11:07:04.649"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:04.652" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:04.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:04.656" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:07:04.650" endtime="20241001 11:07:04.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:04.657" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:07:04.657" endtime="20241001 11:07:04.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:04.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:04.657" endtime="20241001 11:07:04.657"/>
</kw>
<status status="PASS" starttime="20241001 11:07:04.650" endtime="20241001 11:07:04.658"/>
</kw>
<msg timestamp="20241001 11:07:04.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:04.649" endtime="20241001 11:07:04.658"/>
</kw>
<msg timestamp="20241001 11:07:04.658" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:07:04.649" endtime="20241001 11:07:04.658"/>
</kw>
<msg timestamp="20241001 11:07:04.658" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:04.649" endtime="20241001 11:07:04.658"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:07:04.659" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:04.658" endtime="20241001 11:07:04.659"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:04.662" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:04.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:04.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:04.660" endtime="20241001 11:07:04.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:04.683" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:04.683" endtime="20241001 11:07:04.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:04.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:04.683" endtime="20241001 11:07:04.684"/>
</kw>
<status status="PASS" starttime="20241001 11:07:04.660" endtime="20241001 11:07:04.684"/>
</kw>
<msg timestamp="20241001 11:07:04.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:04.659" endtime="20241001 11:07:04.684"/>
</kw>
<status status="PASS" starttime="20241001 11:07:04.659" endtime="20241001 11:07:04.684"/>
</kw>
<status status="PASS" starttime="20241001 11:07:04.659" endtime="20241001 11:07:04.684"/>
</kw>
<status status="PASS" starttime="20241001 11:07:04.648" endtime="20241001 11:07:04.684"/>
</kw>
<status status="PASS" starttime="20241001 11:07:04.648" endtime="20241001 11:07:04.684"/>
</kw>
<test id="s1-s7-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:04.689" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:07.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:07.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:04.687" endtime="20241001 11:07:07.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:07.716" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:07.715" endtime="20241001 11:07:07.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:07.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:07.716" endtime="20241001 11:07:07.717"/>
</kw>
<status status="PASS" starttime="20241001 11:07:04.686" endtime="20241001 11:07:07.717"/>
</kw>
<msg timestamp="20241001 11:07:07.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:04.686" endtime="20241001 11:07:07.717"/>
</kw>
<msg timestamp="20241001 11:07:07.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:04.686" endtime="20241001 11:07:07.717"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:07.717" endtime="20241001 11:07:07.718"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:07.721" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:10.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:10.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:07.719" endtime="20241001 11:07:10.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:10.481" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:10.481" endtime="20241001 11:07:10.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:10.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:10.482" endtime="20241001 11:07:10.482"/>
</kw>
<status status="PASS" starttime="20241001 11:07:07.719" endtime="20241001 11:07:10.482"/>
</kw>
<msg timestamp="20241001 11:07:10.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:07.718" endtime="20241001 11:07:10.482"/>
</kw>
<msg timestamp="20241001 11:07:10.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:07.718" endtime="20241001 11:07:10.482"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:10.483" endtime="20241001 11:07:10.483"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:04.685" endtime="20241001 11:07:10.483"/>
</test>
<test id="s1-s7-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:10.487" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:07:10.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:10.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:10.484" endtime="20241001 11:07:10.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:10.489" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:10.489" endtime="20241001 11:07:10.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:10.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:10.490" endtime="20241001 11:07:10.490"/>
</kw>
<status status="PASS" starttime="20241001 11:07:10.484" endtime="20241001 11:07:10.490"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:10.493" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:15.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:15.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:10.491" endtime="20241001 11:07:15.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:15.125" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:15.124" endtime="20241001 11:07:15.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:15.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:15.125" endtime="20241001 11:07:15.125"/>
</kw>
<status status="PASS" starttime="20241001 11:07:10.491" endtime="20241001 11:07:15.125"/>
</kw>
<msg timestamp="20241001 11:07:15.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:10.491" endtime="20241001 11:07:15.126"/>
</kw>
<msg timestamp="20241001 11:07:15.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:10.490" endtime="20241001 11:07:15.126"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:15.126" endtime="20241001 11:07:15.126"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:15.129" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:15.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:15.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:15.127" endtime="20241001 11:07:15.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:15.133" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:15.133" endtime="20241001 11:07:15.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:15.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:15.133" endtime="20241001 11:07:15.134"/>
</kw>
<status status="PASS" starttime="20241001 11:07:15.126" endtime="20241001 11:07:15.134"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:10.483" endtime="20241001 11:07:15.134"/>
</test>
<test id="s1-s7-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:15.138" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:18.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:18.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:15.136" endtime="20241001 11:07:18.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:18.061" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:18.060" endtime="20241001 11:07:18.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:18.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:18.061" endtime="20241001 11:07:18.062"/>
</kw>
<status status="PASS" starttime="20241001 11:07:15.136" endtime="20241001 11:07:18.062"/>
</kw>
<msg timestamp="20241001 11:07:18.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:15.136" endtime="20241001 11:07:18.062"/>
</kw>
<msg timestamp="20241001 11:07:18.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:15.135" endtime="20241001 11:07:18.062"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:18.062" endtime="20241001 11:07:18.062"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:15.135" endtime="20241001 11:07:18.063"/>
</test>
<test id="s1-s7-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:18.067" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:07:18.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:18.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:18.065" endtime="20241001 11:07:18.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:18.070" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:18.070" endtime="20241001 11:07:18.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:18.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:18.071" endtime="20241001 11:07:18.071"/>
</kw>
<status status="PASS" starttime="20241001 11:07:18.064" endtime="20241001 11:07:18.071"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:18.074" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:22.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:22.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:18.072" endtime="20241001 11:07:22.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:22.550" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:22.550" endtime="20241001 11:07:22.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:22.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:22.550" endtime="20241001 11:07:22.551"/>
</kw>
<status status="PASS" starttime="20241001 11:07:18.072" endtime="20241001 11:07:22.551"/>
</kw>
<msg timestamp="20241001 11:07:22.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:18.072" endtime="20241001 11:07:22.551"/>
</kw>
<msg timestamp="20241001 11:07:22.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:18.071" endtime="20241001 11:07:22.551"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:22.552" endtime="20241001 11:07:22.552"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:22.555" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:22.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:22.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:22.552" endtime="20241001 11:07:22.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:22.559" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:22.559" endtime="20241001 11:07:22.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:22.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:22.560" endtime="20241001 11:07:22.560"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.552" endtime="20241001 11:07:22.560"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:18.063" endtime="20241001 11:07:22.560"/>
</test>
<test id="s1-s7-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:07:22.562" endtime="20241001 11:07:22.563"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:22.566" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:22.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:22.570" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:07:22.564" endtime="20241001 11:07:22.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:22.571" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:07:22.570" endtime="20241001 11:07:22.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:22.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:22.571" endtime="20241001 11:07:22.571"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.564" endtime="20241001 11:07:22.572"/>
</kw>
<msg timestamp="20241001 11:07:22.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:22.564" endtime="20241001 11:07:22.572"/>
</kw>
<msg timestamp="20241001 11:07:22.572" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:07:22.563" endtime="20241001 11:07:22.572"/>
</kw>
<msg timestamp="20241001 11:07:22.572" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:22.563" endtime="20241001 11:07:22.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:07:22.573" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:22.572" endtime="20241001 11:07:22.573"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:22.576" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:22.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:22.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:22.574" endtime="20241001 11:07:22.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:22.626" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:22.625" endtime="20241001 11:07:22.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:22.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:22.626" endtime="20241001 11:07:22.626"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.574" endtime="20241001 11:07:22.626"/>
</kw>
<msg timestamp="20241001 11:07:22.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:22.574" endtime="20241001 11:07:22.627"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.573" endtime="20241001 11:07:22.627"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.573" endtime="20241001 11:07:22.627"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.562" endtime="20241001 11:07:22.627"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.562" endtime="20241001 11:07:22.627"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:22.630" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:24.878" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:07:24.878" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:07:22.628" endtime="20241001 11:07:24.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:24.879" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:07:24.879" endtime="20241001 11:07:24.879"/>
</kw>
<msg timestamp="20241001 11:07:24.879" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:07:22.628" endtime="20241001 11:07:24.879"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:24.880" endtime="20241001 11:07:24.880"/>
</kw>
<msg timestamp="20241001 11:07:24.880" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:07:24.880" endtime="20241001 11:07:24.880"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:24.884" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:27.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:27.176" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:07:24.882" endtime="20241001 11:07:27.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:27.177" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:07:27.177" endtime="20241001 11:07:27.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:27.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:27.178" endtime="20241001 11:07:27.178"/>
</kw>
<status status="PASS" starttime="20241001 11:07:24.881" endtime="20241001 11:07:27.178"/>
</kw>
<msg timestamp="20241001 11:07:27.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:24.881" endtime="20241001 11:07:27.178"/>
</kw>
<status status="PASS" starttime="20241001 11:07:24.881" endtime="20241001 11:07:27.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:27.182" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:29.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:29.273" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f111dc497862d2861a7cc074246641c4078f43937bc150b5a6e16736cb6c816b</msg>
<status status="PASS" starttime="20241001 11:07:27.180" endtime="20241001 11:07:29.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:29.274" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f111dc497862d2861a7cc074246641c4078f43937bc150b5a6e16736cb6c816b</msg>
<status status="PASS" starttime="20241001 11:07:29.273" endtime="20241001 11:07:29.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:29.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:29.274" endtime="20241001 11:07:29.274"/>
</kw>
<status status="PASS" starttime="20241001 11:07:27.179" endtime="20241001 11:07:29.275"/>
</kw>
<msg timestamp="20241001 11:07:29.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:27.179" endtime="20241001 11:07:29.275"/>
</kw>
<msg timestamp="20241001 11:07:29.275" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=f111dc497862d2861a7cc074246641c4078f43937bc150b5a6e16736cb6c816b</msg>
<status status="PASS" starttime="20241001 11:07:27.179" endtime="20241001 11:07:29.275"/>
</kw>
<status status="PASS" starttime="20241001 11:07:24.881" endtime="20241001 11:07:29.275"/>
</branch>
<status status="PASS" starttime="20241001 11:07:24.881" endtime="20241001 11:07:29.275"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:07:29.276" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:07:29.275" endtime="20241001 11:07:29.276"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:07:29.276" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:07:29.276" endtime="20241001 11:07:29.277"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:07:29.277" level="INFO">${secret} = ['f111dc497862d2861a7cc074246641c4078f43937bc150b5a6e16736cb6c816b']</msg>
<status status="PASS" starttime="20241001 11:07:29.277" endtime="20241001 11:07:29.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:07:29.278" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:29.277" endtime="20241001 11:07:29.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:07:29.279" level="INFO">${secret} = f111dc497862d2861a7cc074246641c4078f43937bc150b5a6e16736cb6c816b</msg>
<status status="PASS" starttime="20241001 11:07:29.278" endtime="20241001 11:07:29.279"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:29.282" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:29.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:29.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:29.280" endtime="20241001 11:07:29.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:29.672" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:29.672" endtime="20241001 11:07:29.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:29.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:29.673" endtime="20241001 11:07:29.673"/>
</kw>
<status status="PASS" starttime="20241001 11:07:29.280" endtime="20241001 11:07:29.673"/>
</kw>
<msg timestamp="20241001 11:07:29.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:29.280" endtime="20241001 11:07:29.673"/>
</kw>
<status status="PASS" starttime="20241001 11:07:29.279" endtime="20241001 11:07:29.674"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:29.677" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:30.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:30.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:29.675" endtime="20241001 11:07:30.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:30.059" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:30.058" endtime="20241001 11:07:30.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:30.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:30.059" endtime="20241001 11:07:30.060"/>
</kw>
<status status="PASS" starttime="20241001 11:07:29.674" endtime="20241001 11:07:30.060"/>
</kw>
<msg timestamp="20241001 11:07:30.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:29.674" endtime="20241001 11:07:30.060"/>
</kw>
<status status="PASS" starttime="20241001 11:07:29.674" endtime="20241001 11:07:30.060"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:30.063" level="INFO">Running command 'aws configure set aws_secret_access_key f111dc497862d2861a7cc074246641c4078f43937bc150b5a6e16736cb6c816b 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:30.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:30.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:30.061" endtime="20241001 11:07:30.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:30.453" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:30.452" endtime="20241001 11:07:30.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:30.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:30.453" endtime="20241001 11:07:30.454"/>
</kw>
<status status="PASS" starttime="20241001 11:07:30.061" endtime="20241001 11:07:30.454"/>
</kw>
<msg timestamp="20241001 11:07:30.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:30.061" endtime="20241001 11:07:30.454"/>
</kw>
<status status="PASS" starttime="20241001 11:07:30.060" endtime="20241001 11:07:30.454"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:30.458" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:30.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:30.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:30.455" endtime="20241001 11:07:30.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:30.880" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:30.880" endtime="20241001 11:07:30.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:30.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:30.881" endtime="20241001 11:07:30.881"/>
</kw>
<status status="PASS" starttime="20241001 11:07:30.455" endtime="20241001 11:07:30.881"/>
</kw>
<msg timestamp="20241001 11:07:30.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:30.455" endtime="20241001 11:07:30.881"/>
</kw>
<status status="PASS" starttime="20241001 11:07:30.454" endtime="20241001 11:07:30.881"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:30.885" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:31.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:31.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:30.883" endtime="20241001 11:07:31.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:31.275" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:31.275" endtime="20241001 11:07:31.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:31.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:31.276" endtime="20241001 11:07:31.276"/>
</kw>
<status status="PASS" starttime="20241001 11:07:30.882" endtime="20241001 11:07:31.276"/>
</kw>
<msg timestamp="20241001 11:07:31.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:30.882" endtime="20241001 11:07:31.276"/>
</kw>
<status status="PASS" starttime="20241001 11:07:30.882" endtime="20241001 11:07:31.277"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.627" endtime="20241001 11:07:31.277"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.627" endtime="20241001 11:07:31.277"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:07:31.277" endtime="20241001 11:07:31.277"/>
</kw>
<status status="PASS" starttime="20241001 11:07:22.561" endtime="20241001 11:07:31.277"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:07:31.278" level="INFO">${randStr} = 5716256959</msg>
<status status="PASS" starttime="20241001 11:07:31.278" endtime="20241001 11:07:31.278"/>
</kw>
<msg timestamp="20241001 11:07:31.278" level="INFO">${random} = ozone-test-5716256959</msg>
<status status="PASS" starttime="20241001 11:07:31.277" endtime="20241001 11:07:31.278"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:31.282" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket-ozone-test-5716256959 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:31.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:31.783" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5716256959"
}</msg>
<status status="PASS" starttime="20241001 11:07:31.280" endtime="20241001 11:07:31.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:31.784" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5716256959"
}</msg>
<status status="PASS" starttime="20241001 11:07:31.783" endtime="20241001 11:07:31.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:31.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:31.784" endtime="20241001 11:07:31.785"/>
</kw>
<status status="PASS" starttime="20241001 11:07:31.280" endtime="20241001 11:07:31.785"/>
</kw>
<msg timestamp="20241001 11:07:31.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:31.280" endtime="20241001 11:07:31.785"/>
</kw>
<msg timestamp="20241001 11:07:31.785" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5716256959"
}</msg>
<status status="PASS" starttime="20241001 11:07:31.279" endtime="20241001 11:07:31.785"/>
</kw>
<msg timestamp="20241001 11:07:31.785" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-5716256959"
}</msg>
<status status="PASS" starttime="20241001 11:07:31.279" endtime="20241001 11:07:31.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:31.785" endtime="20241001 11:07:31.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:31.786" endtime="20241001 11:07:31.786"/>
</kw>
<msg timestamp="20241001 11:07:31.786" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20241001 11:07:31.278" endtime="20241001 11:07:31.786"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241001 11:07:31.786" endtime="20241001 11:07:31.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:22.561" endtime="20241001 11:07:31.787"/>
</test>
<test id="s1-s7-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:31.791" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:07:31.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:31.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:31.788" endtime="20241001 11:07:31.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:31.793" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:31.793" endtime="20241001 11:07:31.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:31.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:31.794" endtime="20241001 11:07:31.794"/>
</kw>
<status status="PASS" starttime="20241001 11:07:31.788" endtime="20241001 11:07:31.794"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:31.797" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:32.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:32.420" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20241001 11:07:31.795" endtime="20241001 11:07:32.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:32.422" level="INFO">{
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20241001 11:07:32.421" endtime="20241001 11:07:32.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:32.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:32.422" endtime="20241001 11:07:32.423"/>
</kw>
<msg timestamp="20241001 11:07:32.423" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20241001 11:07:31.795" endtime="20241001 11:07:32.423"/>
</kw>
<msg timestamp="20241001 11:07:32.423" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20241001 11:07:31.794" endtime="20241001 11:07:32.423"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:32.423" endtime="20241001 11:07:32.424"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:32.427" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:32.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:32.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:32.424" endtime="20241001 11:07:32.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:32.432" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:32.431" endtime="20241001 11:07:32.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:32.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:32.432" endtime="20241001 11:07:32.432"/>
</kw>
<status status="PASS" starttime="20241001 11:07:32.424" endtime="20241001 11:07:32.433"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:31.788" endtime="20241001 11:07:32.433"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241001 11:07:04.578" endtime="20241001 11:07:32.434"/>
</suite>
<suite id="s1-s8" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:07:33.203" endtime="20241001 11:07:33.203"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:33.207" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:33.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:33.211" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:07:33.205" endtime="20241001 11:07:33.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:33.211" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:07:33.211" endtime="20241001 11:07:33.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:33.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:33.211" endtime="20241001 11:07:33.212"/>
</kw>
<status status="PASS" starttime="20241001 11:07:33.204" endtime="20241001 11:07:33.212"/>
</kw>
<msg timestamp="20241001 11:07:33.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:33.204" endtime="20241001 11:07:33.212"/>
</kw>
<msg timestamp="20241001 11:07:33.212" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:07:33.204" endtime="20241001 11:07:33.212"/>
</kw>
<msg timestamp="20241001 11:07:33.213" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:33.203" endtime="20241001 11:07:33.213"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:07:33.213" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:33.213" endtime="20241001 11:07:33.213"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:33.216" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:33.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:33.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:33.214" endtime="20241001 11:07:33.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:33.240" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:33.240" endtime="20241001 11:07:33.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:33.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:33.240" endtime="20241001 11:07:33.241"/>
</kw>
<status status="PASS" starttime="20241001 11:07:33.214" endtime="20241001 11:07:33.241"/>
</kw>
<msg timestamp="20241001 11:07:33.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:33.214" endtime="20241001 11:07:33.241"/>
</kw>
<status status="PASS" starttime="20241001 11:07:33.213" endtime="20241001 11:07:33.241"/>
</kw>
<status status="PASS" starttime="20241001 11:07:33.213" endtime="20241001 11:07:33.241"/>
</kw>
<status status="PASS" starttime="20241001 11:07:33.203" endtime="20241001 11:07:33.241"/>
</kw>
<status status="PASS" starttime="20241001 11:07:33.202" endtime="20241001 11:07:33.241"/>
</kw>
<test id="s1-s8-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:07:33.243" level="INFO">${random} = 76685</msg>
<status status="PASS" starttime="20241001 11:07:33.242" endtime="20241001 11:07:33.243"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:33.246" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-76685 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:37.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:37.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:33.244" endtime="20241001 11:07:37.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:37.850" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:37.850" endtime="20241001 11:07:37.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:37.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:37.851" endtime="20241001 11:07:37.851"/>
</kw>
<status status="PASS" starttime="20241001 11:07:33.243" endtime="20241001 11:07:37.851"/>
</kw>
<msg timestamp="20241001 11:07:37.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:33.243" endtime="20241001 11:07:37.851"/>
</kw>
<msg timestamp="20241001 11:07:37.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:33.243" endtime="20241001 11:07:37.852"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:37.852" endtime="20241001 11:07:37.852"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:37.855" level="INFO">Running command 'cat /tmp/key-76685 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:37.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:37.859" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:07:37.853" endtime="20241001 11:07:37.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:37.860" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:07:37.859" endtime="20241001 11:07:37.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:37.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:37.860" endtime="20241001 11:07:37.860"/>
</kw>
<msg timestamp="20241001 11:07:37.861" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:07:37.852" endtime="20241001 11:07:37.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:37.861" endtime="20241001 11:07:37.861"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:37.864" level="INFO">Running command 'rm /tmp/key-76685 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:37.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:37.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:37.862" endtime="20241001 11:07:37.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:37.868" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:37.867" endtime="20241001 11:07:37.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:37.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:37.868" endtime="20241001 11:07:37.868"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.861" endtime="20241001 11:07:37.869"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:33.242" endtime="20241001 11:07:37.869"/>
</test>
<test id="s1-s8-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:07:37.871" endtime="20241001 11:07:37.871"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:37.874" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:37.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:37.878" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:07:37.872" endtime="20241001 11:07:37.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:37.879" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:07:37.878" endtime="20241001 11:07:37.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:37.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:37.879" endtime="20241001 11:07:37.879"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.872" endtime="20241001 11:07:37.880"/>
</kw>
<msg timestamp="20241001 11:07:37.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:37.872" endtime="20241001 11:07:37.880"/>
</kw>
<msg timestamp="20241001 11:07:37.880" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:07:37.872" endtime="20241001 11:07:37.880"/>
</kw>
<msg timestamp="20241001 11:07:37.880" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:37.871" endtime="20241001 11:07:37.880"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:07:37.881" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:37.880" endtime="20241001 11:07:37.881"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:37.884" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:37.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:37.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:37.882" endtime="20241001 11:07:37.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:37.904" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:37.903" endtime="20241001 11:07:37.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:37.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:37.904" endtime="20241001 11:07:37.904"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.882" endtime="20241001 11:07:37.905"/>
</kw>
<msg timestamp="20241001 11:07:37.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:37.882" endtime="20241001 11:07:37.905"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.881" endtime="20241001 11:07:37.905"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.881" endtime="20241001 11:07:37.905"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.871" endtime="20241001 11:07:37.905"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.870" endtime="20241001 11:07:37.905"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:37.908" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:40.052" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:07:40.052" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:07:37.906" endtime="20241001 11:07:40.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:40.054" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:07:40.053" endtime="20241001 11:07:40.054"/>
</kw>
<msg timestamp="20241001 11:07:40.054" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:07:37.906" endtime="20241001 11:07:40.054"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:40.055" endtime="20241001 11:07:40.055"/>
</kw>
<msg timestamp="20241001 11:07:40.056" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:07:40.054" endtime="20241001 11:07:40.056"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:40.061" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:42.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:42.315" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:07:40.058" endtime="20241001 11:07:42.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:42.316" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:07:42.315" endtime="20241001 11:07:42.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:42.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:42.316" endtime="20241001 11:07:42.316"/>
</kw>
<status status="PASS" starttime="20241001 11:07:40.057" endtime="20241001 11:07:42.316"/>
</kw>
<msg timestamp="20241001 11:07:42.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:40.057" endtime="20241001 11:07:42.317"/>
</kw>
<status status="PASS" starttime="20241001 11:07:40.056" endtime="20241001 11:07:42.317"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:42.320" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:44.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:44.762" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b777d6907daaa0aab3ff713b366f48e93e32bcf4d4b64184fd2105ad9753c717</msg>
<status status="PASS" starttime="20241001 11:07:42.318" endtime="20241001 11:07:44.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:44.763" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b777d6907daaa0aab3ff713b366f48e93e32bcf4d4b64184fd2105ad9753c717</msg>
<status status="PASS" starttime="20241001 11:07:44.762" endtime="20241001 11:07:44.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:44.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:44.763" endtime="20241001 11:07:44.763"/>
</kw>
<status status="PASS" starttime="20241001 11:07:42.318" endtime="20241001 11:07:44.764"/>
</kw>
<msg timestamp="20241001 11:07:44.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:42.317" endtime="20241001 11:07:44.764"/>
</kw>
<msg timestamp="20241001 11:07:44.764" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b777d6907daaa0aab3ff713b366f48e93e32bcf4d4b64184fd2105ad9753c717</msg>
<status status="PASS" starttime="20241001 11:07:42.317" endtime="20241001 11:07:44.764"/>
</kw>
<status status="PASS" starttime="20241001 11:07:40.056" endtime="20241001 11:07:44.764"/>
</branch>
<status status="PASS" starttime="20241001 11:07:40.056" endtime="20241001 11:07:44.764"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:07:44.765" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:07:44.764" endtime="20241001 11:07:44.765"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:07:44.765" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:07:44.765" endtime="20241001 11:07:44.765"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:07:44.766" level="INFO">${secret} = ['b777d6907daaa0aab3ff713b366f48e93e32bcf4d4b64184fd2105ad9753c717']</msg>
<status status="PASS" starttime="20241001 11:07:44.765" endtime="20241001 11:07:44.766"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:07:44.767" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:44.766" endtime="20241001 11:07:44.767"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:07:44.768" level="INFO">${secret} = b777d6907daaa0aab3ff713b366f48e93e32bcf4d4b64184fd2105ad9753c717</msg>
<status status="PASS" starttime="20241001 11:07:44.767" endtime="20241001 11:07:44.768"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:44.771" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:45.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:45.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:44.769" endtime="20241001 11:07:45.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:45.162" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:45.161" endtime="20241001 11:07:45.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:45.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:45.162" endtime="20241001 11:07:45.162"/>
</kw>
<status status="PASS" starttime="20241001 11:07:44.768" endtime="20241001 11:07:45.163"/>
</kw>
<msg timestamp="20241001 11:07:45.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:44.768" endtime="20241001 11:07:45.163"/>
</kw>
<status status="PASS" starttime="20241001 11:07:44.768" endtime="20241001 11:07:45.163"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:45.166" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:45.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:45.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:45.164" endtime="20241001 11:07:45.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:45.551" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:45.550" endtime="20241001 11:07:45.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:45.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:45.551" endtime="20241001 11:07:45.551"/>
</kw>
<status status="PASS" starttime="20241001 11:07:45.164" endtime="20241001 11:07:45.552"/>
</kw>
<msg timestamp="20241001 11:07:45.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:45.163" endtime="20241001 11:07:45.552"/>
</kw>
<status status="PASS" starttime="20241001 11:07:45.163" endtime="20241001 11:07:45.552"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:45.555" level="INFO">Running command 'aws configure set aws_secret_access_key b777d6907daaa0aab3ff713b366f48e93e32bcf4d4b64184fd2105ad9753c717 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:45.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:45.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:45.553" endtime="20241001 11:07:45.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:45.945" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:45.945" endtime="20241001 11:07:45.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:45.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:45.946" endtime="20241001 11:07:45.946"/>
</kw>
<status status="PASS" starttime="20241001 11:07:45.553" endtime="20241001 11:07:45.946"/>
</kw>
<msg timestamp="20241001 11:07:45.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:45.552" endtime="20241001 11:07:45.946"/>
</kw>
<status status="PASS" starttime="20241001 11:07:45.552" endtime="20241001 11:07:45.946"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:45.950" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:46.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:46.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:45.948" endtime="20241001 11:07:46.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:46.339" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:46.338" endtime="20241001 11:07:46.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:46.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:46.339" endtime="20241001 11:07:46.339"/>
</kw>
<status status="PASS" starttime="20241001 11:07:45.947" endtime="20241001 11:07:46.339"/>
</kw>
<msg timestamp="20241001 11:07:46.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:45.947" endtime="20241001 11:07:46.340"/>
</kw>
<status status="PASS" starttime="20241001 11:07:45.947" endtime="20241001 11:07:46.340"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:46.343" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:46.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:46.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:46.341" endtime="20241001 11:07:46.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:46.760" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:46.760" endtime="20241001 11:07:46.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:46.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:46.761" endtime="20241001 11:07:46.761"/>
</kw>
<status status="PASS" starttime="20241001 11:07:46.341" endtime="20241001 11:07:46.761"/>
</kw>
<msg timestamp="20241001 11:07:46.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:46.340" endtime="20241001 11:07:46.762"/>
</kw>
<status status="PASS" starttime="20241001 11:07:46.340" endtime="20241001 11:07:46.762"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.905" endtime="20241001 11:07:46.762"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.905" endtime="20241001 11:07:46.762"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:07:46.762" endtime="20241001 11:07:46.762"/>
</kw>
<status status="PASS" starttime="20241001 11:07:37.870" endtime="20241001 11:07:46.762"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:46.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:47.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:47.309" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:07:46.763" endtime="20241001 11:07:47.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:47.310" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:07:47 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:07:47.309" endtime="20241001 11:07:47.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:47.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:47.310" endtime="20241001 11:07:47.311"/>
</kw>
<msg timestamp="20241001 11:07:47.311" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:07:46.763" endtime="20241001 11:07:47.311"/>
</kw>
<msg timestamp="20241001 11:07:47.311" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:07:46.762" endtime="20241001 11:07:47.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:47.311" endtime="20241001 11:07:47.312"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:47.314" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:47.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:47.318" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:07:47.312" endtime="20241001 11:07:47.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:47.319" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:07:47.319" endtime="20241001 11:07:47.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:47.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:47.319" endtime="20241001 11:07:47.320"/>
</kw>
<msg timestamp="20241001 11:07:47.320" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:07:47.312" endtime="20241001 11:07:47.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:47.320" endtime="20241001 11:07:47.320"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:47.323" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:47.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:47.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:47.321" endtime="20241001 11:07:47.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:47.327" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:47.327" endtime="20241001 11:07:47.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:47.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:47.328" endtime="20241001 11:07:47.328"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.321" endtime="20241001 11:07:47.328"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:37.869" endtime="20241001 11:07:47.328"/>
</test>
<test id="s1-s8-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:07:47.331" endtime="20241001 11:07:47.331"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:47.334" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:47.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:47.338" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:07:47.332" endtime="20241001 11:07:47.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:47.339" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:07:47.338" endtime="20241001 11:07:47.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:47.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:47.339" endtime="20241001 11:07:47.339"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.332" endtime="20241001 11:07:47.340"/>
</kw>
<msg timestamp="20241001 11:07:47.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:47.332" endtime="20241001 11:07:47.340"/>
</kw>
<msg timestamp="20241001 11:07:47.340" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:07:47.331" endtime="20241001 11:07:47.340"/>
</kw>
<msg timestamp="20241001 11:07:47.340" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:47.331" endtime="20241001 11:07:47.340"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:07:47.341" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:47.340" endtime="20241001 11:07:47.341"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:47.344" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:47.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:47.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:47.342" endtime="20241001 11:07:47.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:47.364" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:47.363" endtime="20241001 11:07:47.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:47.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:47.365" endtime="20241001 11:07:47.365"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.342" endtime="20241001 11:07:47.365"/>
</kw>
<msg timestamp="20241001 11:07:47.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:47.341" endtime="20241001 11:07:47.366"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.341" endtime="20241001 11:07:47.366"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.341" endtime="20241001 11:07:47.366"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.330" endtime="20241001 11:07:47.366"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.330" endtime="20241001 11:07:47.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:47.370" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:49.552" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:07:49.552" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:07:47.367" endtime="20241001 11:07:49.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:49.553" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:07:49.553" endtime="20241001 11:07:49.554"/>
</kw>
<msg timestamp="20241001 11:07:49.554" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:07:47.367" endtime="20241001 11:07:49.554"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:49.554" endtime="20241001 11:07:49.555"/>
</kw>
<msg timestamp="20241001 11:07:49.555" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:07:49.554" endtime="20241001 11:07:49.555"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:49.558" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:51.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:51.702" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:07:49.556" endtime="20241001 11:07:51.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:51.703" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:07:51.702" endtime="20241001 11:07:51.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:51.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:51.703" endtime="20241001 11:07:51.704"/>
</kw>
<status status="PASS" starttime="20241001 11:07:49.556" endtime="20241001 11:07:51.704"/>
</kw>
<msg timestamp="20241001 11:07:51.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:49.555" endtime="20241001 11:07:51.704"/>
</kw>
<status status="PASS" starttime="20241001 11:07:49.555" endtime="20241001 11:07:51.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:51.708" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:53.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:53.878" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=bc08cf1a094347e8573f22010dd58f8843ac0c82823c1c7d40bd20a5921f3a4f</msg>
<status status="PASS" starttime="20241001 11:07:51.705" endtime="20241001 11:07:53.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:53.879" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=bc08cf1a094347e8573f22010dd58f8843ac0c82823c1c7d40bd20a5921f3a4f</msg>
<status status="PASS" starttime="20241001 11:07:53.879" endtime="20241001 11:07:53.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:53.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:53.880" endtime="20241001 11:07:53.880"/>
</kw>
<status status="PASS" starttime="20241001 11:07:51.705" endtime="20241001 11:07:53.880"/>
</kw>
<msg timestamp="20241001 11:07:53.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:51.705" endtime="20241001 11:07:53.880"/>
</kw>
<msg timestamp="20241001 11:07:53.881" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=bc08cf1a094347e8573f22010dd58f8843ac0c82823c1c7d40bd20a5921f3a4f</msg>
<status status="PASS" starttime="20241001 11:07:51.704" endtime="20241001 11:07:53.881"/>
</kw>
<status status="PASS" starttime="20241001 11:07:49.555" endtime="20241001 11:07:53.881"/>
</branch>
<status status="PASS" starttime="20241001 11:07:49.555" endtime="20241001 11:07:53.881"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:07:53.881" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:07:53.881" endtime="20241001 11:07:53.881"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:07:53.882" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:07:53.881" endtime="20241001 11:07:53.882"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:07:53.882" level="INFO">${secret} = ['bc08cf1a094347e8573f22010dd58f8843ac0c82823c1c7d40bd20a5921f3a4f']</msg>
<status status="PASS" starttime="20241001 11:07:53.882" endtime="20241001 11:07:53.882"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:07:53.883" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:53.882" endtime="20241001 11:07:53.883"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:07:53.884" level="INFO">${secret} = bc08cf1a094347e8573f22010dd58f8843ac0c82823c1c7d40bd20a5921f3a4f</msg>
<status status="PASS" starttime="20241001 11:07:53.884" endtime="20241001 11:07:53.884"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:53.888" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:54.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:54.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:53.885" endtime="20241001 11:07:54.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:54.297" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:54.296" endtime="20241001 11:07:54.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:54.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:54.297" endtime="20241001 11:07:54.297"/>
</kw>
<status status="PASS" starttime="20241001 11:07:53.885" endtime="20241001 11:07:54.297"/>
</kw>
<msg timestamp="20241001 11:07:54.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:53.885" endtime="20241001 11:07:54.298"/>
</kw>
<status status="PASS" starttime="20241001 11:07:53.884" endtime="20241001 11:07:54.298"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:54.301" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:54.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:54.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:54.299" endtime="20241001 11:07:54.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:54.696" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:54.696" endtime="20241001 11:07:54.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:54.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:54.697" endtime="20241001 11:07:54.697"/>
</kw>
<status status="PASS" starttime="20241001 11:07:54.299" endtime="20241001 11:07:54.697"/>
</kw>
<msg timestamp="20241001 11:07:54.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:54.298" endtime="20241001 11:07:54.697"/>
</kw>
<status status="PASS" starttime="20241001 11:07:54.298" endtime="20241001 11:07:54.697"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:54.701" level="INFO">Running command 'aws configure set aws_secret_access_key bc08cf1a094347e8573f22010dd58f8843ac0c82823c1c7d40bd20a5921f3a4f 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:55.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:55.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:54.699" endtime="20241001 11:07:55.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:55.093" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:55.093" endtime="20241001 11:07:55.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:55.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:55.094" endtime="20241001 11:07:55.094"/>
</kw>
<status status="PASS" starttime="20241001 11:07:54.698" endtime="20241001 11:07:55.094"/>
</kw>
<msg timestamp="20241001 11:07:55.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:54.698" endtime="20241001 11:07:55.094"/>
</kw>
<status status="PASS" starttime="20241001 11:07:54.697" endtime="20241001 11:07:55.095"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:55.098" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:55.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:55.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:55.096" endtime="20241001 11:07:55.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:55.492" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:55.492" endtime="20241001 11:07:55.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:55.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:55.492" endtime="20241001 11:07:55.493"/>
</kw>
<status status="PASS" starttime="20241001 11:07:55.095" endtime="20241001 11:07:55.493"/>
</kw>
<msg timestamp="20241001 11:07:55.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:55.095" endtime="20241001 11:07:55.493"/>
</kw>
<status status="PASS" starttime="20241001 11:07:55.095" endtime="20241001 11:07:55.493"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:55.497" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:55.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:55.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:55.494" endtime="20241001 11:07:55.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:55.900" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:55.899" endtime="20241001 11:07:55.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:55.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:55.900" endtime="20241001 11:07:55.900"/>
</kw>
<status status="PASS" starttime="20241001 11:07:55.494" endtime="20241001 11:07:55.901"/>
</kw>
<msg timestamp="20241001 11:07:55.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:55.494" endtime="20241001 11:07:55.901"/>
</kw>
<status status="PASS" starttime="20241001 11:07:55.493" endtime="20241001 11:07:55.901"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.367" endtime="20241001 11:07:55.901"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.366" endtime="20241001 11:07:55.901"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:07:55.901" endtime="20241001 11:07:55.901"/>
</kw>
<status status="PASS" starttime="20241001 11:07:47.330" endtime="20241001 11:07:55.901"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:55.905" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:56.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:56.429" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:07:55.903" endtime="20241001 11:07:56.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:56.431" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:07:56 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:07:56.430" endtime="20241001 11:07:56.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:56.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:56.431" endtime="20241001 11:07:56.432"/>
</kw>
<msg timestamp="20241001 11:07:56.432" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:07:55.902" endtime="20241001 11:07:56.432"/>
</kw>
<msg timestamp="20241001 11:07:56.432" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:07:55.902" endtime="20241001 11:07:56.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:56.432" endtime="20241001 11:07:56.433"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:56.436" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:56.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:56.439" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:07:56.433" endtime="20241001 11:07:56.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:56.440" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:07:56.440" endtime="20241001 11:07:56.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:56.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:56.440" endtime="20241001 11:07:56.441"/>
</kw>
<msg timestamp="20241001 11:07:56.441" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:07:56.433" endtime="20241001 11:07:56.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:07:56.441" endtime="20241001 11:07:56.442"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:56.444" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:56.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:56.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:56.442" endtime="20241001 11:07:56.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:56.449" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:56.448" endtime="20241001 11:07:56.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:56.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:56.449" endtime="20241001 11:07:56.449"/>
</kw>
<status status="PASS" starttime="20241001 11:07:56.442" endtime="20241001 11:07:56.449"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:47.329" endtime="20241001 11:07:56.450"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:07:33.136" endtime="20241001 11:07:56.450"/>
</suite>
<suite id="s1-s9" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s9-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:07:57.171" endtime="20241001 11:07:57.171"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:57.175" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:57.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:57.180" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:07:57.173" endtime="20241001 11:07:57.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:57.181" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:07:57.181" endtime="20241001 11:07:57.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:57.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:57.181" endtime="20241001 11:07:57.182"/>
</kw>
<status status="PASS" starttime="20241001 11:07:57.172" endtime="20241001 11:07:57.182"/>
</kw>
<msg timestamp="20241001 11:07:57.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:57.172" endtime="20241001 11:07:57.182"/>
</kw>
<msg timestamp="20241001 11:07:57.182" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:07:57.172" endtime="20241001 11:07:57.182"/>
</kw>
<msg timestamp="20241001 11:07:57.182" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:57.171" endtime="20241001 11:07:57.182"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:07:57.183" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:07:57.182" endtime="20241001 11:07:57.183"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:57.186" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:07:57.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:07:57.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:07:57.184" endtime="20241001 11:07:57.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:07:57.205" level="INFO"/>
<status status="PASS" starttime="20241001 11:07:57.204" endtime="20241001 11:07:57.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:07:57.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:07:57.205" endtime="20241001 11:07:57.205"/>
</kw>
<status status="PASS" starttime="20241001 11:07:57.184" endtime="20241001 11:07:57.205"/>
</kw>
<msg timestamp="20241001 11:07:57.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:57.184" endtime="20241001 11:07:57.206"/>
</kw>
<status status="PASS" starttime="20241001 11:07:57.183" endtime="20241001 11:07:57.206"/>
</kw>
<status status="PASS" starttime="20241001 11:07:57.183" endtime="20241001 11:07:57.206"/>
</kw>
<status status="PASS" starttime="20241001 11:07:57.171" endtime="20241001 11:07:57.206"/>
</kw>
<status status="PASS" starttime="20241001 11:07:57.170" endtime="20241001 11:07:57.206"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:07:57.206" endtime="20241001 11:07:57.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:07:57.210" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:08:04.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:08:04.914" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20241001 11:07:57.207" endtime="20241001 11:08:04.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:08:04.915" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [111]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20241001 11:08:04.915" endtime="20241001 11:08:04.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:08:04.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:08:04.916" endtime="20241001 11:08:04.916"/>
</kw>
<status status="PASS" starttime="20241001 11:07:57.207" endtime="20241001 11:08:04.916"/>
</kw>
<msg timestamp="20241001 11:08:04.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:07:57.207" endtime="20241001 11:08:04.916"/>
</kw>
<msg timestamp="20241001 11:08:04.917" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [111].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20241001 11:07:57.207" endtime="20241001 11:08:04.917"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:08:04.917" endtime="20241001 11:08:04.917"/>
</kw>
<status status="PASS" starttime="20241001 11:08:04.917" endtime="20241001 11:08:04.917"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:07:57.169" endtime="20241001 11:08:04.918"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20241001 11:07:57.123" endtime="20241001 11:08:04.919"/>
</suite>
<suite id="s1-s10" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s10-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:09:20.481" endtime="20241001 11:09:20.481"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:20.485" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:20.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:20.489" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:09:20.482" endtime="20241001 11:09:20.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:20.489" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:09:20.489" endtime="20241001 11:09:20.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:20.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:20.490" endtime="20241001 11:09:20.490"/>
</kw>
<status status="PASS" starttime="20241001 11:09:20.482" endtime="20241001 11:09:20.490"/>
</kw>
<msg timestamp="20241001 11:09:20.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:20.482" endtime="20241001 11:09:20.490"/>
</kw>
<msg timestamp="20241001 11:09:20.490" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:09:20.481" endtime="20241001 11:09:20.490"/>
</kw>
<msg timestamp="20241001 11:09:20.491" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:20.481" endtime="20241001 11:09:20.491"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:09:20.491" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:20.491" endtime="20241001 11:09:20.491"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:20.494" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:20.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:20.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:20.493" endtime="20241001 11:09:20.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:20.555" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:20.554" endtime="20241001 11:09:20.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:20.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:20.555" endtime="20241001 11:09:20.556"/>
</kw>
<status status="PASS" starttime="20241001 11:09:20.492" endtime="20241001 11:09:20.556"/>
</kw>
<msg timestamp="20241001 11:09:20.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:20.492" endtime="20241001 11:09:20.556"/>
</kw>
<status status="PASS" starttime="20241001 11:09:20.492" endtime="20241001 11:09:20.556"/>
</kw>
<status status="PASS" starttime="20241001 11:09:20.491" endtime="20241001 11:09:20.556"/>
</kw>
<status status="PASS" starttime="20241001 11:09:20.480" endtime="20241001 11:09:20.556"/>
</kw>
<status status="PASS" starttime="20241001 11:09:20.480" endtime="20241001 11:09:20.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:20.560" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:20.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:20.563" level="INFO">${output} = OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
...</msg>
<status status="PASS" starttime="20241001 11:09:20.558" endtime="20241001 11:09:20.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:20.564" level="INFO">OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
HOSTNAME=scm3.org
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE_LOG_DIR=/var/log/hadoop
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
JAVA_HOME=/usr/local/jdk-17.0.2
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.server.default.replication=3
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
CORE-SITE.XML_dfs.data.transfer.protection=authentication
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
PWD=/opt/hadoop
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HOME=/opt/hadoop
LC_CTYPE=C.UTF-8
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
WAITFOR=scm2.org:9894
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.address=recon:9891
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
SHLVL=1
OZONE-SITE.XML_ozone.om.ratis.enable=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/jdk-17.0.2/bin:/opt/hadoop/bin
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.security.authorization=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.security.enabled=true
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
_=/usr/bin/env</msg>
<status status="PASS" starttime="20241001 11:09:20.564" endtime="20241001 11:09:20.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:20.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:20.565" endtime="20241001 11:09:20.565"/>
</kw>
<status status="PASS" starttime="20241001 11:09:20.557" endtime="20241001 11:09:20.565"/>
</kw>
<msg timestamp="20241001 11:09:20.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:20.557" endtime="20241001 11:09:20.565"/>
</kw>
<msg timestamp="20241001 11:09:20.566" level="INFO">${result} = OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
...</msg>
<status status="PASS" starttime="20241001 11:09:20.556" endtime="20241001 11:09:20.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:20.566" level="INFO">OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
HOSTNAME=scm3.org
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE_LOG_DIR=/var/log/hadoop
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
JAVA_HOME=/usr/local/jdk-17.0.2
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.server.default.replication=3
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
CORE-SITE.XML_dfs.data.transfer.protection=authentication
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
PWD=/opt/hadoop
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HOME=/opt/hadoop
LC_CTYPE=C.UTF-8
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
WAITFOR=scm2.org:9894
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.address=recon:9891
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
SHLVL=1
OZONE-SITE.XML_ozone.om.ratis.enable=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/jdk-17.0.2/bin:/opt/hadoop/bin
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.security.authorization=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.security.enabled=true
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
_=/usr/bin/env</msg>
<status status="PASS" starttime="20241001 11:09:20.566" endtime="20241001 11:09:20.566"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:09:20.566" endtime="20241001 11:09:20.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:20.570" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:23.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:23.210" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20241001 11:09:20.568" endtime="20241001 11:09:23.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:23.211" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20241001 11:09:23.210" endtime="20241001 11:09:23.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:23.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:23.211" endtime="20241001 11:09:23.212"/>
</kw>
<status status="PASS" starttime="20241001 11:09:20.567" endtime="20241001 11:09:23.212"/>
</kw>
<msg timestamp="20241001 11:09:23.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:20.567" endtime="20241001 11:09:23.212"/>
</kw>
<msg timestamp="20241001 11:09:23.212" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20241001 11:09:20.567" endtime="20241001 11:09:23.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:23.212" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20241001 11:09:23.212" endtime="20241001 11:09:23.213"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20241001 11:09:23.213" endtime="20241001 11:09:23.213"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241001 11:09:20.479" endtime="20241001 11:09:23.213"/>
</test>
<test id="s1-s10-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:09:23.215" endtime="20241001 11:09:23.215"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:23.219" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:23.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:23.223" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:09:23.217" endtime="20241001 11:09:23.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:23.224" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:09:23.223" endtime="20241001 11:09:23.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:23.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:23.224" endtime="20241001 11:09:23.224"/>
</kw>
<status status="PASS" starttime="20241001 11:09:23.216" endtime="20241001 11:09:23.224"/>
</kw>
<msg timestamp="20241001 11:09:23.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:23.216" endtime="20241001 11:09:23.225"/>
</kw>
<msg timestamp="20241001 11:09:23.225" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:09:23.216" endtime="20241001 11:09:23.225"/>
</kw>
<msg timestamp="20241001 11:09:23.225" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:23.216" endtime="20241001 11:09:23.225"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:09:23.225" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:23.225" endtime="20241001 11:09:23.225"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:23.229" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:23.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:23.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:23.227" endtime="20241001 11:09:23.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:23.294" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:23.293" endtime="20241001 11:09:23.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:23.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:23.294" endtime="20241001 11:09:23.294"/>
</kw>
<status status="PASS" starttime="20241001 11:09:23.226" endtime="20241001 11:09:23.295"/>
</kw>
<msg timestamp="20241001 11:09:23.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:23.226" endtime="20241001 11:09:23.295"/>
</kw>
<status status="PASS" starttime="20241001 11:09:23.226" endtime="20241001 11:09:23.295"/>
</kw>
<status status="PASS" starttime="20241001 11:09:23.225" endtime="20241001 11:09:23.295"/>
</kw>
<status status="PASS" starttime="20241001 11:09:23.215" endtime="20241001 11:09:23.295"/>
</kw>
<status status="PASS" starttime="20241001 11:09:23.214" endtime="20241001 11:09:23.295"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:09:23.295" endtime="20241001 11:09:23.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:23.299" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:25.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:25.647" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:09:23.297" endtime="20241001 11:09:25.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:25.648" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:09:25.648" endtime="20241001 11:09:25.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:25.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:25.649" endtime="20241001 11:09:25.649"/>
</kw>
<status status="PASS" starttime="20241001 11:09:23.296" endtime="20241001 11:09:25.649"/>
</kw>
<msg timestamp="20241001 11:09:25.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:23.296" endtime="20241001 11:09:25.649"/>
</kw>
<msg timestamp="20241001 11:09:25.649" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:09:23.296" endtime="20241001 11:09:25.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:25.650" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:09:25.650" endtime="20241001 11:09:25.650"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20241001 11:09:25.650" endtime="20241001 11:09:25.650"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241001 11:09:23.214" endtime="20241001 11:09:25.651"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20241001 11:09:20.436" endtime="20241001 11:09:25.652"/>
</suite>
<suite id="s1-s11" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:09:26.410" endtime="20241001 11:09:26.410"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:26.413" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:26.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:26.417" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:09:26.411" endtime="20241001 11:09:26.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:26.418" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:09:26.417" endtime="20241001 11:09:26.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:26.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:26.418" endtime="20241001 11:09:26.418"/>
</kw>
<status status="PASS" starttime="20241001 11:09:26.411" endtime="20241001 11:09:26.418"/>
</kw>
<msg timestamp="20241001 11:09:26.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:26.410" endtime="20241001 11:09:26.418"/>
</kw>
<msg timestamp="20241001 11:09:26.419" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:09:26.410" endtime="20241001 11:09:26.419"/>
</kw>
<msg timestamp="20241001 11:09:26.419" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:26.410" endtime="20241001 11:09:26.419"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:09:26.419" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:26.419" endtime="20241001 11:09:26.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:26.422" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:26.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:26.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:26.421" endtime="20241001 11:09:26.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:26.439" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:26.438" endtime="20241001 11:09:26.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:26.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:26.439" endtime="20241001 11:09:26.439"/>
</kw>
<status status="PASS" starttime="20241001 11:09:26.420" endtime="20241001 11:09:26.439"/>
</kw>
<msg timestamp="20241001 11:09:26.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:26.420" endtime="20241001 11:09:26.440"/>
</kw>
<status status="PASS" starttime="20241001 11:09:26.420" endtime="20241001 11:09:26.440"/>
</kw>
<status status="PASS" starttime="20241001 11:09:26.419" endtime="20241001 11:09:26.440"/>
</kw>
<status status="PASS" starttime="20241001 11:09:26.409" endtime="20241001 11:09:26.440"/>
</kw>
<status status="PASS" starttime="20241001 11:09:26.409" endtime="20241001 11:09:26.440"/>
</kw>
<test id="s1-s11-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:09:26.441" level="INFO">${random} = 54181</msg>
<status status="PASS" starttime="20241001 11:09:26.441" endtime="20241001 11:09:26.441"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:26.445" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-54181 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:30.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:30.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:26.443" endtime="20241001 11:09:30.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:30.605" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:30.604" endtime="20241001 11:09:30.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:30.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:30.605" endtime="20241001 11:09:30.606"/>
</kw>
<status status="PASS" starttime="20241001 11:09:26.442" endtime="20241001 11:09:30.606"/>
</kw>
<msg timestamp="20241001 11:09:30.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:26.442" endtime="20241001 11:09:30.606"/>
</kw>
<msg timestamp="20241001 11:09:30.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:26.441" endtime="20241001 11:09:30.606"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:30.606" endtime="20241001 11:09:30.607"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:30.609" level="INFO">Running command 'cat /tmp/key-54181 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:30.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:30.613" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:09:30.607" endtime="20241001 11:09:30.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:30.614" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:09:30.614" endtime="20241001 11:09:30.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:30.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:30.614" endtime="20241001 11:09:30.615"/>
</kw>
<msg timestamp="20241001 11:09:30.615" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:09:30.607" endtime="20241001 11:09:30.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:30.615" endtime="20241001 11:09:30.615"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:30.618" level="INFO">Running command 'rm /tmp/key-54181 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:30.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:30.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:30.616" endtime="20241001 11:09:30.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:30.622" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:30.622" endtime="20241001 11:09:30.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:30.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:30.623" endtime="20241001 11:09:30.623"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.615" endtime="20241001 11:09:30.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:09:26.440" endtime="20241001 11:09:30.623"/>
</test>
<test id="s1-s11-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:09:30.625" endtime="20241001 11:09:30.625"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:30.629" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:30.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:30.632" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:09:30.627" endtime="20241001 11:09:30.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:30.633" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:09:30.633" endtime="20241001 11:09:30.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:30.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:30.633" endtime="20241001 11:09:30.634"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.626" endtime="20241001 11:09:30.634"/>
</kw>
<msg timestamp="20241001 11:09:30.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:30.626" endtime="20241001 11:09:30.634"/>
</kw>
<msg timestamp="20241001 11:09:30.634" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:09:30.626" endtime="20241001 11:09:30.634"/>
</kw>
<msg timestamp="20241001 11:09:30.634" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:30.626" endtime="20241001 11:09:30.634"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:09:30.635" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:30.635" endtime="20241001 11:09:30.635"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:30.638" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:30.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:30.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:30.637" endtime="20241001 11:09:30.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:30.717" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:30.717" endtime="20241001 11:09:30.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:30.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:30.718" endtime="20241001 11:09:30.718"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.636" endtime="20241001 11:09:30.718"/>
</kw>
<msg timestamp="20241001 11:09:30.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:30.636" endtime="20241001 11:09:30.718"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.635" endtime="20241001 11:09:30.718"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.635" endtime="20241001 11:09:30.719"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.625" endtime="20241001 11:09:30.719"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.625" endtime="20241001 11:09:30.719"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:30.722" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:33.211" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:09:33.211" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:09:30.720" endtime="20241001 11:09:33.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:33.212" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:09:33.211" endtime="20241001 11:09:33.212"/>
</kw>
<msg timestamp="20241001 11:09:33.212" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:09:30.720" endtime="20241001 11:09:33.212"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:33.213" endtime="20241001 11:09:33.213"/>
</kw>
<msg timestamp="20241001 11:09:33.213" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:09:33.213" endtime="20241001 11:09:33.213"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:33.217" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:35.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:35.290" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:09:33.215" endtime="20241001 11:09:35.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:35.291" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:09:35.290" endtime="20241001 11:09:35.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:35.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:35.291" endtime="20241001 11:09:35.292"/>
</kw>
<status status="PASS" starttime="20241001 11:09:33.214" endtime="20241001 11:09:35.292"/>
</kw>
<msg timestamp="20241001 11:09:35.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:33.214" endtime="20241001 11:09:35.292"/>
</kw>
<status status="PASS" starttime="20241001 11:09:33.214" endtime="20241001 11:09:35.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:35.296" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:37.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:37.501" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5ab6423fee0c7b882b4cdf32204d56ebdacaf78505d79d8cd09052b4373ab6d8
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:09:35.293" endtime="20241001 11:09:37.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:37.502" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5ab6423fee0c7b882b4cdf32204d56ebdacaf78505d79d8cd09052b4373ab6d8
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:09:37.501" endtime="20241001 11:09:37.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:37.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:37.502" endtime="20241001 11:09:37.503"/>
</kw>
<status status="PASS" starttime="20241001 11:09:35.293" endtime="20241001 11:09:37.503"/>
</kw>
<msg timestamp="20241001 11:09:37.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:35.293" endtime="20241001 11:09:37.503"/>
</kw>
<msg timestamp="20241001 11:09:37.503" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5ab6423fee0c7b882b4cdf32204d56ebdacaf78505d79d8cd09052b4373ab6d8
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:09:35.292" endtime="20241001 11:09:37.503"/>
</kw>
<status status="PASS" starttime="20241001 11:09:33.214" endtime="20241001 11:09:37.503"/>
</branch>
<status status="PASS" starttime="20241001 11:09:33.214" endtime="20241001 11:09:37.503"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:09:37.504" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:09:37.504" endtime="20241001 11:09:37.504"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:09:37.505" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:09:37.504" endtime="20241001 11:09:37.505"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:09:37.505" level="INFO">${secret} = ['5ab6423fee0c7b882b4cdf32204d56ebdacaf78505d79d8cd09052b4373ab6d8']</msg>
<status status="PASS" starttime="20241001 11:09:37.505" endtime="20241001 11:09:37.505"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:09:37.506" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:37.506" endtime="20241001 11:09:37.507"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:09:37.507" level="INFO">${secret} = 5ab6423fee0c7b882b4cdf32204d56ebdacaf78505d79d8cd09052b4373ab6d8</msg>
<status status="PASS" starttime="20241001 11:09:37.507" endtime="20241001 11:09:37.507"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:37.511" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:37.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:37.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:37.509" endtime="20241001 11:09:37.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:37.941" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:37.940" endtime="20241001 11:09:37.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:37.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:37.941" endtime="20241001 11:09:37.941"/>
</kw>
<status status="PASS" starttime="20241001 11:09:37.508" endtime="20241001 11:09:37.942"/>
</kw>
<msg timestamp="20241001 11:09:37.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:37.508" endtime="20241001 11:09:37.942"/>
</kw>
<status status="PASS" starttime="20241001 11:09:37.508" endtime="20241001 11:09:37.942"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:37.945" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:38.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:38.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:37.943" endtime="20241001 11:09:38.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:38.348" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:38.347" endtime="20241001 11:09:38.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:38.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:38.348" endtime="20241001 11:09:38.348"/>
</kw>
<status status="PASS" starttime="20241001 11:09:37.943" endtime="20241001 11:09:38.348"/>
</kw>
<msg timestamp="20241001 11:09:38.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:37.942" endtime="20241001 11:09:38.349"/>
</kw>
<status status="PASS" starttime="20241001 11:09:37.942" endtime="20241001 11:09:38.349"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:38.352" level="INFO">Running command 'aws configure set aws_secret_access_key 5ab6423fee0c7b882b4cdf32204d56ebdacaf78505d79d8cd09052b4373ab6d8 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:38.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:38.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:38.350" endtime="20241001 11:09:38.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:38.748" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:38.747" endtime="20241001 11:09:38.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:38.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:38.748" endtime="20241001 11:09:38.748"/>
</kw>
<status status="PASS" starttime="20241001 11:09:38.350" endtime="20241001 11:09:38.748"/>
</kw>
<msg timestamp="20241001 11:09:38.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:38.349" endtime="20241001 11:09:38.749"/>
</kw>
<status status="PASS" starttime="20241001 11:09:38.349" endtime="20241001 11:09:38.749"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:38.752" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:39.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:39.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:38.750" endtime="20241001 11:09:39.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:39.146" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:39.146" endtime="20241001 11:09:39.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:39.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:39.147" endtime="20241001 11:09:39.147"/>
</kw>
<status status="PASS" starttime="20241001 11:09:38.749" endtime="20241001 11:09:39.147"/>
</kw>
<msg timestamp="20241001 11:09:39.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:38.749" endtime="20241001 11:09:39.147"/>
</kw>
<status status="PASS" starttime="20241001 11:09:38.749" endtime="20241001 11:09:39.147"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:39.151" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:39.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:39.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:39.149" endtime="20241001 11:09:39.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:39.543" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:39.542" endtime="20241001 11:09:39.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:39.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:39.543" endtime="20241001 11:09:39.544"/>
</kw>
<status status="PASS" starttime="20241001 11:09:39.148" endtime="20241001 11:09:39.544"/>
</kw>
<msg timestamp="20241001 11:09:39.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:39.148" endtime="20241001 11:09:39.544"/>
</kw>
<status status="PASS" starttime="20241001 11:09:39.148" endtime="20241001 11:09:39.544"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.719" endtime="20241001 11:09:39.544"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.719" endtime="20241001 11:09:39.544"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:09:39.544" endtime="20241001 11:09:39.545"/>
</kw>
<status status="PASS" starttime="20241001 11:09:30.624" endtime="20241001 11:09:39.545"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:39.548" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:41.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:41.926" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:06:53 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:09:39.546" endtime="20241001 11:09:41.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:41.927" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:06:53 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:09:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:09:41.927" endtime="20241001 11:09:41.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:41.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:41.928" endtime="20241001 11:09:41.928"/>
</kw>
<msg timestamp="20241001 11:09:41.928" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:06:53 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:09:39.545" endtime="20241001 11:09:41.928"/>
</kw>
<msg timestamp="20241001 11:09:41.928" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:06:53 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:09:39.545" endtime="20241001 11:09:41.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:41.929" endtime="20241001 11:09:41.929"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:41.932" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:41.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:41.937" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:09:41.930" endtime="20241001 11:09:41.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:41.939" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:09:41.938" endtime="20241001 11:09:41.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:41.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:41.939" endtime="20241001 11:09:41.940"/>
</kw>
<msg timestamp="20241001 11:09:41.940" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:09:41.929" endtime="20241001 11:09:41.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:41.940" endtime="20241001 11:09:41.940"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:41.943" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:41.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:41.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:41.941" endtime="20241001 11:09:41.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:41.949" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:41.948" endtime="20241001 11:09:41.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:41.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:41.949" endtime="20241001 11:09:41.949"/>
</kw>
<status status="PASS" starttime="20241001 11:09:41.941" endtime="20241001 11:09:41.950"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:09:30.624" endtime="20241001 11:09:41.950"/>
</test>
<test id="s1-s11-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:09:41.953" endtime="20241001 11:09:41.953"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:41.958" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:41.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:41.962" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:09:41.955" endtime="20241001 11:09:41.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:41.963" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:09:41.963" endtime="20241001 11:09:41.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:41.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:41.963" endtime="20241001 11:09:41.964"/>
</kw>
<status status="PASS" starttime="20241001 11:09:41.954" endtime="20241001 11:09:41.964"/>
</kw>
<msg timestamp="20241001 11:09:41.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:41.954" endtime="20241001 11:09:41.964"/>
</kw>
<msg timestamp="20241001 11:09:41.965" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:09:41.954" endtime="20241001 11:09:41.965"/>
</kw>
<msg timestamp="20241001 11:09:41.965" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:41.953" endtime="20241001 11:09:41.965"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:09:41.965" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:41.965" endtime="20241001 11:09:41.965"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:41.969" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:42.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:42.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:41.967" endtime="20241001 11:09:42.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:42.016" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:42.015" endtime="20241001 11:09:42.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:42.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:42.016" endtime="20241001 11:09:42.017"/>
</kw>
<status status="PASS" starttime="20241001 11:09:41.967" endtime="20241001 11:09:42.017"/>
</kw>
<msg timestamp="20241001 11:09:42.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:41.966" endtime="20241001 11:09:42.017"/>
</kw>
<status status="PASS" starttime="20241001 11:09:41.966" endtime="20241001 11:09:42.017"/>
</kw>
<status status="PASS" starttime="20241001 11:09:41.965" endtime="20241001 11:09:42.017"/>
</kw>
<status status="PASS" starttime="20241001 11:09:41.952" endtime="20241001 11:09:42.017"/>
</kw>
<status status="PASS" starttime="20241001 11:09:41.952" endtime="20241001 11:09:42.017"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:42.020" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:44.240" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:09:44.240" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:09:42.018" endtime="20241001 11:09:44.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:44.242" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:09:44.241" endtime="20241001 11:09:44.242"/>
</kw>
<msg timestamp="20241001 11:09:44.242" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:09:42.018" endtime="20241001 11:09:44.242"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:44.242" endtime="20241001 11:09:44.243"/>
</kw>
<msg timestamp="20241001 11:09:44.243" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:09:44.242" endtime="20241001 11:09:44.243"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:44.246" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:46.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:46.493" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:09:44.244" endtime="20241001 11:09:46.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:46.494" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:09:46.494" endtime="20241001 11:09:46.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:46.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:46.495" endtime="20241001 11:09:46.495"/>
</kw>
<status status="PASS" starttime="20241001 11:09:44.244" endtime="20241001 11:09:46.495"/>
</kw>
<msg timestamp="20241001 11:09:46.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:44.244" endtime="20241001 11:09:46.495"/>
</kw>
<status status="PASS" starttime="20241001 11:09:44.243" endtime="20241001 11:09:46.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:46.499" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:48.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:48.618" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=a4b8f8d6417a36864af3ea6d81b92abc7d53bab1d2ca88ff1cc23163a7e1d805
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:09:46.497" endtime="20241001 11:09:48.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:48.619" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=a4b8f8d6417a36864af3ea6d81b92abc7d53bab1d2ca88ff1cc23163a7e1d805
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:09:48.619" endtime="20241001 11:09:48.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:48.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:48.620" endtime="20241001 11:09:48.620"/>
</kw>
<status status="PASS" starttime="20241001 11:09:46.496" endtime="20241001 11:09:48.620"/>
</kw>
<msg timestamp="20241001 11:09:48.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:46.496" endtime="20241001 11:09:48.621"/>
</kw>
<msg timestamp="20241001 11:09:48.621" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=a4b8f8d6417a36864af3ea6d81b92abc7d53bab1d2ca88ff1cc23163a7e1d805
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:09:46.496" endtime="20241001 11:09:48.621"/>
</kw>
<status status="PASS" starttime="20241001 11:09:44.243" endtime="20241001 11:09:48.621"/>
</branch>
<status status="PASS" starttime="20241001 11:09:44.243" endtime="20241001 11:09:48.621"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:09:48.621" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:09:48.621" endtime="20241001 11:09:48.621"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:09:48.622" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:09:48.622" endtime="20241001 11:09:48.622"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:09:48.622" level="INFO">${secret} = ['a4b8f8d6417a36864af3ea6d81b92abc7d53bab1d2ca88ff1cc23163a7e1d805']</msg>
<status status="PASS" starttime="20241001 11:09:48.622" endtime="20241001 11:09:48.622"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:09:48.623" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:48.622" endtime="20241001 11:09:48.623"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:09:48.624" level="INFO">${secret} = a4b8f8d6417a36864af3ea6d81b92abc7d53bab1d2ca88ff1cc23163a7e1d805</msg>
<status status="PASS" starttime="20241001 11:09:48.623" endtime="20241001 11:09:48.624"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:48.627" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:49.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:49.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:48.625" endtime="20241001 11:09:49.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:49.031" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:49.030" endtime="20241001 11:09:49.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:49.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:49.031" endtime="20241001 11:09:49.032"/>
</kw>
<status status="PASS" starttime="20241001 11:09:48.625" endtime="20241001 11:09:49.032"/>
</kw>
<msg timestamp="20241001 11:09:49.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:48.625" endtime="20241001 11:09:49.032"/>
</kw>
<status status="PASS" starttime="20241001 11:09:48.624" endtime="20241001 11:09:49.032"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:49.036" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:49.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:49.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:49.033" endtime="20241001 11:09:49.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:49.435" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:49.434" endtime="20241001 11:09:49.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:49.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:49.435" endtime="20241001 11:09:49.436"/>
</kw>
<status status="PASS" starttime="20241001 11:09:49.033" endtime="20241001 11:09:49.436"/>
</kw>
<msg timestamp="20241001 11:09:49.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:49.033" endtime="20241001 11:09:49.436"/>
</kw>
<status status="PASS" starttime="20241001 11:09:49.032" endtime="20241001 11:09:49.436"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:49.440" level="INFO">Running command 'aws configure set aws_secret_access_key a4b8f8d6417a36864af3ea6d81b92abc7d53bab1d2ca88ff1cc23163a7e1d805 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:49.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:49.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:49.437" endtime="20241001 11:09:49.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:49.829" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:49.829" endtime="20241001 11:09:49.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:49.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:49.830" endtime="20241001 11:09:49.830"/>
</kw>
<status status="PASS" starttime="20241001 11:09:49.437" endtime="20241001 11:09:49.830"/>
</kw>
<msg timestamp="20241001 11:09:49.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:49.437" endtime="20241001 11:09:49.830"/>
</kw>
<status status="PASS" starttime="20241001 11:09:49.436" endtime="20241001 11:09:49.831"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:49.834" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:50.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:50.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:49.832" endtime="20241001 11:09:50.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:50.223" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:50.222" endtime="20241001 11:09:50.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:50.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:50.223" endtime="20241001 11:09:50.223"/>
</kw>
<status status="PASS" starttime="20241001 11:09:49.831" endtime="20241001 11:09:50.224"/>
</kw>
<msg timestamp="20241001 11:09:50.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:49.831" endtime="20241001 11:09:50.224"/>
</kw>
<status status="PASS" starttime="20241001 11:09:49.831" endtime="20241001 11:09:50.224"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:50.227" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:50.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:50.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:50.225" endtime="20241001 11:09:50.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:50.623" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:50.622" endtime="20241001 11:09:50.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:50.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:50.623" endtime="20241001 11:09:50.623"/>
</kw>
<status status="PASS" starttime="20241001 11:09:50.225" endtime="20241001 11:09:50.624"/>
</kw>
<msg timestamp="20241001 11:09:50.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:50.225" endtime="20241001 11:09:50.624"/>
</kw>
<status status="PASS" starttime="20241001 11:09:50.224" endtime="20241001 11:09:50.624"/>
</kw>
<status status="PASS" starttime="20241001 11:09:42.018" endtime="20241001 11:09:50.624"/>
</kw>
<status status="PASS" starttime="20241001 11:09:42.017" endtime="20241001 11:09:50.624"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:09:50.624" endtime="20241001 11:09:50.624"/>
</kw>
<status status="PASS" starttime="20241001 11:09:41.952" endtime="20241001 11:09:50.624"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:50.628" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:51.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:51.244" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:03 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:09:50.626" endtime="20241001 11:09:51.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:51.245" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:03 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:09:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:09:51.245" endtime="20241001 11:09:51.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:51.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:51.246" endtime="20241001 11:09:51.246"/>
</kw>
<msg timestamp="20241001 11:09:51.246" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:03 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:09:50.625" endtime="20241001 11:09:51.246"/>
</kw>
<msg timestamp="20241001 11:09:51.247" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:03 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:09:50.625" endtime="20241001 11:09:51.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:51.247" endtime="20241001 11:09:51.247"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:51.250" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:51.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:51.254" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:09:51.248" endtime="20241001 11:09:51.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:51.255" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:09:51.254" endtime="20241001 11:09:51.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:51.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:51.255" endtime="20241001 11:09:51.255"/>
</kw>
<msg timestamp="20241001 11:09:51.256" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:09:51.247" endtime="20241001 11:09:51.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:51.256" endtime="20241001 11:09:51.256"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:51.259" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:51.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:51.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:51.257" endtime="20241001 11:09:51.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:51.264" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:51.263" endtime="20241001 11:09:51.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:51.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:51.264" endtime="20241001 11:09:51.265"/>
</kw>
<status status="PASS" starttime="20241001 11:09:51.256" endtime="20241001 11:09:51.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:09:41.951" endtime="20241001 11:09:51.265"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:09:26.341" endtime="20241001 11:09:51.266"/>
</suite>
<suite id="s1-s12" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-validate-new1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:09:52.066" endtime="20241001 11:09:52.066"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:52.069" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:52.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:52.073" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:09:52.067" endtime="20241001 11:09:52.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:52.074" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:09:52.073" endtime="20241001 11:09:52.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:52.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:52.074" endtime="20241001 11:09:52.074"/>
</kw>
<status status="PASS" starttime="20241001 11:09:52.067" endtime="20241001 11:09:52.074"/>
</kw>
<msg timestamp="20241001 11:09:52.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:52.066" endtime="20241001 11:09:52.074"/>
</kw>
<msg timestamp="20241001 11:09:52.075" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:09:52.066" endtime="20241001 11:09:52.075"/>
</kw>
<msg timestamp="20241001 11:09:52.075" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:52.066" endtime="20241001 11:09:52.075"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:09:52.075" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:52.075" endtime="20241001 11:09:52.075"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:52.079" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:52.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:52.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:52.077" endtime="20241001 11:09:52.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:52.096" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:52.095" endtime="20241001 11:09:52.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:52.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:52.096" endtime="20241001 11:09:52.096"/>
</kw>
<status status="PASS" starttime="20241001 11:09:52.076" endtime="20241001 11:09:52.096"/>
</kw>
<msg timestamp="20241001 11:09:52.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:52.076" endtime="20241001 11:09:52.096"/>
</kw>
<status status="PASS" starttime="20241001 11:09:52.076" endtime="20241001 11:09:52.096"/>
</kw>
<status status="PASS" starttime="20241001 11:09:52.075" endtime="20241001 11:09:52.096"/>
</kw>
<status status="PASS" starttime="20241001 11:09:52.065" endtime="20241001 11:09:52.097"/>
</kw>
<status status="PASS" starttime="20241001 11:09:52.065" endtime="20241001 11:09:52.097"/>
</kw>
<test id="s1-s12-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:09:52.098" level="INFO">${random} = 68084</msg>
<status status="PASS" starttime="20241001 11:09:52.097" endtime="20241001 11:09:52.098"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:52.101" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-68084 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:56.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:56.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:52.099" endtime="20241001 11:09:56.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:56.062" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:56.062" endtime="20241001 11:09:56.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:56.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:56.062" endtime="20241001 11:09:56.063"/>
</kw>
<status status="PASS" starttime="20241001 11:09:52.099" endtime="20241001 11:09:56.063"/>
</kw>
<msg timestamp="20241001 11:09:56.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:52.099" endtime="20241001 11:09:56.063"/>
</kw>
<msg timestamp="20241001 11:09:56.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:52.098" endtime="20241001 11:09:56.063"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:56.064" endtime="20241001 11:09:56.064"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:56.067" level="INFO">Running command 'cat /tmp/key-68084 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:56.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:56.071" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:09:56.065" endtime="20241001 11:09:56.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:56.071" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:09:56.071" endtime="20241001 11:09:56.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:56.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:56.072" endtime="20241001 11:09:56.072"/>
</kw>
<msg timestamp="20241001 11:09:56.072" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:09:56.064" endtime="20241001 11:09:56.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:56.072" endtime="20241001 11:09:56.073"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:56.075" level="INFO">Running command 'rm /tmp/key-68084 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:56.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:56.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:56.073" endtime="20241001 11:09:56.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:56.080" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:56.079" endtime="20241001 11:09:56.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:56.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:56.080" endtime="20241001 11:09:56.080"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.073" endtime="20241001 11:09:56.081"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:09:52.097" endtime="20241001 11:09:56.081"/>
</test>
<test id="s1-s12-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:09:56.083" endtime="20241001 11:09:56.083"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:56.087" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:56.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:56.091" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:09:56.085" endtime="20241001 11:09:56.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:56.091" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:09:56.091" endtime="20241001 11:09:56.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:56.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:56.092" endtime="20241001 11:09:56.092"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.084" endtime="20241001 11:09:56.092"/>
</kw>
<msg timestamp="20241001 11:09:56.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:56.084" endtime="20241001 11:09:56.092"/>
</kw>
<msg timestamp="20241001 11:09:56.092" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:09:56.084" endtime="20241001 11:09:56.092"/>
</kw>
<msg timestamp="20241001 11:09:56.093" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:56.083" endtime="20241001 11:09:56.093"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:09:56.093" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:09:56.093" endtime="20241001 11:09:56.093"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:56.097" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:56.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:09:56.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:09:56.095" endtime="20241001 11:09:56.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:56.118" level="INFO"/>
<status status="PASS" starttime="20241001 11:09:56.117" endtime="20241001 11:09:56.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:09:56.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:09:56.118" endtime="20241001 11:09:56.118"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.094" endtime="20241001 11:09:56.118"/>
</kw>
<msg timestamp="20241001 11:09:56.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:56.094" endtime="20241001 11:09:56.119"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.094" endtime="20241001 11:09:56.119"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.093" endtime="20241001 11:09:56.119"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.082" endtime="20241001 11:09:56.119"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.082" endtime="20241001 11:09:56.119"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:56.122" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:09:58.282" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:09:58.282" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:09:56.120" endtime="20241001 11:09:58.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:09:58.283" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:09:58.282" endtime="20241001 11:09:58.283"/>
</kw>
<msg timestamp="20241001 11:09:58.283" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:09:56.120" endtime="20241001 11:09:58.283"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:09:58.284" endtime="20241001 11:09:58.284"/>
</kw>
<msg timestamp="20241001 11:09:58.284" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:09:58.283" endtime="20241001 11:09:58.284"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:09:58.288" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:00.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:00.347" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:09:58.286" endtime="20241001 11:10:00.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:00.348" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:10:00.347" endtime="20241001 11:10:00.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:00.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:00.348" endtime="20241001 11:10:00.349"/>
</kw>
<status status="PASS" starttime="20241001 11:09:58.285" endtime="20241001 11:10:00.349"/>
</kw>
<msg timestamp="20241001 11:10:00.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:09:58.285" endtime="20241001 11:10:00.349"/>
</kw>
<status status="PASS" starttime="20241001 11:09:58.285" endtime="20241001 11:10:00.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:00.352" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:02.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:02.663" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e173de2064cb48b5ca01d14722948a6ec7353e4d8c31fd183d1bbe019a6f907f
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:00.350" endtime="20241001 11:10:02.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:02.664" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e173de2064cb48b5ca01d14722948a6ec7353e4d8c31fd183d1bbe019a6f907f
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:02.663" endtime="20241001 11:10:02.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:02.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:02.664" endtime="20241001 11:10:02.665"/>
</kw>
<status status="PASS" starttime="20241001 11:10:00.350" endtime="20241001 11:10:02.665"/>
</kw>
<msg timestamp="20241001 11:10:02.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:00.350" endtime="20241001 11:10:02.665"/>
</kw>
<msg timestamp="20241001 11:10:02.665" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e173de2064cb48b5ca01d14722948a6ec7353e4d8c31fd183d1bbe019a6f907f
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:00.349" endtime="20241001 11:10:02.665"/>
</kw>
<status status="PASS" starttime="20241001 11:09:58.284" endtime="20241001 11:10:02.665"/>
</branch>
<status status="PASS" starttime="20241001 11:09:58.284" endtime="20241001 11:10:02.665"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:10:02.666" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:10:02.665" endtime="20241001 11:10:02.666"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:10:02.666" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:10:02.666" endtime="20241001 11:10:02.666"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:10:02.667" level="INFO">${secret} = ['e173de2064cb48b5ca01d14722948a6ec7353e4d8c31fd183d1bbe019a6f907f']</msg>
<status status="PASS" starttime="20241001 11:10:02.667" endtime="20241001 11:10:02.667"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:10:02.668" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:02.667" endtime="20241001 11:10:02.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:10:02.669" level="INFO">${secret} = e173de2064cb48b5ca01d14722948a6ec7353e4d8c31fd183d1bbe019a6f907f</msg>
<status status="PASS" starttime="20241001 11:10:02.668" endtime="20241001 11:10:02.669"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:02.672" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:03.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:03.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:02.670" endtime="20241001 11:10:03.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:03.059" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:03.059" endtime="20241001 11:10:03.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:03.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:03.060" endtime="20241001 11:10:03.060"/>
</kw>
<status status="PASS" starttime="20241001 11:10:02.670" endtime="20241001 11:10:03.060"/>
</kw>
<msg timestamp="20241001 11:10:03.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:02.669" endtime="20241001 11:10:03.060"/>
</kw>
<status status="PASS" starttime="20241001 11:10:02.669" endtime="20241001 11:10:03.060"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:03.064" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:03.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:03.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:03.062" endtime="20241001 11:10:03.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:03.459" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:03.458" endtime="20241001 11:10:03.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:03.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:03.459" endtime="20241001 11:10:03.460"/>
</kw>
<status status="PASS" starttime="20241001 11:10:03.061" endtime="20241001 11:10:03.460"/>
</kw>
<msg timestamp="20241001 11:10:03.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:03.061" endtime="20241001 11:10:03.460"/>
</kw>
<status status="PASS" starttime="20241001 11:10:03.061" endtime="20241001 11:10:03.460"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:03.464" level="INFO">Running command 'aws configure set aws_secret_access_key e173de2064cb48b5ca01d14722948a6ec7353e4d8c31fd183d1bbe019a6f907f 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:03.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:03.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:03.462" endtime="20241001 11:10:03.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:03.864" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:03.863" endtime="20241001 11:10:03.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:03.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:03.864" endtime="20241001 11:10:03.864"/>
</kw>
<status status="PASS" starttime="20241001 11:10:03.461" endtime="20241001 11:10:03.864"/>
</kw>
<msg timestamp="20241001 11:10:03.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:03.461" endtime="20241001 11:10:03.865"/>
</kw>
<status status="PASS" starttime="20241001 11:10:03.460" endtime="20241001 11:10:03.865"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:03.868" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:04.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:04.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:03.866" endtime="20241001 11:10:04.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:04.284" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:04.283" endtime="20241001 11:10:04.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:04.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:04.284" endtime="20241001 11:10:04.284"/>
</kw>
<status status="PASS" starttime="20241001 11:10:03.865" endtime="20241001 11:10:04.285"/>
</kw>
<msg timestamp="20241001 11:10:04.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:03.865" endtime="20241001 11:10:04.285"/>
</kw>
<status status="PASS" starttime="20241001 11:10:03.865" endtime="20241001 11:10:04.285"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:04.288" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:04.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:04.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:04.286" endtime="20241001 11:10:04.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:04.723" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:04.722" endtime="20241001 11:10:04.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:04.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:04.723" endtime="20241001 11:10:04.724"/>
</kw>
<status status="PASS" starttime="20241001 11:10:04.286" endtime="20241001 11:10:04.724"/>
</kw>
<msg timestamp="20241001 11:10:04.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:04.285" endtime="20241001 11:10:04.724"/>
</kw>
<status status="PASS" starttime="20241001 11:10:04.285" endtime="20241001 11:10:04.724"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.119" endtime="20241001 11:10:04.724"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.119" endtime="20241001 11:10:04.724"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:10:04.724" endtime="20241001 11:10:04.725"/>
</kw>
<status status="PASS" starttime="20241001 11:09:56.082" endtime="20241001 11:10:04.725"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:04.728" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:05.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:05.278" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:10:04.726" endtime="20241001 11:10:05.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:05.279" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:10:05 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:10:05.279" endtime="20241001 11:10:05.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:05.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:05.279" endtime="20241001 11:10:05.280"/>
</kw>
<msg timestamp="20241001 11:10:05.280" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:10:04.725" endtime="20241001 11:10:05.280"/>
</kw>
<msg timestamp="20241001 11:10:05.280" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:10:04.725" endtime="20241001 11:10:05.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:05.281" endtime="20241001 11:10:05.281"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:05.284" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:05.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:05.288" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:10:05.281" endtime="20241001 11:10:05.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:05.288" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:10:05.288" endtime="20241001 11:10:05.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:05.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:05.289" endtime="20241001 11:10:05.289"/>
</kw>
<msg timestamp="20241001 11:10:05.289" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:10:05.281" endtime="20241001 11:10:05.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:05.289" endtime="20241001 11:10:05.290"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:05.292" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:05.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:05.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:05.291" endtime="20241001 11:10:05.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:05.297" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:05.296" endtime="20241001 11:10:05.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:05.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:05.297" endtime="20241001 11:10:05.298"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.290" endtime="20241001 11:10:05.298"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:09:56.081" endtime="20241001 11:10:05.298"/>
</test>
<test id="s1-s12-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:10:05.300" endtime="20241001 11:10:05.300"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:05.304" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:05.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:05.307" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:10:05.302" endtime="20241001 11:10:05.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:05.308" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:10:05.308" endtime="20241001 11:10:05.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:05.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:05.309" endtime="20241001 11:10:05.309"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.301" endtime="20241001 11:10:05.309"/>
</kw>
<msg timestamp="20241001 11:10:05.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:05.301" endtime="20241001 11:10:05.309"/>
</kw>
<msg timestamp="20241001 11:10:05.310" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:10:05.301" endtime="20241001 11:10:05.310"/>
</kw>
<msg timestamp="20241001 11:10:05.310" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:05.300" endtime="20241001 11:10:05.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:10:05.310" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:05.310" endtime="20241001 11:10:05.310"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:05.314" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:05.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:05.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:05.312" endtime="20241001 11:10:05.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:05.360" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:05.360" endtime="20241001 11:10:05.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:05.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:05.360" endtime="20241001 11:10:05.361"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.311" endtime="20241001 11:10:05.361"/>
</kw>
<msg timestamp="20241001 11:10:05.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:05.311" endtime="20241001 11:10:05.361"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.311" endtime="20241001 11:10:05.361"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.310" endtime="20241001 11:10:05.361"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.300" endtime="20241001 11:10:05.361"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.299" endtime="20241001 11:10:05.362"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:05.365" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:07.612" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:10:07.612" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:05.363" endtime="20241001 11:10:07.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:07.613" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:07.613" endtime="20241001 11:10:07.613"/>
</kw>
<msg timestamp="20241001 11:10:07.613" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:05.362" endtime="20241001 11:10:07.613"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:07.614" endtime="20241001 11:10:07.614"/>
</kw>
<msg timestamp="20241001 11:10:07.614" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:10:07.614" endtime="20241001 11:10:07.614"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:07.618" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:09.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:09.757" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:10:07.616" endtime="20241001 11:10:09.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:09.758" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:10:09.757" endtime="20241001 11:10:09.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:09.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:09.758" endtime="20241001 11:10:09.758"/>
</kw>
<status status="PASS" starttime="20241001 11:10:07.615" endtime="20241001 11:10:09.759"/>
</kw>
<msg timestamp="20241001 11:10:09.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:07.615" endtime="20241001 11:10:09.759"/>
</kw>
<status status="PASS" starttime="20241001 11:10:07.615" endtime="20241001 11:10:09.759"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:09.762" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:11.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:11.978" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=a8c65b65f21b65fb13d0f6bec60b4c841a9cd985e369d87d4b9c5c886747a650
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:09.760" endtime="20241001 11:10:11.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:11.979" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=a8c65b65f21b65fb13d0f6bec60b4c841a9cd985e369d87d4b9c5c886747a650
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:11.979" endtime="20241001 11:10:11.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:11.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:11.979" endtime="20241001 11:10:11.980"/>
</kw>
<status status="PASS" starttime="20241001 11:10:09.760" endtime="20241001 11:10:11.980"/>
</kw>
<msg timestamp="20241001 11:10:11.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:09.759" endtime="20241001 11:10:11.980"/>
</kw>
<msg timestamp="20241001 11:10:11.980" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=a8c65b65f21b65fb13d0f6bec60b4c841a9cd985e369d87d4b9c5c886747a650
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:09.759" endtime="20241001 11:10:11.980"/>
</kw>
<status status="PASS" starttime="20241001 11:10:07.614" endtime="20241001 11:10:11.981"/>
</branch>
<status status="PASS" starttime="20241001 11:10:07.614" endtime="20241001 11:10:11.981"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:10:11.981" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:10:11.981" endtime="20241001 11:10:11.981"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:10:11.982" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:10:11.981" endtime="20241001 11:10:11.982"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:10:11.982" level="INFO">${secret} = ['a8c65b65f21b65fb13d0f6bec60b4c841a9cd985e369d87d4b9c5c886747a650']</msg>
<status status="PASS" starttime="20241001 11:10:11.982" endtime="20241001 11:10:11.982"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:10:11.983" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:11.982" endtime="20241001 11:10:11.983"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:10:11.984" level="INFO">${secret} = a8c65b65f21b65fb13d0f6bec60b4c841a9cd985e369d87d4b9c5c886747a650</msg>
<status status="PASS" starttime="20241001 11:10:11.983" endtime="20241001 11:10:11.984"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:11.987" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:12.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:12.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:11.985" endtime="20241001 11:10:12.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:12.372" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:12.371" endtime="20241001 11:10:12.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:12.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:12.372" endtime="20241001 11:10:12.372"/>
</kw>
<status status="PASS" starttime="20241001 11:10:11.985" endtime="20241001 11:10:12.372"/>
</kw>
<msg timestamp="20241001 11:10:12.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:11.985" endtime="20241001 11:10:12.373"/>
</kw>
<status status="PASS" starttime="20241001 11:10:11.984" endtime="20241001 11:10:12.373"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:12.376" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:12.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:12.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:12.374" endtime="20241001 11:10:12.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:12.793" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:12.792" endtime="20241001 11:10:12.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:12.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:12.793" endtime="20241001 11:10:12.793"/>
</kw>
<status status="PASS" starttime="20241001 11:10:12.374" endtime="20241001 11:10:12.793"/>
</kw>
<msg timestamp="20241001 11:10:12.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:12.373" endtime="20241001 11:10:12.793"/>
</kw>
<status status="PASS" starttime="20241001 11:10:12.373" endtime="20241001 11:10:12.794"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:12.797" level="INFO">Running command 'aws configure set aws_secret_access_key a8c65b65f21b65fb13d0f6bec60b4c841a9cd985e369d87d4b9c5c886747a650 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:13.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:13.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:12.795" endtime="20241001 11:10:13.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:13.178" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:13.178" endtime="20241001 11:10:13.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:13.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:13.179" endtime="20241001 11:10:13.179"/>
</kw>
<status status="PASS" starttime="20241001 11:10:12.795" endtime="20241001 11:10:13.179"/>
</kw>
<msg timestamp="20241001 11:10:13.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:12.794" endtime="20241001 11:10:13.179"/>
</kw>
<status status="PASS" starttime="20241001 11:10:12.794" endtime="20241001 11:10:13.179"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:13.183" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:13.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:13.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:13.180" endtime="20241001 11:10:13.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:13.580" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:13.580" endtime="20241001 11:10:13.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:13.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:13.581" endtime="20241001 11:10:13.581"/>
</kw>
<status status="PASS" starttime="20241001 11:10:13.180" endtime="20241001 11:10:13.581"/>
</kw>
<msg timestamp="20241001 11:10:13.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:13.180" endtime="20241001 11:10:13.581"/>
</kw>
<status status="PASS" starttime="20241001 11:10:13.179" endtime="20241001 11:10:13.581"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:13.585" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:13.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:13.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:13.583" endtime="20241001 11:10:13.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:13.977" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:13.976" endtime="20241001 11:10:13.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:13.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:13.977" endtime="20241001 11:10:13.977"/>
</kw>
<status status="PASS" starttime="20241001 11:10:13.582" endtime="20241001 11:10:13.977"/>
</kw>
<msg timestamp="20241001 11:10:13.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:13.582" endtime="20241001 11:10:13.978"/>
</kw>
<status status="PASS" starttime="20241001 11:10:13.582" endtime="20241001 11:10:13.978"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.362" endtime="20241001 11:10:13.978"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.362" endtime="20241001 11:10:13.978"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:10:13.978" endtime="20241001 11:10:13.978"/>
</kw>
<status status="PASS" starttime="20241001 11:10:05.299" endtime="20241001 11:10:13.978"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:13.982" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:14.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:14.509" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:10:13.979" endtime="20241001 11:10:14.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:14.510" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:10:14 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:10:14.509" endtime="20241001 11:10:14.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:14.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:14.510" endtime="20241001 11:10:14.511"/>
</kw>
<msg timestamp="20241001 11:10:14.511" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:10:13.979" endtime="20241001 11:10:14.511"/>
</kw>
<msg timestamp="20241001 11:10:14.511" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:10:13.978" endtime="20241001 11:10:14.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:14.511" endtime="20241001 11:10:14.512"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:14.514" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:14.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:14.519" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:10:14.512" endtime="20241001 11:10:14.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:14.519" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:10:14.519" endtime="20241001 11:10:14.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:14.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:14.520" endtime="20241001 11:10:14.520"/>
</kw>
<msg timestamp="20241001 11:10:14.520" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:10:14.512" endtime="20241001 11:10:14.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:14.520" endtime="20241001 11:10:14.521"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:14.523" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:14.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:14.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:14.521" endtime="20241001 11:10:14.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:14.528" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:14.527" endtime="20241001 11:10:14.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:14.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:14.528" endtime="20241001 11:10:14.528"/>
</kw>
<status status="PASS" starttime="20241001 11:10:14.521" endtime="20241001 11:10:14.528"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:05.298" endtime="20241001 11:10:14.529"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:09:51.995" endtime="20241001 11:10:14.530"/>
</suite>
<suite id="s1-s13" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-generate-old2" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:10:15.325" endtime="20241001 11:10:15.325"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:15.328" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:15.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:15.332" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:10:15.326" endtime="20241001 11:10:15.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:15.333" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:10:15.332" endtime="20241001 11:10:15.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:15.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:15.333" endtime="20241001 11:10:15.333"/>
</kw>
<status status="PASS" starttime="20241001 11:10:15.326" endtime="20241001 11:10:15.334"/>
</kw>
<msg timestamp="20241001 11:10:15.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:15.325" endtime="20241001 11:10:15.334"/>
</kw>
<msg timestamp="20241001 11:10:15.334" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:10:15.325" endtime="20241001 11:10:15.334"/>
</kw>
<msg timestamp="20241001 11:10:15.334" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:15.325" endtime="20241001 11:10:15.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:10:15.334" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:15.334" endtime="20241001 11:10:15.334"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:15.338" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:15.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:15.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:15.336" endtime="20241001 11:10:15.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:15.384" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:15.384" endtime="20241001 11:10:15.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:15.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:15.385" endtime="20241001 11:10:15.385"/>
</kw>
<status status="PASS" starttime="20241001 11:10:15.336" endtime="20241001 11:10:15.385"/>
</kw>
<msg timestamp="20241001 11:10:15.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:15.335" endtime="20241001 11:10:15.385"/>
</kw>
<status status="PASS" starttime="20241001 11:10:15.335" endtime="20241001 11:10:15.385"/>
</kw>
<status status="PASS" starttime="20241001 11:10:15.335" endtime="20241001 11:10:15.385"/>
</kw>
<status status="PASS" starttime="20241001 11:10:15.324" endtime="20241001 11:10:15.386"/>
</kw>
<status status="PASS" starttime="20241001 11:10:15.324" endtime="20241001 11:10:15.386"/>
</kw>
<test id="s1-s13-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:15.390" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:18.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:18.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:15.388" endtime="20241001 11:10:18.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:18.170" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:18.170" endtime="20241001 11:10:18.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:18.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:18.171" endtime="20241001 11:10:18.171"/>
</kw>
<status status="PASS" starttime="20241001 11:10:15.387" endtime="20241001 11:10:18.171"/>
</kw>
<msg timestamp="20241001 11:10:18.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:15.387" endtime="20241001 11:10:18.171"/>
</kw>
<msg timestamp="20241001 11:10:18.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:15.386" endtime="20241001 11:10:18.171"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:18.172" endtime="20241001 11:10:18.172"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:18.176" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:20.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:20.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:18.173" endtime="20241001 11:10:20.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:20.928" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:20.927" endtime="20241001 11:10:20.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:20.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:20.928" endtime="20241001 11:10:20.928"/>
</kw>
<status status="PASS" starttime="20241001 11:10:18.173" endtime="20241001 11:10:20.929"/>
</kw>
<msg timestamp="20241001 11:10:20.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:18.173" endtime="20241001 11:10:20.929"/>
</kw>
<msg timestamp="20241001 11:10:20.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:18.172" endtime="20241001 11:10:20.929"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:20.929" endtime="20241001 11:10:20.930"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:15.386" endtime="20241001 11:10:20.930"/>
</test>
<test id="s1-s13-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:20.936" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:10:20.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:20.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:20.933" endtime="20241001 11:10:20.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:20.940" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:20.939" endtime="20241001 11:10:20.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:20.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:20.940" endtime="20241001 11:10:20.941"/>
</kw>
<status status="PASS" starttime="20241001 11:10:20.933" endtime="20241001 11:10:20.941"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:20.945" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:25.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:25.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:20.942" endtime="20241001 11:10:25.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:25.430" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:25.430" endtime="20241001 11:10:25.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:25.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:25.430" endtime="20241001 11:10:25.431"/>
</kw>
<status status="PASS" starttime="20241001 11:10:20.942" endtime="20241001 11:10:25.431"/>
</kw>
<msg timestamp="20241001 11:10:25.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:20.941" endtime="20241001 11:10:25.431"/>
</kw>
<msg timestamp="20241001 11:10:25.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:20.941" endtime="20241001 11:10:25.431"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:25.431" endtime="20241001 11:10:25.432"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:25.434" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:25.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:25.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:25.432" endtime="20241001 11:10:25.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:25.439" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:25.439" endtime="20241001 11:10:25.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:25.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:25.439" endtime="20241001 11:10:25.440"/>
</kw>
<status status="PASS" starttime="20241001 11:10:25.432" endtime="20241001 11:10:25.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:20.932" endtime="20241001 11:10:25.440"/>
</test>
<test id="s1-s13-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:25.444" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:28.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:28.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:25.442" endtime="20241001 11:10:28.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:28.279" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:28.278" endtime="20241001 11:10:28.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:28.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:28.279" endtime="20241001 11:10:28.279"/>
</kw>
<status status="PASS" starttime="20241001 11:10:25.442" endtime="20241001 11:10:28.279"/>
</kw>
<msg timestamp="20241001 11:10:28.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:25.442" endtime="20241001 11:10:28.280"/>
</kw>
<msg timestamp="20241001 11:10:28.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:25.441" endtime="20241001 11:10:28.280"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:28.280" endtime="20241001 11:10:28.280"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:25.440" endtime="20241001 11:10:28.280"/>
</test>
<test id="s1-s13-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:28.285" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:10:28.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:28.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:28.282" endtime="20241001 11:10:28.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:28.288" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:28.287" endtime="20241001 11:10:28.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:28.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:28.288" endtime="20241001 11:10:28.289"/>
</kw>
<status status="PASS" starttime="20241001 11:10:28.282" endtime="20241001 11:10:28.289"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:28.292" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:32.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:32.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:28.290" endtime="20241001 11:10:32.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:32.686" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:32.685" endtime="20241001 11:10:32.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:32.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:32.686" endtime="20241001 11:10:32.686"/>
</kw>
<status status="PASS" starttime="20241001 11:10:28.290" endtime="20241001 11:10:32.686"/>
</kw>
<msg timestamp="20241001 11:10:32.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:28.289" endtime="20241001 11:10:32.687"/>
</kw>
<msg timestamp="20241001 11:10:32.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:28.289" endtime="20241001 11:10:32.687"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:32.687" endtime="20241001 11:10:32.687"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:32.690" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:32.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:32.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:32.688" endtime="20241001 11:10:32.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:32.695" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:32.694" endtime="20241001 11:10:32.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:32.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:32.695" endtime="20241001 11:10:32.695"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.687" endtime="20241001 11:10:32.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:28.281" endtime="20241001 11:10:32.696"/>
</test>
<test id="s1-s13-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:10:32.698" endtime="20241001 11:10:32.698"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:32.702" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:32.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:32.706" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:10:32.700" endtime="20241001 11:10:32.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:32.706" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:10:32.706" endtime="20241001 11:10:32.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:32.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:32.707" endtime="20241001 11:10:32.707"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.699" endtime="20241001 11:10:32.707"/>
</kw>
<msg timestamp="20241001 11:10:32.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:32.699" endtime="20241001 11:10:32.707"/>
</kw>
<msg timestamp="20241001 11:10:32.708" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:10:32.699" endtime="20241001 11:10:32.708"/>
</kw>
<msg timestamp="20241001 11:10:32.708" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:32.698" endtime="20241001 11:10:32.708"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:10:32.708" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:32.708" endtime="20241001 11:10:32.708"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:32.712" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:32.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:32.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:32.710" endtime="20241001 11:10:32.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:32.749" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:32.748" endtime="20241001 11:10:32.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:32.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:32.749" endtime="20241001 11:10:32.749"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.709" endtime="20241001 11:10:32.750"/>
</kw>
<msg timestamp="20241001 11:10:32.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:32.709" endtime="20241001 11:10:32.750"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.709" endtime="20241001 11:10:32.750"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.708" endtime="20241001 11:10:32.750"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.698" endtime="20241001 11:10:32.750"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.697" endtime="20241001 11:10:32.750"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:32.753" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:35.045" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:10:35.046" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:32.751" endtime="20241001 11:10:35.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:35.047" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:35.046" endtime="20241001 11:10:35.047"/>
</kw>
<msg timestamp="20241001 11:10:35.047" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:32.751" endtime="20241001 11:10:35.047"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:35.048" endtime="20241001 11:10:35.048"/>
</kw>
<msg timestamp="20241001 11:10:35.048" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:10:35.047" endtime="20241001 11:10:35.048"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:35.052" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:37.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:37.270" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:10:35.050" endtime="20241001 11:10:37.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:37.271" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:10:37.270" endtime="20241001 11:10:37.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:37.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:37.271" endtime="20241001 11:10:37.272"/>
</kw>
<status status="PASS" starttime="20241001 11:10:35.049" endtime="20241001 11:10:37.272"/>
</kw>
<msg timestamp="20241001 11:10:37.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:35.049" endtime="20241001 11:10:37.272"/>
</kw>
<status status="PASS" starttime="20241001 11:10:35.049" endtime="20241001 11:10:37.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:37.276" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:39.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:39.345" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0ed398208e3ac1953774f38f703c44e0a0b7bde1cc1b22d2b08d08e052e5b998
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:37.273" endtime="20241001 11:10:39.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:39.346" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0ed398208e3ac1953774f38f703c44e0a0b7bde1cc1b22d2b08d08e052e5b998
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:39.345" endtime="20241001 11:10:39.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:39.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:39.346" endtime="20241001 11:10:39.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:37.273" endtime="20241001 11:10:39.347"/>
</kw>
<msg timestamp="20241001 11:10:39.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:37.273" endtime="20241001 11:10:39.347"/>
</kw>
<msg timestamp="20241001 11:10:39.347" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=0ed398208e3ac1953774f38f703c44e0a0b7bde1cc1b22d2b08d08e052e5b998
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:37.272" endtime="20241001 11:10:39.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:35.048" endtime="20241001 11:10:39.347"/>
</branch>
<status status="PASS" starttime="20241001 11:10:35.048" endtime="20241001 11:10:39.347"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:10:39.348" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:10:39.347" endtime="20241001 11:10:39.348"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:10:39.349" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:10:39.348" endtime="20241001 11:10:39.349"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:10:39.349" level="INFO">${secret} = ['0ed398208e3ac1953774f38f703c44e0a0b7bde1cc1b22d2b08d08e052e5b998']</msg>
<status status="PASS" starttime="20241001 11:10:39.349" endtime="20241001 11:10:39.349"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:10:39.350" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:39.349" endtime="20241001 11:10:39.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:10:39.351" level="INFO">${secret} = 0ed398208e3ac1953774f38f703c44e0a0b7bde1cc1b22d2b08d08e052e5b998</msg>
<status status="PASS" starttime="20241001 11:10:39.350" endtime="20241001 11:10:39.351"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:39.354" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:39.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:39.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:39.352" endtime="20241001 11:10:39.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:39.741" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:39.740" endtime="20241001 11:10:39.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:39.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:39.741" endtime="20241001 11:10:39.741"/>
</kw>
<status status="PASS" starttime="20241001 11:10:39.352" endtime="20241001 11:10:39.742"/>
</kw>
<msg timestamp="20241001 11:10:39.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:39.352" endtime="20241001 11:10:39.742"/>
</kw>
<status status="PASS" starttime="20241001 11:10:39.351" endtime="20241001 11:10:39.742"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:39.745" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:40.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:40.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:39.743" endtime="20241001 11:10:40.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:40.150" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:40.149" endtime="20241001 11:10:40.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:40.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:40.150" endtime="20241001 11:10:40.151"/>
</kw>
<status status="PASS" starttime="20241001 11:10:39.743" endtime="20241001 11:10:40.151"/>
</kw>
<msg timestamp="20241001 11:10:40.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:39.742" endtime="20241001 11:10:40.151"/>
</kw>
<status status="PASS" starttime="20241001 11:10:39.742" endtime="20241001 11:10:40.151"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:40.154" level="INFO">Running command 'aws configure set aws_secret_access_key 0ed398208e3ac1953774f38f703c44e0a0b7bde1cc1b22d2b08d08e052e5b998 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:40.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:40.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:40.152" endtime="20241001 11:10:40.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:40.545" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:40.544" endtime="20241001 11:10:40.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:40.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:40.545" endtime="20241001 11:10:40.546"/>
</kw>
<status status="PASS" starttime="20241001 11:10:40.152" endtime="20241001 11:10:40.546"/>
</kw>
<msg timestamp="20241001 11:10:40.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:40.151" endtime="20241001 11:10:40.546"/>
</kw>
<status status="PASS" starttime="20241001 11:10:40.151" endtime="20241001 11:10:40.546"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:40.550" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:40.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:40.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:40.547" endtime="20241001 11:10:40.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:40.950" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:40.949" endtime="20241001 11:10:40.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:40.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:40.950" endtime="20241001 11:10:40.951"/>
</kw>
<status status="PASS" starttime="20241001 11:10:40.547" endtime="20241001 11:10:40.951"/>
</kw>
<msg timestamp="20241001 11:10:40.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:40.547" endtime="20241001 11:10:40.951"/>
</kw>
<status status="PASS" starttime="20241001 11:10:40.546" endtime="20241001 11:10:40.951"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:40.955" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:41.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:41.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:40.952" endtime="20241001 11:10:41.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:41.346" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:41.345" endtime="20241001 11:10:41.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:41.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:41.346" endtime="20241001 11:10:41.346"/>
</kw>
<status status="PASS" starttime="20241001 11:10:40.952" endtime="20241001 11:10:41.347"/>
</kw>
<msg timestamp="20241001 11:10:41.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:40.952" endtime="20241001 11:10:41.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:40.951" endtime="20241001 11:10:41.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.751" endtime="20241001 11:10:41.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.750" endtime="20241001 11:10:41.347"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:10:41.347" endtime="20241001 11:10:41.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:32.697" endtime="20241001 11:10:41.347"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:10:41.348" level="INFO">${randStr} = 1135078856</msg>
<status status="PASS" starttime="20241001 11:10:41.348" endtime="20241001 11:10:41.349"/>
</kw>
<msg timestamp="20241001 11:10:41.349" level="INFO">${random} = ozone-test-1135078856</msg>
<status status="PASS" starttime="20241001 11:10:41.348" endtime="20241001 11:10:41.349"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:41.353" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket-ozone-test-1135078856 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:42.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:42.002" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-1135078856"
}</msg>
<status status="PASS" starttime="20241001 11:10:41.351" endtime="20241001 11:10:42.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:42.003" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket-ozone-test-1135078856"
}</msg>
<status status="PASS" starttime="20241001 11:10:42.003" endtime="20241001 11:10:42.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:42.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:42.003" endtime="20241001 11:10:42.004"/>
</kw>
<status status="PASS" starttime="20241001 11:10:41.350" endtime="20241001 11:10:42.004"/>
</kw>
<msg timestamp="20241001 11:10:42.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:41.350" endtime="20241001 11:10:42.004"/>
</kw>
<msg timestamp="20241001 11:10:42.004" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-1135078856"
}</msg>
<status status="PASS" starttime="20241001 11:10:41.350" endtime="20241001 11:10:42.004"/>
</kw>
<msg timestamp="20241001 11:10:42.005" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket-ozone-test-1135078856"
}</msg>
<status status="PASS" starttime="20241001 11:10:41.349" endtime="20241001 11:10:42.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:42.005" endtime="20241001 11:10:42.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:42.005" endtime="20241001 11:10:42.005"/>
</kw>
<msg timestamp="20241001 11:10:42.006" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20241001 11:10:41.349" endtime="20241001 11:10:42.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241001 11:10:42.006" endtime="20241001 11:10:42.006"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:32.696" endtime="20241001 11:10:42.006"/>
</test>
<test id="s1-s13-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:42.010" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:10:42.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:42.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:42.008" endtime="20241001 11:10:42.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:42.013" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:42.012" endtime="20241001 11:10:42.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:42.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:42.013" endtime="20241001 11:10:42.013"/>
</kw>
<status status="PASS" starttime="20241001 11:10:42.007" endtime="20241001 11:10:42.013"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:42.016" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:42.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:42.840" level="INFO">${output} = {
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\""
}</msg>
<status status="PASS" starttime="20241001 11:10:42.015" endtime="20241001 11:10:42.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:42.841" level="INFO">{
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\""
}</msg>
<status status="PASS" starttime="20241001 11:10:42.840" endtime="20241001 11:10:42.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:42.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:42.842" endtime="20241001 11:10:42.842"/>
</kw>
<msg timestamp="20241001 11:10:42.842" level="INFO">${output} = {
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\""
}</msg>
<status status="PASS" starttime="20241001 11:10:42.014" endtime="20241001 11:10:42.842"/>
</kw>
<msg timestamp="20241001 11:10:42.842" level="INFO">${output} = {
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\""
}</msg>
<status status="PASS" starttime="20241001 11:10:42.014" endtime="20241001 11:10:42.842"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:42.843" endtime="20241001 11:10:42.843"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:42.846" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:42.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:42.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:42.843" endtime="20241001 11:10:42.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:42.850" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:42.850" endtime="20241001 11:10:42.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:42.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:42.851" endtime="20241001 11:10:42.851"/>
</kw>
<status status="PASS" starttime="20241001 11:10:42.843" endtime="20241001 11:10:42.851"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:42.007" endtime="20241001 11:10:42.851"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241001 11:10:15.255" endtime="20241001 11:10:42.853"/>
</suite>
<suite id="s1-s14" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-validate-old2" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:10:43.603" endtime="20241001 11:10:43.604"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:43.607" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:43.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:43.611" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:10:43.605" endtime="20241001 11:10:43.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:43.612" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:10:43.611" endtime="20241001 11:10:43.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:43.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:43.612" endtime="20241001 11:10:43.612"/>
</kw>
<status status="PASS" starttime="20241001 11:10:43.604" endtime="20241001 11:10:43.612"/>
</kw>
<msg timestamp="20241001 11:10:43.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:43.604" endtime="20241001 11:10:43.613"/>
</kw>
<msg timestamp="20241001 11:10:43.613" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:10:43.604" endtime="20241001 11:10:43.613"/>
</kw>
<msg timestamp="20241001 11:10:43.613" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:43.604" endtime="20241001 11:10:43.613"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:10:43.613" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:43.613" endtime="20241001 11:10:43.613"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:43.618" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:43.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:43.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:43.615" endtime="20241001 11:10:43.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:43.642" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:43.642" endtime="20241001 11:10:43.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:43.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:43.642" endtime="20241001 11:10:43.642"/>
</kw>
<status status="PASS" starttime="20241001 11:10:43.615" endtime="20241001 11:10:43.643"/>
</kw>
<msg timestamp="20241001 11:10:43.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:43.614" endtime="20241001 11:10:43.643"/>
</kw>
<status status="PASS" starttime="20241001 11:10:43.614" endtime="20241001 11:10:43.643"/>
</kw>
<status status="PASS" starttime="20241001 11:10:43.614" endtime="20241001 11:10:43.643"/>
</kw>
<status status="PASS" starttime="20241001 11:10:43.603" endtime="20241001 11:10:43.643"/>
</kw>
<status status="PASS" starttime="20241001 11:10:43.603" endtime="20241001 11:10:43.643"/>
</kw>
<test id="s1-s14-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:10:43.644" level="INFO">${random} = 88349</msg>
<status status="PASS" starttime="20241001 11:10:43.644" endtime="20241001 11:10:43.644"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:43.648" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-88349 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:47.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:47.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:43.646" endtime="20241001 11:10:47.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:47.884" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:47.883" endtime="20241001 11:10:47.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:47.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:47.884" endtime="20241001 11:10:47.885"/>
</kw>
<status status="PASS" starttime="20241001 11:10:43.645" endtime="20241001 11:10:47.885"/>
</kw>
<msg timestamp="20241001 11:10:47.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:43.645" endtime="20241001 11:10:47.885"/>
</kw>
<msg timestamp="20241001 11:10:47.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:43.644" endtime="20241001 11:10:47.885"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:47.885" endtime="20241001 11:10:47.886"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:47.889" level="INFO">Running command 'cat /tmp/key-88349 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:47.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:47.893" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:10:47.886" endtime="20241001 11:10:47.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:47.894" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:10:47.893" endtime="20241001 11:10:47.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:47.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:47.894" endtime="20241001 11:10:47.894"/>
</kw>
<msg timestamp="20241001 11:10:47.894" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:10:47.886" endtime="20241001 11:10:47.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:47.895" endtime="20241001 11:10:47.895"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:47.897" level="INFO">Running command 'rm /tmp/key-88349 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:47.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:47.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:47.895" endtime="20241001 11:10:47.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:47.902" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:47.901" endtime="20241001 11:10:47.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:47.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:47.902" endtime="20241001 11:10:47.903"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.895" endtime="20241001 11:10:47.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:43.643" endtime="20241001 11:10:47.903"/>
</test>
<test id="s1-s14-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:10:47.905" endtime="20241001 11:10:47.906"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:47.909" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:47.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:47.913" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:10:47.907" endtime="20241001 11:10:47.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:47.914" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:10:47.913" endtime="20241001 11:10:47.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:47.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:47.914" endtime="20241001 11:10:47.914"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.907" endtime="20241001 11:10:47.914"/>
</kw>
<msg timestamp="20241001 11:10:47.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:47.906" endtime="20241001 11:10:47.915"/>
</kw>
<msg timestamp="20241001 11:10:47.915" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:10:47.906" endtime="20241001 11:10:47.915"/>
</kw>
<msg timestamp="20241001 11:10:47.915" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:47.906" endtime="20241001 11:10:47.915"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:10:47.915" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:47.915" endtime="20241001 11:10:47.915"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:47.919" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:47.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:47.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:47.917" endtime="20241001 11:10:47.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:47.940" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:47.939" endtime="20241001 11:10:47.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:47.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:47.940" endtime="20241001 11:10:47.940"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.917" endtime="20241001 11:10:47.940"/>
</kw>
<msg timestamp="20241001 11:10:47.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:47.916" endtime="20241001 11:10:47.941"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.916" endtime="20241001 11:10:47.941"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.916" endtime="20241001 11:10:47.941"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.905" endtime="20241001 11:10:47.941"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.905" endtime="20241001 11:10:47.941"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:47.944" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:50.060" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:10:50.060" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:47.942" endtime="20241001 11:10:50.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:50.061" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:50.061" endtime="20241001 11:10:50.062"/>
</kw>
<msg timestamp="20241001 11:10:50.062" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:47.942" endtime="20241001 11:10:50.062"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:50.062" endtime="20241001 11:10:50.063"/>
</kw>
<msg timestamp="20241001 11:10:50.063" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:10:50.062" endtime="20241001 11:10:50.063"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:50.066" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:52.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:52.174" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:10:50.064" endtime="20241001 11:10:52.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:52.176" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:10:52.175" endtime="20241001 11:10:52.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:52.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:52.176" endtime="20241001 11:10:52.176"/>
</kw>
<status status="PASS" starttime="20241001 11:10:50.064" endtime="20241001 11:10:52.177"/>
</kw>
<msg timestamp="20241001 11:10:52.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:50.064" endtime="20241001 11:10:52.177"/>
</kw>
<status status="PASS" starttime="20241001 11:10:50.063" endtime="20241001 11:10:52.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:52.181" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:54.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:54.315" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b863ad6475729965379d963d0c8c6d3419fc1711ad04b5bb7b25e4c6519bc8e1
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:52.178" endtime="20241001 11:10:54.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:54.316" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b863ad6475729965379d963d0c8c6d3419fc1711ad04b5bb7b25e4c6519bc8e1
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:54.316" endtime="20241001 11:10:54.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:54.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:54.316" endtime="20241001 11:10:54.317"/>
</kw>
<status status="PASS" starttime="20241001 11:10:52.178" endtime="20241001 11:10:54.317"/>
</kw>
<msg timestamp="20241001 11:10:54.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:52.178" endtime="20241001 11:10:54.317"/>
</kw>
<msg timestamp="20241001 11:10:54.317" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b863ad6475729965379d963d0c8c6d3419fc1711ad04b5bb7b25e4c6519bc8e1
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:10:52.177" endtime="20241001 11:10:54.317"/>
</kw>
<status status="PASS" starttime="20241001 11:10:50.063" endtime="20241001 11:10:54.317"/>
</branch>
<status status="PASS" starttime="20241001 11:10:50.063" endtime="20241001 11:10:54.318"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:10:54.318" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:10:54.318" endtime="20241001 11:10:54.318"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:10:54.319" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:10:54.318" endtime="20241001 11:10:54.319"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:10:54.319" level="INFO">${secret} = ['b863ad6475729965379d963d0c8c6d3419fc1711ad04b5bb7b25e4c6519bc8e1']</msg>
<status status="PASS" starttime="20241001 11:10:54.319" endtime="20241001 11:10:54.319"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:10:54.321" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:54.319" endtime="20241001 11:10:54.321"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:10:54.321" level="INFO">${secret} = b863ad6475729965379d963d0c8c6d3419fc1711ad04b5bb7b25e4c6519bc8e1</msg>
<status status="PASS" starttime="20241001 11:10:54.321" endtime="20241001 11:10:54.322"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:54.325" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:54.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:54.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:54.323" endtime="20241001 11:10:54.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:54.724" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:54.723" endtime="20241001 11:10:54.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:54.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:54.724" endtime="20241001 11:10:54.724"/>
</kw>
<status status="PASS" starttime="20241001 11:10:54.322" endtime="20241001 11:10:54.724"/>
</kw>
<msg timestamp="20241001 11:10:54.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:54.322" endtime="20241001 11:10:54.725"/>
</kw>
<status status="PASS" starttime="20241001 11:10:54.322" endtime="20241001 11:10:54.725"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:54.728" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:55.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:55.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:54.726" endtime="20241001 11:10:55.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:55.121" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:55.120" endtime="20241001 11:10:55.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:55.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:55.121" endtime="20241001 11:10:55.122"/>
</kw>
<status status="PASS" starttime="20241001 11:10:54.725" endtime="20241001 11:10:55.122"/>
</kw>
<msg timestamp="20241001 11:10:55.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:54.725" endtime="20241001 11:10:55.122"/>
</kw>
<status status="PASS" starttime="20241001 11:10:54.725" endtime="20241001 11:10:55.122"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:55.126" level="INFO">Running command 'aws configure set aws_secret_access_key b863ad6475729965379d963d0c8c6d3419fc1711ad04b5bb7b25e4c6519bc8e1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:55.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:55.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:55.123" endtime="20241001 11:10:55.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:55.522" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:55.521" endtime="20241001 11:10:55.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:55.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:55.522" endtime="20241001 11:10:55.522"/>
</kw>
<status status="PASS" starttime="20241001 11:10:55.123" endtime="20241001 11:10:55.522"/>
</kw>
<msg timestamp="20241001 11:10:55.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:55.123" endtime="20241001 11:10:55.523"/>
</kw>
<status status="PASS" starttime="20241001 11:10:55.122" endtime="20241001 11:10:55.523"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:55.526" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:55.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:55.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:55.524" endtime="20241001 11:10:55.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:55.943" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:55.943" endtime="20241001 11:10:55.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:55.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:55.943" endtime="20241001 11:10:55.944"/>
</kw>
<status status="PASS" starttime="20241001 11:10:55.523" endtime="20241001 11:10:55.944"/>
</kw>
<msg timestamp="20241001 11:10:55.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:55.523" endtime="20241001 11:10:55.944"/>
</kw>
<status status="PASS" starttime="20241001 11:10:55.523" endtime="20241001 11:10:55.944"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:55.948" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:56.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:56.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:55.946" endtime="20241001 11:10:56.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:56.346" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:56.345" endtime="20241001 11:10:56.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:56.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:56.346" endtime="20241001 11:10:56.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:55.945" endtime="20241001 11:10:56.347"/>
</kw>
<msg timestamp="20241001 11:10:56.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:55.945" endtime="20241001 11:10:56.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:55.944" endtime="20241001 11:10:56.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.941" endtime="20241001 11:10:56.347"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.941" endtime="20241001 11:10:56.347"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:10:56.347" endtime="20241001 11:10:56.348"/>
</kw>
<status status="PASS" starttime="20241001 11:10:47.904" endtime="20241001 11:10:56.348"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:56.351" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:56.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:56.906" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:32 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:10:56.349" endtime="20241001 11:10:56.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:56.908" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:32 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:10:56 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:10:56.907" endtime="20241001 11:10:56.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:56.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:56.908" endtime="20241001 11:10:56.909"/>
</kw>
<msg timestamp="20241001 11:10:56.909" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:32 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:10:56.348" endtime="20241001 11:10:56.909"/>
</kw>
<msg timestamp="20241001 11:10:56.909" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:32 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20241001 11:10:56.348" endtime="20241001 11:10:56.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:56.910" endtime="20241001 11:10:56.910"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:56.913" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:56.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:56.918" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:10:56.911" endtime="20241001 11:10:56.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:56.918" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:10:56.918" endtime="20241001 11:10:56.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:56.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:56.919" endtime="20241001 11:10:56.919"/>
</kw>
<msg timestamp="20241001 11:10:56.919" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:10:56.910" endtime="20241001 11:10:56.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:56.919" endtime="20241001 11:10:56.920"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:56.922" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:56.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:56.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:56.920" endtime="20241001 11:10:56.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:56.927" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:56.926" endtime="20241001 11:10:56.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:56.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:56.927" endtime="20241001 11:10:56.927"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.920" endtime="20241001 11:10:56.928"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:47.904" endtime="20241001 11:10:56.928"/>
</test>
<test id="s1-s14-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:10:56.930" endtime="20241001 11:10:56.930"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:56.934" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:56.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:56.938" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:10:56.932" endtime="20241001 11:10:56.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:56.939" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:10:56.938" endtime="20241001 11:10:56.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:56.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:56.939" endtime="20241001 11:10:56.940"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.932" endtime="20241001 11:10:56.940"/>
</kw>
<msg timestamp="20241001 11:10:56.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:56.931" endtime="20241001 11:10:56.940"/>
</kw>
<msg timestamp="20241001 11:10:56.940" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:10:56.931" endtime="20241001 11:10:56.940"/>
</kw>
<msg timestamp="20241001 11:10:56.940" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:56.931" endtime="20241001 11:10:56.940"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:10:56.941" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:10:56.940" endtime="20241001 11:10:56.941"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:56.944" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:56.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:10:56.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:10:56.942" endtime="20241001 11:10:56.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:56.966" level="INFO"/>
<status status="PASS" starttime="20241001 11:10:56.966" endtime="20241001 11:10:56.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:10:56.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:10:56.966" endtime="20241001 11:10:56.967"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.942" endtime="20241001 11:10:56.967"/>
</kw>
<msg timestamp="20241001 11:10:56.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:56.942" endtime="20241001 11:10:56.967"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.941" endtime="20241001 11:10:56.967"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.941" endtime="20241001 11:10:56.967"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.930" endtime="20241001 11:10:56.967"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.930" endtime="20241001 11:10:56.967"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:56.971" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:10:59.175" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:10:59.175" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:56.969" endtime="20241001 11:10:59.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:10:59.176" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:59.175" endtime="20241001 11:10:59.176"/>
</kw>
<msg timestamp="20241001 11:10:59.176" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:10:56.968" endtime="20241001 11:10:59.177"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:10:59.177" endtime="20241001 11:10:59.178"/>
</kw>
<msg timestamp="20241001 11:10:59.178" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:10:59.177" endtime="20241001 11:10:59.178"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:10:59.182" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:01.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:01.329" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:10:59.180" endtime="20241001 11:11:01.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:01.331" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:11:01.330" endtime="20241001 11:11:01.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:01.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:01.331" endtime="20241001 11:11:01.331"/>
</kw>
<status status="PASS" starttime="20241001 11:10:59.179" endtime="20241001 11:11:01.331"/>
</kw>
<msg timestamp="20241001 11:11:01.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:10:59.179" endtime="20241001 11:11:01.332"/>
</kw>
<status status="PASS" starttime="20241001 11:10:59.178" endtime="20241001 11:11:01.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:01.335" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:03.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:03.588" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8390d9760ad50f1c7a5c29ebec8ca47d864bcabf0f80784ffe69f5f9b741a7ad
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:11:01.333" endtime="20241001 11:11:03.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:03.590" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8390d9760ad50f1c7a5c29ebec8ca47d864bcabf0f80784ffe69f5f9b741a7ad
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:11:03.589" endtime="20241001 11:11:03.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:03.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:03.590" endtime="20241001 11:11:03.590"/>
</kw>
<status status="PASS" starttime="20241001 11:11:01.333" endtime="20241001 11:11:03.590"/>
</kw>
<msg timestamp="20241001 11:11:03.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:01.332" endtime="20241001 11:11:03.591"/>
</kw>
<msg timestamp="20241001 11:11:03.591" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8390d9760ad50f1c7a5c29ebec8ca47d864bcabf0f80784ffe69f5f9b741a7ad
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:11:01.332" endtime="20241001 11:11:03.591"/>
</kw>
<status status="PASS" starttime="20241001 11:10:59.178" endtime="20241001 11:11:03.591"/>
</branch>
<status status="PASS" starttime="20241001 11:10:59.178" endtime="20241001 11:11:03.591"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:11:03.592" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:11:03.591" endtime="20241001 11:11:03.592"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:11:03.592" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:11:03.592" endtime="20241001 11:11:03.592"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:11:03.593" level="INFO">${secret} = ['8390d9760ad50f1c7a5c29ebec8ca47d864bcabf0f80784ffe69f5f9b741a7ad']</msg>
<status status="PASS" starttime="20241001 11:11:03.592" endtime="20241001 11:11:03.593"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:11:03.594" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:11:03.593" endtime="20241001 11:11:03.594"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:11:03.595" level="INFO">${secret} = 8390d9760ad50f1c7a5c29ebec8ca47d864bcabf0f80784ffe69f5f9b741a7ad</msg>
<status status="PASS" starttime="20241001 11:11:03.594" endtime="20241001 11:11:03.595"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:03.598" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:04.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:04.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:03.596" endtime="20241001 11:11:04.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:04.018" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:04.017" endtime="20241001 11:11:04.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:04.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:04.018" endtime="20241001 11:11:04.018"/>
</kw>
<status status="PASS" starttime="20241001 11:11:03.596" endtime="20241001 11:11:04.019"/>
</kw>
<msg timestamp="20241001 11:11:04.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:03.595" endtime="20241001 11:11:04.019"/>
</kw>
<status status="PASS" starttime="20241001 11:11:03.595" endtime="20241001 11:11:04.019"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:04.022" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:04.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:04.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:04.020" endtime="20241001 11:11:04.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:04.404" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:04.403" endtime="20241001 11:11:04.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:04.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:04.404" endtime="20241001 11:11:04.404"/>
</kw>
<status status="PASS" starttime="20241001 11:11:04.020" endtime="20241001 11:11:04.405"/>
</kw>
<msg timestamp="20241001 11:11:04.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:04.020" endtime="20241001 11:11:04.405"/>
</kw>
<status status="PASS" starttime="20241001 11:11:04.019" endtime="20241001 11:11:04.405"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:04.408" level="INFO">Running command 'aws configure set aws_secret_access_key 8390d9760ad50f1c7a5c29ebec8ca47d864bcabf0f80784ffe69f5f9b741a7ad 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:04.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:04.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:04.406" endtime="20241001 11:11:04.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:04.817" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:04.816" endtime="20241001 11:11:04.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:04.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:04.817" endtime="20241001 11:11:04.817"/>
</kw>
<status status="PASS" starttime="20241001 11:11:04.406" endtime="20241001 11:11:04.817"/>
</kw>
<msg timestamp="20241001 11:11:04.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:04.406" endtime="20241001 11:11:04.818"/>
</kw>
<status status="PASS" starttime="20241001 11:11:04.405" endtime="20241001 11:11:04.818"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:04.821" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:05.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:05.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:04.819" endtime="20241001 11:11:05.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:05.217" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:05.216" endtime="20241001 11:11:05.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:05.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:05.217" endtime="20241001 11:11:05.218"/>
</kw>
<status status="PASS" starttime="20241001 11:11:04.818" endtime="20241001 11:11:05.218"/>
</kw>
<msg timestamp="20241001 11:11:05.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:04.818" endtime="20241001 11:11:05.218"/>
</kw>
<status status="PASS" starttime="20241001 11:11:04.818" endtime="20241001 11:11:05.218"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:05.222" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:05.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:05.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:05.219" endtime="20241001 11:11:05.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:05.615" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:05.615" endtime="20241001 11:11:05.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:05.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:05.616" endtime="20241001 11:11:05.616"/>
</kw>
<status status="PASS" starttime="20241001 11:11:05.219" endtime="20241001 11:11:05.616"/>
</kw>
<msg timestamp="20241001 11:11:05.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:05.219" endtime="20241001 11:11:05.616"/>
</kw>
<status status="PASS" starttime="20241001 11:11:05.218" endtime="20241001 11:11:05.616"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.968" endtime="20241001 11:11:05.617"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.968" endtime="20241001 11:11:05.617"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:11:05.617" endtime="20241001 11:11:05.617"/>
</kw>
<status status="PASS" starttime="20241001 11:10:56.929" endtime="20241001 11:11:05.617"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:05.620" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:06.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:06.130" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:42 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:11:05.618" endtime="20241001 11:11:06.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:06.131" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:42 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:11:06 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:11:06.131" endtime="20241001 11:11:06.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:06.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:06.131" endtime="20241001 11:11:06.132"/>
</kw>
<msg timestamp="20241001 11:11:06.132" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:42 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:11:05.618" endtime="20241001 11:11:06.132"/>
</kw>
<msg timestamp="20241001 11:11:06.132" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:42 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:11:05.617" endtime="20241001 11:11:06.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:11:06.132" endtime="20241001 11:11:06.133"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:06.136" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:06.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:06.139" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:11:06.133" endtime="20241001 11:11:06.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:06.140" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:11:06.140" endtime="20241001 11:11:06.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:06.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:06.140" endtime="20241001 11:11:06.141"/>
</kw>
<msg timestamp="20241001 11:11:06.141" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:11:06.133" endtime="20241001 11:11:06.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:11:06.141" endtime="20241001 11:11:06.141"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:06.144" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:06.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:06.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:06.142" endtime="20241001 11:11:06.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:06.148" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:06.148" endtime="20241001 11:11:06.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:06.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:06.149" endtime="20241001 11:11:06.149"/>
</kw>
<status status="PASS" starttime="20241001 11:11:06.142" endtime="20241001 11:11:06.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:10:56.928" endtime="20241001 11:11:06.149"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:10:43.534" endtime="20241001 11:11:06.150"/>
</suite>
<suite id="s1-s15" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:11:06.945" endtime="20241001 11:11:06.945"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:06.949" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:06.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:06.953" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:11:06.946" endtime="20241001 11:11:06.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:06.953" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:11:06.953" endtime="20241001 11:11:06.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:06.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:06.953" endtime="20241001 11:11:06.954"/>
</kw>
<status status="PASS" starttime="20241001 11:11:06.946" endtime="20241001 11:11:06.954"/>
</kw>
<msg timestamp="20241001 11:11:06.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:06.946" endtime="20241001 11:11:06.954"/>
</kw>
<msg timestamp="20241001 11:11:06.954" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:11:06.946" endtime="20241001 11:11:06.954"/>
</kw>
<msg timestamp="20241001 11:11:06.954" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:11:06.945" endtime="20241001 11:11:06.955"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:11:06.955" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:11:06.955" endtime="20241001 11:11:06.955"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:06.958" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:06.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:06.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:06.956" endtime="20241001 11:11:06.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:06.975" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:06.974" endtime="20241001 11:11:06.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:06.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:06.975" endtime="20241001 11:11:06.975"/>
</kw>
<status status="PASS" starttime="20241001 11:11:06.956" endtime="20241001 11:11:06.975"/>
</kw>
<msg timestamp="20241001 11:11:06.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:06.956" endtime="20241001 11:11:06.975"/>
</kw>
<status status="PASS" starttime="20241001 11:11:06.955" endtime="20241001 11:11:06.975"/>
</kw>
<status status="PASS" starttime="20241001 11:11:06.955" endtime="20241001 11:11:06.976"/>
</kw>
<status status="PASS" starttime="20241001 11:11:06.945" endtime="20241001 11:11:06.976"/>
</kw>
<status status="PASS" starttime="20241001 11:11:06.944" endtime="20241001 11:11:06.976"/>
</kw>
<test id="s1-s15-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:06.979" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:11:06.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:06.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:06.977" endtime="20241001 11:11:06.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:06.982" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:06.981" endtime="20241001 11:11:06.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:06.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:06.982" endtime="20241001 11:11:06.982"/>
</kw>
<status status="PASS" starttime="20241001 11:11:06.977" endtime="20241001 11:11:06.983"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:06.986" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:11.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:11.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:06.984" endtime="20241001 11:11:11.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:11.190" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:11.189" endtime="20241001 11:11:11.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:11.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:11.190" endtime="20241001 11:11:11.191"/>
</kw>
<status status="PASS" starttime="20241001 11:11:06.983" endtime="20241001 11:11:11.191"/>
</kw>
<msg timestamp="20241001 11:11:11.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:06.983" endtime="20241001 11:11:11.191"/>
</kw>
<msg timestamp="20241001 11:11:11.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:06.983" endtime="20241001 11:11:11.191"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:11:11.191" endtime="20241001 11:11:11.192"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:11.194" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:11.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:11.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:11.192" endtime="20241001 11:11:11.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:11.199" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:11.199" endtime="20241001 11:11:11.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:11.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:11.199" endtime="20241001 11:11:11.200"/>
</kw>
<status status="PASS" starttime="20241001 11:11:11.192" endtime="20241001 11:11:11.200"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:11:06.976" endtime="20241001 11:11:11.200"/>
</test>
<test id="s1-s15-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:11.203" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:11:11.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:11.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:11.202" endtime="20241001 11:11:11.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:11.206" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:11.206" endtime="20241001 11:11:11.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:11.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:11.206" endtime="20241001 11:11:11.207"/>
</kw>
<status status="PASS" starttime="20241001 11:11:11.201" endtime="20241001 11:11:11.207"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:11.210" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:15.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:15.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:11.208" endtime="20241001 11:11:15.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:15.502" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:15.501" endtime="20241001 11:11:15.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:15.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:15.502" endtime="20241001 11:11:15.503"/>
</kw>
<status status="PASS" starttime="20241001 11:11:11.208" endtime="20241001 11:11:15.503"/>
</kw>
<msg timestamp="20241001 11:11:15.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:11.208" endtime="20241001 11:11:15.503"/>
</kw>
<msg timestamp="20241001 11:11:15.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:11.207" endtime="20241001 11:11:15.503"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:11:15.503" endtime="20241001 11:11:15.504"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:15.507" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:15.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:15.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:15.504" endtime="20241001 11:11:15.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:15.511" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:15.511" endtime="20241001 11:11:15.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:15.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:15.512" endtime="20241001 11:11:15.512"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.504" endtime="20241001 11:11:15.512"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:11:11.201" endtime="20241001 11:11:15.512"/>
</test>
<test id="s1-s15-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:11:15.514" endtime="20241001 11:11:15.515"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:15.518" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:15.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:15.522" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:11:15.516" endtime="20241001 11:11:15.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:15.523" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:11:15.522" endtime="20241001 11:11:15.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:15.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:15.523" endtime="20241001 11:11:15.523"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.516" endtime="20241001 11:11:15.524"/>
</kw>
<msg timestamp="20241001 11:11:15.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:15.516" endtime="20241001 11:11:15.524"/>
</kw>
<msg timestamp="20241001 11:11:15.524" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:11:15.515" endtime="20241001 11:11:15.524"/>
</kw>
<msg timestamp="20241001 11:11:15.524" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:11:15.515" endtime="20241001 11:11:15.524"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:11:15.525" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:11:15.524" endtime="20241001 11:11:15.525"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:15.528" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:15.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:15.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:15.526" endtime="20241001 11:11:15.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:15.568" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:15.567" endtime="20241001 11:11:15.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:15.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:15.568" endtime="20241001 11:11:15.568"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.526" endtime="20241001 11:11:15.568"/>
</kw>
<msg timestamp="20241001 11:11:15.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:15.525" endtime="20241001 11:11:15.569"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.525" endtime="20241001 11:11:15.569"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.525" endtime="20241001 11:11:15.569"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.514" endtime="20241001 11:11:15.569"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.514" endtime="20241001 11:11:15.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:15.573" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:17.563" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:11:17.563" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:11:15.570" endtime="20241001 11:11:17.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:17.564" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:11:17.563" endtime="20241001 11:11:17.564"/>
</kw>
<msg timestamp="20241001 11:11:17.564" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:11:15.570" endtime="20241001 11:11:17.564"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:11:17.565" endtime="20241001 11:11:17.565"/>
</kw>
<msg timestamp="20241001 11:11:17.565" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:11:17.564" endtime="20241001 11:11:17.565"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:17.569" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:19.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:19.596" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:11:17.567" endtime="20241001 11:11:19.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:19.597" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:11:19.596" endtime="20241001 11:11:19.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:19.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:19.597" endtime="20241001 11:11:19.597"/>
</kw>
<status status="PASS" starttime="20241001 11:11:17.566" endtime="20241001 11:11:19.598"/>
</kw>
<msg timestamp="20241001 11:11:19.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:17.566" endtime="20241001 11:11:19.598"/>
</kw>
<status status="PASS" starttime="20241001 11:11:17.566" endtime="20241001 11:11:19.598"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:19.601" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:21.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:21.751" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=834ef57998db8c3868d8a9d1e65b1b7db51a24da4c98f6bb4b1ff5014066fd2d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:11:19.599" endtime="20241001 11:11:21.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:21.752" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=834ef57998db8c3868d8a9d1e65b1b7db51a24da4c98f6bb4b1ff5014066fd2d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:11:21.752" endtime="20241001 11:11:21.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:21.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:21.752" endtime="20241001 11:11:21.753"/>
</kw>
<status status="PASS" starttime="20241001 11:11:19.599" endtime="20241001 11:11:21.753"/>
</kw>
<msg timestamp="20241001 11:11:21.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:19.598" endtime="20241001 11:11:21.753"/>
</kw>
<msg timestamp="20241001 11:11:21.753" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=834ef57998db8c3868d8a9d1e65b1b7db51a24da4c98f6bb4b1ff5014066fd2d
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20241001 11:11:19.598" endtime="20241001 11:11:21.753"/>
</kw>
<status status="PASS" starttime="20241001 11:11:17.565" endtime="20241001 11:11:21.753"/>
</branch>
<status status="PASS" starttime="20241001 11:11:17.565" endtime="20241001 11:11:21.754"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:11:21.754" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:11:21.754" endtime="20241001 11:11:21.754"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:11:21.755" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:11:21.754" endtime="20241001 11:11:21.755"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:11:21.755" level="INFO">${secret} = ['834ef57998db8c3868d8a9d1e65b1b7db51a24da4c98f6bb4b1ff5014066fd2d']</msg>
<status status="PASS" starttime="20241001 11:11:21.755" endtime="20241001 11:11:21.755"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:11:21.756" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:11:21.755" endtime="20241001 11:11:21.756"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:11:21.757" level="INFO">${secret} = 834ef57998db8c3868d8a9d1e65b1b7db51a24da4c98f6bb4b1ff5014066fd2d</msg>
<status status="PASS" starttime="20241001 11:11:21.756" endtime="20241001 11:11:21.757"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:21.761" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:22.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:22.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:21.758" endtime="20241001 11:11:22.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:22.149" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:22.148" endtime="20241001 11:11:22.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:22.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:22.149" endtime="20241001 11:11:22.149"/>
</kw>
<status status="PASS" starttime="20241001 11:11:21.758" endtime="20241001 11:11:22.149"/>
</kw>
<msg timestamp="20241001 11:11:22.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:21.758" endtime="20241001 11:11:22.150"/>
</kw>
<status status="PASS" starttime="20241001 11:11:21.757" endtime="20241001 11:11:22.150"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:22.153" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:22.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:22.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:22.151" endtime="20241001 11:11:22.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:22.547" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:22.546" endtime="20241001 11:11:22.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:22.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:22.547" endtime="20241001 11:11:22.547"/>
</kw>
<status status="PASS" starttime="20241001 11:11:22.151" endtime="20241001 11:11:22.547"/>
</kw>
<msg timestamp="20241001 11:11:22.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:22.150" endtime="20241001 11:11:22.548"/>
</kw>
<status status="PASS" starttime="20241001 11:11:22.150" endtime="20241001 11:11:22.548"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:22.551" level="INFO">Running command 'aws configure set aws_secret_access_key 834ef57998db8c3868d8a9d1e65b1b7db51a24da4c98f6bb4b1ff5014066fd2d 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:22.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:22.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:22.549" endtime="20241001 11:11:22.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:22.944" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:22.943" endtime="20241001 11:11:22.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:22.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:22.945" endtime="20241001 11:11:22.945"/>
</kw>
<status status="PASS" starttime="20241001 11:11:22.549" endtime="20241001 11:11:22.945"/>
</kw>
<msg timestamp="20241001 11:11:22.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:22.548" endtime="20241001 11:11:22.945"/>
</kw>
<status status="PASS" starttime="20241001 11:11:22.548" endtime="20241001 11:11:22.945"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:22.949" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:23.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:23.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:22.946" endtime="20241001 11:11:23.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:23.334" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:23.333" endtime="20241001 11:11:23.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:23.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:23.334" endtime="20241001 11:11:23.334"/>
</kw>
<status status="PASS" starttime="20241001 11:11:22.946" endtime="20241001 11:11:23.335"/>
</kw>
<msg timestamp="20241001 11:11:23.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:22.946" endtime="20241001 11:11:23.335"/>
</kw>
<status status="PASS" starttime="20241001 11:11:22.945" endtime="20241001 11:11:23.335"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:23.338" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:23.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:23.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:23.336" endtime="20241001 11:11:23.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:23.730" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:23.730" endtime="20241001 11:11:23.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:23.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:23.730" endtime="20241001 11:11:23.731"/>
</kw>
<status status="PASS" starttime="20241001 11:11:23.336" endtime="20241001 11:11:23.731"/>
</kw>
<msg timestamp="20241001 11:11:23.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:23.335" endtime="20241001 11:11:23.731"/>
</kw>
<status status="PASS" starttime="20241001 11:11:23.335" endtime="20241001 11:11:23.731"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.570" endtime="20241001 11:11:23.731"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.569" endtime="20241001 11:11:23.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:11:23.731" endtime="20241001 11:11:23.732"/>
</kw>
<status status="PASS" starttime="20241001 11:11:15.513" endtime="20241001 11:11:23.732"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:11:23.733" level="INFO">${randStr} = 4859507769</msg>
<status status="PASS" starttime="20241001 11:11:23.732" endtime="20241001 11:11:23.733"/>
</kw>
<msg timestamp="20241001 11:11:23.733" level="INFO">${random} = ozone-test-4859507769</msg>
<status status="PASS" starttime="20241001 11:11:23.732" endtime="20241001 11:11:23.733"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:23.737" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-4859507769 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:24.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:24.240" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4859507769"
}</msg>
<status status="PASS" starttime="20241001 11:11:23.735" endtime="20241001 11:11:24.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:24.241" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4859507769"
}</msg>
<status status="PASS" starttime="20241001 11:11:24.241" endtime="20241001 11:11:24.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:24.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:24.241" endtime="20241001 11:11:24.242"/>
</kw>
<status status="PASS" starttime="20241001 11:11:23.735" endtime="20241001 11:11:24.242"/>
</kw>
<msg timestamp="20241001 11:11:24.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:23.734" endtime="20241001 11:11:24.242"/>
</kw>
<msg timestamp="20241001 11:11:24.242" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4859507769"
}</msg>
<status status="PASS" starttime="20241001 11:11:23.734" endtime="20241001 11:11:24.242"/>
</kw>
<msg timestamp="20241001 11:11:24.242" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-4859507769"
}</msg>
<status status="PASS" starttime="20241001 11:11:23.734" endtime="20241001 11:11:24.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:11:24.243" endtime="20241001 11:11:24.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:11:24.243" endtime="20241001 11:11:24.243"/>
</kw>
<msg timestamp="20241001 11:11:24.243" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20241001 11:11:23.733" endtime="20241001 11:11:24.243"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241001 11:11:24.244" endtime="20241001 11:11:24.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:11:15.513" endtime="20241001 11:11:24.244"/>
</test>
<test id="s1-s15-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:24.248" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:11:24.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:24.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:24.246" endtime="20241001 11:11:24.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:24.251" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:24.251" endtime="20241001 11:11:24.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:24.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:24.251" endtime="20241001 11:11:24.252"/>
</kw>
<status status="PASS" starttime="20241001 11:11:24.245" endtime="20241001 11:11:24.252"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:24.255" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:24.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:24.864" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:11:24.253" endtime="20241001 11:11:24.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:24.865" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:11:24.865" endtime="20241001 11:11:24.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:24.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:24.866" endtime="20241001 11:11:24.866"/>
</kw>
<msg timestamp="20241001 11:11:24.866" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:11:24.253" endtime="20241001 11:11:24.866"/>
</kw>
<msg timestamp="20241001 11:11:24.867" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20241001 11:11:24.252" endtime="20241001 11:11:24.867"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:11:24.867" endtime="20241001 11:11:24.867"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:24.870" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:24.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:24.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:24.867" endtime="20241001 11:11:24.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:24.874" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:24.874" endtime="20241001 11:11:24.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:24.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:24.875" endtime="20241001 11:11:24.875"/>
</kw>
<status status="PASS" starttime="20241001 11:11:24.867" endtime="20241001 11:11:24.875"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:11:24.245" endtime="20241001 11:11:24.875"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241001 11:11:06.877" endtime="20241001 11:11:24.877"/>
</suite>
<suite id="s1-s16" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s16-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:11:25.609" endtime="20241001 11:11:25.609"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:25.613" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:25.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:25.617" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:11:25.611" endtime="20241001 11:11:25.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:25.618" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:11:25.618" endtime="20241001 11:11:25.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:25.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:25.618" endtime="20241001 11:11:25.619"/>
</kw>
<status status="PASS" starttime="20241001 11:11:25.610" endtime="20241001 11:11:25.619"/>
</kw>
<msg timestamp="20241001 11:11:25.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:25.610" endtime="20241001 11:11:25.619"/>
</kw>
<msg timestamp="20241001 11:11:25.619" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:11:25.610" endtime="20241001 11:11:25.619"/>
</kw>
<msg timestamp="20241001 11:11:25.619" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:11:25.609" endtime="20241001 11:11:25.619"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:11:25.620" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:11:25.619" endtime="20241001 11:11:25.620"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:25.623" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:25.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:25.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:11:25.621" endtime="20241001 11:11:25.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:25.665" level="INFO"/>
<status status="PASS" starttime="20241001 11:11:25.664" endtime="20241001 11:11:25.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:25.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:25.665" endtime="20241001 11:11:25.666"/>
</kw>
<status status="PASS" starttime="20241001 11:11:25.621" endtime="20241001 11:11:25.666"/>
</kw>
<msg timestamp="20241001 11:11:25.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:25.621" endtime="20241001 11:11:25.666"/>
</kw>
<status status="PASS" starttime="20241001 11:11:25.620" endtime="20241001 11:11:25.666"/>
</kw>
<status status="PASS" starttime="20241001 11:11:25.620" endtime="20241001 11:11:25.666"/>
</kw>
<status status="PASS" starttime="20241001 11:11:25.608" endtime="20241001 11:11:25.666"/>
</kw>
<status status="PASS" starttime="20241001 11:11:25.608" endtime="20241001 11:11:25.666"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:11:25.666" endtime="20241001 11:11:25.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:11:25.670" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:11:33.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:11:33.153" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [199].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20241001 11:11:25.668" endtime="20241001 11:11:33.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:11:33.154" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [199].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [199]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [199]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [199]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20241001 11:11:33.153" endtime="20241001 11:11:33.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:11:33.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:11:33.154" endtime="20241001 11:11:33.155"/>
</kw>
<status status="PASS" starttime="20241001 11:11:25.668" endtime="20241001 11:11:33.155"/>
</kw>
<msg timestamp="20241001 11:11:33.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:11:25.667" endtime="20241001 11:11:33.155"/>
</kw>
<msg timestamp="20241001 11:11:33.155" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [199].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20241001 11:11:25.667" endtime="20241001 11:11:33.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:11:33.155" endtime="20241001 11:11:33.156"/>
</kw>
<status status="PASS" starttime="20241001 11:11:33.155" endtime="20241001 11:11:33.156"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:11:25.607" endtime="20241001 11:11:33.156"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20241001 11:11:25.563" endtime="20241001 11:11:33.157"/>
</suite>
<suite id="s1-s17" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s17-t1" name="Finalize HDDS" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:12:59.626" endtime="20241001 11:12:59.626"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:12:59.629" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:12:59.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:12:59.633" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:12:59.627" endtime="20241001 11:12:59.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:12:59.634" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:12:59.634" endtime="20241001 11:12:59.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:12:59.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:12:59.635" endtime="20241001 11:12:59.635"/>
</kw>
<status status="PASS" starttime="20241001 11:12:59.627" endtime="20241001 11:12:59.635"/>
</kw>
<msg timestamp="20241001 11:12:59.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:12:59.627" endtime="20241001 11:12:59.635"/>
</kw>
<msg timestamp="20241001 11:12:59.636" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:12:59.626" endtime="20241001 11:12:59.636"/>
</kw>
<msg timestamp="20241001 11:12:59.636" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:12:59.626" endtime="20241001 11:12:59.636"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:12:59.636" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:12:59.636" endtime="20241001 11:12:59.636"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:12:59.640" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:12:59.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:12:59.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:12:59.638" endtime="20241001 11:12:59.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:12:59.662" level="INFO"/>
<status status="PASS" starttime="20241001 11:12:59.661" endtime="20241001 11:12:59.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:12:59.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:12:59.662" endtime="20241001 11:12:59.662"/>
</kw>
<status status="PASS" starttime="20241001 11:12:59.637" endtime="20241001 11:12:59.663"/>
</kw>
<msg timestamp="20241001 11:12:59.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:12:59.637" endtime="20241001 11:12:59.663"/>
</kw>
<status status="PASS" starttime="20241001 11:12:59.637" endtime="20241001 11:12:59.663"/>
</kw>
<status status="PASS" starttime="20241001 11:12:59.636" endtime="20241001 11:12:59.663"/>
</kw>
<status status="PASS" starttime="20241001 11:12:59.625" endtime="20241001 11:12:59.663"/>
</kw>
<status status="PASS" starttime="20241001 11:12:59.625" endtime="20241001 11:12:59.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:12:59.666" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:27.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:27.857" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20241001 11:12:59.664" endtime="20241001 11:15:27.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:27.858" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: HBASE_SUPPORT.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20241001 11:15:27.857" endtime="20241001 11:15:27.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:27.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:27.858" endtime="20241001 11:15:27.859"/>
</kw>
<status status="PASS" starttime="20241001 11:12:59.664" endtime="20241001 11:15:27.859"/>
</kw>
<msg timestamp="20241001 11:15:27.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:12:59.664" endtime="20241001 11:15:27.859"/>
</kw>
<msg timestamp="20241001 11:15:27.859" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20241001 11:12:59.663" endtime="20241001 11:15:27.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:27.860" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: HBASE_SUPPORT.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20241001 11:15:27.859" endtime="20241001 11:15:27.860"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241001 11:12:59.624" endtime="20241001 11:15:27.860"/>
</test>
<test id="s1-s17-t2" name="Finalize OMs" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:15:27.862" endtime="20241001 11:15:27.862"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:27.865" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:27.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:27.869" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:15:27.863" endtime="20241001 11:15:27.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:27.870" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:15:27.870" endtime="20241001 11:15:27.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:27.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:27.870" endtime="20241001 11:15:27.871"/>
</kw>
<status status="PASS" starttime="20241001 11:15:27.863" endtime="20241001 11:15:27.871"/>
</kw>
<msg timestamp="20241001 11:15:27.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:27.863" endtime="20241001 11:15:27.871"/>
</kw>
<msg timestamp="20241001 11:15:27.871" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:15:27.862" endtime="20241001 11:15:27.871"/>
</kw>
<msg timestamp="20241001 11:15:27.871" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:27.862" endtime="20241001 11:15:27.872"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:15:27.872" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:27.872" endtime="20241001 11:15:27.872"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:27.876" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:27.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:27.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:27.874" endtime="20241001 11:15:27.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:27.978" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:27.978" endtime="20241001 11:15:27.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:27.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:27.978" endtime="20241001 11:15:27.979"/>
</kw>
<status status="PASS" starttime="20241001 11:15:27.873" endtime="20241001 11:15:27.979"/>
</kw>
<msg timestamp="20241001 11:15:27.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:27.873" endtime="20241001 11:15:27.979"/>
</kw>
<status status="PASS" starttime="20241001 11:15:27.873" endtime="20241001 11:15:27.979"/>
</kw>
<status status="PASS" starttime="20241001 11:15:27.872" endtime="20241001 11:15:27.979"/>
</kw>
<status status="PASS" starttime="20241001 11:15:27.861" endtime="20241001 11:15:27.979"/>
</kw>
<status status="PASS" starttime="20241001 11:15:27.861" endtime="20241001 11:15:27.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:27.983" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:31.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:31.324" level="INFO">${output} = Finalization started.
No onFinalize work defined for feature: HBASE_SUPPORT.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20241001 11:15:27.981" endtime="20241001 11:15:31.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:31.325" level="INFO">Finalization started.
No onFinalize work defined for feature: HBASE_SUPPORT.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20241001 11:15:31.324" endtime="20241001 11:15:31.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:31.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:31.325" endtime="20241001 11:15:31.326"/>
</kw>
<status status="PASS" starttime="20241001 11:15:27.980" endtime="20241001 11:15:31.326"/>
</kw>
<msg timestamp="20241001 11:15:31.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:27.980" endtime="20241001 11:15:31.326"/>
</kw>
<msg timestamp="20241001 11:15:31.326" level="INFO">${result} = Finalization started.
No onFinalize work defined for feature: HBASE_SUPPORT.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20241001 11:15:27.979" endtime="20241001 11:15:31.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:31.326" level="INFO">Finalization started.
No onFinalize work defined for feature: HBASE_SUPPORT.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20241001 11:15:31.326" endtime="20241001 11:15:31.326"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241001 11:15:27.860" endtime="20241001 11:15:31.327"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20241001 11:12:59.581" endtime="20241001 11:15:31.327"/>
</suite>
<suite id="s1-s18" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-check-finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s18-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:15:32.130" endtime="20241001 11:15:32.131"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:32.134" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:32.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:32.138" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:15:32.132" endtime="20241001 11:15:32.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:32.139" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:15:32.139" endtime="20241001 11:15:32.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:32.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:32.139" endtime="20241001 11:15:32.140"/>
</kw>
<status status="PASS" starttime="20241001 11:15:32.132" endtime="20241001 11:15:32.140"/>
</kw>
<msg timestamp="20241001 11:15:32.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:32.131" endtime="20241001 11:15:32.140"/>
</kw>
<msg timestamp="20241001 11:15:32.140" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:15:32.131" endtime="20241001 11:15:32.140"/>
</kw>
<msg timestamp="20241001 11:15:32.140" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:32.131" endtime="20241001 11:15:32.140"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:15:32.141" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:32.140" endtime="20241001 11:15:32.141"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:32.144" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:32.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:32.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:32.142" endtime="20241001 11:15:32.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:32.316" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:32.316" endtime="20241001 11:15:32.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:32.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:32.317" endtime="20241001 11:15:32.317"/>
</kw>
<status status="PASS" starttime="20241001 11:15:32.142" endtime="20241001 11:15:32.317"/>
</kw>
<msg timestamp="20241001 11:15:32.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:32.142" endtime="20241001 11:15:32.317"/>
</kw>
<status status="PASS" starttime="20241001 11:15:32.141" endtime="20241001 11:15:32.318"/>
</kw>
<status status="PASS" starttime="20241001 11:15:32.141" endtime="20241001 11:15:32.318"/>
</kw>
<status status="PASS" starttime="20241001 11:15:32.130" endtime="20241001 11:15:32.318"/>
</kw>
<status status="PASS" starttime="20241001 11:15:32.130" endtime="20241001 11:15:32.318"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:32.321" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:32.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:32.325" level="INFO">${output} = OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
...</msg>
<status status="PASS" starttime="20241001 11:15:32.319" endtime="20241001 11:15:32.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:32.326" level="INFO">OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
HOSTNAME=scm3.org
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE_LOG_DIR=/var/log/hadoop
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
JAVA_HOME=/usr/local/jdk-17.0.2
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.server.default.replication=3
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
CORE-SITE.XML_dfs.data.transfer.protection=authentication
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
PWD=/opt/hadoop
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HOME=/opt/hadoop
LC_CTYPE=C.UTF-8
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
WAITFOR=scm2.org:9894
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.address=recon:9891
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
SHLVL=1
OZONE-SITE.XML_ozone.om.ratis.enable=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/jdk-17.0.2/bin:/opt/hadoop/bin
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.security.authorization=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.security.enabled=true
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
_=/usr/bin/env</msg>
<status status="PASS" starttime="20241001 11:15:32.326" endtime="20241001 11:15:32.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:32.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:32.326" endtime="20241001 11:15:32.327"/>
</kw>
<status status="PASS" starttime="20241001 11:15:32.319" endtime="20241001 11:15:32.327"/>
</kw>
<msg timestamp="20241001 11:15:32.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:32.318" endtime="20241001 11:15:32.327"/>
</kw>
<msg timestamp="20241001 11:15:32.328" level="INFO">${result} = OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
...</msg>
<status status="PASS" starttime="20241001 11:15:32.318" endtime="20241001 11:15:32.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:32.328" level="INFO">OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
LD_LIBRARY_PATH=/usr/local/lib
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
HOSTNAME=scm3.org
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE_LOG_DIR=/var/log/hadoop
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
JAVA_HOME=/usr/local/jdk-17.0.2
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.server.default.replication=3
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
CORE-SITE.XML_dfs.data.transfer.protection=authentication
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
PWD=/opt/hadoop
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HOME=/opt/hadoop
LC_CTYPE=C.UTF-8
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
WAITFOR=scm2.org:9894
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.address=recon:9891
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
SHLVL=1
OZONE-SITE.XML_ozone.om.ratis.enable=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/jdk-17.0.2/bin:/opt/hadoop/bin
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.security.authorization=true
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_ozone.security.enabled=true
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
_=/usr/bin/env</msg>
<status status="PASS" starttime="20241001 11:15:32.328" endtime="20241001 11:15:32.328"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:15:32.328" endtime="20241001 11:15:32.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:32.331" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:34.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:34.899" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:15:32.330" endtime="20241001 11:15:34.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:34.900" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:15:34.899" endtime="20241001 11:15:34.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:34.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:34.900" endtime="20241001 11:15:34.900"/>
</kw>
<status status="PASS" starttime="20241001 11:15:32.329" endtime="20241001 11:15:34.901"/>
</kw>
<msg timestamp="20241001 11:15:34.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:32.329" endtime="20241001 11:15:34.901"/>
</kw>
<msg timestamp="20241001 11:15:34.901" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:15:32.329" endtime="20241001 11:15:34.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:34.901" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:15:34.901" endtime="20241001 11:15:34.901"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20241001 11:15:34.901" endtime="20241001 11:15:34.902"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241001 11:15:32.129" endtime="20241001 11:15:34.902"/>
</test>
<test id="s1-s18-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:15:34.904" endtime="20241001 11:15:34.904"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:34.907" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:34.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:34.911" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:15:34.905" endtime="20241001 11:15:34.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:34.912" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:15:34.912" endtime="20241001 11:15:34.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:34.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:34.912" endtime="20241001 11:15:34.913"/>
</kw>
<status status="PASS" starttime="20241001 11:15:34.905" endtime="20241001 11:15:34.913"/>
</kw>
<msg timestamp="20241001 11:15:34.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:34.905" endtime="20241001 11:15:34.913"/>
</kw>
<msg timestamp="20241001 11:15:34.913" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:15:34.904" endtime="20241001 11:15:34.913"/>
</kw>
<msg timestamp="20241001 11:15:34.913" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:34.904" endtime="20241001 11:15:34.913"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:15:34.914" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:34.914" endtime="20241001 11:15:34.914"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:34.918" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:34.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:34.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:34.916" endtime="20241001 11:15:34.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:34.998" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:34.997" endtime="20241001 11:15:34.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:34.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:34.998" endtime="20241001 11:15:34.999"/>
</kw>
<status status="PASS" starttime="20241001 11:15:34.915" endtime="20241001 11:15:34.999"/>
</kw>
<msg timestamp="20241001 11:15:34.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:34.915" endtime="20241001 11:15:34.999"/>
</kw>
<status status="PASS" starttime="20241001 11:15:34.914" endtime="20241001 11:15:34.999"/>
</kw>
<status status="PASS" starttime="20241001 11:15:34.914" endtime="20241001 11:15:34.999"/>
</kw>
<status status="PASS" starttime="20241001 11:15:34.903" endtime="20241001 11:15:34.999"/>
</kw>
<status status="PASS" starttime="20241001 11:15:34.903" endtime="20241001 11:15:34.999"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:15:35.000" endtime="20241001 11:15:35.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:35.003" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:37.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:37.587" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:15:35.001" endtime="20241001 11:15:37.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:37.588" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:15:37.588" endtime="20241001 11:15:37.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:37.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:37.589" endtime="20241001 11:15:37.589"/>
</kw>
<status status="PASS" starttime="20241001 11:15:35.001" endtime="20241001 11:15:37.589"/>
</kw>
<msg timestamp="20241001 11:15:37.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:35.001" endtime="20241001 11:15:37.589"/>
</kw>
<msg timestamp="20241001 11:15:37.589" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:15:35.000" endtime="20241001 11:15:37.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:37.590" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20241001 11:15:37.589" endtime="20241001 11:15:37.590"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20241001 11:15:37.590" endtime="20241001 11:15:37.590"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241001 11:15:34.902" endtime="20241001 11:15:37.590"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20241001 11:15:32.087" endtime="20241001 11:15:37.591"/>
</suite>
<suite id="s1-s19" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:15:38.337" endtime="20241001 11:15:38.338"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:38.341" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:38.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:38.345" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:15:38.339" endtime="20241001 11:15:38.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:38.346" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:15:38.346" endtime="20241001 11:15:38.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:38.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:38.346" endtime="20241001 11:15:38.347"/>
</kw>
<status status="PASS" starttime="20241001 11:15:38.338" endtime="20241001 11:15:38.347"/>
</kw>
<msg timestamp="20241001 11:15:38.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:38.338" endtime="20241001 11:15:38.347"/>
</kw>
<msg timestamp="20241001 11:15:38.347" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:15:38.338" endtime="20241001 11:15:38.347"/>
</kw>
<msg timestamp="20241001 11:15:38.347" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:38.338" endtime="20241001 11:15:38.347"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:15:38.348" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:38.347" endtime="20241001 11:15:38.348"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:38.351" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:38.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:38.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:38.349" endtime="20241001 11:15:38.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:38.393" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:38.392" endtime="20241001 11:15:38.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:38.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:38.393" endtime="20241001 11:15:38.393"/>
</kw>
<status status="PASS" starttime="20241001 11:15:38.349" endtime="20241001 11:15:38.393"/>
</kw>
<msg timestamp="20241001 11:15:38.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:38.349" endtime="20241001 11:15:38.393"/>
</kw>
<status status="PASS" starttime="20241001 11:15:38.348" endtime="20241001 11:15:38.394"/>
</kw>
<status status="PASS" starttime="20241001 11:15:38.348" endtime="20241001 11:15:38.394"/>
</kw>
<status status="PASS" starttime="20241001 11:15:38.337" endtime="20241001 11:15:38.394"/>
</kw>
<status status="PASS" starttime="20241001 11:15:38.336" endtime="20241001 11:15:38.394"/>
</kw>
<test id="s1-s19-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:15:38.395" level="INFO">${random} = 25460</msg>
<status status="PASS" starttime="20241001 11:15:38.395" endtime="20241001 11:15:38.395"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:38.399" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-25460 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:42.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:42.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:38.397" endtime="20241001 11:15:42.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:42.708" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:42.707" endtime="20241001 11:15:42.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:42.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:42.708" endtime="20241001 11:15:42.709"/>
</kw>
<status status="PASS" starttime="20241001 11:15:38.396" endtime="20241001 11:15:42.709"/>
</kw>
<msg timestamp="20241001 11:15:42.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:38.396" endtime="20241001 11:15:42.709"/>
</kw>
<msg timestamp="20241001 11:15:42.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:38.395" endtime="20241001 11:15:42.709"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:15:42.710" endtime="20241001 11:15:42.710"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:42.713" level="INFO">Running command 'cat /tmp/key-25460 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:42.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:42.717" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:15:42.710" endtime="20241001 11:15:42.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:42.718" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:15:42.717" endtime="20241001 11:15:42.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:42.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:42.718" endtime="20241001 11:15:42.718"/>
</kw>
<msg timestamp="20241001 11:15:42.718" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:15:42.710" endtime="20241001 11:15:42.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:15:42.719" endtime="20241001 11:15:42.719"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:42.721" level="INFO">Running command 'rm /tmp/key-25460 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:42.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:42.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:42.719" endtime="20241001 11:15:42.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:42.726" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:42.725" endtime="20241001 11:15:42.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:42.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:42.726" endtime="20241001 11:15:42.726"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.719" endtime="20241001 11:15:42.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:15:38.394" endtime="20241001 11:15:42.727"/>
</test>
<test id="s1-s19-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:15:42.729" endtime="20241001 11:15:42.729"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:42.733" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:42.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:42.736" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:15:42.731" endtime="20241001 11:15:42.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:42.737" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:15:42.737" endtime="20241001 11:15:42.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:42.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:42.737" endtime="20241001 11:15:42.738"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.730" endtime="20241001 11:15:42.738"/>
</kw>
<msg timestamp="20241001 11:15:42.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:42.730" endtime="20241001 11:15:42.738"/>
</kw>
<msg timestamp="20241001 11:15:42.738" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:15:42.730" endtime="20241001 11:15:42.738"/>
</kw>
<msg timestamp="20241001 11:15:42.738" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:42.729" endtime="20241001 11:15:42.738"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:15:42.739" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:42.738" endtime="20241001 11:15:42.739"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:42.742" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:42.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:42.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:42.740" endtime="20241001 11:15:42.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:42.804" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:42.803" endtime="20241001 11:15:42.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:42.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:42.804" endtime="20241001 11:15:42.804"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.740" endtime="20241001 11:15:42.804"/>
</kw>
<msg timestamp="20241001 11:15:42.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:42.740" endtime="20241001 11:15:42.805"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.739" endtime="20241001 11:15:42.805"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.739" endtime="20241001 11:15:42.805"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.729" endtime="20241001 11:15:42.805"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.728" endtime="20241001 11:15:42.805"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:42.808" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:45.183" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:15:45.183" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:15:42.806" endtime="20241001 11:15:45.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:45.184" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:15:45.184" endtime="20241001 11:15:45.184"/>
</kw>
<msg timestamp="20241001 11:15:45.184" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:15:42.806" endtime="20241001 11:15:45.184"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:15:45.185" endtime="20241001 11:15:45.185"/>
</kw>
<msg timestamp="20241001 11:15:45.185" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:15:45.185" endtime="20241001 11:15:45.185"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:45.189" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:47.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:47.486" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:15:45.187" endtime="20241001 11:15:47.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:47.487" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:15:47.486" endtime="20241001 11:15:47.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:47.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:47.487" endtime="20241001 11:15:47.487"/>
</kw>
<status status="PASS" starttime="20241001 11:15:45.186" endtime="20241001 11:15:47.487"/>
</kw>
<msg timestamp="20241001 11:15:47.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:45.186" endtime="20241001 11:15:47.488"/>
</kw>
<status status="PASS" starttime="20241001 11:15:45.186" endtime="20241001 11:15:47.488"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:47.491" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:49.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:49.616" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6d30df2cf11905898d560fcdaf135365490c3922636754417745068e9739c07f</msg>
<status status="PASS" starttime="20241001 11:15:47.489" endtime="20241001 11:15:49.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:49.617" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6d30df2cf11905898d560fcdaf135365490c3922636754417745068e9739c07f</msg>
<status status="PASS" starttime="20241001 11:15:49.617" endtime="20241001 11:15:49.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:49.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:49.618" endtime="20241001 11:15:49.618"/>
</kw>
<status status="PASS" starttime="20241001 11:15:47.489" endtime="20241001 11:15:49.618"/>
</kw>
<msg timestamp="20241001 11:15:49.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:47.488" endtime="20241001 11:15:49.619"/>
</kw>
<msg timestamp="20241001 11:15:49.619" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=6d30df2cf11905898d560fcdaf135365490c3922636754417745068e9739c07f</msg>
<status status="PASS" starttime="20241001 11:15:47.488" endtime="20241001 11:15:49.619"/>
</kw>
<status status="PASS" starttime="20241001 11:15:45.186" endtime="20241001 11:15:49.619"/>
</branch>
<status status="PASS" starttime="20241001 11:15:45.185" endtime="20241001 11:15:49.619"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:15:49.620" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:15:49.619" endtime="20241001 11:15:49.620"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:15:49.620" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:15:49.620" endtime="20241001 11:15:49.620"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:15:49.621" level="INFO">${secret} = ['6d30df2cf11905898d560fcdaf135365490c3922636754417745068e9739c07f']</msg>
<status status="PASS" starttime="20241001 11:15:49.620" endtime="20241001 11:15:49.621"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:15:49.622" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:49.621" endtime="20241001 11:15:49.622"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:15:49.623" level="INFO">${secret} = 6d30df2cf11905898d560fcdaf135365490c3922636754417745068e9739c07f</msg>
<status status="PASS" starttime="20241001 11:15:49.622" endtime="20241001 11:15:49.623"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:49.626" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:50.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:50.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:49.624" endtime="20241001 11:15:50.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:50.033" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:50.032" endtime="20241001 11:15:50.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:50.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:50.033" endtime="20241001 11:15:50.033"/>
</kw>
<status status="PASS" starttime="20241001 11:15:49.623" endtime="20241001 11:15:50.034"/>
</kw>
<msg timestamp="20241001 11:15:50.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:49.623" endtime="20241001 11:15:50.034"/>
</kw>
<status status="PASS" starttime="20241001 11:15:49.623" endtime="20241001 11:15:50.034"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:50.037" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:50.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:50.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:50.035" endtime="20241001 11:15:50.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:50.433" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:50.433" endtime="20241001 11:15:50.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:50.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:50.433" endtime="20241001 11:15:50.434"/>
</kw>
<status status="PASS" starttime="20241001 11:15:50.035" endtime="20241001 11:15:50.434"/>
</kw>
<msg timestamp="20241001 11:15:50.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:50.034" endtime="20241001 11:15:50.434"/>
</kw>
<status status="PASS" starttime="20241001 11:15:50.034" endtime="20241001 11:15:50.434"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:50.438" level="INFO">Running command 'aws configure set aws_secret_access_key 6d30df2cf11905898d560fcdaf135365490c3922636754417745068e9739c07f 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:50.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:50.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:50.435" endtime="20241001 11:15:50.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:50.840" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:50.839" endtime="20241001 11:15:50.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:50.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:50.840" endtime="20241001 11:15:50.841"/>
</kw>
<status status="PASS" starttime="20241001 11:15:50.435" endtime="20241001 11:15:50.841"/>
</kw>
<msg timestamp="20241001 11:15:50.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:50.435" endtime="20241001 11:15:50.841"/>
</kw>
<status status="PASS" starttime="20241001 11:15:50.434" endtime="20241001 11:15:50.841"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:50.845" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:51.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:51.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:50.842" endtime="20241001 11:15:51.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:51.285" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:51.284" endtime="20241001 11:15:51.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:51.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:51.285" endtime="20241001 11:15:51.286"/>
</kw>
<status status="PASS" starttime="20241001 11:15:50.842" endtime="20241001 11:15:51.286"/>
</kw>
<msg timestamp="20241001 11:15:51.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:50.842" endtime="20241001 11:15:51.286"/>
</kw>
<status status="PASS" starttime="20241001 11:15:50.841" endtime="20241001 11:15:51.286"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:51.290" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:51.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:51.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:51.287" endtime="20241001 11:15:51.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:51.689" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:51.688" endtime="20241001 11:15:51.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:51.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:51.689" endtime="20241001 11:15:51.690"/>
</kw>
<status status="PASS" starttime="20241001 11:15:51.287" endtime="20241001 11:15:51.690"/>
</kw>
<msg timestamp="20241001 11:15:51.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:51.287" endtime="20241001 11:15:51.690"/>
</kw>
<status status="PASS" starttime="20241001 11:15:51.286" endtime="20241001 11:15:51.690"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.805" endtime="20241001 11:15:51.690"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.805" endtime="20241001 11:15:51.690"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:15:51.691" endtime="20241001 11:15:51.691"/>
</kw>
<status status="PASS" starttime="20241001 11:15:42.728" endtime="20241001 11:15:51.691"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:51.694" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:53.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:53.655" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:11:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:15:51.692" endtime="20241001 11:15:53.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:53.656" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:11:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:15:52 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:15:53.655" endtime="20241001 11:15:53.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:53.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:53.656" endtime="20241001 11:15:53.656"/>
</kw>
<msg timestamp="20241001 11:15:53.657" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:11:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:15:51.692" endtime="20241001 11:15:53.657"/>
</kw>
<msg timestamp="20241001 11:15:53.657" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:11:15 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:15:51.691" endtime="20241001 11:15:53.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:15:53.657" endtime="20241001 11:15:53.657"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:53.660" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:53.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:53.664" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:15:53.658" endtime="20241001 11:15:53.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:53.666" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:15:53.665" endtime="20241001 11:15:53.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:53.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:53.667" endtime="20241001 11:15:53.667"/>
</kw>
<msg timestamp="20241001 11:15:53.668" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:15:53.658" endtime="20241001 11:15:53.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:15:53.668" endtime="20241001 11:15:53.669"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:53.677" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:53.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:53.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:53.669" endtime="20241001 11:15:53.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:53.681" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:53.681" endtime="20241001 11:15:53.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:53.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:53.681" endtime="20241001 11:15:53.682"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.669" endtime="20241001 11:15:53.682"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:15:42.727" endtime="20241001 11:15:53.682"/>
</test>
<test id="s1-s19-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:15:53.684" endtime="20241001 11:15:53.685"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:53.688" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:53.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:53.692" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:15:53.686" endtime="20241001 11:15:53.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:53.693" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:15:53.692" endtime="20241001 11:15:53.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:53.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:53.693" endtime="20241001 11:15:53.693"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.686" endtime="20241001 11:15:53.694"/>
</kw>
<msg timestamp="20241001 11:15:53.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:53.685" endtime="20241001 11:15:53.694"/>
</kw>
<msg timestamp="20241001 11:15:53.694" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:15:53.685" endtime="20241001 11:15:53.694"/>
</kw>
<msg timestamp="20241001 11:15:53.694" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:53.685" endtime="20241001 11:15:53.694"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:15:53.694" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:15:53.694" endtime="20241001 11:15:53.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:53.698" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:53.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:53.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:15:53.696" endtime="20241001 11:15:53.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:53.755" level="INFO"/>
<status status="PASS" starttime="20241001 11:15:53.754" endtime="20241001 11:15:53.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:53.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:53.755" endtime="20241001 11:15:53.755"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.696" endtime="20241001 11:15:53.756"/>
</kw>
<msg timestamp="20241001 11:15:53.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:53.695" endtime="20241001 11:15:53.756"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.695" endtime="20241001 11:15:53.756"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.695" endtime="20241001 11:15:53.756"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.684" endtime="20241001 11:15:53.756"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.684" endtime="20241001 11:15:53.756"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:53.759" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:55.903" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:15:55.904" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:15:53.757" endtime="20241001 11:15:55.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:55.905" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:15:55.904" endtime="20241001 11:15:55.905"/>
</kw>
<msg timestamp="20241001 11:15:55.905" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:15:53.757" endtime="20241001 11:15:55.905"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:15:55.905" endtime="20241001 11:15:55.906"/>
</kw>
<msg timestamp="20241001 11:15:55.906" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:15:55.905" endtime="20241001 11:15:55.906"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:55.909" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:15:58.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:15:58.178" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:15:55.907" endtime="20241001 11:15:58.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:15:58.179" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:15:58.178" endtime="20241001 11:15:58.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:15:58.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:15:58.179" endtime="20241001 11:15:58.179"/>
</kw>
<status status="PASS" starttime="20241001 11:15:55.907" endtime="20241001 11:15:58.179"/>
</kw>
<msg timestamp="20241001 11:15:58.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:55.907" endtime="20241001 11:15:58.179"/>
</kw>
<status status="PASS" starttime="20241001 11:15:55.906" endtime="20241001 11:15:58.180"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:15:58.183" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:00.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:00.399" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=98d5ea674eb5117abbb273dad7638d80110b61926be26937cb8187f2d3d95f46</msg>
<status status="PASS" starttime="20241001 11:15:58.181" endtime="20241001 11:16:00.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:00.400" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=98d5ea674eb5117abbb273dad7638d80110b61926be26937cb8187f2d3d95f46</msg>
<status status="PASS" starttime="20241001 11:16:00.400" endtime="20241001 11:16:00.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:00.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:00.401" endtime="20241001 11:16:00.401"/>
</kw>
<status status="PASS" starttime="20241001 11:15:58.180" endtime="20241001 11:16:00.401"/>
</kw>
<msg timestamp="20241001 11:16:00.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:15:58.180" endtime="20241001 11:16:00.401"/>
</kw>
<msg timestamp="20241001 11:16:00.402" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=98d5ea674eb5117abbb273dad7638d80110b61926be26937cb8187f2d3d95f46</msg>
<status status="PASS" starttime="20241001 11:15:58.180" endtime="20241001 11:16:00.402"/>
</kw>
<status status="PASS" starttime="20241001 11:15:55.906" endtime="20241001 11:16:00.402"/>
</branch>
<status status="PASS" starttime="20241001 11:15:55.906" endtime="20241001 11:16:00.402"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:00.402" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:00.402" endtime="20241001 11:16:00.402"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:16:00.403" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:00.403" endtime="20241001 11:16:00.403"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:00.403" level="INFO">${secret} = ['98d5ea674eb5117abbb273dad7638d80110b61926be26937cb8187f2d3d95f46']</msg>
<status status="PASS" starttime="20241001 11:16:00.403" endtime="20241001 11:16:00.403"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:00.405" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:00.403" endtime="20241001 11:16:00.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:00.405" level="INFO">${secret} = 98d5ea674eb5117abbb273dad7638d80110b61926be26937cb8187f2d3d95f46</msg>
<status status="PASS" starttime="20241001 11:16:00.405" endtime="20241001 11:16:00.406"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:00.409" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:00.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:00.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:00.407" endtime="20241001 11:16:00.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:00.811" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:00.810" endtime="20241001 11:16:00.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:00.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:00.811" endtime="20241001 11:16:00.812"/>
</kw>
<status status="PASS" starttime="20241001 11:16:00.406" endtime="20241001 11:16:00.812"/>
</kw>
<msg timestamp="20241001 11:16:00.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:00.406" endtime="20241001 11:16:00.812"/>
</kw>
<status status="PASS" starttime="20241001 11:16:00.406" endtime="20241001 11:16:00.812"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:00.816" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:01.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:01.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:00.813" endtime="20241001 11:16:01.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:01.240" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:01.240" endtime="20241001 11:16:01.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:01.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:01.241" endtime="20241001 11:16:01.241"/>
</kw>
<status status="PASS" starttime="20241001 11:16:00.813" endtime="20241001 11:16:01.241"/>
</kw>
<msg timestamp="20241001 11:16:01.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:00.813" endtime="20241001 11:16:01.241"/>
</kw>
<status status="PASS" starttime="20241001 11:16:00.812" endtime="20241001 11:16:01.241"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:01.245" level="INFO">Running command 'aws configure set aws_secret_access_key 98d5ea674eb5117abbb273dad7638d80110b61926be26937cb8187f2d3d95f46 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:01.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:01.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:01.243" endtime="20241001 11:16:01.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:01.633" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:01.632" endtime="20241001 11:16:01.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:01.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:01.633" endtime="20241001 11:16:01.634"/>
</kw>
<status status="PASS" starttime="20241001 11:16:01.242" endtime="20241001 11:16:01.634"/>
</kw>
<msg timestamp="20241001 11:16:01.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:01.242" endtime="20241001 11:16:01.634"/>
</kw>
<status status="PASS" starttime="20241001 11:16:01.241" endtime="20241001 11:16:01.634"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:01.638" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:02.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:02.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:01.636" endtime="20241001 11:16:02.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:02.036" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:02.036" endtime="20241001 11:16:02.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:02.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:02.036" endtime="20241001 11:16:02.037"/>
</kw>
<status status="PASS" starttime="20241001 11:16:01.635" endtime="20241001 11:16:02.037"/>
</kw>
<msg timestamp="20241001 11:16:02.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:01.635" endtime="20241001 11:16:02.037"/>
</kw>
<status status="PASS" starttime="20241001 11:16:01.634" endtime="20241001 11:16:02.037"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:02.041" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:02.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:02.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:02.038" endtime="20241001 11:16:02.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:02.430" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:02.430" endtime="20241001 11:16:02.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:02.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:02.430" endtime="20241001 11:16:02.431"/>
</kw>
<status status="PASS" starttime="20241001 11:16:02.038" endtime="20241001 11:16:02.431"/>
</kw>
<msg timestamp="20241001 11:16:02.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:02.038" endtime="20241001 11:16:02.431"/>
</kw>
<status status="PASS" starttime="20241001 11:16:02.037" endtime="20241001 11:16:02.431"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.757" endtime="20241001 11:16:02.431"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.756" endtime="20241001 11:16:02.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:16:02.431" endtime="20241001 11:16:02.432"/>
</kw>
<status status="PASS" starttime="20241001 11:15:53.683" endtime="20241001 11:16:02.432"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:02.435" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:02.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:02.951" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:11:24 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:16:02.433" endtime="20241001 11:16:02.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:02.952" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:11:24 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:16:02 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:16:02.951" endtime="20241001 11:16:02.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:02.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:02.952" endtime="20241001 11:16:02.953"/>
</kw>
<msg timestamp="20241001 11:16:02.953" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:11:24 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:16:02.432" endtime="20241001 11:16:02.953"/>
</kw>
<msg timestamp="20241001 11:16:02.953" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:11:24 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:16:02.432" endtime="20241001 11:16:02.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:02.953" endtime="20241001 11:16:02.954"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:02.957" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:02.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:02.961" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:16:02.954" endtime="20241001 11:16:02.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:02.961" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:16:02.961" endtime="20241001 11:16:02.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:02.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:02.962" endtime="20241001 11:16:02.962"/>
</kw>
<msg timestamp="20241001 11:16:02.962" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:16:02.954" endtime="20241001 11:16:02.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:02.962" endtime="20241001 11:16:02.963"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:02.965" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:02.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:02.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:02.963" endtime="20241001 11:16:02.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:02.970" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:02.969" endtime="20241001 11:16:02.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:02.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:02.970" endtime="20241001 11:16:02.970"/>
</kw>
<status status="PASS" starttime="20241001 11:16:02.963" endtime="20241001 11:16:02.971"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:15:53.683" endtime="20241001 11:16:02.971"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:15:38.267" endtime="20241001 11:16:02.973"/>
</suite>
<suite id="s1-s20" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:16:03.724" endtime="20241001 11:16:03.724"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:03.727" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:03.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:03.731" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:16:03.725" endtime="20241001 11:16:03.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:03.732" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:16:03.732" endtime="20241001 11:16:03.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:03.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:03.732" endtime="20241001 11:16:03.733"/>
</kw>
<status status="PASS" starttime="20241001 11:16:03.725" endtime="20241001 11:16:03.733"/>
</kw>
<msg timestamp="20241001 11:16:03.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:03.724" endtime="20241001 11:16:03.733"/>
</kw>
<msg timestamp="20241001 11:16:03.733" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:16:03.724" endtime="20241001 11:16:03.733"/>
</kw>
<msg timestamp="20241001 11:16:03.733" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:03.724" endtime="20241001 11:16:03.733"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:16:03.734" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:03.734" endtime="20241001 11:16:03.734"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:03.737" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:03.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:03.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:03.735" endtime="20241001 11:16:03.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:03.794" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:03.793" endtime="20241001 11:16:03.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:03.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:03.794" endtime="20241001 11:16:03.794"/>
</kw>
<status status="PASS" starttime="20241001 11:16:03.735" endtime="20241001 11:16:03.794"/>
</kw>
<msg timestamp="20241001 11:16:03.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:03.735" endtime="20241001 11:16:03.794"/>
</kw>
<status status="PASS" starttime="20241001 11:16:03.734" endtime="20241001 11:16:03.795"/>
</kw>
<status status="PASS" starttime="20241001 11:16:03.734" endtime="20241001 11:16:03.795"/>
</kw>
<status status="PASS" starttime="20241001 11:16:03.723" endtime="20241001 11:16:03.795"/>
</kw>
<status status="PASS" starttime="20241001 11:16:03.723" endtime="20241001 11:16:03.795"/>
</kw>
<test id="s1-s20-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:16:03.796" level="INFO">${random} = 13960</msg>
<status status="PASS" starttime="20241001 11:16:03.796" endtime="20241001 11:16:03.796"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:03.800" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-13960 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:08.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:08.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:03.797" endtime="20241001 11:16:08.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:08.069" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:08.068" endtime="20241001 11:16:08.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:08.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:08.069" endtime="20241001 11:16:08.069"/>
</kw>
<status status="PASS" starttime="20241001 11:16:03.797" endtime="20241001 11:16:08.070"/>
</kw>
<msg timestamp="20241001 11:16:08.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:03.797" endtime="20241001 11:16:08.070"/>
</kw>
<msg timestamp="20241001 11:16:08.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:03.796" endtime="20241001 11:16:08.070"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:08.070" endtime="20241001 11:16:08.070"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:08.074" level="INFO">Running command 'cat /tmp/key-13960 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:08.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:08.078" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:08.071" endtime="20241001 11:16:08.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:08.079" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:08.078" endtime="20241001 11:16:08.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:08.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:08.079" endtime="20241001 11:16:08.080"/>
</kw>
<msg timestamp="20241001 11:16:08.080" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:08.071" endtime="20241001 11:16:08.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:08.080" endtime="20241001 11:16:08.081"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:08.084" level="INFO">Running command 'rm /tmp/key-13960 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:08.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:08.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:08.081" endtime="20241001 11:16:08.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:08.088" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:08.088" endtime="20241001 11:16:08.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:08.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:08.088" endtime="20241001 11:16:08.089"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.081" endtime="20241001 11:16:08.089"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:16:03.795" endtime="20241001 11:16:08.089"/>
</test>
<test id="s1-s20-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:16:08.091" endtime="20241001 11:16:08.091"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:08.095" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:08.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:08.099" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:16:08.093" endtime="20241001 11:16:08.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:08.099" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:16:08.099" endtime="20241001 11:16:08.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:08.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:08.100" endtime="20241001 11:16:08.100"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.092" endtime="20241001 11:16:08.100"/>
</kw>
<msg timestamp="20241001 11:16:08.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:08.092" endtime="20241001 11:16:08.100"/>
</kw>
<msg timestamp="20241001 11:16:08.100" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:16:08.092" endtime="20241001 11:16:08.101"/>
</kw>
<msg timestamp="20241001 11:16:08.101" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:08.092" endtime="20241001 11:16:08.101"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:16:08.101" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:08.101" endtime="20241001 11:16:08.101"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:08.105" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:08.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:08.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:08.103" endtime="20241001 11:16:08.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:08.182" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:08.182" endtime="20241001 11:16:08.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:08.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:08.183" endtime="20241001 11:16:08.183"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.102" endtime="20241001 11:16:08.183"/>
</kw>
<msg timestamp="20241001 11:16:08.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:08.102" endtime="20241001 11:16:08.183"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.102" endtime="20241001 11:16:08.183"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.101" endtime="20241001 11:16:08.183"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.091" endtime="20241001 11:16:08.184"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.090" endtime="20241001 11:16:08.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:08.187" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:10.297" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:16:10.297" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:08.185" endtime="20241001 11:16:10.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:10.298" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:10.298" endtime="20241001 11:16:10.299"/>
</kw>
<msg timestamp="20241001 11:16:10.299" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:08.185" endtime="20241001 11:16:10.299"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:10.299" endtime="20241001 11:16:10.299"/>
</kw>
<msg timestamp="20241001 11:16:10.300" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:16:10.299" endtime="20241001 11:16:10.300"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:10.303" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:12.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:12.402" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:16:10.301" endtime="20241001 11:16:12.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:12.403" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:16:12.403" endtime="20241001 11:16:12.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:12.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:12.404" endtime="20241001 11:16:12.404"/>
</kw>
<status status="PASS" starttime="20241001 11:16:10.301" endtime="20241001 11:16:12.404"/>
</kw>
<msg timestamp="20241001 11:16:12.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:10.300" endtime="20241001 11:16:12.404"/>
</kw>
<status status="PASS" starttime="20241001 11:16:10.300" endtime="20241001 11:16:12.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:12.408" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:14.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:14.600" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=694af3841450e2153a5643f8839e3e7e39ca94818c11ad97c0a7485aaaf5b071</msg>
<status status="PASS" starttime="20241001 11:16:12.406" endtime="20241001 11:16:14.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:14.602" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=694af3841450e2153a5643f8839e3e7e39ca94818c11ad97c0a7485aaaf5b071</msg>
<status status="PASS" starttime="20241001 11:16:14.601" endtime="20241001 11:16:14.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:14.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:14.602" endtime="20241001 11:16:14.602"/>
</kw>
<status status="PASS" starttime="20241001 11:16:12.406" endtime="20241001 11:16:14.602"/>
</kw>
<msg timestamp="20241001 11:16:14.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:12.405" endtime="20241001 11:16:14.603"/>
</kw>
<msg timestamp="20241001 11:16:14.603" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=694af3841450e2153a5643f8839e3e7e39ca94818c11ad97c0a7485aaaf5b071</msg>
<status status="PASS" starttime="20241001 11:16:12.405" endtime="20241001 11:16:14.603"/>
</kw>
<status status="PASS" starttime="20241001 11:16:10.300" endtime="20241001 11:16:14.603"/>
</branch>
<status status="PASS" starttime="20241001 11:16:10.300" endtime="20241001 11:16:14.603"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:14.604" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:14.603" endtime="20241001 11:16:14.604"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:16:14.604" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:14.604" endtime="20241001 11:16:14.604"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:14.605" level="INFO">${secret} = ['694af3841450e2153a5643f8839e3e7e39ca94818c11ad97c0a7485aaaf5b071']</msg>
<status status="PASS" starttime="20241001 11:16:14.604" endtime="20241001 11:16:14.605"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:14.606" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:14.605" endtime="20241001 11:16:14.606"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:14.607" level="INFO">${secret} = 694af3841450e2153a5643f8839e3e7e39ca94818c11ad97c0a7485aaaf5b071</msg>
<status status="PASS" starttime="20241001 11:16:14.606" endtime="20241001 11:16:14.607"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:14.610" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:15.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:15.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:14.608" endtime="20241001 11:16:15.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:15.015" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:15.014" endtime="20241001 11:16:15.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:15.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:15.015" endtime="20241001 11:16:15.015"/>
</kw>
<status status="PASS" starttime="20241001 11:16:14.608" endtime="20241001 11:16:15.015"/>
</kw>
<msg timestamp="20241001 11:16:15.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:14.607" endtime="20241001 11:16:15.016"/>
</kw>
<status status="PASS" starttime="20241001 11:16:14.607" endtime="20241001 11:16:15.016"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:15.019" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:15.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:15.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:15.017" endtime="20241001 11:16:15.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:15.417" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:15.416" endtime="20241001 11:16:15.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:15.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:15.417" endtime="20241001 11:16:15.418"/>
</kw>
<status status="PASS" starttime="20241001 11:16:15.017" endtime="20241001 11:16:15.418"/>
</kw>
<msg timestamp="20241001 11:16:15.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:15.016" endtime="20241001 11:16:15.418"/>
</kw>
<status status="PASS" starttime="20241001 11:16:15.016" endtime="20241001 11:16:15.418"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:15.421" level="INFO">Running command 'aws configure set aws_secret_access_key 694af3841450e2153a5643f8839e3e7e39ca94818c11ad97c0a7485aaaf5b071 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:15.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:15.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:15.419" endtime="20241001 11:16:15.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:15.817" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:15.817" endtime="20241001 11:16:15.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:15.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:15.817" endtime="20241001 11:16:15.818"/>
</kw>
<status status="PASS" starttime="20241001 11:16:15.419" endtime="20241001 11:16:15.818"/>
</kw>
<msg timestamp="20241001 11:16:15.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:15.419" endtime="20241001 11:16:15.818"/>
</kw>
<status status="PASS" starttime="20241001 11:16:15.418" endtime="20241001 11:16:15.818"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:15.822" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:16.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:16.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:15.820" endtime="20241001 11:16:16.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:16.238" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:16.238" endtime="20241001 11:16:16.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:16.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:16.239" endtime="20241001 11:16:16.239"/>
</kw>
<status status="PASS" starttime="20241001 11:16:15.819" endtime="20241001 11:16:16.239"/>
</kw>
<msg timestamp="20241001 11:16:16.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:15.819" endtime="20241001 11:16:16.239"/>
</kw>
<status status="PASS" starttime="20241001 11:16:15.818" endtime="20241001 11:16:16.239"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:16.243" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:16.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:16.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:16.241" endtime="20241001 11:16:16.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:16.642" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:16.641" endtime="20241001 11:16:16.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:16.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:16.642" endtime="20241001 11:16:16.643"/>
</kw>
<status status="PASS" starttime="20241001 11:16:16.240" endtime="20241001 11:16:16.643"/>
</kw>
<msg timestamp="20241001 11:16:16.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:16.240" endtime="20241001 11:16:16.644"/>
</kw>
<status status="PASS" starttime="20241001 11:16:16.240" endtime="20241001 11:16:16.644"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.184" endtime="20241001 11:16:16.644"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.184" endtime="20241001 11:16:16.644"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:16:16.644" endtime="20241001 11:16:16.644"/>
</kw>
<status status="PASS" starttime="20241001 11:16:08.090" endtime="20241001 11:16:16.644"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:16.648" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:17.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:17.189" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:16:16.646" endtime="20241001 11:16:17.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:17.190" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:16:17 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:16:17.189" endtime="20241001 11:16:17.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:17.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:17.190" endtime="20241001 11:16:17.191"/>
</kw>
<msg timestamp="20241001 11:16:17.191" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:16:16.645" endtime="20241001 11:16:17.191"/>
</kw>
<msg timestamp="20241001 11:16:17.191" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:22 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:16:16.645" endtime="20241001 11:16:17.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:17.191" endtime="20241001 11:16:17.191"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:17.194" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:17.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:17.198" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:17.192" endtime="20241001 11:16:17.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:17.199" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:17.198" endtime="20241001 11:16:17.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:17.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:17.199" endtime="20241001 11:16:17.199"/>
</kw>
<msg timestamp="20241001 11:16:17.200" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:17.192" endtime="20241001 11:16:17.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:17.200" endtime="20241001 11:16:17.200"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:17.203" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:17.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:17.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:17.201" endtime="20241001 11:16:17.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:17.207" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:17.207" endtime="20241001 11:16:17.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:17.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:17.207" endtime="20241001 11:16:17.208"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.200" endtime="20241001 11:16:17.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:16:08.090" endtime="20241001 11:16:17.208"/>
</test>
<test id="s1-s20-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:16:17.210" endtime="20241001 11:16:17.211"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:17.214" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:17.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:17.218" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:16:17.212" endtime="20241001 11:16:17.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:17.218" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:16:17.218" endtime="20241001 11:16:17.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:17.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:17.219" endtime="20241001 11:16:17.219"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.212" endtime="20241001 11:16:17.219"/>
</kw>
<msg timestamp="20241001 11:16:17.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:17.211" endtime="20241001 11:16:17.219"/>
</kw>
<msg timestamp="20241001 11:16:17.220" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:16:17.211" endtime="20241001 11:16:17.220"/>
</kw>
<msg timestamp="20241001 11:16:17.220" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:17.211" endtime="20241001 11:16:17.220"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:16:17.220" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:17.220" endtime="20241001 11:16:17.220"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:17.224" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:17.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:17.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:17.222" endtime="20241001 11:16:17.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:17.297" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:17.296" endtime="20241001 11:16:17.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:17.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:17.297" endtime="20241001 11:16:17.298"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.222" endtime="20241001 11:16:17.298"/>
</kw>
<msg timestamp="20241001 11:16:17.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:17.221" endtime="20241001 11:16:17.298"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.221" endtime="20241001 11:16:17.298"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.221" endtime="20241001 11:16:17.298"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.210" endtime="20241001 11:16:17.298"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.210" endtime="20241001 11:16:17.298"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:17.302" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:19.400" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:16:19.400" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:17.299" endtime="20241001 11:16:19.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:19.401" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:19.400" endtime="20241001 11:16:19.401"/>
</kw>
<msg timestamp="20241001 11:16:19.401" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:17.299" endtime="20241001 11:16:19.401"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:19.402" endtime="20241001 11:16:19.402"/>
</kw>
<msg timestamp="20241001 11:16:19.402" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:16:19.402" endtime="20241001 11:16:19.402"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:19.406" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:21.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:21.597" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:16:19.404" endtime="20241001 11:16:21.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:21.598" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:16:21.597" endtime="20241001 11:16:21.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:21.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:21.598" endtime="20241001 11:16:21.598"/>
</kw>
<status status="PASS" starttime="20241001 11:16:19.403" endtime="20241001 11:16:21.599"/>
</kw>
<msg timestamp="20241001 11:16:21.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:19.403" endtime="20241001 11:16:21.599"/>
</kw>
<status status="PASS" starttime="20241001 11:16:19.403" endtime="20241001 11:16:21.599"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:21.603" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:23.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:23.665" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=abdc5b8f8dd3387da2ea9a52c32dc292838c7b76ebb615e0a0ef4717189cb93b</msg>
<status status="PASS" starttime="20241001 11:16:21.600" endtime="20241001 11:16:23.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:23.666" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=abdc5b8f8dd3387da2ea9a52c32dc292838c7b76ebb615e0a0ef4717189cb93b</msg>
<status status="PASS" starttime="20241001 11:16:23.665" endtime="20241001 11:16:23.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:23.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:23.666" endtime="20241001 11:16:23.666"/>
</kw>
<status status="PASS" starttime="20241001 11:16:21.600" endtime="20241001 11:16:23.667"/>
</kw>
<msg timestamp="20241001 11:16:23.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:21.600" endtime="20241001 11:16:23.667"/>
</kw>
<msg timestamp="20241001 11:16:23.667" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=abdc5b8f8dd3387da2ea9a52c32dc292838c7b76ebb615e0a0ef4717189cb93b</msg>
<status status="PASS" starttime="20241001 11:16:21.599" endtime="20241001 11:16:23.667"/>
</kw>
<status status="PASS" starttime="20241001 11:16:19.402" endtime="20241001 11:16:23.667"/>
</branch>
<status status="PASS" starttime="20241001 11:16:19.402" endtime="20241001 11:16:23.667"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:23.668" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:23.667" endtime="20241001 11:16:23.668"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:16:23.668" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:23.668" endtime="20241001 11:16:23.668"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:23.669" level="INFO">${secret} = ['abdc5b8f8dd3387da2ea9a52c32dc292838c7b76ebb615e0a0ef4717189cb93b']</msg>
<status status="PASS" starttime="20241001 11:16:23.668" endtime="20241001 11:16:23.669"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:23.670" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:23.669" endtime="20241001 11:16:23.670"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:23.671" level="INFO">${secret} = abdc5b8f8dd3387da2ea9a52c32dc292838c7b76ebb615e0a0ef4717189cb93b</msg>
<status status="PASS" starttime="20241001 11:16:23.670" endtime="20241001 11:16:23.671"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:23.674" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:24.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:24.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:23.672" endtime="20241001 11:16:24.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:24.066" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:24.065" endtime="20241001 11:16:24.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:24.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:24.066" endtime="20241001 11:16:24.066"/>
</kw>
<status status="PASS" starttime="20241001 11:16:23.671" endtime="20241001 11:16:24.067"/>
</kw>
<msg timestamp="20241001 11:16:24.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:23.671" endtime="20241001 11:16:24.067"/>
</kw>
<status status="PASS" starttime="20241001 11:16:23.671" endtime="20241001 11:16:24.067"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:24.070" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:24.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:24.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:24.068" endtime="20241001 11:16:24.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:24.485" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:24.485" endtime="20241001 11:16:24.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:24.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:24.485" endtime="20241001 11:16:24.486"/>
</kw>
<status status="PASS" starttime="20241001 11:16:24.068" endtime="20241001 11:16:24.486"/>
</kw>
<msg timestamp="20241001 11:16:24.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:24.068" endtime="20241001 11:16:24.486"/>
</kw>
<status status="PASS" starttime="20241001 11:16:24.067" endtime="20241001 11:16:24.486"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:24.489" level="INFO">Running command 'aws configure set aws_secret_access_key abdc5b8f8dd3387da2ea9a52c32dc292838c7b76ebb615e0a0ef4717189cb93b 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:24.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:24.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:24.487" endtime="20241001 11:16:24.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:24.888" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:24.887" endtime="20241001 11:16:24.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:24.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:24.888" endtime="20241001 11:16:24.888"/>
</kw>
<status status="PASS" starttime="20241001 11:16:24.487" endtime="20241001 11:16:24.889"/>
</kw>
<msg timestamp="20241001 11:16:24.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:24.487" endtime="20241001 11:16:24.889"/>
</kw>
<status status="PASS" starttime="20241001 11:16:24.486" endtime="20241001 11:16:24.889"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:24.893" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:25.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:25.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:24.890" endtime="20241001 11:16:25.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:25.276" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:25.275" endtime="20241001 11:16:25.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:25.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:25.276" endtime="20241001 11:16:25.277"/>
</kw>
<status status="PASS" starttime="20241001 11:16:24.890" endtime="20241001 11:16:25.277"/>
</kw>
<msg timestamp="20241001 11:16:25.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:24.889" endtime="20241001 11:16:25.277"/>
</kw>
<status status="PASS" starttime="20241001 11:16:24.889" endtime="20241001 11:16:25.277"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:25.281" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:25.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:25.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:25.278" endtime="20241001 11:16:25.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:25.678" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:25.677" endtime="20241001 11:16:25.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:25.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:25.678" endtime="20241001 11:16:25.678"/>
</kw>
<status status="PASS" starttime="20241001 11:16:25.278" endtime="20241001 11:16:25.678"/>
</kw>
<msg timestamp="20241001 11:16:25.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:25.278" endtime="20241001 11:16:25.678"/>
</kw>
<status status="PASS" starttime="20241001 11:16:25.277" endtime="20241001 11:16:25.679"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.299" endtime="20241001 11:16:25.679"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.298" endtime="20241001 11:16:25.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:16:25.679" endtime="20241001 11:16:25.679"/>
</kw>
<status status="PASS" starttime="20241001 11:16:17.209" endtime="20241001 11:16:25.679"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:25.683" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:26.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:26.215" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:16:25.680" endtime="20241001 11:16:26.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:26.216" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:16:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:16:26.215" endtime="20241001 11:16:26.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:26.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:26.216" endtime="20241001 11:16:26.217"/>
</kw>
<msg timestamp="20241001 11:16:26.217" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:16:25.680" endtime="20241001 11:16:26.217"/>
</kw>
<msg timestamp="20241001 11:16:26.217" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:07:32 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:16:25.679" endtime="20241001 11:16:26.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:26.217" endtime="20241001 11:16:26.218"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:26.220" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:26.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:26.225" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:16:26.218" endtime="20241001 11:16:26.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:26.226" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:16:26.225" endtime="20241001 11:16:26.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:26.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:26.226" endtime="20241001 11:16:26.227"/>
</kw>
<msg timestamp="20241001 11:16:26.227" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:16:26.218" endtime="20241001 11:16:26.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:26.227" endtime="20241001 11:16:26.227"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:26.230" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:26.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:26.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:26.228" endtime="20241001 11:16:26.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:26.238" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:26.238" endtime="20241001 11:16:26.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:26.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:26.239" endtime="20241001 11:16:26.239"/>
</kw>
<status status="PASS" starttime="20241001 11:16:26.227" endtime="20241001 11:16:26.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:16:17.209" endtime="20241001 11:16:26.239"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:16:03.653" endtime="20241001 11:16:26.241"/>
</suite>
<suite id="s1-s21" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-old2" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:16:27.028" endtime="20241001 11:16:27.029"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:27.032" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:27.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:27.036" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:16:27.030" endtime="20241001 11:16:27.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:27.037" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:16:27.036" endtime="20241001 11:16:27.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:27.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:27.037" endtime="20241001 11:16:27.037"/>
</kw>
<status status="PASS" starttime="20241001 11:16:27.029" endtime="20241001 11:16:27.037"/>
</kw>
<msg timestamp="20241001 11:16:27.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:27.029" endtime="20241001 11:16:27.037"/>
</kw>
<msg timestamp="20241001 11:16:27.038" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:16:27.029" endtime="20241001 11:16:27.038"/>
</kw>
<msg timestamp="20241001 11:16:27.038" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:27.029" endtime="20241001 11:16:27.038"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:16:27.038" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:27.038" endtime="20241001 11:16:27.038"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:27.041" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:27.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:27.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:27.040" endtime="20241001 11:16:27.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:27.079" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:27.078" endtime="20241001 11:16:27.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:27.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:27.079" endtime="20241001 11:16:27.079"/>
</kw>
<status status="PASS" starttime="20241001 11:16:27.039" endtime="20241001 11:16:27.079"/>
</kw>
<msg timestamp="20241001 11:16:27.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:27.039" endtime="20241001 11:16:27.079"/>
</kw>
<status status="PASS" starttime="20241001 11:16:27.039" endtime="20241001 11:16:27.079"/>
</kw>
<status status="PASS" starttime="20241001 11:16:27.038" endtime="20241001 11:16:27.080"/>
</kw>
<status status="PASS" starttime="20241001 11:16:27.028" endtime="20241001 11:16:27.080"/>
</kw>
<status status="PASS" starttime="20241001 11:16:27.027" endtime="20241001 11:16:27.080"/>
</kw>
<test id="s1-s21-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:16:27.081" level="INFO">${random} = 30261</msg>
<status status="PASS" starttime="20241001 11:16:27.081" endtime="20241001 11:16:27.081"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:27.085" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-30261 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:31.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:31.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:27.082" endtime="20241001 11:16:31.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:31.455" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:31.454" endtime="20241001 11:16:31.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:31.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:31.455" endtime="20241001 11:16:31.456"/>
</kw>
<status status="PASS" starttime="20241001 11:16:27.082" endtime="20241001 11:16:31.456"/>
</kw>
<msg timestamp="20241001 11:16:31.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:27.082" endtime="20241001 11:16:31.456"/>
</kw>
<msg timestamp="20241001 11:16:31.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:27.081" endtime="20241001 11:16:31.456"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:31.456" endtime="20241001 11:16:31.457"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:31.459" level="INFO">Running command 'cat /tmp/key-30261 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:31.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:31.463" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:31.457" endtime="20241001 11:16:31.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:31.464" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:31.464" endtime="20241001 11:16:31.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:31.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:31.464" endtime="20241001 11:16:31.465"/>
</kw>
<msg timestamp="20241001 11:16:31.465" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:31.457" endtime="20241001 11:16:31.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:31.465" endtime="20241001 11:16:31.465"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:31.468" level="INFO">Running command 'rm /tmp/key-30261 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:31.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:31.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:31.466" endtime="20241001 11:16:31.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:31.472" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:31.472" endtime="20241001 11:16:31.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:31.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:31.472" endtime="20241001 11:16:31.473"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.466" endtime="20241001 11:16:31.473"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:16:27.080" endtime="20241001 11:16:31.473"/>
</test>
<test id="s1-s21-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:16:31.475" endtime="20241001 11:16:31.475"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:31.479" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:31.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:31.482" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:16:31.477" endtime="20241001 11:16:31.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:31.483" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:16:31.483" endtime="20241001 11:16:31.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:31.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:31.483" endtime="20241001 11:16:31.484"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.476" endtime="20241001 11:16:31.484"/>
</kw>
<msg timestamp="20241001 11:16:31.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:31.476" endtime="20241001 11:16:31.484"/>
</kw>
<msg timestamp="20241001 11:16:31.484" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:16:31.476" endtime="20241001 11:16:31.484"/>
</kw>
<msg timestamp="20241001 11:16:31.484" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:31.475" endtime="20241001 11:16:31.484"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:16:31.485" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:31.484" endtime="20241001 11:16:31.485"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:31.488" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:31.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:31.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:31.486" endtime="20241001 11:16:31.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:31.509" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:31.509" endtime="20241001 11:16:31.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:31.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:31.509" endtime="20241001 11:16:31.510"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.486" endtime="20241001 11:16:31.510"/>
</kw>
<msg timestamp="20241001 11:16:31.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:31.486" endtime="20241001 11:16:31.510"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.485" endtime="20241001 11:16:31.510"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.485" endtime="20241001 11:16:31.510"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.475" endtime="20241001 11:16:31.510"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.474" endtime="20241001 11:16:31.510"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:31.514" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:33.752" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:16:33.752" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:31.512" endtime="20241001 11:16:33.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:33.753" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:33.753" endtime="20241001 11:16:33.753"/>
</kw>
<msg timestamp="20241001 11:16:33.754" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:31.511" endtime="20241001 11:16:33.754"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:33.754" endtime="20241001 11:16:33.754"/>
</kw>
<msg timestamp="20241001 11:16:33.754" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:16:33.754" endtime="20241001 11:16:33.755"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:33.758" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:35.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:35.887" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:16:33.756" endtime="20241001 11:16:35.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:35.888" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:16:35.887" endtime="20241001 11:16:35.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:35.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:35.888" endtime="20241001 11:16:35.888"/>
</kw>
<status status="PASS" starttime="20241001 11:16:33.756" endtime="20241001 11:16:35.889"/>
</kw>
<msg timestamp="20241001 11:16:35.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:33.755" endtime="20241001 11:16:35.889"/>
</kw>
<status status="PASS" starttime="20241001 11:16:33.755" endtime="20241001 11:16:35.889"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:35.893" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:38.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:38.049" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=77a12f5fd945c633064e0a00dc7129f1a92543931c8616980a5487f9c4520795</msg>
<status status="PASS" starttime="20241001 11:16:35.890" endtime="20241001 11:16:38.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:38.050" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=77a12f5fd945c633064e0a00dc7129f1a92543931c8616980a5487f9c4520795</msg>
<status status="PASS" starttime="20241001 11:16:38.049" endtime="20241001 11:16:38.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:38.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:38.050" endtime="20241001 11:16:38.050"/>
</kw>
<status status="PASS" starttime="20241001 11:16:35.890" endtime="20241001 11:16:38.050"/>
</kw>
<msg timestamp="20241001 11:16:38.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:35.890" endtime="20241001 11:16:38.051"/>
</kw>
<msg timestamp="20241001 11:16:38.051" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=77a12f5fd945c633064e0a00dc7129f1a92543931c8616980a5487f9c4520795</msg>
<status status="PASS" starttime="20241001 11:16:35.889" endtime="20241001 11:16:38.051"/>
</kw>
<status status="PASS" starttime="20241001 11:16:33.755" endtime="20241001 11:16:38.051"/>
</branch>
<status status="PASS" starttime="20241001 11:16:33.755" endtime="20241001 11:16:38.051"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:38.052" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:38.051" endtime="20241001 11:16:38.052"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:16:38.052" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:38.052" endtime="20241001 11:16:38.052"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:38.053" level="INFO">${secret} = ['77a12f5fd945c633064e0a00dc7129f1a92543931c8616980a5487f9c4520795']</msg>
<status status="PASS" starttime="20241001 11:16:38.052" endtime="20241001 11:16:38.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:38.054" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:38.053" endtime="20241001 11:16:38.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:38.055" level="INFO">${secret} = 77a12f5fd945c633064e0a00dc7129f1a92543931c8616980a5487f9c4520795</msg>
<status status="PASS" starttime="20241001 11:16:38.054" endtime="20241001 11:16:38.055"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:38.058" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:38.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:38.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:38.056" endtime="20241001 11:16:38.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:38.453" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:38.453" endtime="20241001 11:16:38.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:38.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:38.453" endtime="20241001 11:16:38.454"/>
</kw>
<status status="PASS" starttime="20241001 11:16:38.055" endtime="20241001 11:16:38.454"/>
</kw>
<msg timestamp="20241001 11:16:38.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:38.055" endtime="20241001 11:16:38.454"/>
</kw>
<status status="PASS" starttime="20241001 11:16:38.055" endtime="20241001 11:16:38.454"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:38.458" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:38.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:38.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:38.456" endtime="20241001 11:16:38.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:38.860" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:38.859" endtime="20241001 11:16:38.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:38.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:38.860" endtime="20241001 11:16:38.861"/>
</kw>
<status status="PASS" starttime="20241001 11:16:38.455" endtime="20241001 11:16:38.861"/>
</kw>
<msg timestamp="20241001 11:16:38.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:38.455" endtime="20241001 11:16:38.861"/>
</kw>
<status status="PASS" starttime="20241001 11:16:38.454" endtime="20241001 11:16:38.861"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:38.865" level="INFO">Running command 'aws configure set aws_secret_access_key 77a12f5fd945c633064e0a00dc7129f1a92543931c8616980a5487f9c4520795 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:39.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:39.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:38.862" endtime="20241001 11:16:39.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:39.264" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:39.263" endtime="20241001 11:16:39.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:39.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:39.264" endtime="20241001 11:16:39.265"/>
</kw>
<status status="PASS" starttime="20241001 11:16:38.862" endtime="20241001 11:16:39.265"/>
</kw>
<msg timestamp="20241001 11:16:39.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:38.862" endtime="20241001 11:16:39.265"/>
</kw>
<status status="PASS" starttime="20241001 11:16:38.861" endtime="20241001 11:16:39.265"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:39.269" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:39.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:39.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:39.266" endtime="20241001 11:16:39.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:39.659" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:39.658" endtime="20241001 11:16:39.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:39.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:39.659" endtime="20241001 11:16:39.659"/>
</kw>
<status status="PASS" starttime="20241001 11:16:39.266" endtime="20241001 11:16:39.659"/>
</kw>
<msg timestamp="20241001 11:16:39.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:39.266" endtime="20241001 11:16:39.660"/>
</kw>
<status status="PASS" starttime="20241001 11:16:39.265" endtime="20241001 11:16:39.660"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:39.663" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:40.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:40.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:39.661" endtime="20241001 11:16:40.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:40.066" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:40.066" endtime="20241001 11:16:40.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:40.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:40.067" endtime="20241001 11:16:40.067"/>
</kw>
<status status="PASS" starttime="20241001 11:16:39.661" endtime="20241001 11:16:40.067"/>
</kw>
<msg timestamp="20241001 11:16:40.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:39.660" endtime="20241001 11:16:40.068"/>
</kw>
<status status="PASS" starttime="20241001 11:16:39.660" endtime="20241001 11:16:40.068"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.511" endtime="20241001 11:16:40.068"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.511" endtime="20241001 11:16:40.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:16:40.068" endtime="20241001 11:16:40.068"/>
</kw>
<status status="PASS" starttime="20241001 11:16:31.474" endtime="20241001 11:16:40.068"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:40.072" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:40.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:40.585" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:16:40.070" endtime="20241001 11:16:40.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:40.586" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:16:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:16:40.586" endtime="20241001 11:16:40.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:40.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:40.587" endtime="20241001 11:16:40.587"/>
</kw>
<msg timestamp="20241001 11:16:40.587" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:16:40.069" endtime="20241001 11:16:40.587"/>
</kw>
<msg timestamp="20241001 11:16:40.587" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:16:40.069" endtime="20241001 11:16:40.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:40.588" endtime="20241001 11:16:40.588"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:40.591" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:40.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:40.596" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:40.589" endtime="20241001 11:16:40.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:40.597" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:40.596" endtime="20241001 11:16:40.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:40.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:40.597" endtime="20241001 11:16:40.598"/>
</kw>
<msg timestamp="20241001 11:16:40.598" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:16:40.588" endtime="20241001 11:16:40.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:40.598" endtime="20241001 11:16:40.599"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:40.602" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:40.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:40.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:40.599" endtime="20241001 11:16:40.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:40.606" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:40.606" endtime="20241001 11:16:40.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:40.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:40.607" endtime="20241001 11:16:40.607"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.599" endtime="20241001 11:16:40.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:16:31.474" endtime="20241001 11:16:40.607"/>
</test>
<test id="s1-s21-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:16:40.610" endtime="20241001 11:16:40.610"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:40.613" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:40.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:40.618" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:16:40.611" endtime="20241001 11:16:40.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:40.619" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:16:40.618" endtime="20241001 11:16:40.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:40.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:40.619" endtime="20241001 11:16:40.620"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.611" endtime="20241001 11:16:40.620"/>
</kw>
<msg timestamp="20241001 11:16:40.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:40.611" endtime="20241001 11:16:40.620"/>
</kw>
<msg timestamp="20241001 11:16:40.620" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:16:40.610" endtime="20241001 11:16:40.620"/>
</kw>
<msg timestamp="20241001 11:16:40.620" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:40.610" endtime="20241001 11:16:40.620"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:16:40.621" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:40.620" endtime="20241001 11:16:40.621"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:40.624" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:40.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:40.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:40.622" endtime="20241001 11:16:40.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:40.643" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:40.643" endtime="20241001 11:16:40.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:40.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:40.644" endtime="20241001 11:16:40.644"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.622" endtime="20241001 11:16:40.644"/>
</kw>
<msg timestamp="20241001 11:16:40.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:40.622" endtime="20241001 11:16:40.644"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.621" endtime="20241001 11:16:40.644"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.621" endtime="20241001 11:16:40.644"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.609" endtime="20241001 11:16:40.645"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.609" endtime="20241001 11:16:40.645"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:40.648" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:42.762" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:16:42.762" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:40.646" endtime="20241001 11:16:42.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:42.763" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:42.762" endtime="20241001 11:16:42.763"/>
</kw>
<msg timestamp="20241001 11:16:42.763" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:16:40.645" endtime="20241001 11:16:42.763"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:42.764" endtime="20241001 11:16:42.764"/>
</kw>
<msg timestamp="20241001 11:16:42.764" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:16:42.764" endtime="20241001 11:16:42.764"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:42.768" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:44.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:44.967" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:16:42.766" endtime="20241001 11:16:44.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:44.968" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:16:44.967" endtime="20241001 11:16:44.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:44.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:44.968" endtime="20241001 11:16:44.969"/>
</kw>
<status status="PASS" starttime="20241001 11:16:42.766" endtime="20241001 11:16:44.969"/>
</kw>
<msg timestamp="20241001 11:16:44.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:42.765" endtime="20241001 11:16:44.969"/>
</kw>
<status status="PASS" starttime="20241001 11:16:42.765" endtime="20241001 11:16:44.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:44.973" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:47.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:47.152" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7b3c61746ea34bab834c2cfdb564d206d7189a9cc155073d515099fc88a6e759</msg>
<status status="PASS" starttime="20241001 11:16:44.970" endtime="20241001 11:16:47.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:47.153" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7b3c61746ea34bab834c2cfdb564d206d7189a9cc155073d515099fc88a6e759</msg>
<status status="PASS" starttime="20241001 11:16:47.153" endtime="20241001 11:16:47.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:47.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:47.154" endtime="20241001 11:16:47.154"/>
</kw>
<status status="PASS" starttime="20241001 11:16:44.970" endtime="20241001 11:16:47.154"/>
</kw>
<msg timestamp="20241001 11:16:47.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:44.970" endtime="20241001 11:16:47.155"/>
</kw>
<msg timestamp="20241001 11:16:47.155" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7b3c61746ea34bab834c2cfdb564d206d7189a9cc155073d515099fc88a6e759</msg>
<status status="PASS" starttime="20241001 11:16:44.969" endtime="20241001 11:16:47.155"/>
</kw>
<status status="PASS" starttime="20241001 11:16:42.765" endtime="20241001 11:16:47.155"/>
</branch>
<status status="PASS" starttime="20241001 11:16:42.765" endtime="20241001 11:16:47.155"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:47.155" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:47.155" endtime="20241001 11:16:47.156"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:16:47.156" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:16:47.156" endtime="20241001 11:16:47.156"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:16:47.156" level="INFO">${secret} = ['7b3c61746ea34bab834c2cfdb564d206d7189a9cc155073d515099fc88a6e759']</msg>
<status status="PASS" starttime="20241001 11:16:47.156" endtime="20241001 11:16:47.157"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:47.158" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:47.157" endtime="20241001 11:16:47.158"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:16:47.158" level="INFO">${secret} = 7b3c61746ea34bab834c2cfdb564d206d7189a9cc155073d515099fc88a6e759</msg>
<status status="PASS" starttime="20241001 11:16:47.158" endtime="20241001 11:16:47.158"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:47.162" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:47.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:47.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:47.160" endtime="20241001 11:16:47.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:47.563" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:47.562" endtime="20241001 11:16:47.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:47.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:47.563" endtime="20241001 11:16:47.564"/>
</kw>
<status status="PASS" starttime="20241001 11:16:47.159" endtime="20241001 11:16:47.564"/>
</kw>
<msg timestamp="20241001 11:16:47.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:47.159" endtime="20241001 11:16:47.564"/>
</kw>
<status status="PASS" starttime="20241001 11:16:47.159" endtime="20241001 11:16:47.564"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:47.568" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:47.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:47.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:47.566" endtime="20241001 11:16:47.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:47.951" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:47.951" endtime="20241001 11:16:47.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:47.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:47.951" endtime="20241001 11:16:47.952"/>
</kw>
<status status="PASS" starttime="20241001 11:16:47.565" endtime="20241001 11:16:47.952"/>
</kw>
<msg timestamp="20241001 11:16:47.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:47.565" endtime="20241001 11:16:47.952"/>
</kw>
<status status="PASS" starttime="20241001 11:16:47.564" endtime="20241001 11:16:47.952"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:47.956" level="INFO">Running command 'aws configure set aws_secret_access_key 7b3c61746ea34bab834c2cfdb564d206d7189a9cc155073d515099fc88a6e759 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:48.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:48.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:47.954" endtime="20241001 11:16:48.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:48.349" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:48.349" endtime="20241001 11:16:48.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:48.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:48.350" endtime="20241001 11:16:48.350"/>
</kw>
<status status="PASS" starttime="20241001 11:16:47.953" endtime="20241001 11:16:48.350"/>
</kw>
<msg timestamp="20241001 11:16:48.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:47.953" endtime="20241001 11:16:48.350"/>
</kw>
<status status="PASS" starttime="20241001 11:16:47.952" endtime="20241001 11:16:48.350"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:48.354" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:48.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:48.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:48.352" endtime="20241001 11:16:48.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:48.751" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:48.751" endtime="20241001 11:16:48.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:48.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:48.751" endtime="20241001 11:16:48.752"/>
</kw>
<status status="PASS" starttime="20241001 11:16:48.351" endtime="20241001 11:16:48.752"/>
</kw>
<msg timestamp="20241001 11:16:48.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:48.351" endtime="20241001 11:16:48.752"/>
</kw>
<status status="PASS" starttime="20241001 11:16:48.351" endtime="20241001 11:16:48.752"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:48.756" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:49.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:49.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:48.753" endtime="20241001 11:16:49.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:49.150" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:49.149" endtime="20241001 11:16:49.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:49.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:49.150" endtime="20241001 11:16:49.150"/>
</kw>
<status status="PASS" starttime="20241001 11:16:48.753" endtime="20241001 11:16:49.151"/>
</kw>
<msg timestamp="20241001 11:16:49.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:48.753" endtime="20241001 11:16:49.151"/>
</kw>
<status status="PASS" starttime="20241001 11:16:48.752" endtime="20241001 11:16:49.151"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.645" endtime="20241001 11:16:49.151"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.645" endtime="20241001 11:16:49.151"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:16:49.151" endtime="20241001 11:16:49.151"/>
</kw>
<status status="PASS" starttime="20241001 11:16:40.609" endtime="20241001 11:16:49.151"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:49.155" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:49.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:49.654" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:42 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:16:49.153" endtime="20241001 11:16:49.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:49.655" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:42 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:16:49 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:16:49.655" endtime="20241001 11:16:49.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:49.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:49.656" endtime="20241001 11:16:49.656"/>
</kw>
<msg timestamp="20241001 11:16:49.656" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:42 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:16:49.152" endtime="20241001 11:16:49.656"/>
</kw>
<msg timestamp="20241001 11:16:49.656" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:10:42 GMT",
    "ContentLength": 31,
    "ETag": "\"fb4ca2f9b04581e9694629eefbe38db4\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:16:49.152" endtime="20241001 11:16:49.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:49.657" endtime="20241001 11:16:49.657"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:49.660" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:49.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:49.664" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:16:49.658" endtime="20241001 11:16:49.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:49.665" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:16:49.664" endtime="20241001 11:16:49.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:49.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:49.665" endtime="20241001 11:16:49.665"/>
</kw>
<msg timestamp="20241001 11:16:49.665" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:16:49.657" endtime="20241001 11:16:49.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:49.666" endtime="20241001 11:16:49.666"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:49.668" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:49.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:49.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:49.666" endtime="20241001 11:16:49.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:49.673" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:49.672" endtime="20241001 11:16:49.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:49.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:49.673" endtime="20241001 11:16:49.674"/>
</kw>
<status status="PASS" starttime="20241001 11:16:49.666" endtime="20241001 11:16:49.674"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:16:40.608" endtime="20241001 11:16:49.674"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:16:26.958" endtime="20241001 11:16:49.675"/>
</suite>
<suite id="s1-s22" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-generate-new2" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:16:50.419" endtime="20241001 11:16:50.419"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:50.423" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:50.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:50.427" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:16:50.421" endtime="20241001 11:16:50.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:50.427" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:16:50.427" endtime="20241001 11:16:50.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:50.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:50.428" endtime="20241001 11:16:50.428"/>
</kw>
<status status="PASS" starttime="20241001 11:16:50.420" endtime="20241001 11:16:50.428"/>
</kw>
<msg timestamp="20241001 11:16:50.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:50.420" endtime="20241001 11:16:50.428"/>
</kw>
<msg timestamp="20241001 11:16:50.429" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:16:50.420" endtime="20241001 11:16:50.429"/>
</kw>
<msg timestamp="20241001 11:16:50.429" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:50.420" endtime="20241001 11:16:50.429"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:16:50.429" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:16:50.429" endtime="20241001 11:16:50.429"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:50.433" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:50.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:50.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:50.431" endtime="20241001 11:16:50.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:50.458" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:50.458" endtime="20241001 11:16:50.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:50.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:50.459" endtime="20241001 11:16:50.459"/>
</kw>
<status status="PASS" starttime="20241001 11:16:50.430" endtime="20241001 11:16:50.459"/>
</kw>
<msg timestamp="20241001 11:16:50.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:50.430" endtime="20241001 11:16:50.459"/>
</kw>
<status status="PASS" starttime="20241001 11:16:50.430" endtime="20241001 11:16:50.459"/>
</kw>
<status status="PASS" starttime="20241001 11:16:50.429" endtime="20241001 11:16:50.459"/>
</kw>
<status status="PASS" starttime="20241001 11:16:50.419" endtime="20241001 11:16:50.460"/>
</kw>
<status status="PASS" starttime="20241001 11:16:50.418" endtime="20241001 11:16:50.460"/>
</kw>
<test id="s1-s22-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:50.464" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:53.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:53.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:50.462" endtime="20241001 11:16:53.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:53.170" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:53.169" endtime="20241001 11:16:53.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:53.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:53.170" endtime="20241001 11:16:53.171"/>
</kw>
<status status="PASS" starttime="20241001 11:16:50.461" endtime="20241001 11:16:53.171"/>
</kw>
<msg timestamp="20241001 11:16:53.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:50.461" endtime="20241001 11:16:53.171"/>
</kw>
<msg timestamp="20241001 11:16:53.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:50.461" endtime="20241001 11:16:53.171"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:53.171" endtime="20241001 11:16:53.172"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:53.175" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:16:55.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:55.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:53.173" endtime="20241001 11:16:55.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:55.968" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:55.968" endtime="20241001 11:16:55.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:55.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:55.969" endtime="20241001 11:16:55.969"/>
</kw>
<status status="PASS" starttime="20241001 11:16:53.173" endtime="20241001 11:16:55.969"/>
</kw>
<msg timestamp="20241001 11:16:55.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:53.172" endtime="20241001 11:16:55.969"/>
</kw>
<msg timestamp="20241001 11:16:55.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:53.172" endtime="20241001 11:16:55.969"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:16:55.970" endtime="20241001 11:16:55.970"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:16:50.460" endtime="20241001 11:16:55.970"/>
</test>
<test id="s1-s22-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:55.974" level="INFO">Running command 'echo "new2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:16:55.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:16:55.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:55.971" endtime="20241001 11:16:55.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:16:55.976" level="INFO"/>
<status status="PASS" starttime="20241001 11:16:55.976" endtime="20241001 11:16:55.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:16:55.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:16:55.977" endtime="20241001 11:16:55.977"/>
</kw>
<status status="PASS" starttime="20241001 11:16:55.971" endtime="20241001 11:16:55.977"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:16:55.981" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:00.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:00.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:55.978" endtime="20241001 11:17:00.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:00.812" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:00.811" endtime="20241001 11:17:00.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:00.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:00.812" endtime="20241001 11:17:00.813"/>
</kw>
<status status="PASS" starttime="20241001 11:16:55.978" endtime="20241001 11:17:00.813"/>
</kw>
<msg timestamp="20241001 11:17:00.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:16:55.978" endtime="20241001 11:17:00.813"/>
</kw>
<msg timestamp="20241001 11:17:00.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:16:55.977" endtime="20241001 11:17:00.813"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:00.813" endtime="20241001 11:17:00.814"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:00.816" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:00.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:00.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:00.814" endtime="20241001 11:17:00.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:00.821" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:00.821" endtime="20241001 11:17:00.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:00.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:00.821" endtime="20241001 11:17:00.822"/>
</kw>
<status status="PASS" starttime="20241001 11:17:00.814" endtime="20241001 11:17:00.822"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:16:55.970" endtime="20241001 11:17:00.822"/>
</test>
<test id="s1-s22-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:00.826" level="INFO">Running command 'ozone sh bucket create /s3v/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:03.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:03.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:00.824" endtime="20241001 11:17:03.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:03.556" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:03.555" endtime="20241001 11:17:03.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:03.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:03.556" endtime="20241001 11:17:03.556"/>
</kw>
<status status="PASS" starttime="20241001 11:17:00.824" endtime="20241001 11:17:03.557"/>
</kw>
<msg timestamp="20241001 11:17:03.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:00.824" endtime="20241001 11:17:03.557"/>
</kw>
<msg timestamp="20241001 11:17:03.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:00.823" endtime="20241001 11:17:03.557"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:03.557" endtime="20241001 11:17:03.557"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:17:00.823" endtime="20241001 11:17:03.558"/>
</test>
<test id="s1-s22-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:03.562" level="INFO">Running command 'echo "new2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:17:03.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:03.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:03.559" endtime="20241001 11:17:03.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:03.565" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:03.564" endtime="20241001 11:17:03.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:03.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:03.565" endtime="20241001 11:17:03.565"/>
</kw>
<status status="PASS" starttime="20241001 11:17:03.559" endtime="20241001 11:17:03.565"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:03.569" level="INFO">Running command 'ozone sh key put /s3v/new2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:07.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:07.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:03.567" endtime="20241001 11:17:07.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:07.902" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:07.901" endtime="20241001 11:17:07.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:07.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:07.902" endtime="20241001 11:17:07.902"/>
</kw>
<status status="PASS" starttime="20241001 11:17:03.566" endtime="20241001 11:17:07.903"/>
</kw>
<msg timestamp="20241001 11:17:07.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:03.566" endtime="20241001 11:17:07.903"/>
</kw>
<msg timestamp="20241001 11:17:07.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:03.566" endtime="20241001 11:17:07.903"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:07.903" endtime="20241001 11:17:07.903"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:07.906" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:07.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:07.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:07.904" endtime="20241001 11:17:07.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:07.911" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:07.910" endtime="20241001 11:17:07.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:07.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:07.911" endtime="20241001 11:17:07.911"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.904" endtime="20241001 11:17:07.912"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:17:03.558" endtime="20241001 11:17:07.912"/>
</test>
<test id="s1-s22-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:17:07.914" endtime="20241001 11:17:07.914"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:07.918" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:07.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:07.922" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:17:07.916" endtime="20241001 11:17:07.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:07.923" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:17:07.922" endtime="20241001 11:17:07.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:07.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:07.923" endtime="20241001 11:17:07.924"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.915" endtime="20241001 11:17:07.924"/>
</kw>
<msg timestamp="20241001 11:17:07.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:07.915" endtime="20241001 11:17:07.924"/>
</kw>
<msg timestamp="20241001 11:17:07.924" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:17:07.915" endtime="20241001 11:17:07.924"/>
</kw>
<msg timestamp="20241001 11:17:07.924" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:07.915" endtime="20241001 11:17:07.924"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:17:07.925" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:07.925" endtime="20241001 11:17:07.925"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:07.929" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:07.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:07.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:07.927" endtime="20241001 11:17:07.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:07.991" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:07.991" endtime="20241001 11:17:07.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:07.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:07.992" endtime="20241001 11:17:07.992"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.926" endtime="20241001 11:17:07.992"/>
</kw>
<msg timestamp="20241001 11:17:07.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:07.926" endtime="20241001 11:17:07.993"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.926" endtime="20241001 11:17:07.993"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.925" endtime="20241001 11:17:07.993"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.914" endtime="20241001 11:17:07.993"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.913" endtime="20241001 11:17:07.993"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:07.997" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:10.115" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:17:10.115" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:17:07.995" endtime="20241001 11:17:10.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:10.116" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:17:10.116" endtime="20241001 11:17:10.116"/>
</kw>
<msg timestamp="20241001 11:17:10.117" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:17:07.994" endtime="20241001 11:17:10.117"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:10.117" endtime="20241001 11:17:10.117"/>
</kw>
<msg timestamp="20241001 11:17:10.118" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:17:10.117" endtime="20241001 11:17:10.118"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:10.121" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:12.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:12.247" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:17:10.119" endtime="20241001 11:17:12.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:12.248" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:17:12.248" endtime="20241001 11:17:12.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:12.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:12.249" endtime="20241001 11:17:12.249"/>
</kw>
<status status="PASS" starttime="20241001 11:17:10.119" endtime="20241001 11:17:12.249"/>
</kw>
<msg timestamp="20241001 11:17:12.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:10.118" endtime="20241001 11:17:12.249"/>
</kw>
<status status="PASS" starttime="20241001 11:17:10.118" endtime="20241001 11:17:12.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:12.253" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:14.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:14.372" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8184b84d1f199199ac4fd9a6c46438db7a2dce440f669d07c12e1d7234523f40</msg>
<status status="PASS" starttime="20241001 11:17:12.251" endtime="20241001 11:17:14.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:14.373" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8184b84d1f199199ac4fd9a6c46438db7a2dce440f669d07c12e1d7234523f40</msg>
<status status="PASS" starttime="20241001 11:17:14.373" endtime="20241001 11:17:14.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:14.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:14.373" endtime="20241001 11:17:14.374"/>
</kw>
<status status="PASS" starttime="20241001 11:17:12.251" endtime="20241001 11:17:14.374"/>
</kw>
<msg timestamp="20241001 11:17:14.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:12.250" endtime="20241001 11:17:14.374"/>
</kw>
<msg timestamp="20241001 11:17:14.374" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8184b84d1f199199ac4fd9a6c46438db7a2dce440f669d07c12e1d7234523f40</msg>
<status status="PASS" starttime="20241001 11:17:12.250" endtime="20241001 11:17:14.374"/>
</kw>
<status status="PASS" starttime="20241001 11:17:10.118" endtime="20241001 11:17:14.374"/>
</branch>
<status status="PASS" starttime="20241001 11:17:10.118" endtime="20241001 11:17:14.374"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:17:14.375" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:17:14.375" endtime="20241001 11:17:14.375"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:17:14.376" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:17:14.375" endtime="20241001 11:17:14.376"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:17:14.376" level="INFO">${secret} = ['8184b84d1f199199ac4fd9a6c46438db7a2dce440f669d07c12e1d7234523f40']</msg>
<status status="PASS" starttime="20241001 11:17:14.376" endtime="20241001 11:17:14.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:17:14.377" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:14.376" endtime="20241001 11:17:14.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:17:14.378" level="INFO">${secret} = 8184b84d1f199199ac4fd9a6c46438db7a2dce440f669d07c12e1d7234523f40</msg>
<status status="PASS" starttime="20241001 11:17:14.377" endtime="20241001 11:17:14.378"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:14.382" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:14.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:14.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:14.379" endtime="20241001 11:17:14.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:14.770" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:14.770" endtime="20241001 11:17:14.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:14.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:14.771" endtime="20241001 11:17:14.771"/>
</kw>
<status status="PASS" starttime="20241001 11:17:14.379" endtime="20241001 11:17:14.771"/>
</kw>
<msg timestamp="20241001 11:17:14.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:14.379" endtime="20241001 11:17:14.771"/>
</kw>
<status status="PASS" starttime="20241001 11:17:14.378" endtime="20241001 11:17:14.771"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:14.775" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:15.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:15.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:14.773" endtime="20241001 11:17:15.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:15.170" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:15.169" endtime="20241001 11:17:15.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:15.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:15.170" endtime="20241001 11:17:15.170"/>
</kw>
<status status="PASS" starttime="20241001 11:17:14.772" endtime="20241001 11:17:15.170"/>
</kw>
<msg timestamp="20241001 11:17:15.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:14.772" endtime="20241001 11:17:15.171"/>
</kw>
<status status="PASS" starttime="20241001 11:17:14.772" endtime="20241001 11:17:15.171"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:15.174" level="INFO">Running command 'aws configure set aws_secret_access_key 8184b84d1f199199ac4fd9a6c46438db7a2dce440f669d07c12e1d7234523f40 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:15.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:15.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:15.172" endtime="20241001 11:17:15.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:15.569" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:15.569" endtime="20241001 11:17:15.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:15.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:15.570" endtime="20241001 11:17:15.570"/>
</kw>
<status status="PASS" starttime="20241001 11:17:15.172" endtime="20241001 11:17:15.570"/>
</kw>
<msg timestamp="20241001 11:17:15.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:15.171" endtime="20241001 11:17:15.570"/>
</kw>
<status status="PASS" starttime="20241001 11:17:15.171" endtime="20241001 11:17:15.571"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:15.574" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:15.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:15.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:15.572" endtime="20241001 11:17:15.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:15.958" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:15.958" endtime="20241001 11:17:15.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:15.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:15.959" endtime="20241001 11:17:15.959"/>
</kw>
<status status="PASS" starttime="20241001 11:17:15.571" endtime="20241001 11:17:15.959"/>
</kw>
<msg timestamp="20241001 11:17:15.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:15.571" endtime="20241001 11:17:15.959"/>
</kw>
<status status="PASS" starttime="20241001 11:17:15.571" endtime="20241001 11:17:15.959"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:15.963" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:16.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:16.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:15.961" endtime="20241001 11:17:16.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:16.357" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:16.356" endtime="20241001 11:17:16.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:16.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:16.357" endtime="20241001 11:17:16.357"/>
</kw>
<status status="PASS" starttime="20241001 11:17:15.960" endtime="20241001 11:17:16.358"/>
</kw>
<msg timestamp="20241001 11:17:16.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:15.960" endtime="20241001 11:17:16.358"/>
</kw>
<status status="PASS" starttime="20241001 11:17:15.960" endtime="20241001 11:17:16.358"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.994" endtime="20241001 11:17:16.358"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.993" endtime="20241001 11:17:16.358"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:17:16.358" endtime="20241001 11:17:16.358"/>
</kw>
<status status="PASS" starttime="20241001 11:17:07.913" endtime="20241001 11:17:16.358"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:17:16.359" level="INFO">${randStr} = 2509440680</msg>
<status status="PASS" starttime="20241001 11:17:16.359" endtime="20241001 11:17:16.359"/>
</kw>
<msg timestamp="20241001 11:17:16.360" level="INFO">${random} = ozone-test-2509440680</msg>
<status status="PASS" starttime="20241001 11:17:16.359" endtime="20241001 11:17:16.360"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:16.364" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new2-bucket-ozone-test-2509440680 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:16.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:16.909" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket-ozone-test-2509440680"
}</msg>
<status status="PASS" starttime="20241001 11:17:16.361" endtime="20241001 11:17:16.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:16.910" level="INFO">{
    "Location": "http://s3g:9878/new2-bucket-ozone-test-2509440680"
}</msg>
<status status="PASS" starttime="20241001 11:17:16.909" endtime="20241001 11:17:16.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:16.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:16.910" endtime="20241001 11:17:16.911"/>
</kw>
<status status="PASS" starttime="20241001 11:17:16.361" endtime="20241001 11:17:16.911"/>
</kw>
<msg timestamp="20241001 11:17:16.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:16.361" endtime="20241001 11:17:16.911"/>
</kw>
<msg timestamp="20241001 11:17:16.911" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket-ozone-test-2509440680"
}</msg>
<status status="PASS" starttime="20241001 11:17:16.360" endtime="20241001 11:17:16.911"/>
</kw>
<msg timestamp="20241001 11:17:16.911" level="INFO">${result} = {
    "Location": "http://s3g:9878/new2-bucket-ozone-test-2509440680"
}</msg>
<status status="PASS" starttime="20241001 11:17:16.360" endtime="20241001 11:17:16.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:16.911" endtime="20241001 11:17:16.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:16.912" endtime="20241001 11:17:16.912"/>
</kw>
<msg timestamp="20241001 11:17:16.912" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20241001 11:17:16.360" endtime="20241001 11:17:16.912"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241001 11:17:16.912" endtime="20241001 11:17:16.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:17:07.912" endtime="20241001 11:17:16.913"/>
</test>
<test id="s1-s22-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:16.917" level="INFO">Running command 'echo "new2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:17:16.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:16.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:16.915" endtime="20241001 11:17:16.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:16.920" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:16.919" endtime="20241001 11:17:16.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:16.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:16.920" endtime="20241001 11:17:16.920"/>
</kw>
<status status="PASS" starttime="20241001 11:17:16.914" endtime="20241001 11:17:16.920"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:16.923" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:17.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:17.844" level="INFO">${output} = {
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20241001 11:17:16.921" endtime="20241001 11:17:17.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:17.846" level="INFO">{
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20241001 11:17:17.845" endtime="20241001 11:17:17.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:17.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:17.846" endtime="20241001 11:17:17.847"/>
</kw>
<msg timestamp="20241001 11:17:17.847" level="INFO">${output} = {
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20241001 11:17:16.921" endtime="20241001 11:17:17.847"/>
</kw>
<msg timestamp="20241001 11:17:17.847" level="INFO">${output} = {
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\""
}</msg>
<status status="PASS" starttime="20241001 11:17:16.920" endtime="20241001 11:17:17.847"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:17.847" endtime="20241001 11:17:17.847"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:17.850" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:17.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:17.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:17.848" endtime="20241001 11:17:17.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:17.856" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:17.855" endtime="20241001 11:17:17.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:17.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:17.856" endtime="20241001 11:17:17.856"/>
</kw>
<status status="PASS" starttime="20241001 11:17:17.848" endtime="20241001 11:17:17.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:17:16.914" endtime="20241001 11:17:17.857"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241001 11:16:50.352" endtime="20241001 11:17:17.858"/>
</suite>
<suite id="s1-s23" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-new2" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:17:18.618" endtime="20241001 11:17:18.618"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:18.621" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:18.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:18.625" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:17:18.619" endtime="20241001 11:17:18.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:18.626" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:17:18.626" endtime="20241001 11:17:18.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:18.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:18.626" endtime="20241001 11:17:18.626"/>
</kw>
<status status="PASS" starttime="20241001 11:17:18.619" endtime="20241001 11:17:18.627"/>
</kw>
<msg timestamp="20241001 11:17:18.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:18.618" endtime="20241001 11:17:18.627"/>
</kw>
<msg timestamp="20241001 11:17:18.627" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:17:18.618" endtime="20241001 11:17:18.627"/>
</kw>
<msg timestamp="20241001 11:17:18.627" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:18.618" endtime="20241001 11:17:18.627"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:17:18.628" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:18.627" endtime="20241001 11:17:18.628"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:18.631" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:18.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:18.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:18.629" endtime="20241001 11:17:18.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:18.659" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:18.659" endtime="20241001 11:17:18.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:18.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:18.659" endtime="20241001 11:17:18.660"/>
</kw>
<status status="PASS" starttime="20241001 11:17:18.629" endtime="20241001 11:17:18.660"/>
</kw>
<msg timestamp="20241001 11:17:18.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:18.629" endtime="20241001 11:17:18.660"/>
</kw>
<status status="PASS" starttime="20241001 11:17:18.628" endtime="20241001 11:17:18.660"/>
</kw>
<status status="PASS" starttime="20241001 11:17:18.628" endtime="20241001 11:17:18.660"/>
</kw>
<status status="PASS" starttime="20241001 11:17:18.617" endtime="20241001 11:17:18.660"/>
</kw>
<status status="PASS" starttime="20241001 11:17:18.617" endtime="20241001 11:17:18.660"/>
</kw>
<test id="s1-s23-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:17:18.662" level="INFO">${random} = 44175</msg>
<status status="PASS" starttime="20241001 11:17:18.661" endtime="20241001 11:17:18.662"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:18.665" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-44175 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:22.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:22.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:18.663" endtime="20241001 11:17:22.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:22.667" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:22.667" endtime="20241001 11:17:22.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:22.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:22.667" endtime="20241001 11:17:22.668"/>
</kw>
<status status="PASS" starttime="20241001 11:17:18.662" endtime="20241001 11:17:22.668"/>
</kw>
<msg timestamp="20241001 11:17:22.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:18.662" endtime="20241001 11:17:22.668"/>
</kw>
<msg timestamp="20241001 11:17:22.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:18.662" endtime="20241001 11:17:22.669"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:22.669" endtime="20241001 11:17:22.669"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:22.672" level="INFO">Running command 'cat /tmp/key-44175 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:22.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:22.676" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:17:22.670" endtime="20241001 11:17:22.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:22.677" level="INFO">new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:17:22.676" endtime="20241001 11:17:22.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:22.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:22.677" endtime="20241001 11:17:22.677"/>
</kw>
<msg timestamp="20241001 11:17:22.677" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:17:22.669" endtime="20241001 11:17:22.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:22.677" endtime="20241001 11:17:22.678"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:22.681" level="INFO">Running command 'rm /tmp/key-44175 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:22.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:22.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:22.678" endtime="20241001 11:17:22.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:22.686" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:22.685" endtime="20241001 11:17:22.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:22.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:22.686" endtime="20241001 11:17:22.687"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.678" endtime="20241001 11:17:22.687"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:17:18.661" endtime="20241001 11:17:22.687"/>
</test>
<test id="s1-s23-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:17:22.689" endtime="20241001 11:17:22.689"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:22.693" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:22.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:22.697" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:17:22.691" endtime="20241001 11:17:22.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:22.698" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:17:22.697" endtime="20241001 11:17:22.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:22.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:22.698" endtime="20241001 11:17:22.698"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.690" endtime="20241001 11:17:22.698"/>
</kw>
<msg timestamp="20241001 11:17:22.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:22.690" endtime="20241001 11:17:22.698"/>
</kw>
<msg timestamp="20241001 11:17:22.699" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:17:22.690" endtime="20241001 11:17:22.699"/>
</kw>
<msg timestamp="20241001 11:17:22.699" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:22.690" endtime="20241001 11:17:22.699"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:17:22.699" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:22.699" endtime="20241001 11:17:22.699"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:22.703" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:22.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:22.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:22.701" endtime="20241001 11:17:22.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:22.732" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:22.732" endtime="20241001 11:17:22.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:22.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:22.732" endtime="20241001 11:17:22.733"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.701" endtime="20241001 11:17:22.733"/>
</kw>
<msg timestamp="20241001 11:17:22.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:22.700" endtime="20241001 11:17:22.733"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.700" endtime="20241001 11:17:22.733"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.699" endtime="20241001 11:17:22.733"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.689" endtime="20241001 11:17:22.733"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.688" endtime="20241001 11:17:22.733"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:22.737" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:24.831" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:17:24.831" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:17:22.735" endtime="20241001 11:17:24.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:24.832" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:17:24.832" endtime="20241001 11:17:24.833"/>
</kw>
<msg timestamp="20241001 11:17:24.833" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:17:22.734" endtime="20241001 11:17:24.833"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:24.833" endtime="20241001 11:17:24.833"/>
</kw>
<msg timestamp="20241001 11:17:24.833" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:17:24.833" endtime="20241001 11:17:24.834"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:24.837" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:26.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:26.904" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:17:24.835" endtime="20241001 11:17:26.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:26.905" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:17:26.905" endtime="20241001 11:17:26.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:26.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:26.906" endtime="20241001 11:17:26.906"/>
</kw>
<status status="PASS" starttime="20241001 11:17:24.834" endtime="20241001 11:17:26.906"/>
</kw>
<msg timestamp="20241001 11:17:26.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:24.834" endtime="20241001 11:17:26.906"/>
</kw>
<status status="PASS" starttime="20241001 11:17:24.834" endtime="20241001 11:17:26.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:26.910" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:29.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:29.038" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=75e842d53a946fc10d0b70725475b1895f065ceab5e7104185abf5a51c30ecad</msg>
<status status="PASS" starttime="20241001 11:17:26.908" endtime="20241001 11:17:29.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:29.039" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=75e842d53a946fc10d0b70725475b1895f065ceab5e7104185abf5a51c30ecad</msg>
<status status="PASS" starttime="20241001 11:17:29.039" endtime="20241001 11:17:29.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:29.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:29.039" endtime="20241001 11:17:29.040"/>
</kw>
<status status="PASS" starttime="20241001 11:17:26.907" endtime="20241001 11:17:29.040"/>
</kw>
<msg timestamp="20241001 11:17:29.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:26.907" endtime="20241001 11:17:29.040"/>
</kw>
<msg timestamp="20241001 11:17:29.040" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=75e842d53a946fc10d0b70725475b1895f065ceab5e7104185abf5a51c30ecad</msg>
<status status="PASS" starttime="20241001 11:17:26.907" endtime="20241001 11:17:29.040"/>
</kw>
<status status="PASS" starttime="20241001 11:17:24.834" endtime="20241001 11:17:29.041"/>
</branch>
<status status="PASS" starttime="20241001 11:17:24.834" endtime="20241001 11:17:29.041"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:17:29.041" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:17:29.041" endtime="20241001 11:17:29.041"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:17:29.042" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:17:29.041" endtime="20241001 11:17:29.042"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:17:29.042" level="INFO">${secret} = ['75e842d53a946fc10d0b70725475b1895f065ceab5e7104185abf5a51c30ecad']</msg>
<status status="PASS" starttime="20241001 11:17:29.042" endtime="20241001 11:17:29.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:17:29.043" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:29.042" endtime="20241001 11:17:29.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:17:29.044" level="INFO">${secret} = 75e842d53a946fc10d0b70725475b1895f065ceab5e7104185abf5a51c30ecad</msg>
<status status="PASS" starttime="20241001 11:17:29.044" endtime="20241001 11:17:29.044"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:29.048" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:29.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:29.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:29.046" endtime="20241001 11:17:29.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:29.440" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:29.439" endtime="20241001 11:17:29.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:29.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:29.440" endtime="20241001 11:17:29.440"/>
</kw>
<status status="PASS" starttime="20241001 11:17:29.045" endtime="20241001 11:17:29.440"/>
</kw>
<msg timestamp="20241001 11:17:29.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:29.045" endtime="20241001 11:17:29.441"/>
</kw>
<status status="PASS" starttime="20241001 11:17:29.045" endtime="20241001 11:17:29.441"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:29.444" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:29.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:29.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:29.442" endtime="20241001 11:17:29.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:29.834" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:29.834" endtime="20241001 11:17:29.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:29.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:29.834" endtime="20241001 11:17:29.835"/>
</kw>
<status status="PASS" starttime="20241001 11:17:29.442" endtime="20241001 11:17:29.835"/>
</kw>
<msg timestamp="20241001 11:17:29.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:29.441" endtime="20241001 11:17:29.835"/>
</kw>
<status status="PASS" starttime="20241001 11:17:29.441" endtime="20241001 11:17:29.835"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:29.839" level="INFO">Running command 'aws configure set aws_secret_access_key 75e842d53a946fc10d0b70725475b1895f065ceab5e7104185abf5a51c30ecad 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:30.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:30.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:29.837" endtime="20241001 11:17:30.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:30.272" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:30.271" endtime="20241001 11:17:30.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:30.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:30.272" endtime="20241001 11:17:30.277"/>
</kw>
<status status="PASS" starttime="20241001 11:17:29.836" endtime="20241001 11:17:30.277"/>
</kw>
<msg timestamp="20241001 11:17:30.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:29.836" endtime="20241001 11:17:30.277"/>
</kw>
<status status="PASS" starttime="20241001 11:17:29.835" endtime="20241001 11:17:30.277"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:30.281" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:30.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:30.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:30.279" endtime="20241001 11:17:30.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:30.752" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:30.752" endtime="20241001 11:17:30.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:30.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:30.752" endtime="20241001 11:17:30.753"/>
</kw>
<status status="PASS" starttime="20241001 11:17:30.278" endtime="20241001 11:17:30.753"/>
</kw>
<msg timestamp="20241001 11:17:30.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:30.278" endtime="20241001 11:17:30.753"/>
</kw>
<status status="PASS" starttime="20241001 11:17:30.277" endtime="20241001 11:17:30.753"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:30.757" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:31.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:31.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:30.755" endtime="20241001 11:17:31.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:31.166" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:31.164" endtime="20241001 11:17:31.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:31.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:31.166" endtime="20241001 11:17:31.167"/>
</kw>
<status status="PASS" starttime="20241001 11:17:30.754" endtime="20241001 11:17:31.168"/>
</kw>
<msg timestamp="20241001 11:17:31.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:30.754" endtime="20241001 11:17:31.168"/>
</kw>
<status status="PASS" starttime="20241001 11:17:30.753" endtime="20241001 11:17:31.168"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.734" endtime="20241001 11:17:31.168"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.733" endtime="20241001 11:17:31.168"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:17:31.169" endtime="20241001 11:17:31.169"/>
</kw>
<status status="PASS" starttime="20241001 11:17:22.688" endtime="20241001 11:17:31.169"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:31.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:31.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:31.710" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:17:07 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:17:31.171" endtime="20241001 11:17:31.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:31.711" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:17:07 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:17:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:17:31.711" endtime="20241001 11:17:31.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:31.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:31.712" endtime="20241001 11:17:31.712"/>
</kw>
<msg timestamp="20241001 11:17:31.712" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:17:07 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:17:31.170" endtime="20241001 11:17:31.712"/>
</kw>
<msg timestamp="20241001 11:17:31.713" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:17:07 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20241001 11:17:31.170" endtime="20241001 11:17:31.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:31.713" endtime="20241001 11:17:31.713"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:31.716" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:31.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:31.720" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:17:31.714" endtime="20241001 11:17:31.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:31.721" level="INFO">new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:17:31.720" endtime="20241001 11:17:31.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:31.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:31.721" endtime="20241001 11:17:31.721"/>
</kw>
<msg timestamp="20241001 11:17:31.721" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:17:31.713" endtime="20241001 11:17:31.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:31.722" endtime="20241001 11:17:31.722"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:31.724" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:31.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:31.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:31.722" endtime="20241001 11:17:31.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:31.729" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:31.728" endtime="20241001 11:17:31.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:31.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:31.729" endtime="20241001 11:17:31.729"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.722" endtime="20241001 11:17:31.730"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:17:22.687" endtime="20241001 11:17:31.730"/>
</test>
<test id="s1-s23-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:17:31.732" endtime="20241001 11:17:31.732"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:31.735" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:31.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:31.739" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:17:31.734" endtime="20241001 11:17:31.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:31.740" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:17:31.740" endtime="20241001 11:17:31.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:31.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:31.740" endtime="20241001 11:17:31.741"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.733" endtime="20241001 11:17:31.741"/>
</kw>
<msg timestamp="20241001 11:17:31.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:31.733" endtime="20241001 11:17:31.741"/>
</kw>
<msg timestamp="20241001 11:17:31.741" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:17:31.733" endtime="20241001 11:17:31.741"/>
</kw>
<msg timestamp="20241001 11:17:31.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:31.732" endtime="20241001 11:17:31.742"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:17:31.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:31.742" endtime="20241001 11:17:31.742"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:31.745" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:31.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:31.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:31.743" endtime="20241001 11:17:31.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:31.767" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:31.766" endtime="20241001 11:17:31.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:31.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:31.767" endtime="20241001 11:17:31.767"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.743" endtime="20241001 11:17:31.767"/>
</kw>
<msg timestamp="20241001 11:17:31.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:31.743" endtime="20241001 11:17:31.767"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.742" endtime="20241001 11:17:31.768"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.742" endtime="20241001 11:17:31.768"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.732" endtime="20241001 11:17:31.768"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.731" endtime="20241001 11:17:31.768"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:31.771" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:33.948" level="INFO">${rc} = 255</msg>
<msg timestamp="20241001 11:17:33.948" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:17:31.769" endtime="20241001 11:17:33.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:33.949" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:17:33.948" endtime="20241001 11:17:33.949"/>
</kw>
<msg timestamp="20241001 11:17:33.949" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20241001 11:17:31.769" endtime="20241001 11:17:33.949"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:33.950" endtime="20241001 11:17:33.950"/>
</kw>
<msg timestamp="20241001 11:17:33.950" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20241001 11:17:33.949" endtime="20241001 11:17:33.950"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:33.954" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:36.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:36.061" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:17:33.952" endtime="20241001 11:17:36.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:36.062" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241001 11:17:36.061" endtime="20241001 11:17:36.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:36.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:36.062" endtime="20241001 11:17:36.063"/>
</kw>
<status status="PASS" starttime="20241001 11:17:33.951" endtime="20241001 11:17:36.063"/>
</kw>
<msg timestamp="20241001 11:17:36.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:33.951" endtime="20241001 11:17:36.063"/>
</kw>
<status status="PASS" starttime="20241001 11:17:33.950" endtime="20241001 11:17:36.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:36.067" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:38.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:38.263" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2b8773bb88b9e1d6d77c269e5b4274ed08eb4be9ccac19c2173163240f05023e</msg>
<status status="PASS" starttime="20241001 11:17:36.064" endtime="20241001 11:17:38.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:38.264" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2b8773bb88b9e1d6d77c269e5b4274ed08eb4be9ccac19c2173163240f05023e</msg>
<status status="PASS" starttime="20241001 11:17:38.264" endtime="20241001 11:17:38.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:38.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:38.264" endtime="20241001 11:17:38.265"/>
</kw>
<status status="PASS" starttime="20241001 11:17:36.064" endtime="20241001 11:17:38.265"/>
</kw>
<msg timestamp="20241001 11:17:38.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:36.064" endtime="20241001 11:17:38.265"/>
</kw>
<msg timestamp="20241001 11:17:38.265" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=2b8773bb88b9e1d6d77c269e5b4274ed08eb4be9ccac19c2173163240f05023e</msg>
<status status="PASS" starttime="20241001 11:17:36.063" endtime="20241001 11:17:38.265"/>
</kw>
<status status="PASS" starttime="20241001 11:17:33.950" endtime="20241001 11:17:38.265"/>
</branch>
<status status="PASS" starttime="20241001 11:17:33.950" endtime="20241001 11:17:38.266"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:17:38.266" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:17:38.266" endtime="20241001 11:17:38.266"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241001 11:17:38.267" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241001 11:17:38.266" endtime="20241001 11:17:38.267"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241001 11:17:38.267" level="INFO">${secret} = ['2b8773bb88b9e1d6d77c269e5b4274ed08eb4be9ccac19c2173163240f05023e']</msg>
<status status="PASS" starttime="20241001 11:17:38.267" endtime="20241001 11:17:38.267"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:17:38.268" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:17:38.267" endtime="20241001 11:17:38.268"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241001 11:17:38.269" level="INFO">${secret} = 2b8773bb88b9e1d6d77c269e5b4274ed08eb4be9ccac19c2173163240f05023e</msg>
<status status="PASS" starttime="20241001 11:17:38.268" endtime="20241001 11:17:38.269"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:38.272" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:38.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:38.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:38.270" endtime="20241001 11:17:38.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:38.662" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:38.662" endtime="20241001 11:17:38.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:38.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:38.663" endtime="20241001 11:17:38.663"/>
</kw>
<status status="PASS" starttime="20241001 11:17:38.270" endtime="20241001 11:17:38.663"/>
</kw>
<msg timestamp="20241001 11:17:38.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:38.269" endtime="20241001 11:17:38.664"/>
</kw>
<status status="PASS" starttime="20241001 11:17:38.269" endtime="20241001 11:17:38.664"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:38.668" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:39.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:39.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:38.665" endtime="20241001 11:17:39.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:39.055" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:39.055" endtime="20241001 11:17:39.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:39.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:39.055" endtime="20241001 11:17:39.056"/>
</kw>
<status status="PASS" starttime="20241001 11:17:38.665" endtime="20241001 11:17:39.056"/>
</kw>
<msg timestamp="20241001 11:17:39.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:38.664" endtime="20241001 11:17:39.056"/>
</kw>
<status status="PASS" starttime="20241001 11:17:38.664" endtime="20241001 11:17:39.056"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:39.060" level="INFO">Running command 'aws configure set aws_secret_access_key 2b8773bb88b9e1d6d77c269e5b4274ed08eb4be9ccac19c2173163240f05023e 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:39.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:39.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:39.058" endtime="20241001 11:17:39.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:39.449" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:39.448" endtime="20241001 11:17:39.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:39.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:39.449" endtime="20241001 11:17:39.449"/>
</kw>
<status status="PASS" starttime="20241001 11:17:39.057" endtime="20241001 11:17:39.450"/>
</kw>
<msg timestamp="20241001 11:17:39.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:39.057" endtime="20241001 11:17:39.450"/>
</kw>
<status status="PASS" starttime="20241001 11:17:39.056" endtime="20241001 11:17:39.450"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:39.454" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:39.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:39.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:39.451" endtime="20241001 11:17:39.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:39.847" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:39.846" endtime="20241001 11:17:39.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:39.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:39.847" endtime="20241001 11:17:39.847"/>
</kw>
<status status="PASS" starttime="20241001 11:17:39.451" endtime="20241001 11:17:39.847"/>
</kw>
<msg timestamp="20241001 11:17:39.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:39.450" endtime="20241001 11:17:39.847"/>
</kw>
<status status="PASS" starttime="20241001 11:17:39.450" endtime="20241001 11:17:39.848"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:39.851" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:40.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:40.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:39.849" endtime="20241001 11:17:40.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:40.249" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:40.248" endtime="20241001 11:17:40.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:40.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:40.249" endtime="20241001 11:17:40.249"/>
</kw>
<status status="PASS" starttime="20241001 11:17:39.848" endtime="20241001 11:17:40.249"/>
</kw>
<msg timestamp="20241001 11:17:40.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:17:39.848" endtime="20241001 11:17:40.250"/>
</kw>
<status status="PASS" starttime="20241001 11:17:39.848" endtime="20241001 11:17:40.250"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.768" endtime="20241001 11:17:40.250"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.768" endtime="20241001 11:17:40.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241001 11:17:40.250" endtime="20241001 11:17:40.250"/>
</kw>
<status status="PASS" starttime="20241001 11:17:31.731" endtime="20241001 11:17:40.250"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:40.254" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:40.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:40.795" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:17:17 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:17:40.251" endtime="20241001 11:17:40.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:40.796" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:17:17 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 01 Oct 2024 11:17:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241001 11:17:40.796" endtime="20241001 11:17:40.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:40.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:40.796" endtime="20241001 11:17:40.797"/>
</kw>
<msg timestamp="20241001 11:17:40.797" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:17:17 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:17:40.251" endtime="20241001 11:17:40.797"/>
</kw>
<msg timestamp="20241001 11:17:40.797" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 01 Oct 2024 11:17:17 GMT",
    "ContentLength": 31,
    "ETag": "\"8cbf82f3120dc4413be659f08728ba3b\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241001 11:17:40.251" endtime="20241001 11:17:40.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:40.797" endtime="20241001 11:17:40.798"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:40.801" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:40.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:40.805" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:17:40.799" endtime="20241001 11:17:40.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:40.805" level="INFO">new2: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:17:40.805" endtime="20241001 11:17:40.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:40.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:40.806" endtime="20241001 11:17:40.806"/>
</kw>
<msg timestamp="20241001 11:17:40.806" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20241001 11:17:40.798" endtime="20241001 11:17:40.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:17:40.806" endtime="20241001 11:17:40.807"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:17:40.809" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:17:40.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:17:40.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:17:40.807" endtime="20241001 11:17:40.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:17:40.814" level="INFO"/>
<status status="PASS" starttime="20241001 11:17:40.813" endtime="20241001 11:17:40.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:17:40.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:17:40.814" endtime="20241001 11:17:40.814"/>
</kw>
<status status="PASS" starttime="20241001 11:17:40.807" endtime="20241001 11:17:40.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:17:31.730" endtime="20241001 11:17:40.815"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:17:18.548" endtime="20241001 11:17:40.816"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="571558"/>
</suite>
<statistics>
<total>
<stat pass="73" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="6" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="0" skip="0">om</stat>
<stat pass="3" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="73" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.4.0-1.5.0-SNAPSHOT-1-original-check-finalization">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.4.0-1.5.0-SNAPSHOT-1-original-generate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.4.0-1.5.0-SNAPSHOT-1-original-validate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-validate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="1.4.0-1.5.0-SNAPSHOT-1-original-prepare">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-old1</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-old1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s7" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-new1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-new1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-new1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-prepare">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s10" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-check-finalization">upgrade.1.4.0-1.5.0-SNAPSHOT-3-downgraded-check-finalization</stat>
<stat pass="3" fail="0" skip="0" id="s1-s11" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-validate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-3-downgraded-validate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s12" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-validate-new1">upgrade.1.4.0-1.5.0-SNAPSHOT-3-downgraded-validate-new1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s13" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-generate-old2">upgrade.1.4.0-1.5.0-SNAPSHOT-3-downgraded-generate-old2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s14" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-validate-old2">upgrade.1.4.0-1.5.0-SNAPSHOT-3-downgraded-validate-old2</stat>
<stat pass="4" fail="0" skip="0" id="s1-s15" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-generate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-3-downgraded-generate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="1.4.0-1.5.0-SNAPSHOT-3-downgraded-prepare">upgrade.1.4.0-1.5.0-SNAPSHOT-3-downgraded-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s17" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-finalize">upgrade.1.4.0-1.5.0-SNAPSHOT-4-finalized-finalize</stat>
<stat pass="2" fail="0" skip="0" id="s1-s18" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-check-finalization">upgrade.1.4.0-1.5.0-SNAPSHOT-4-finalized-check-finalization</stat>
<stat pass="3" fail="0" skip="0" id="s1-s19" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s20" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-new1">upgrade.1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s21" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-old2">upgrade.1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-old2</stat>
<stat pass="6" fail="0" skip="0" id="s1-s22" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-generate-new2">upgrade.1.4.0-1.5.0-SNAPSHOT-4-finalized-generate-new2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s23" name="1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-new2">upgrade.1.4.0-1.5.0-SNAPSHOT-4-finalized-validate-new2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
