<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20241001 11:06:01.901" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:03:00.434" endtime="20241001 11:03:00.435"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:00.439" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:00.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:00.444" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241001 11:03:00.436" endtime="20241001 11:03:00.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:00.446" level="INFO">scm</msg>
<status status="PASS" starttime="20241001 11:03:00.445" endtime="20241001 11:03:00.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:00.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:00.446" endtime="20241001 11:03:00.446"/>
</kw>
<status status="PASS" starttime="20241001 11:03:00.436" endtime="20241001 11:03:00.447"/>
</kw>
<msg timestamp="20241001 11:03:00.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:00.436" endtime="20241001 11:03:00.447"/>
</kw>
<msg timestamp="20241001 11:03:00.447" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241001 11:03:00.436" endtime="20241001 11:03:00.447"/>
</kw>
<msg timestamp="20241001 11:03:00.447" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:00.435" endtime="20241001 11:03:00.447"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:03:00.448" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:00.448" endtime="20241001 11:03:00.448"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:00.454" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:00.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:00.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:00.451" endtime="20241001 11:03:00.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:00.493" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:00.492" endtime="20241001 11:03:00.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:00.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:00.493" endtime="20241001 11:03:00.493"/>
</kw>
<status status="PASS" starttime="20241001 11:03:00.450" endtime="20241001 11:03:00.493"/>
</kw>
<msg timestamp="20241001 11:03:00.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:00.450" endtime="20241001 11:03:00.494"/>
</kw>
<status status="PASS" starttime="20241001 11:03:00.449" endtime="20241001 11:03:00.494"/>
</kw>
<status status="PASS" starttime="20241001 11:03:00.449" endtime="20241001 11:03:00.494"/>
</kw>
<status status="PASS" starttime="20241001 11:03:00.434" endtime="20241001 11:03:00.494"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241001 11:03:00.433" endtime="20241001 11:03:00.494"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20241001 11:03:00.392" endtime="20241001 11:03:00.495"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:03:46.771" endtime="20241001 11:03:46.772"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:46.775" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:46.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:46.779" level="INFO">${output} = dn</msg>
<status status="PASS" starttime="20241001 11:03:46.773" endtime="20241001 11:03:46.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:46.780" level="INFO">dn</msg>
<status status="PASS" starttime="20241001 11:03:46.779" endtime="20241001 11:03:46.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:46.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:46.780" endtime="20241001 11:03:46.780"/>
</kw>
<status status="PASS" starttime="20241001 11:03:46.773" endtime="20241001 11:03:46.781"/>
</kw>
<msg timestamp="20241001 11:03:46.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:46.772" endtime="20241001 11:03:46.781"/>
</kw>
<msg timestamp="20241001 11:03:46.781" level="INFO">${instance} = dn</msg>
<status status="PASS" starttime="20241001 11:03:46.772" endtime="20241001 11:03:46.781"/>
</kw>
<msg timestamp="20241001 11:03:46.781" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:46.772" endtime="20241001 11:03:46.781"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:03:46.782" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:46.781" endtime="20241001 11:03:46.782"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:46.785" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/dn@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:46.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:46.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:46.783" endtime="20241001 11:03:46.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:46.814" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:46.813" endtime="20241001 11:03:46.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:46.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:46.814" endtime="20241001 11:03:46.815"/>
</kw>
<status status="PASS" starttime="20241001 11:03:46.783" endtime="20241001 11:03:46.815"/>
</kw>
<msg timestamp="20241001 11:03:46.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:46.782" endtime="20241001 11:03:46.815"/>
</kw>
<status status="PASS" starttime="20241001 11:03:46.782" endtime="20241001 11:03:46.815"/>
</kw>
<status status="PASS" starttime="20241001 11:03:46.782" endtime="20241001 11:03:46.815"/>
</kw>
<status status="PASS" starttime="20241001 11:03:46.770" endtime="20241001 11:03:46.815"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241001 11:03:46.770" endtime="20241001 11:03:46.815"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20241001 11:03:46.730" endtime="20241001 11:03:46.816"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241001 11:03:50.935" endtime="20241001 11:03:50.935"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:50.939" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:50.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:50.943" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20241001 11:03:50.937" endtime="20241001 11:03:50.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:50.943" level="INFO">om</msg>
<status status="PASS" starttime="20241001 11:03:50.943" endtime="20241001 11:03:50.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:50.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:50.944" endtime="20241001 11:03:50.944"/>
</kw>
<status status="PASS" starttime="20241001 11:03:50.936" endtime="20241001 11:03:50.944"/>
</kw>
<msg timestamp="20241001 11:03:50.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:50.936" endtime="20241001 11:03:50.944"/>
</kw>
<msg timestamp="20241001 11:03:50.944" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20241001 11:03:50.936" endtime="20241001 11:03:50.944"/>
</kw>
<msg timestamp="20241001 11:03:50.945" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:50.935" endtime="20241001 11:03:50.945"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241001 11:03:50.945" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241001 11:03:50.945" endtime="20241001 11:03:50.945"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:50.949" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:50.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:50.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:50.947" endtime="20241001 11:03:50.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:50.997" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:50.996" endtime="20241001 11:03:50.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:50.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:50.997" endtime="20241001 11:03:50.998"/>
</kw>
<status status="PASS" starttime="20241001 11:03:50.946" endtime="20241001 11:03:50.998"/>
</kw>
<msg timestamp="20241001 11:03:50.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:50.946" endtime="20241001 11:03:50.998"/>
</kw>
<status status="PASS" starttime="20241001 11:03:50.946" endtime="20241001 11:03:50.998"/>
</kw>
<status status="PASS" starttime="20241001 11:03:50.945" endtime="20241001 11:03:50.998"/>
</kw>
<status status="PASS" starttime="20241001 11:03:50.934" endtime="20241001 11:03:50.998"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241001 11:03:50.934" endtime="20241001 11:03:50.998"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20241001 11:03:50.894" endtime="20241001 11:03:50.999"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s4-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:54.363" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:03:58.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:03:58.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:54.360" endtime="20241001 11:03:58.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:03:58.071" level="INFO"/>
<status status="PASS" starttime="20241001 11:03:58.071" endtime="20241001 11:03:58.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:03:58.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:03:58.072" endtime="20241001 11:03:58.072"/>
</kw>
<status status="PASS" starttime="20241001 11:03:54.360" endtime="20241001 11:03:58.072"/>
</kw>
<msg timestamp="20241001 11:03:58.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:54.360" endtime="20241001 11:03:58.072"/>
</kw>
<msg timestamp="20241001 11:03:58.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:54.359" endtime="20241001 11:03:58.073"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:03:58.073" endtime="20241001 11:03:58.073"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:03:58.076" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:02.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:02.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:58.074" endtime="20241001 11:04:02.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:02.741" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:02.740" endtime="20241001 11:04:02.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:02.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:02.741" endtime="20241001 11:04:02.742"/>
</kw>
<status status="PASS" starttime="20241001 11:03:58.074" endtime="20241001 11:04:02.742"/>
</kw>
<msg timestamp="20241001 11:04:02.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:03:58.073" endtime="20241001 11:04:02.742"/>
</kw>
<msg timestamp="20241001 11:04:02.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:03:58.073" endtime="20241001 11:04:02.742"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:02.742" endtime="20241001 11:04:02.742"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:03:54.359" endtime="20241001 11:04:02.742"/>
</test>
<test id="s1-s4-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:02.746" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:04:02.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:02.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:02.744" endtime="20241001 11:04:02.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:02.749" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:02.748" endtime="20241001 11:04:02.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:02.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:02.749" endtime="20241001 11:04:02.749"/>
</kw>
<status status="PASS" starttime="20241001 11:04:02.743" endtime="20241001 11:04:02.750"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:02.753" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:09.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:09.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:02.751" endtime="20241001 11:04:09.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:09.535" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:09.535" endtime="20241001 11:04:09.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:09.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:09.535" endtime="20241001 11:04:09.536"/>
</kw>
<status status="PASS" starttime="20241001 11:04:02.751" endtime="20241001 11:04:09.536"/>
</kw>
<msg timestamp="20241001 11:04:09.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:02.750" endtime="20241001 11:04:09.536"/>
</kw>
<msg timestamp="20241001 11:04:09.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:02.750" endtime="20241001 11:04:09.536"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:09.536" endtime="20241001 11:04:09.537"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:09.540" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:09.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:09.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:09.537" endtime="20241001 11:04:09.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:09.544" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:09.544" endtime="20241001 11:04:09.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:09.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:09.544" endtime="20241001 11:04:09.545"/>
</kw>
<status status="PASS" starttime="20241001 11:04:09.537" endtime="20241001 11:04:09.545"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:04:02.743" endtime="20241001 11:04:09.545"/>
</test>
<test id="s1-s4-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:04:09.547" level="INFO">${random} = 86419</msg>
<status status="PASS" starttime="20241001 11:04:09.546" endtime="20241001 11:04:09.547"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:09.550" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-86419 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:15.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:15.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:09.548" endtime="20241001 11:04:15.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:15.041" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:15.040" endtime="20241001 11:04:15.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:15.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:15.041" endtime="20241001 11:04:15.041"/>
</kw>
<status status="PASS" starttime="20241001 11:04:09.547" endtime="20241001 11:04:15.042"/>
</kw>
<msg timestamp="20241001 11:04:15.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:04:09.547" endtime="20241001 11:04:15.042"/>
</kw>
<msg timestamp="20241001 11:04:15.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:09.547" endtime="20241001 11:04:15.042"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:15.042" endtime="20241001 11:04:15.042"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:15.046" level="INFO">Running command 'cat /tmp/key-86419 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:15.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:15.050" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:04:15.043" endtime="20241001 11:04:15.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:15.051" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:04:15.050" endtime="20241001 11:04:15.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:15.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:15.051" endtime="20241001 11:04:15.052"/>
</kw>
<msg timestamp="20241001 11:04:15.052" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:04:15.042" endtime="20241001 11:04:15.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:04:15.052" endtime="20241001 11:04:15.052"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:04:15.056" level="INFO">Running command 'rm /tmp/key-86419 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:04:15.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:04:15.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:04:15.053" endtime="20241001 11:04:15.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:04:15.061" level="INFO"/>
<status status="PASS" starttime="20241001 11:04:15.060" endtime="20241001 11:04:15.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:04:15.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:04:15.061" endtime="20241001 11:04:15.062"/>
</kw>
<status status="PASS" starttime="20241001 11:04:15.052" endtime="20241001 11:04:15.062"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:04:09.546" endtime="20241001 11:04:15.062"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241001 11:03:54.319" endtime="20241001 11:04:15.063"/>
</suite>
<suite id="s1-s5" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s5-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:05:28.091" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:05:32.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:05:32.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:28.088" endtime="20241001 11:05:32.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:32.243" level="INFO"/>
<status status="PASS" starttime="20241001 11:05:32.242" endtime="20241001 11:05:32.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:05:32.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:05:32.243" endtime="20241001 11:05:32.243"/>
</kw>
<status status="PASS" starttime="20241001 11:05:28.088" endtime="20241001 11:05:32.244"/>
</kw>
<msg timestamp="20241001 11:05:32.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:05:28.088" endtime="20241001 11:05:32.244"/>
</kw>
<msg timestamp="20241001 11:05:32.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:28.087" endtime="20241001 11:05:32.244"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:05:32.244" endtime="20241001 11:05:32.244"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:05:32.248" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:05:35.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:05:35.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:32.246" endtime="20241001 11:05:35.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:35.906" level="INFO"/>
<status status="PASS" starttime="20241001 11:05:35.905" endtime="20241001 11:05:35.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:05:35.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:05:35.906" endtime="20241001 11:05:35.907"/>
</kw>
<status status="PASS" starttime="20241001 11:05:32.245" endtime="20241001 11:05:35.907"/>
</kw>
<msg timestamp="20241001 11:05:35.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:05:32.245" endtime="20241001 11:05:35.907"/>
</kw>
<msg timestamp="20241001 11:05:35.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:32.244" endtime="20241001 11:05:35.907"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:05:35.907" endtime="20241001 11:05:35.907"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:05:28.086" endtime="20241001 11:05:35.908"/>
</test>
<test id="s1-s5-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:05:35.912" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20241001 11:05:35.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:05:35.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:35.910" endtime="20241001 11:05:35.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:35.916" level="INFO"/>
<status status="PASS" starttime="20241001 11:05:35.914" endtime="20241001 11:05:35.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:05:35.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:05:35.916" endtime="20241001 11:05:35.916"/>
</kw>
<status status="PASS" starttime="20241001 11:05:35.909" endtime="20241001 11:05:35.916"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:05:35.920" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:05:41.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:05:41.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:35.918" endtime="20241001 11:05:41.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:41.800" level="INFO"/>
<status status="PASS" starttime="20241001 11:05:41.800" endtime="20241001 11:05:41.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:05:41.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:05:41.801" endtime="20241001 11:05:41.801"/>
</kw>
<status status="PASS" starttime="20241001 11:05:35.918" endtime="20241001 11:05:41.801"/>
</kw>
<msg timestamp="20241001 11:05:41.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:05:35.917" endtime="20241001 11:05:41.801"/>
</kw>
<msg timestamp="20241001 11:05:41.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:35.917" endtime="20241001 11:05:41.802"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:05:41.802" endtime="20241001 11:05:41.802"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:05:41.805" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:05:41.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:05:41.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:41.802" endtime="20241001 11:05:41.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:41.809" level="INFO"/>
<status status="PASS" starttime="20241001 11:05:41.809" endtime="20241001 11:05:41.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:05:41.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:05:41.809" endtime="20241001 11:05:41.810"/>
</kw>
<status status="PASS" starttime="20241001 11:05:41.802" endtime="20241001 11:05:41.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:05:35.909" endtime="20241001 11:05:41.810"/>
</test>
<test id="s1-s5-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241001 11:05:41.811" level="INFO">${random} = 23320</msg>
<status status="PASS" starttime="20241001 11:05:41.811" endtime="20241001 11:05:41.811"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:05:41.815" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-23320 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:05:47.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:05:47.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:41.813" endtime="20241001 11:05:47.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:47.901" level="INFO"/>
<status status="PASS" starttime="20241001 11:05:47.900" endtime="20241001 11:05:47.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:05:47.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:05:47.901" endtime="20241001 11:05:47.901"/>
</kw>
<status status="PASS" starttime="20241001 11:05:41.812" endtime="20241001 11:05:47.901"/>
</kw>
<msg timestamp="20241001 11:05:47.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:05:41.812" endtime="20241001 11:05:47.902"/>
</kw>
<msg timestamp="20241001 11:05:47.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:41.811" endtime="20241001 11:05:47.902"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:05:47.902" endtime="20241001 11:05:47.902"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:05:47.905" level="INFO">Running command 'cat /tmp/key-23320 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:05:47.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:05:47.909" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:05:47.903" endtime="20241001 11:05:47.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:47.910" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:05:47.910" endtime="20241001 11:05:47.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:05:47.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:05:47.910" endtime="20241001 11:05:47.911"/>
</kw>
<msg timestamp="20241001 11:05:47.911" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20241001 11:05:47.902" endtime="20241001 11:05:47.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241001 11:05:47.911" endtime="20241001 11:05:47.911"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:05:47.914" level="INFO">Running command 'rm /tmp/key-23320 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:05:47.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:05:47.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241001 11:05:47.912" endtime="20241001 11:05:47.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:47.918" level="INFO"/>
<status status="PASS" starttime="20241001 11:05:47.918" endtime="20241001 11:05:47.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:05:47.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:05:47.919" endtime="20241001 11:05:47.919"/>
</kw>
<status status="PASS" starttime="20241001 11:05:47.911" endtime="20241001 11:05:47.919"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:05:41.810" endtime="20241001 11:05:47.919"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20241001 11:05:28.046" endtime="20241001 11:05:47.920"/>
</suite>
<suite id="s1-s6" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s6-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241001 11:05:48.565" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20241001 11:05:48.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20241001 11:05:48.867" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20241001 11:05:48.562" endtime="20241001 11:05:48.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:48.868" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20241001 11:05:48.868" endtime="20241001 11:05:48.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241001 11:05:48.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241001 11:05:48.868" endtime="20241001 11:05:48.869"/>
</kw>
<status status="PASS" starttime="20241001 11:05:48.562" endtime="20241001 11:05:48.869"/>
</kw>
<msg timestamp="20241001 11:05:48.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241001 11:05:48.562" endtime="20241001 11:05:48.869"/>
</kw>
<msg timestamp="20241001 11:05:48.869" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20241001 11:05:48.561" endtime="20241001 11:05:48.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241001 11:05:48.870" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20241001 11:05:48.870" endtime="20241001 11:05:48.870"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241001 11:05:48.870" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20241001 11:05:48.870" endtime="20241001 11:05:48.870"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20241001 11:05:48.871" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20241001 11:05:48.871" endtime="20241001 11:05:48.871"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241001 11:05:48.872" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20241001 11:05:48.871" endtime="20241001 11:05:48.872"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20241001 11:05:48.873" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20241001 11:05:48.872" endtime="20241001 11:05:48.873"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20241001 11:05:48.873" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20241001 11:05:48.873" endtime="20241001 11:05:48.873"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241001 11:05:48.873" endtime="20241001 11:05:48.874"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241001 11:05:48.561" endtime="20241001 11:05:48.874"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241001 11:05:48.520" endtime="20241001 11:05:48.875"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="41267"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
