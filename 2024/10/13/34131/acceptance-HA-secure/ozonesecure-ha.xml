<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20241013 17:07:18.981" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:43:03.044" endtime="20241013 16:43:03.044"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:03.048" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:03.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:03.051" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:43:03.045" endtime="20241013 16:43:03.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:03.052" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:43:03.052" endtime="20241013 16:43:03.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:03.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:03.052" endtime="20241013 16:43:03.053"/>
</kw>
<status status="PASS" starttime="20241013 16:43:03.045" endtime="20241013 16:43:03.053"/>
</kw>
<msg timestamp="20241013 16:43:03.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:03.045" endtime="20241013 16:43:03.053"/>
</kw>
<msg timestamp="20241013 16:43:03.053" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:43:03.045" endtime="20241013 16:43:03.053"/>
</kw>
<msg timestamp="20241013 16:43:03.053" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:43:03.044" endtime="20241013 16:43:03.054"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:43:03.054" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:43:03.054" endtime="20241013 16:43:03.054"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:03.057" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:03.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:03.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:43:03.055" endtime="20241013 16:43:03.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:03.218" level="INFO"/>
<status status="PASS" starttime="20241013 16:43:03.217" endtime="20241013 16:43:03.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:03.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:03.218" endtime="20241013 16:43:03.219"/>
</kw>
<status status="PASS" starttime="20241013 16:43:03.055" endtime="20241013 16:43:03.219"/>
</kw>
<msg timestamp="20241013 16:43:03.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:03.055" endtime="20241013 16:43:03.219"/>
</kw>
<status status="PASS" starttime="20241013 16:43:03.054" endtime="20241013 16:43:03.219"/>
</kw>
<status status="PASS" starttime="20241013 16:43:03.054" endtime="20241013 16:43:03.219"/>
</kw>
<status status="PASS" starttime="20241013 16:43:03.043" endtime="20241013 16:43:03.220"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241013 16:43:03.043" endtime="20241013 16:43:03.220"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20241013 16:43:03.000" endtime="20241013 16:43:03.221"/>
</suite>
<suite id="s1-s2" name="Freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s2-s1" name="echoRPCLoad" source="/opt/hadoop/smoketest/freon/echoRPCLoad.robot">
<test id="s1-s2-s1-t1" name="Get Container ID" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin container create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:03.929" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:09.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:09.851" level="INFO">${output} = Container 1 is created.</msg>
<status status="PASS" starttime="20241013 16:43:03.927" endtime="20241013 16:43:09.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:09.852" level="INFO">Container 1 is created.</msg>
<status status="PASS" starttime="20241013 16:43:09.851" endtime="20241013 16:43:09.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:09.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:09.852" endtime="20241013 16:43:09.852"/>
</kw>
<status status="PASS" starttime="20241013 16:43:03.927" endtime="20241013 16:43:09.852"/>
</kw>
<msg timestamp="20241013 16:43:09.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:03.926" endtime="20241013 16:43:09.853"/>
</kw>
<msg timestamp="20241013 16:43:09.853" level="INFO">${result} = Container 1 is created.</msg>
<status status="PASS" starttime="20241013 16:43:03.926" endtime="20241013 16:43:09.853"/>
</kw>
<kw name="Execute" library="os">
<var>${containerID}</var>
<arg>ozone admin container list --count 1 --state=OPEN | grep -o '"containerID" *: *[^,}]*' | awk -F'[:,]' '{print $2}' | tr -d '" '</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:09.856" level="INFO">Running command 'ozone admin container list --count 1 --state=OPEN | grep -o '"containerID" *: *[^,}]*' | awk -F'[:,]' '{print $2}' | tr -d '" ' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:13.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:13.395" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20241013 16:43:09.854" endtime="20241013 16:43:13.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:13.396" level="INFO">1</msg>
<status status="PASS" starttime="20241013 16:43:13.396" endtime="20241013 16:43:13.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:13.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:13.397" endtime="20241013 16:43:13.397"/>
</kw>
<status status="PASS" starttime="20241013 16:43:09.854" endtime="20241013 16:43:13.397"/>
</kw>
<msg timestamp="20241013 16:43:13.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:09.853" endtime="20241013 16:43:13.397"/>
</kw>
<msg timestamp="20241013 16:43:13.397" level="INFO">${containerID} = 1</msg>
<status status="PASS" starttime="20241013 16:43:09.853" endtime="20241013 16:43:13.397"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${containerID}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:43:13.398" level="INFO">${containerID} = 1</msg>
<status status="PASS" starttime="20241013 16:43:13.398" endtime="20241013 16:43:13.398"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:03.925" endtime="20241013 16:43:13.398"/>
</test>
<test id="s1-s2-s1-t2" name="[Read] Ozone DataNode Echo RPC Load Generator with request payload and response payload" line="31">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dne -t=1 -n=${n} --payload-req=1 --payload-resp=1 --container-id=${containerID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:13.402" level="INFO">Running command 'ozone freon dne -t=1 -n=1 --payload-req=1 --payload-resp=1 --container-id=1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:19.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:19.666" level="INFO">${output} = 2024-10-13 16:43:15,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:15,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:13.400" endtime="20241013 16:43:19.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:19.667" level="INFO">2024-10-13 16:43:15,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:15,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:43:15,609 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:43:16,515 [main] WARN freon.DNRPCLoadGenerator: Read only is not set to true for GRPC, setting it to true
2024-10-13 16:43:17,734 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:43:18,150 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 3qawmf5pz5 and number-of-tests 1
2024-10-13 16:43:18,179 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:43:19,180 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:43:19,220 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=544.856972, max=544.856972, mean=544.856972, stddev=0.0, median=544.856972, p75=544.856972, p95=544.856972, p98=544.856972, p99=544.856972, p999=544.856972, mean_rate=0.9618367058295506, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:43:19,255 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:43:19,255 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:43:19,255 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:43:19.667" endtime="20241013 16:43:19.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:19.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:19.668" endtime="20241013 16:43:19.668"/>
</kw>
<status status="PASS" starttime="20241013 16:43:13.400" endtime="20241013 16:43:19.668"/>
</kw>
<msg timestamp="20241013 16:43:19.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:13.400" endtime="20241013 16:43:19.669"/>
</kw>
<msg timestamp="20241013 16:43:19.669" level="INFO">${result} = 2024-10-13 16:43:15,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:15,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:13.399" endtime="20241013 16:43:19.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:43:19.669" endtime="20241013 16:43:19.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:13.399" endtime="20241013 16:43:19.669"/>
</test>
<test id="s1-s2-s1-t3" name="[Read] Ozone DataNode Echo RPC Load Generator with request payload and empty response payload" line="35">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dne -t=1 -n=${n} --payload-req=1 --container-id=${containerID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:19.675" level="INFO">Running command 'ozone freon dne -t=1 -n=1 --payload-req=1 --container-id=1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:25.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:25.840" level="INFO">${output} = 2024-10-13 16:43:21,878 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:21,970 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:19.672" endtime="20241013 16:43:25.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:25.841" level="INFO">2024-10-13 16:43:21,878 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:21,970 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:43:21,970 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:43:22,986 [main] WARN freon.DNRPCLoadGenerator: Read only is not set to true for GRPC, setting it to true
2024-10-13 16:43:24,000 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:43:24,361 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ushuob1ppi and number-of-tests 1
2024-10-13 16:43:24,386 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:43:25,387 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:43:25,435 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=376.761313, max=376.761313, mean=376.761313, stddev=0.0, median=376.761313, p75=376.761313, p95=376.761313, p98=376.761313, p99=376.761313, p999=376.761313, mean_rate=0.956524246471601, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:43:25,436 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:43:25,436 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:43:25,436 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:43:25.841" endtime="20241013 16:43:25.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:25.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:25.842" endtime="20241013 16:43:25.842"/>
</kw>
<status status="PASS" starttime="20241013 16:43:19.672" endtime="20241013 16:43:25.842"/>
</kw>
<msg timestamp="20241013 16:43:25.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:19.671" endtime="20241013 16:43:25.842"/>
</kw>
<msg timestamp="20241013 16:43:25.843" level="INFO">${result} = 2024-10-13 16:43:21,878 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:21,970 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:19.671" endtime="20241013 16:43:25.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:43:25.843" endtime="20241013 16:43:25.843"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:19.670" endtime="20241013 16:43:25.843"/>
</test>
<test id="s1-s2-s1-t4" name="[Read] Ozone DataNode Echo RPC Load Generator with empty request payload and response payload" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dne -t=1 -n=${n} --payload-resp=1 --container-id=${containerID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:25.849" level="INFO">Running command 'ozone freon dne -t=1 -n=1 --payload-resp=1 --container-id=1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:32.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:32.014" level="INFO">${output} = 2024-10-13 16:43:27,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:27,910 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:25.846" endtime="20241013 16:43:32.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:32.015" level="INFO">2024-10-13 16:43:27,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:27,910 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:43:27,910 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:43:28,934 [main] WARN freon.DNRPCLoadGenerator: Read only is not set to true for GRPC, setting it to true
2024-10-13 16:43:30,093 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:43:30,512 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lrgzemhe1a and number-of-tests 1
2024-10-13 16:43:30,532 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:43:31,533 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:43:31,623 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=438.200018, max=438.200018, mean=438.200018, stddev=0.0, median=438.200018, p75=438.200018, p95=438.200018, p98=438.200018, p99=438.200018, p999=438.200018, mean_rate=0.9193425015040099, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:43:31,627 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:43:31,627 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:43:31,628 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:43:32.014" endtime="20241013 16:43:32.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:32.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:32.015" endtime="20241013 16:43:32.016"/>
</kw>
<status status="PASS" starttime="20241013 16:43:25.846" endtime="20241013 16:43:32.016"/>
</kw>
<msg timestamp="20241013 16:43:32.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:25.845" endtime="20241013 16:43:32.016"/>
</kw>
<msg timestamp="20241013 16:43:32.016" level="INFO">${result} = 2024-10-13 16:43:27,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:27,910 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:25.845" endtime="20241013 16:43:32.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:43:32.016" endtime="20241013 16:43:32.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:25.844" endtime="20241013 16:43:32.017"/>
</test>
<test id="s1-s2-s1-t5" name="[Read] Ozone DataNode Echo RPC Load Generator with empty request payload and empty response payload no sleep time one xceiver client" line="43">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dne -t=1 -n=${n} --sleep-time-ms=0 --clients=1 --container-id=${containerID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:32.022" level="INFO">Running command 'ozone freon dne -t=1 -n=1 --sleep-time-ms=0 --clients=1 --container-id=1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:38.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:38.205" level="INFO">${output} = 2024-10-13 16:43:34,067 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:34,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:32.019" endtime="20241013 16:43:38.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:38.206" level="INFO">2024-10-13 16:43:34,067 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:34,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:43:34,173 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:43:35,240 [main] WARN freon.DNRPCLoadGenerator: Read only is not set to true for GRPC, setting it to true
2024-10-13 16:43:36,278 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:43:36,718 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wljap50s48 and number-of-tests 1
2024-10-13 16:43:36,766 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:43:37,767 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:43:37,804 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=413.904348, max=413.904348, mean=413.904348, stddev=0.0, median=413.904348, p75=413.904348, p95=413.904348, p98=413.904348, p99=413.904348, p999=413.904348, mean_rate=0.9717714286588325, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:43:37,805 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:43:37,805 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:43:37,805 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:43:38.205" endtime="20241013 16:43:38.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:38.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:38.206" endtime="20241013 16:43:38.206"/>
</kw>
<status status="PASS" starttime="20241013 16:43:32.019" endtime="20241013 16:43:38.207"/>
</kw>
<msg timestamp="20241013 16:43:38.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:32.019" endtime="20241013 16:43:38.207"/>
</kw>
<msg timestamp="20241013 16:43:38.207" level="INFO">${result} = 2024-10-13 16:43:34,067 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:34,173 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:32.018" endtime="20241013 16:43:38.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:43:38.207" endtime="20241013 16:43:38.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:32.017" endtime="20241013 16:43:38.208"/>
</test>
<test id="s1-s2-s1-t6" name="[Read] Ozone Echo RPC Load Generator with request payload and response payload" line="47">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:38.216" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:42.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:42.758" level="INFO">${output} = 2024-10-13 16:43:40,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:40,627 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:38.212" endtime="20241013 16:43:42.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:42.759" level="INFO">2024-10-13 16:43:40,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:40,627 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:43:40,627 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:43:41,612 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gdefqxfh2m and number-of-tests 1
2024-10-13 16:43:41,658 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:43:42,659 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:43:42,678 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=494.770474, max=494.770474, mean=494.770474, stddev=0.0, median=494.770474, p75=494.770474, p95=494.770474, p98=494.770474, p99=494.770474, p999=494.770474, mean_rate=0.9856842472684743, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:43:42,680 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:43:42,680 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:43:42,680 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:43:42.758" endtime="20241013 16:43:42.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:42.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:42.759" endtime="20241013 16:43:42.760"/>
</kw>
<status status="PASS" starttime="20241013 16:43:38.212" endtime="20241013 16:43:42.760"/>
</kw>
<msg timestamp="20241013 16:43:42.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:38.212" endtime="20241013 16:43:42.760"/>
</kw>
<msg timestamp="20241013 16:43:42.760" level="INFO">${result} = 2024-10-13 16:43:40,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:40,627 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:38.211" endtime="20241013 16:43:42.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:43:42.760" endtime="20241013 16:43:42.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:38.210" endtime="20241013 16:43:42.761"/>
</test>
<test id="s1-s2-s1-t7" name="[Read] Ozone Echo RPC Load Generator with request payload and empty response payload" line="51">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:42.766" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:46.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:46.804" level="INFO">${output} = 2024-10-13 16:43:44,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:44,905 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:42.763" endtime="20241013 16:43:46.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:46.805" level="INFO">2024-10-13 16:43:44,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:44,905 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:43:44,905 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:43:45,668 [main] INFO freon.BaseFreonGenerator: Executing test with prefix j35vrvmfko and number-of-tests 1
2024-10-13 16:43:45,722 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:43:46,722 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:43:46,749 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=466.412232, max=466.412232, mean=466.412232, stddev=0.0, median=466.412232, p75=466.412232, p95=466.412232, p98=466.412232, p99=466.412232, p999=466.412232, mean_rate=0.9807034927241985, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:43:46,750 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:43:46,750 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:43:46,750 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:43:46.804" endtime="20241013 16:43:46.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:46.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:46.805" endtime="20241013 16:43:46.806"/>
</kw>
<status status="PASS" starttime="20241013 16:43:42.763" endtime="20241013 16:43:46.806"/>
</kw>
<msg timestamp="20241013 16:43:46.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:42.762" endtime="20241013 16:43:46.806"/>
</kw>
<msg timestamp="20241013 16:43:46.806" level="INFO">${result} = 2024-10-13 16:43:44,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:44,905 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:42.762" endtime="20241013 16:43:46.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:43:46.806" endtime="20241013 16:43:46.807"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:42.761" endtime="20241013 16:43:46.807"/>
</test>
<test id="s1-s2-s1-t8" name="[Read] Ozone Echo RPC Load Generator with empty request payload and response payload" line="55">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:46.811" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:51.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:51.119" level="INFO">${output} = 2024-10-13 16:43:48,942 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:49,031 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:46.809" endtime="20241013 16:43:51.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:51.120" level="INFO">2024-10-13 16:43:48,942 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:49,031 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:43:49,031 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:43:49,990 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 1fs1zqhxm5 and number-of-tests 1
2024-10-13 16:43:50,043 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:43:51,043 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:43:51,063 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=421.589719, max=421.589719, mean=421.589719, stddev=0.0, median=421.589719, p75=421.589719, p95=421.589719, p98=421.589719, p99=421.589719, p999=421.589719, mean_rate=0.9867402769124367, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:43:51,064 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:43:51,064 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:43:51,064 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:43:51.119" endtime="20241013 16:43:51.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:51.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:51.120" endtime="20241013 16:43:51.120"/>
</kw>
<status status="PASS" starttime="20241013 16:43:46.809" endtime="20241013 16:43:51.120"/>
</kw>
<msg timestamp="20241013 16:43:51.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:46.808" endtime="20241013 16:43:51.121"/>
</kw>
<msg timestamp="20241013 16:43:51.121" level="INFO">${result} = 2024-10-13 16:43:48,942 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:49,031 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:46.808" endtime="20241013 16:43:51.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:43:51.121" endtime="20241013 16:43:51.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:46.807" endtime="20241013 16:43:51.121"/>
</test>
<test id="s1-s2-s1-t9" name="[Read] Ozone Echo RPC Load Generator with empty request payload and empty response payload" line="59">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:51.126" level="INFO">Running command 'ozone freon ome -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:55.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:55.082" level="INFO">${output} = 2024-10-13 16:43:53,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:53,143 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:51.124" endtime="20241013 16:43:55.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:55.083" level="INFO">2024-10-13 16:43:53,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:53,143 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:43:53,143 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:43:53,896 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2tfda44dx4 and number-of-tests 1
2024-10-13 16:43:53,936 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:43:54,936 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:43:55,005 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=478.723428, max=478.723428, mean=478.723428, stddev=0.0, median=478.723428, p75=478.723428, p95=478.723428, p98=478.723428, p99=478.723428, p999=478.723428, mean_rate=0.9523977599338015, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:43:55,006 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:43:55,006 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:43:55,006 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:43:55.082" endtime="20241013 16:43:55.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:55.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:55.083" endtime="20241013 16:43:55.084"/>
</kw>
<status status="PASS" starttime="20241013 16:43:51.123" endtime="20241013 16:43:55.084"/>
</kw>
<msg timestamp="20241013 16:43:55.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:51.123" endtime="20241013 16:43:55.084"/>
</kw>
<msg timestamp="20241013 16:43:55.084" level="INFO">${result} = 2024-10-13 16:43:53,031 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:53,143 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:51.123" endtime="20241013 16:43:55.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:43:55.084" endtime="20241013 16:43:55.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:51.122" endtime="20241013 16:43:55.085"/>
</test>
<test id="s1-s2-s1-t10" name="[Write] Ozone Echo RPC Load Generator with request payload and response payload" line="63">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --payload-resp=1 --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:55.090" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --payload-resp=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:43:59.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:43:59.355" level="INFO">${output} = 2024-10-13 16:43:57,251 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:57,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:55.087" endtime="20241013 16:43:59.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:43:59.356" level="INFO">2024-10-13 16:43:57,251 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:57,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:43:57,369 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:43:58,059 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dmhbi2b5h8 and number-of-tests 1
2024-10-13 16:43:58,107 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:43:59,108 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:43:59,140 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=650.918553, max=650.918553, mean=650.918553, stddev=0.0, median=650.918553, p75=650.918553, p95=650.918553, p98=650.918553, p99=650.918553, p999=650.918553, mean_rate=0.9728876260115672, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:43:59,147 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:43:59,147 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:43:59,147 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:43:59.356" endtime="20241013 16:43:59.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:43:59.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:43:59.357" endtime="20241013 16:43:59.357"/>
</kw>
<status status="PASS" starttime="20241013 16:43:55.087" endtime="20241013 16:43:59.357"/>
</kw>
<msg timestamp="20241013 16:43:59.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:55.087" endtime="20241013 16:43:59.357"/>
</kw>
<msg timestamp="20241013 16:43:59.358" level="INFO">${result} = 2024-10-13 16:43:57,251 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:43:57,368 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:55.086" endtime="20241013 16:43:59.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:43:59.358" endtime="20241013 16:43:59.358"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:55.086" endtime="20241013 16:43:59.358"/>
</test>
<test id="s1-s2-s1-t11" name="[Write] Ozone Echo RPC Load Generator with request payload and empty response payload" line="67">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:43:59.363" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:44:03.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:44:03.483" level="INFO">${output} = 2024-10-13 16:44:01,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:01,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:59.361" endtime="20241013 16:44:03.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:44:03.484" level="INFO">2024-10-13 16:44:01,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:01,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:44:01,529 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:44:02,335 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ojhwm3obmq and number-of-tests 1
2024-10-13 16:44:02,386 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:03,386 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:44:03,411 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=543.485928, max=543.485928, mean=543.485928, stddev=0.0, median=543.485928, p75=543.485928, p95=543.485928, p98=543.485928, p99=543.485928, p999=543.485928, mean_rate=0.981891558217276, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:44:03,412 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:44:03,412 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:44:03,412 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:44:03.483" endtime="20241013 16:44:03.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:44:03.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:44:03.484" endtime="20241013 16:44:03.485"/>
</kw>
<status status="PASS" starttime="20241013 16:43:59.361" endtime="20241013 16:44:03.485"/>
</kw>
<msg timestamp="20241013 16:44:03.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:43:59.360" endtime="20241013 16:44:03.485"/>
</kw>
<msg timestamp="20241013 16:44:03.485" level="INFO">${result} = 2024-10-13 16:44:01,419 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:01,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:43:59.360" endtime="20241013 16:44:03.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:44:03.485" endtime="20241013 16:44:03.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:43:59.359" endtime="20241013 16:44:03.486"/>
</test>
<test id="s1-s2-s1-t12" name="[Write] Ozone Echo RPC Load Generator with empty request payload and response payload" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-resp=1 --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:44:03.491" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-resp=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:44:07.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:44:07.657" level="INFO">${output} = 2024-10-13 16:44:05,518 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:05,632 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:03.489" endtime="20241013 16:44:07.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:44:07.657" level="INFO">2024-10-13 16:44:05,518 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:05,632 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:44:05,632 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:44:06,481 [main] INFO freon.BaseFreonGenerator: Executing test with prefix f7bj59aaxc and number-of-tests 1
2024-10-13 16:44:06,536 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:07,536 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:44:07,556 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=574.688909, max=574.688909, mean=574.688909, stddev=0.0, median=574.688909, p75=574.688909, p95=574.688909, p98=574.688909, p99=574.688909, p999=574.688909, mean_rate=0.9853973377283631, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:44:07,556 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:44:07,557 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:44:07,557 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:44:07.657" endtime="20241013 16:44:07.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:44:07.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:44:07.658" endtime="20241013 16:44:07.658"/>
</kw>
<status status="PASS" starttime="20241013 16:44:03.488" endtime="20241013 16:44:07.658"/>
</kw>
<msg timestamp="20241013 16:44:07.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:44:03.488" endtime="20241013 16:44:07.659"/>
</kw>
<msg timestamp="20241013 16:44:07.659" level="INFO">${result} = 2024-10-13 16:44:05,518 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:05,632 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:03.487" endtime="20241013 16:44:07.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:44:07.659" endtime="20241013 16:44:07.659"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:44:03.487" endtime="20241013 16:44:07.660"/>
</test>
<test id="s1-s2-s1-t13" name="[Write] Ozone Echo RPC Load Generator with empty request payload and empty response payload" line="75">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:44:07.664" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:44:12.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:44:12.015" level="INFO">${output} = 2024-10-13 16:44:10,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:10,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:07.662" endtime="20241013 16:44:12.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:44:12.016" level="INFO">2024-10-13 16:44:10,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:10,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:44:10,135 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:44:10,856 [main] INFO freon.BaseFreonGenerator: Executing test with prefix c8erkmkgom and number-of-tests 1
2024-10-13 16:44:10,909 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:11,910 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:44:11,927 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=386.275091, max=386.275091, mean=386.275091, stddev=0.0, median=386.275091, p75=386.275091, p95=386.275091, p98=386.275091, p99=386.275091, p999=386.275091, mean_rate=0.9811918291654677, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:44:11,928 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2024-10-13 16:44:11,928 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:44:11,928 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:44:12.015" endtime="20241013 16:44:12.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:44:12.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:44:12.016" endtime="20241013 16:44:12.017"/>
</kw>
<status status="PASS" starttime="20241013 16:44:07.661" endtime="20241013 16:44:12.017"/>
</kw>
<msg timestamp="20241013 16:44:12.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:44:07.661" endtime="20241013 16:44:12.017"/>
</kw>
<msg timestamp="20241013 16:44:12.017" level="INFO">${result} = 2024-10-13 16:44:10,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:10,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:07.661" endtime="20241013 16:44:12.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:44:12.017" endtime="20241013 16:44:12.018"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:44:07.660" endtime="20241013 16:44:12.018"/>
</test>
<doc>Test freon echo RPC commands</doc>
<status status="PASS" starttime="20241013 16:43:03.903" endtime="20241013 16:44:12.019"/>
</suite>
<suite id="s1-s2-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 16:44:12.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:44:12.029" endtime="20241013 16:44:12.029"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20241013 16:44:12.030" endtime="20241013 16:44:12.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20241013 16:44:12.030" endtime="20241013 16:44:12.030"/>
</kw>
<status status="PASS" starttime="20241013 16:44:12.028" endtime="20241013 16:44:12.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:44:12.028" endtime="20241013 16:44:12.030"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20241013 16:44:12.022" endtime="20241013 16:44:12.030"/>
</suite>
<suite id="s1-s2-s3" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s2-s3-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:44:12.041" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:44:19.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:44:19.676" level="INFO">${output} = 2024-10-13 16:44:13,980 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:14,074 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:12.038" endtime="20241013 16:44:19.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:44:19.677" level="INFO">2024-10-13 16:44:13,980 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:14,074 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:44:14,075 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:44:14,150 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2024-10-13 16:44:14,199 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:14,232 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:44:15,202 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:16,075 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2024-10-13 16:44:16,160 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2024-10-13 16:44:16,203 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:16,916 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:44:17,032 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:44:17,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:17,254 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:44:18,205 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:19,205 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:44:19,292 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2405.295067, max=2405.295067, mean=2405.295067, stddev=0.0, median=2405.295067, p75=2405.295067, p95=2405.295067, p98=2405.295067, p99=2405.295067, p999=2405.295067, mean_rate=0.3274240257716341, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:44:19,292 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2024-10-13 16:44:19,292 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:44:19,292 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:44:19.676" endtime="20241013 16:44:19.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:44:19.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:44:19.677" endtime="20241013 16:44:19.677"/>
</kw>
<status status="PASS" starttime="20241013 16:44:12.038" endtime="20241013 16:44:19.678"/>
</kw>
<msg timestamp="20241013 16:44:19.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:44:12.038" endtime="20241013 16:44:19.678"/>
</kw>
<msg timestamp="20241013 16:44:19.678" level="INFO">${result} = 2024-10-13 16:44:13,980 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:14,074 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:12.037" endtime="20241013 16:44:19.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:44:19.678" endtime="20241013 16:44:19.678"/>
</kw>
<status status="PASS" starttime="20241013 16:44:12.036" endtime="20241013 16:44:19.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:44:12.036" endtime="20241013 16:44:19.679"/>
</test>
<test id="s1-s2-s3-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:44:19.684" level="INFO">Running command 'ozone freon omkg --om-service-id=omservice -t 1 -n1 -p omkg  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:44:24.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:44:24.668" level="INFO">${output} = 2024-10-13 16:44:21,657 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:21,775 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:19.682" endtime="20241013 16:44:24.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:44:24.669" level="INFO">2024-10-13 16:44:21,657 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:21,775 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:44:21,775 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:44:21,839 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg and number-of-tests 1
2024-10-13 16:44:21,884 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:21,887 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:44:22,885 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:23,885 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:44:24,554 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=145.225165, max=145.225165, mean=145.225165, stddev=0.0, median=145.225165, p75=145.225165, p95=145.225165, p98=145.225165, p99=145.225165, p999=145.225165, mean_rate=0.9497620125764009, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:44:24,555 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:44:24,556 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:44:24,556 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:44:24.669" endtime="20241013 16:44:24.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:44:24.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:44:24.669" endtime="20241013 16:44:24.670"/>
</kw>
<status status="PASS" starttime="20241013 16:44:19.681" endtime="20241013 16:44:24.670"/>
</kw>
<msg timestamp="20241013 16:44:24.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:44:19.681" endtime="20241013 16:44:24.670"/>
</kw>
<msg timestamp="20241013 16:44:24.670" level="INFO">${result} = 2024-10-13 16:44:21,657 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:21,775 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:19.681" endtime="20241013 16:44:24.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:44:24.671" endtime="20241013 16:44:24.671"/>
</kw>
<status status="PASS" starttime="20241013 16:44:19.680" endtime="20241013 16:44:24.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:44:19.679" endtime="20241013 16:44:24.671"/>
</test>
<test id="s1-s2-s3-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:44:24.677" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n1 -p ombg  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:44:29.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:44:29.688" level="INFO">${output} = 2024-10-13 16:44:26,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:26,890 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:24.674" endtime="20241013 16:44:29.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:44:29.689" level="INFO">2024-10-13 16:44:26,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:26,890 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:44:26,890 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:44:26,979 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg and number-of-tests 1
2024-10-13 16:44:27,042 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:44:27,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:28,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:44:29,048 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:44:29,596 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=59.975803, max=59.975803, mean=59.975803, stddev=0.0, median=59.975803, p75=59.975803, p95=59.975803, p98=59.975803, p99=59.975803, p999=59.975803, mean_rate=0.9813248532211565, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:44:29,597 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:44:29,597 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:44:29,597 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:44:29.688" endtime="20241013 16:44:29.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:44:29.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:44:29.689" endtime="20241013 16:44:29.690"/>
</kw>
<status status="PASS" starttime="20241013 16:44:24.674" endtime="20241013 16:44:29.690"/>
</kw>
<msg timestamp="20241013 16:44:29.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:44:24.674" endtime="20241013 16:44:29.690"/>
</kw>
<msg timestamp="20241013 16:44:29.690" level="INFO">${result} = 2024-10-13 16:44:26,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:26,890 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:24.673" endtime="20241013 16:44:29.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:44:29.690" endtime="20241013 16:44:29.690"/>
</kw>
<status status="PASS" starttime="20241013 16:44:24.672" endtime="20241013 16:44:29.691"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:44:24.672" endtime="20241013 16:44:29.691"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20241013 16:44:12.031" endtime="20241013 16:44:29.691"/>
</suite>
<suite id="s1-s2-s4" name="Hsync" source="/opt/hadoop/smoketest/freon/hsync.robot">
<kw name="Create volume and bucket" type="SETUP">
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:44:29.713" level="INFO">Running command 'ozone sh volume create /hsync-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:44:33.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:44:33.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:44:29.711" endtime="20241013 16:44:33.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:44:33.624" level="INFO"/>
<status status="PASS" starttime="20241013 16:44:33.623" endtime="20241013 16:44:33.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:44:33.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:44:33.624" endtime="20241013 16:44:33.624"/>
</kw>
<status status="PASS" starttime="20241013 16:44:29.710" endtime="20241013 16:44:33.624"/>
</kw>
<msg timestamp="20241013 16:44:33.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:44:29.710" endtime="20241013 16:44:33.624"/>
</kw>
<status status="PASS" starttime="20241013 16:44:29.710" endtime="20241013 16:44:33.625"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:44:33.628" level="INFO">Running command 'ozone sh bucket create /hsync-volume/hsync-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:44:37.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:44:37.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:44:33.626" endtime="20241013 16:44:37.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:44:37.600" level="INFO"/>
<status status="PASS" starttime="20241013 16:44:37.600" endtime="20241013 16:44:37.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:44:37.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:44:37.601" endtime="20241013 16:44:37.601"/>
</kw>
<status status="PASS" starttime="20241013 16:44:33.625" endtime="20241013 16:44:37.601"/>
</kw>
<msg timestamp="20241013 16:44:37.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:44:33.625" endtime="20241013 16:44:37.601"/>
</kw>
<status status="PASS" starttime="20241013 16:44:33.625" endtime="20241013 16:44:37.601"/>
</kw>
<status status="PASS" starttime="20241013 16:44:29.710" endtime="20241013 16:44:37.602"/>
</kw>
<test id="s1-s2-s4-t1" name="Generate key for o3fs by HSYNC" line="37">
<kw name="Format FS URL" library="fs">
<var>${path}</var>
<arg>o3fs</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:44:37.606" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20241013 16:44:37.605" endtime="20241013 16:44:37.606"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:44:37.606" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20241013 16:44:37.606" endtime="20241013 16:44:37.606"/>
</kw>
<status status="PASS" starttime="20241013 16:44:37.605" endtime="20241013 16:44:37.606"/>
</kw>
<msg timestamp="20241013 16:44:37.606" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20241013 16:44:37.604" endtime="20241013 16:44:37.607"/>
</kw>
<status status="PASS" starttime="20241013 16:44:37.604" endtime="20241013 16:44:37.607"/>
</kw>
<msg timestamp="20241013 16:44:37.607" level="INFO">${url} = o3fs://hsync-bucket.hsync-volume.omservice/</msg>
<status status="PASS" starttime="20241013 16:44:37.603" endtime="20241013 16:44:37.607"/>
</kw>
<msg timestamp="20241013 16:44:37.607" level="INFO">${path} = o3fs://hsync-bucket.hsync-volume.omservice/</msg>
<status status="PASS" starttime="20241013 16:44:37.602" endtime="20241013 16:44:37.607"/>
</kw>
<kw name="Freon DFSG" library="freon">
<arg>sync=HSYNC</arg>
<arg>path=${path}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dfsg -n ${n} --sync ${sync} -s ${size} --path ${path} --buffer ${buffer} --copy-buffer ${copy-buffer} -p ${prefix} -t ${threads} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:44:37.611" level="INFO">Running command 'ozone freon dfsg -n 1000 --sync HSYNC -s 10240 --path o3fs://hsync-bucket.hsync-volume.omservice/ --buffer 1024 --copy-buffer 1024 -p dfsg -t 1  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:45:26.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:45:26.406" level="INFO">${output} = 2024-10-13 16:44:39,762 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:39,854 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:37.609" endtime="20241013 16:45:26.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:45:26.407" level="INFO">2024-10-13 16:44:39,762 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:39,854 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:44:39,854 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:44:39,922 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dfsg and number-of-tests 1000
2024-10-13 16:44:39,969 [main] INFO freon.BaseFreonGenerator: Disabling FS cache: fs.o3fs.impl.disable.cache
2024-10-13 16:44:39,976 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:44:40,556 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:44:40,976 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:44:41,942 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:44:41,977 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:44:42,047 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:44:42,267 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:44:42,977 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:44:43,431 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2024-10-13 16:44:43,977 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (8 out of 1000)
2024-10-13 16:44:44,978 [Thread-5] INFO freon.ProgressBar: Progress: 2.10 % (21 out of 1000)
2024-10-13 16:44:45,978 [Thread-5] INFO freon.ProgressBar: Progress: 3.50 % (35 out of 1000)
2024-10-13 16:44:46,979 [Thread-5] INFO freon.ProgressBar: Progress: 4.80 % (48 out of 1000)
2024-10-13 16:44:47,980 [Thread-5] INFO freon.ProgressBar: Progress: 6.20 % (62 out of 1000)
2024-10-13 16:44:48,981 [Thread-5] INFO freon.ProgressBar: Progress: 7.50 % (75 out of 1000)
2024-10-13 16:44:49,981 [Thread-5] INFO freon.ProgressBar: Progress: 8.70 % (87 out of 1000)
2024-10-13 16:44:50,982 [Thread-5] INFO freon.ProgressBar: Progress: 10.30 % (103 out of 1000)
2024-10-13 16:44:51,982 [Thread-5] INFO freon.ProgressBar: Progress: 12.20 % (122 out of 1000)
2024-10-13 16:44:52,983 [Thread-5] INFO freon.ProgressBar: Progress: 14.00 % (140 out of 1000)
2024-10-13 16:44:53,983 [Thread-5] INFO freon.ProgressBar: Progress: 15.80 % (158 out of 1000)
2024-10-13 16:44:54,983 [Thread-5] INFO freon.ProgressBar: Progress: 17.90 % (179 out of 1000)
2024-10-13 16:44:55,984 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (200 out of 1000)
2024-10-13 16:44:56,985 [Thread-5] INFO freon.ProgressBar: Progress: 22.00 % (220 out of 1000)
2024-10-13 16:44:57,985 [Thread-5] INFO freon.ProgressBar: Progress: 24.10 % (241 out of 1000)
2024-10-13 16:44:58,986 [Thread-5] INFO freon.ProgressBar: Progress: 26.00 % (260 out of 1000)
2024-10-13 16:44:59,986 [Thread-5] INFO freon.ProgressBar: Progress: 28.10 % (281 out of 1000)
2024-10-13 16:45:00,987 [Thread-5] INFO freon.ProgressBar: Progress: 30.20 % (302 out of 1000)
2024-10-13 16:45:01,987 [Thread-5] INFO freon.ProgressBar: Progress: 32.10 % (321 out of 1000)
2024-10-13 16:45:02,988 [Thread-5] INFO freon.ProgressBar: Progress: 34.60 % (346 out of 1000)
2024-10-13 16:45:03,988 [Thread-5] INFO freon.ProgressBar: Progress: 36.90 % (369 out of 1000)
2024-10-13 16:45:04,990 [Thread-5] INFO freon.ProgressBar: Progress: 39.10 % (391 out of 1000)
2024-10-13 16:45:05,990 [Thread-5] INFO freon.ProgressBar: Progress: 42.10 % (421 out of 1000)
2024-10-13 16:45:06,990 [Thread-5] INFO freon.ProgressBar: Progress: 44.90 % (449 out of 1000)
2024-10-13 16:45:07,991 [Thread-5] INFO freon.ProgressBar: Progress: 47.60 % (476 out of 1000)
2024-10-13 16:45:08,991 [Thread-5] INFO freon.ProgressBar: Progress: 50.20 % (502 out of 1000)
2024-10-13 16:45:09,991 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (528 out of 1000)
2024-10-13 16:45:10,992 [Thread-5] INFO freon.ProgressBar: Progress: 55.70 % (557 out of 1000)
2024-10-13 16:45:11,993 [Thread-5] INFO freon.ProgressBar: Progress: 58.30 % (583 out of 1000)
2024-10-13 16:45:12,993 [Thread-5] INFO freon.ProgressBar: Progress: 61.80 % (618 out of 1000)
2024-10-13 16:45:13,994 [Thread-5] INFO freon.ProgressBar: Progress: 64.30 % (643 out of 1000)
2024-10-13 16:45:14,994 [Thread-5] INFO freon.ProgressBar: Progress: 67.30 % (673 out of 1000)
2024-10-13 16:45:15,994 [Thread-5] INFO freon.ProgressBar: Progress: 69.90 % (699 out of 1000)
2024-10-13 16:45:16,996 [Thread-5] INFO freon.ProgressBar: Progress: 72.80 % (728 out of 1000)
2024-10-13 16:45:18,003 [Thread-5] INFO freon.ProgressBar: Progress: 76.20 % (762 out of 1000)
2024-10-13 16:45:19,004 [Thread-5] INFO freon.ProgressBar: Progress: 79.30 % (793 out of 1000)
2024-10-13 16:45:20,004 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (824 out of 1000)
2024-10-13 16:45:21,005 [Thread-5] INFO freon.ProgressBar: Progress: 85.70 % (857 out of 1000)
2024-10-13 16:45:22,005 [Thread-5] INFO freon.ProgressBar: Progress: 89.00 % (890 out of 1000)
2024-10-13 16:45:23,006 [Thread-5] INFO freon.ProgressBar: Progress: 91.60 % (916 out of 1000)
2024-10-13 16:45:24,006 [Thread-5] INFO freon.ProgressBar: Progress: 94.10 % (941 out of 1000)
2024-10-13 16:45:25,006 [Thread-5] INFO freon.ProgressBar: Progress: 97.50 % (975 out of 1000)
2024-10-13 16:45:26,007 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1000 out of 1000)
2024-10-13 16:45:26,019 [shutdown-hook-0] INFO metrics: type=TIMER, name=file-create, count=1000, min=17.25081, max=1305.557168, mean=41.355067080577456, stddev=37.0906837919187, median=37.344865, p75=46.930502, p95=73.035074, p98=84.547488, p99=91.815938, p999=294.637736, mean_rate=22.558548175927825, m1=16.007880466527755, m5=10.66323987327033, m15=9.57128214473975, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:45:26,020 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 46
2024-10-13 16:45:26,020 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:45:26,020 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1000</msg>
<status status="PASS" starttime="20241013 16:45:26.406" endtime="20241013 16:45:26.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:45:26.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:45:26.407" endtime="20241013 16:45:26.408"/>
</kw>
<status status="PASS" starttime="20241013 16:44:37.609" endtime="20241013 16:45:26.408"/>
</kw>
<msg timestamp="20241013 16:45:26.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:44:37.609" endtime="20241013 16:45:26.408"/>
</kw>
<msg timestamp="20241013 16:45:26.409" level="INFO">${result} = 2024-10-13 16:44:39,762 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:44:39,854 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:44:37.608" endtime="20241013 16:45:26.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:45:26.409" endtime="20241013 16:45:26.409"/>
</kw>
<status status="PASS" starttime="20241013 16:44:37.607" endtime="20241013 16:45:26.409"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241013 16:44:37.602" endtime="20241013 16:45:26.409"/>
</test>
<test id="s1-s2-s4-t2" name="Generate key for o3fs by HFLUSH" line="41">
<kw name="Format FS URL" library="fs">
<var>${path}</var>
<arg>o3fs</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:45:26.414" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20241013 16:45:26.414" endtime="20241013 16:45:26.414"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:45:26.414" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20241013 16:45:26.414" endtime="20241013 16:45:26.414"/>
</kw>
<status status="PASS" starttime="20241013 16:45:26.413" endtime="20241013 16:45:26.415"/>
</kw>
<msg timestamp="20241013 16:45:26.415" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20241013 16:45:26.412" endtime="20241013 16:45:26.415"/>
</kw>
<status status="PASS" starttime="20241013 16:45:26.412" endtime="20241013 16:45:26.415"/>
</kw>
<msg timestamp="20241013 16:45:26.415" level="INFO">${url} = o3fs://hsync-bucket.hsync-volume.omservice/</msg>
<status status="PASS" starttime="20241013 16:45:26.411" endtime="20241013 16:45:26.415"/>
</kw>
<msg timestamp="20241013 16:45:26.415" level="INFO">${path} = o3fs://hsync-bucket.hsync-volume.omservice/</msg>
<status status="PASS" starttime="20241013 16:45:26.410" endtime="20241013 16:45:26.415"/>
</kw>
<kw name="Freon DFSG" library="freon">
<arg>sync=HFLUSH</arg>
<arg>path=${path}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dfsg -n ${n} --sync ${sync} -s ${size} --path ${path} --buffer ${buffer} --copy-buffer ${copy-buffer} -p ${prefix} -t ${threads} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:45:26.420" level="INFO">Running command 'ozone freon dfsg -n 1000 --sync HFLUSH -s 10240 --path o3fs://hsync-bucket.hsync-volume.omservice/ --buffer 1024 --copy-buffer 1024 -p dfsg -t 1  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:46:03.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:46:03.100" level="INFO">${output} = 2024-10-13 16:45:28,490 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:45:28,585 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:45:26.417" endtime="20241013 16:46:03.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:46:03.101" level="INFO">2024-10-13 16:45:28,490 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:45:28,585 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:45:28,585 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:45:28,643 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dfsg and number-of-tests 1000
2024-10-13 16:45:28,677 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:45:28,680 [main] INFO freon.BaseFreonGenerator: Disabling FS cache: fs.o3fs.impl.disable.cache
2024-10-13 16:45:29,388 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:45:29,677 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:45:30,633 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:45:30,677 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:45:30,722 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:45:30,946 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:45:31,678 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:45:31,813 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2024-10-13 16:45:32,678 [Thread-5] INFO freon.ProgressBar: Progress: 1.80 % (18 out of 1000)
2024-10-13 16:45:33,678 [Thread-5] INFO freon.ProgressBar: Progress: 4.50 % (45 out of 1000)
2024-10-13 16:45:34,679 [Thread-5] INFO freon.ProgressBar: Progress: 6.60 % (66 out of 1000)
2024-10-13 16:45:35,686 [Thread-5] INFO freon.ProgressBar: Progress: 8.80 % (88 out of 1000)
2024-10-13 16:45:36,686 [Thread-5] INFO freon.ProgressBar: Progress: 11.90 % (119 out of 1000)
2024-10-13 16:45:37,687 [Thread-5] INFO freon.ProgressBar: Progress: 14.80 % (148 out of 1000)
2024-10-13 16:45:38,687 [Thread-5] INFO freon.ProgressBar: Progress: 17.80 % (178 out of 1000)
2024-10-13 16:45:39,687 [Thread-5] INFO freon.ProgressBar: Progress: 21.00 % (210 out of 1000)
2024-10-13 16:45:40,688 [Thread-5] INFO freon.ProgressBar: Progress: 24.40 % (244 out of 1000)
2024-10-13 16:45:41,688 [Thread-5] INFO freon.ProgressBar: Progress: 27.90 % (279 out of 1000)
2024-10-13 16:45:42,689 [Thread-5] INFO freon.ProgressBar: Progress: 31.10 % (311 out of 1000)
2024-10-13 16:45:43,693 [Thread-5] INFO freon.ProgressBar: Progress: 33.80 % (338 out of 1000)
2024-10-13 16:45:44,693 [Thread-5] INFO freon.ProgressBar: Progress: 36.50 % (365 out of 1000)
2024-10-13 16:45:45,694 [Thread-5] INFO freon.ProgressBar: Progress: 39.20 % (392 out of 1000)
2024-10-13 16:45:46,694 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (424 out of 1000)
2024-10-13 16:45:47,694 [Thread-5] INFO freon.ProgressBar: Progress: 45.80 % (458 out of 1000)
2024-10-13 16:45:48,695 [Thread-5] INFO freon.ProgressBar: Progress: 49.40 % (494 out of 1000)
2024-10-13 16:45:49,695 [Thread-5] INFO freon.ProgressBar: Progress: 52.50 % (525 out of 1000)
2024-10-13 16:45:50,695 [Thread-5] INFO freon.ProgressBar: Progress: 55.70 % (557 out of 1000)
2024-10-13 16:45:51,695 [Thread-5] INFO freon.ProgressBar: Progress: 59.50 % (595 out of 1000)
2024-10-13 16:45:52,696 [Thread-5] INFO freon.ProgressBar: Progress: 63.50 % (635 out of 1000)
2024-10-13 16:45:53,696 [Thread-5] INFO freon.ProgressBar: Progress: 66.60 % (666 out of 1000)
2024-10-13 16:45:54,696 [Thread-5] INFO freon.ProgressBar: Progress: 69.90 % (699 out of 1000)
2024-10-13 16:45:55,697 [Thread-5] INFO freon.ProgressBar: Progress: 73.70 % (737 out of 1000)
2024-10-13 16:45:56,697 [Thread-5] INFO freon.ProgressBar: Progress: 77.70 % (777 out of 1000)
2024-10-13 16:45:57,697 [Thread-5] INFO freon.ProgressBar: Progress: 81.00 % (810 out of 1000)
2024-10-13 16:45:58,698 [Thread-5] INFO freon.ProgressBar: Progress: 85.00 % (850 out of 1000)
2024-10-13 16:45:59,698 [Thread-5] INFO freon.ProgressBar: Progress: 88.90 % (889 out of 1000)
2024-10-13 16:46:00,698 [Thread-5] INFO freon.ProgressBar: Progress: 92.80 % (928 out of 1000)
2024-10-13 16:46:01,699 [Thread-5] INFO freon.ProgressBar: Progress: 97.10 % (971 out of 1000)
2024-10-13 16:46:02,699 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1000 out of 1000)
2024-10-13 16:46:02,711 [shutdown-hook-0] INFO metrics: type=TIMER, name=file-create, count=1000, min=14.607671, max=1256.549853, mean=30.911387195337202, stddev=35.56160259127516, median=27.717029, p75=34.383824, p95=49.92684, p98=57.393455, p99=64.303805, p999=109.74746, mean_rate=30.978874148100232, m1=22.312071037365072, m5=17.764801141860055, m15=16.866357528166557, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:46:02,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 34
2024-10-13 16:46:02,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:46:02,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1000</msg>
<status status="PASS" starttime="20241013 16:46:03.100" endtime="20241013 16:46:03.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:46:03.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:46:03.101" endtime="20241013 16:46:03.102"/>
</kw>
<status status="PASS" starttime="20241013 16:45:26.417" endtime="20241013 16:46:03.102"/>
</kw>
<msg timestamp="20241013 16:46:03.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:45:26.417" endtime="20241013 16:46:03.102"/>
</kw>
<msg timestamp="20241013 16:46:03.102" level="INFO">${result} = 2024-10-13 16:45:28,490 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:45:28,585 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:45:26.416" endtime="20241013 16:46:03.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:46:03.102" endtime="20241013 16:46:03.103"/>
</kw>
<status status="PASS" starttime="20241013 16:45:26.415" endtime="20241013 16:46:03.103"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241013 16:45:26.410" endtime="20241013 16:46:03.103"/>
</test>
<test id="s1-s2-s4-t3" name="Generate key for ofs by HSYNC" line="45">
<kw name="Format FS URL" library="fs">
<var>${path}</var>
<arg>ofs</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:46:03.108" level="INFO">${last} = e</msg>
<status status="PASS" starttime="20241013 16:46:03.107" endtime="20241013 16:46:03.108"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:46:03.108" level="INFO">${result} = omservice/</msg>
<status status="PASS" starttime="20241013 16:46:03.108" endtime="20241013 16:46:03.108"/>
</kw>
<status status="PASS" starttime="20241013 16:46:03.107" endtime="20241013 16:46:03.108"/>
</kw>
<msg timestamp="20241013 16:46:03.109" level="INFO">${om_with_trailing} = omservice/</msg>
<status status="PASS" starttime="20241013 16:46:03.106" endtime="20241013 16:46:03.109"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 16:46:03.109" endtime="20241013 16:46:03.110"/>
</kw>
<msg timestamp="20241013 16:46:03.110" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20241013 16:46:03.109" endtime="20241013 16:46:03.110"/>
</kw>
<status status="PASS" starttime="20241013 16:46:03.106" endtime="20241013 16:46:03.110"/>
</kw>
<msg timestamp="20241013 16:46:03.110" level="INFO">${url} = ofs://omservice/hsync-volume/hsync-bucket</msg>
<status status="PASS" starttime="20241013 16:46:03.105" endtime="20241013 16:46:03.110"/>
</kw>
<msg timestamp="20241013 16:46:03.111" level="INFO">${path} = ofs://omservice/hsync-volume/hsync-bucket</msg>
<status status="PASS" starttime="20241013 16:46:03.104" endtime="20241013 16:46:03.111"/>
</kw>
<kw name="Freon DFSG" library="freon">
<arg>sync=HSYNC</arg>
<arg>path=${path}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dfsg -n ${n} --sync ${sync} -s ${size} --path ${path} --buffer ${buffer} --copy-buffer ${copy-buffer} -p ${prefix} -t ${threads} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:46:03.115" level="INFO">Running command 'ozone freon dfsg -n 1000 --sync HSYNC -s 10240 --path ofs://omservice/hsync-volume/hsync-bucket --buffer 1024 --copy-buffer 1024 -p dfsg -t 1  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:46:33.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:46:33.786" level="INFO">${output} = 2024-10-13 16:46:05,128 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:46:05,232 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:46:03.113" endtime="20241013 16:46:33.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:46:33.787" level="INFO">2024-10-13 16:46:05,128 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:46:05,232 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:46:05,232 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:46:05,312 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dfsg and number-of-tests 1000
2024-10-13 16:46:05,343 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:46:05,345 [main] INFO freon.BaseFreonGenerator: Disabling FS cache: fs.ofs.impl.disable.cache
2024-10-13 16:46:05,900 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:46:06,344 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:46:07,069 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:46:07,143 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:46:07,344 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:46:07,374 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:46:08,273 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2024-10-13 16:46:08,345 [Thread-5] INFO freon.ProgressBar: Progress: 0.50 % (5 out of 1000)
2024-10-13 16:46:09,345 [Thread-5] INFO freon.ProgressBar: Progress: 3.50 % (35 out of 1000)
2024-10-13 16:46:10,346 [Thread-5] INFO freon.ProgressBar: Progress: 7.40 % (74 out of 1000)
2024-10-13 16:46:11,346 [Thread-5] INFO freon.ProgressBar: Progress: 10.70 % (107 out of 1000)
2024-10-13 16:46:12,346 [Thread-5] INFO freon.ProgressBar: Progress: 14.30 % (143 out of 1000)
2024-10-13 16:46:13,348 [Thread-5] INFO freon.ProgressBar: Progress: 17.40 % (174 out of 1000)
2024-10-13 16:46:14,349 [Thread-5] INFO freon.ProgressBar: Progress: 20.20 % (202 out of 1000)
2024-10-13 16:46:15,363 [Thread-5] INFO freon.ProgressBar: Progress: 23.60 % (236 out of 1000)
2024-10-13 16:46:16,363 [Thread-5] INFO freon.ProgressBar: Progress: 27.90 % (279 out of 1000)
2024-10-13 16:46:17,365 [Thread-5] INFO freon.ProgressBar: Progress: 31.50 % (315 out of 1000)
2024-10-13 16:46:18,367 [Thread-5] INFO freon.ProgressBar: Progress: 35.80 % (358 out of 1000)
2024-10-13 16:46:19,369 [Thread-5] INFO freon.ProgressBar: Progress: 39.40 % (394 out of 1000)
2024-10-13 16:46:20,369 [Thread-5] INFO freon.ProgressBar: Progress: 44.20 % (442 out of 1000)
2024-10-13 16:46:21,370 [Thread-5] INFO freon.ProgressBar: Progress: 49.30 % (493 out of 1000)
2024-10-13 16:46:22,373 [Thread-5] INFO freon.ProgressBar: Progress: 53.80 % (538 out of 1000)
2024-10-13 16:46:23,373 [Thread-5] INFO freon.ProgressBar: Progress: 58.00 % (580 out of 1000)
2024-10-13 16:46:24,374 [Thread-5] INFO freon.ProgressBar: Progress: 62.80 % (628 out of 1000)
2024-10-13 16:46:25,374 [Thread-5] INFO freon.ProgressBar: Progress: 67.10 % (671 out of 1000)
2024-10-13 16:46:26,376 [Thread-5] INFO freon.ProgressBar: Progress: 71.00 % (710 out of 1000)
2024-10-13 16:46:27,377 [Thread-5] INFO freon.ProgressBar: Progress: 75.10 % (751 out of 1000)
2024-10-13 16:46:28,377 [Thread-5] INFO freon.ProgressBar: Progress: 79.50 % (795 out of 1000)
2024-10-13 16:46:29,377 [Thread-5] INFO freon.ProgressBar: Progress: 83.30 % (833 out of 1000)
2024-10-13 16:46:30,379 [Thread-5] INFO freon.ProgressBar: Progress: 88.20 % (882 out of 1000)
2024-10-13 16:46:31,379 [Thread-5] INFO freon.ProgressBar: Progress: 93.20 % (932 out of 1000)
2024-10-13 16:46:32,379 [Thread-5] INFO freon.ProgressBar: Progress: 97.70 % (977 out of 1000)
2024-10-13 16:46:33,380 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1000 out of 1000)
2024-10-13 16:46:33,403 [shutdown-hook-0] INFO metrics: type=TIMER, name=file-create, count=1000, min=11.71973, max=1202.100915, mean=25.196849628564916, stddev=34.7994254585603, median=22.109184, p75=27.748871, p95=40.848425, p98=50.069611, p99=57.364373, p999=70.091608, mean_rate=37.7384002308471, m1=30.24060798399258, m5=26.794114298984212, m15=26.137821327110228, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:46:33,403 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 28
2024-10-13 16:46:33,403 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:46:33,404 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1000</msg>
<status status="PASS" starttime="20241013 16:46:33.786" endtime="20241013 16:46:33.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:46:33.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:46:33.787" endtime="20241013 16:46:33.788"/>
</kw>
<status status="PASS" starttime="20241013 16:46:03.113" endtime="20241013 16:46:33.788"/>
</kw>
<msg timestamp="20241013 16:46:33.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:46:03.112" endtime="20241013 16:46:33.788"/>
</kw>
<msg timestamp="20241013 16:46:33.788" level="INFO">${result} = 2024-10-13 16:46:05,128 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:46:05,232 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:46:03.112" endtime="20241013 16:46:33.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:46:33.788" endtime="20241013 16:46:33.789"/>
</kw>
<status status="PASS" starttime="20241013 16:46:03.111" endtime="20241013 16:46:33.789"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241013 16:46:03.103" endtime="20241013 16:46:33.789"/>
</test>
<test id="s1-s2-s4-t4" name="Generate key for ofs by HFLUSH" line="49">
<kw name="Format FS URL" library="fs">
<var>${path}</var>
<arg>ofs</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:46:33.793" level="INFO">${last} = e</msg>
<status status="PASS" starttime="20241013 16:46:33.793" endtime="20241013 16:46:33.793"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:46:33.794" level="INFO">${result} = omservice/</msg>
<status status="PASS" starttime="20241013 16:46:33.794" endtime="20241013 16:46:33.794"/>
</kw>
<status status="PASS" starttime="20241013 16:46:33.793" endtime="20241013 16:46:33.794"/>
</kw>
<msg timestamp="20241013 16:46:33.794" level="INFO">${om_with_trailing} = omservice/</msg>
<status status="PASS" starttime="20241013 16:46:33.792" endtime="20241013 16:46:33.794"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 16:46:33.795" endtime="20241013 16:46:33.796"/>
</kw>
<msg timestamp="20241013 16:46:33.796" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20241013 16:46:33.794" endtime="20241013 16:46:33.796"/>
</kw>
<status status="PASS" starttime="20241013 16:46:33.791" endtime="20241013 16:46:33.796"/>
</kw>
<msg timestamp="20241013 16:46:33.796" level="INFO">${url} = ofs://omservice/hsync-volume/hsync-bucket</msg>
<status status="PASS" starttime="20241013 16:46:33.791" endtime="20241013 16:46:33.796"/>
</kw>
<msg timestamp="20241013 16:46:33.796" level="INFO">${path} = ofs://omservice/hsync-volume/hsync-bucket</msg>
<status status="PASS" starttime="20241013 16:46:33.790" endtime="20241013 16:46:33.796"/>
</kw>
<kw name="Freon DFSG" library="freon">
<arg>sync=HFLUSH</arg>
<arg>path=${path}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dfsg -n ${n} --sync ${sync} -s ${size} --path ${path} --buffer ${buffer} --copy-buffer ${copy-buffer} -p ${prefix} -t ${threads} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:46:33.801" level="INFO">Running command 'ozone freon dfsg -n 1000 --sync HFLUSH -s 10240 --path ofs://omservice/hsync-volume/hsync-bucket --buffer 1024 --copy-buffer 1024 -p dfsg -t 1  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:02.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:02.312" level="INFO">${output} = 2024-10-13 16:46:35,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:46:35,962 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:46:33.798" endtime="20241013 16:47:02.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:02.313" level="INFO">2024-10-13 16:46:35,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:46:35,962 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:46:35,962 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:46:36,055 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dfsg and number-of-tests 1000
2024-10-13 16:46:36,094 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:46:36,099 [main] INFO freon.BaseFreonGenerator: Disabling FS cache: fs.ofs.impl.disable.cache
2024-10-13 16:46:36,774 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:46:37,095 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:46:38,095 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:46:38,130 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:46:38,223 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:46:38,454 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:46:39,096 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-10-13 16:46:39,445 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2024-10-13 16:46:40,100 [Thread-5] INFO freon.ProgressBar: Progress: 2.90 % (29 out of 1000)
2024-10-13 16:46:41,101 [Thread-5] INFO freon.ProgressBar: Progress: 6.70 % (67 out of 1000)
2024-10-13 16:46:42,101 [Thread-5] INFO freon.ProgressBar: Progress: 10.50 % (105 out of 1000)
2024-10-13 16:46:43,102 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (144 out of 1000)
2024-10-13 16:46:44,102 [Thread-5] INFO freon.ProgressBar: Progress: 18.80 % (188 out of 1000)
2024-10-13 16:46:45,102 [Thread-5] INFO freon.ProgressBar: Progress: 23.20 % (232 out of 1000)
2024-10-13 16:46:46,103 [Thread-5] INFO freon.ProgressBar: Progress: 26.80 % (268 out of 1000)
2024-10-13 16:46:47,103 [Thread-5] INFO freon.ProgressBar: Progress: 31.50 % (315 out of 1000)
2024-10-13 16:46:48,103 [Thread-5] INFO freon.ProgressBar: Progress: 35.60 % (356 out of 1000)
2024-10-13 16:46:49,104 [Thread-5] INFO freon.ProgressBar: Progress: 39.70 % (397 out of 1000)
2024-10-13 16:46:50,104 [Thread-5] INFO freon.ProgressBar: Progress: 43.40 % (434 out of 1000)
2024-10-13 16:46:51,105 [Thread-5] INFO freon.ProgressBar: Progress: 47.90 % (479 out of 1000)
2024-10-13 16:46:52,105 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (528 out of 1000)
2024-10-13 16:46:53,105 [Thread-5] INFO freon.ProgressBar: Progress: 58.10 % (581 out of 1000)
2024-10-13 16:46:54,106 [Thread-5] INFO freon.ProgressBar: Progress: 63.30 % (633 out of 1000)
2024-10-13 16:46:55,106 [Thread-5] INFO freon.ProgressBar: Progress: 68.00 % (680 out of 1000)
2024-10-13 16:46:56,106 [Thread-5] INFO freon.ProgressBar: Progress: 73.20 % (732 out of 1000)
2024-10-13 16:46:57,107 [Thread-5] INFO freon.ProgressBar: Progress: 78.90 % (789 out of 1000)
2024-10-13 16:46:58,107 [Thread-5] INFO freon.ProgressBar: Progress: 84.30 % (843 out of 1000)
2024-10-13 16:46:59,108 [Thread-5] INFO freon.ProgressBar: Progress: 89.80 % (898 out of 1000)
2024-10-13 16:47:00,108 [Thread-5] INFO freon.ProgressBar: Progress: 95.30 % (953 out of 1000)
2024-10-13 16:47:01,108 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1000 out of 1000)
2024-10-13 16:47:01,941 [shutdown-hook-0] INFO metrics: type=TIMER, name=file-create, count=1000, min=11.532998, max=1307.032647, mean=22.51684163511594, stddev=37.97296187622231, median=19.410496, p75=24.626116, p95=35.445002, p98=44.591402, p99=51.195155, p999=66.345538, mean_rate=41.626517954273986, m1=31.83994980955323, m5=28.52306760150315, m15=27.912169265155267, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:47:01,941 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 26
2024-10-13 16:47:01,941 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:47:01,941 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1000</msg>
<status status="PASS" starttime="20241013 16:47:02.312" endtime="20241013 16:47:02.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:02.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:02.313" endtime="20241013 16:47:02.314"/>
</kw>
<status status="PASS" starttime="20241013 16:46:33.798" endtime="20241013 16:47:02.314"/>
</kw>
<msg timestamp="20241013 16:47:02.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:46:33.798" endtime="20241013 16:47:02.314"/>
</kw>
<msg timestamp="20241013 16:47:02.314" level="INFO">${result} = 2024-10-13 16:46:35,872 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:46:35,962 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:46:33.797" endtime="20241013 16:47:02.314"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:02.314" endtime="20241013 16:47:02.315"/>
</kw>
<status status="PASS" starttime="20241013 16:46:33.796" endtime="20241013 16:47:02.315"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20241013 16:46:33.789" endtime="20241013 16:47:02.315"/>
</test>
<doc>Test HSync via freon CLI.</doc>
<status status="PASS" starttime="20241013 16:44:29.693" endtime="20241013 16:47:02.316"/>
</suite>
<suite id="s1-s2-s5" name="Metadata-Generate" source="/opt/hadoop/smoketest/freon/metadata-generate.robot">
<test id="s1-s2-s5-t1" name="[Setup] Create Volume and Buckets" line="29">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:02.327" level="INFO">Running command 'ozone sh volume create /volume1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:06.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:06.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:47:02.325" endtime="20241013 16:47:06.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:06.204" level="INFO"/>
<status status="PASS" starttime="20241013 16:47:06.203" endtime="20241013 16:47:06.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:06.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:06.204" endtime="20241013 16:47:06.204"/>
</kw>
<status status="PASS" starttime="20241013 16:47:02.324" endtime="20241013 16:47:06.204"/>
</kw>
<msg timestamp="20241013 16:47:06.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:02.324" endtime="20241013 16:47:06.205"/>
</kw>
<msg timestamp="20241013 16:47:06.205" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 16:47:02.324" endtime="20241013 16:47:06.205"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:06.205" endtime="20241013 16:47:06.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create /${VOLUME}/${BUCKET_FSO} -l FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:06.209" level="INFO">Running command 'ozone sh bucket create /volume1/bucket-fso -l FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:10.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:10.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:47:06.206" endtime="20241013 16:47:10.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:10.184" level="INFO"/>
<status status="PASS" starttime="20241013 16:47:10.183" endtime="20241013 16:47:10.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:10.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:10.184" endtime="20241013 16:47:10.185"/>
</kw>
<status status="PASS" starttime="20241013 16:47:06.206" endtime="20241013 16:47:10.185"/>
</kw>
<msg timestamp="20241013 16:47:10.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:06.206" endtime="20241013 16:47:10.185"/>
</kw>
<msg timestamp="20241013 16:47:10.185" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 16:47:06.205" endtime="20241013 16:47:10.185"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:10.185" endtime="20241013 16:47:10.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create /${VOLUME}/${BUCKET_OBJ} -l OBJECT_STORE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:10.189" level="INFO">Running command 'ozone sh bucket create /volume1/bucket-obj -l OBJECT_STORE 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:14.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:14.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:47:10.187" endtime="20241013 16:47:14.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:14.471" level="INFO"/>
<status status="PASS" starttime="20241013 16:47:14.470" endtime="20241013 16:47:14.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:14.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:14.471" endtime="20241013 16:47:14.471"/>
</kw>
<status status="PASS" starttime="20241013 16:47:10.186" endtime="20241013 16:47:14.472"/>
</kw>
<msg timestamp="20241013 16:47:14.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:10.186" endtime="20241013 16:47:14.472"/>
</kw>
<msg timestamp="20241013 16:47:14.472" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 16:47:10.186" endtime="20241013 16:47:14.472"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:14.472" endtime="20241013 16:47:14.472"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:47:02.323" endtime="20241013 16:47:14.473"/>
</test>
<test id="s1-s2-s5-t2" name="[Read] Bucket Information" line="37">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation INFO_BUCKET -n ${n} --bucket ${BUCKET_FSO}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:14.477" level="INFO">Running command 'ozone freon ommg --operation INFO_BUCKET -n 100 --bucket bucket-fso 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:20.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:20.045" level="INFO">${output} = 2024-10-13 16:47:16,665 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:16,759 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:14.475" endtime="20241013 16:47:20.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:20.046" level="INFO">2024-10-13 16:47:16,665 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:16,759 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:47:16,759 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:47:16,873 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 100
2024-10-13 16:47:16,948 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:16,998 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:47:17,948 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:18,834 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket-fso, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2024-10-13 16:47:18,951 [Thread-5] INFO freon.ProgressBar: Progress: 91.00 % (91 out of 100)
2024-10-13 16:47:19,951 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-10-13 16:47:19,965 [shutdown-hook-0] INFO metrics: type=TIMER, name=INFO_BUCKET, count=100, min=1.651657, max=30.490443, mean=6.90095191, stddev=5.842279150779885, median=5.196444, p75=6.276289, p95=20.23357, p98=27.866312, p99=28.922573, p999=30.490443, mean_rate=90.95498116991769, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:47:19,966 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:47:19,966 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:47:19,966 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20241013 16:47:20.046" endtime="20241013 16:47:20.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:20.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:20.047" endtime="20241013 16:47:20.047"/>
</kw>
<status status="PASS" starttime="20241013 16:47:14.474" endtime="20241013 16:47:20.047"/>
</kw>
<msg timestamp="20241013 16:47:20.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:14.474" endtime="20241013 16:47:20.047"/>
</kw>
<msg timestamp="20241013 16:47:20.048" level="INFO">${result} = 2024-10-13 16:47:16,665 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:16,759 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:14.474" endtime="20241013 16:47:20.048"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:20.048" endtime="20241013 16:47:20.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:47:14.473" endtime="20241013 16:47:20.048"/>
</test>
<test id="s1-s2-s5-t3" name="[Create] File in FILE_SYSTEM_OPTIMIZED Bucket" line="41">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation CREATE_FILE -n ${n} --size 4096 --volume ${VOLUME} --bucket ${BUCKET_FSO}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:20.053" level="INFO">Running command 'ozone freon ommg --operation CREATE_FILE -n 100 --size 4096 --volume volume1 --bucket bucket-fso 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:31.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:31.714" level="INFO">${output} = 2024-10-13 16:47:22,017 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:22,123 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:20.050" endtime="20241013 16:47:31.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:31.716" level="INFO">2024-10-13 16:47:22,017 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:22,123 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:47:22,123 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:47:22,208 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 100
2024-10-13 16:47:22,275 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:22,318 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:47:23,276 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:24,276 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:24,496 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:47:24,615 [pool-2-thread-5] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:47:24,700 [pool-2-thread-7] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2024-10-13 16:47:24,847 [pool-2-thread-5] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:47:25,277 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:26,282 [Thread-5] INFO freon.ProgressBar: Progress: 31.00 % (31 out of 100)
2024-10-13 16:47:27,282 [Thread-5] INFO freon.ProgressBar: Progress: 93.00 % (93 out of 100)
2024-10-13 16:47:28,283 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-10-13 16:47:31,292 [Thread-18] WARN grpc.GrpcUtil: Timed out gracefully shutting down connection: ManagedChannelOrphanWrapper{delegate=ManagedChannelImpl{logId=1, target=172.25.0.102:9858}}. 
2024-10-13 16:47:31,335 [shutdown-hook-0] INFO metrics: type=TIMER, name=CREATE_FILE, count=100, min=81.643093, max=1656.826293, mean=310.14974513055165, stddev=439.45889991392204, median=156.400717, p75=229.443045, p95=1624.273232, p98=1644.926937, p99=1653.316043, p999=1656.826293, mean_rate=13.92817111149425, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:47:31,335 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2024-10-13 16:47:31,335 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:47:31,335 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20241013 16:47:31.715" endtime="20241013 16:47:31.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:31.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:31.716" endtime="20241013 16:47:31.716"/>
</kw>
<status status="PASS" starttime="20241013 16:47:20.050" endtime="20241013 16:47:31.716"/>
</kw>
<msg timestamp="20241013 16:47:31.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:20.050" endtime="20241013 16:47:31.717"/>
</kw>
<msg timestamp="20241013 16:47:31.717" level="INFO">${result} = 2024-10-13 16:47:22,017 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:22,123 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:20.049" endtime="20241013 16:47:31.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:31.717" endtime="20241013 16:47:31.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:47:20.049" endtime="20241013 16:47:31.717"/>
</test>
<test id="s1-s2-s5-t4" name="[Read] File in FILE_SYSTEM_OPTIMIZED Bucket" line="45">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation READ_FILE -n ${n} --volume ${VOLUME} --bucket ${BUCKET_FSO} --size 4096</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:31.722" level="INFO">Running command 'ozone freon ommg --operation READ_FILE -n 100 --volume volume1 --bucket bucket-fso --size 4096 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:38.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:38.364" level="INFO">${output} = 2024-10-13 16:47:33,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:33,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:31.720" endtime="20241013 16:47:38.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:38.365" level="INFO">2024-10-13 16:47:33,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:33,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:47:33,792 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:47:33,883 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 100
2024-10-13 16:47:33,946 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:33,993 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:47:34,947 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:35,948 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:35,961 [pool-2-thread-6] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:47:36,948 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:37,949 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-10-13 16:47:37,971 [shutdown-hook-0] INFO metrics: type=TIMER, name=READ_FILE, count=100, min=14.717237, max=1424.257733, mean=201.10839966352674, stddev=400.877343325431, median=73.689829, p75=98.852014, p95=1401.671141, p98=1420.171265, p99=1423.123244, p999=1424.257733, mean_rate=41.72204656424721, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:47:37,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-10-13 16:47:37,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:47:37,971 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20241013 16:47:38.365" endtime="20241013 16:47:38.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:38.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:38.366" endtime="20241013 16:47:38.366"/>
</kw>
<status status="PASS" starttime="20241013 16:47:31.719" endtime="20241013 16:47:38.366"/>
</kw>
<msg timestamp="20241013 16:47:38.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:31.719" endtime="20241013 16:47:38.366"/>
</kw>
<msg timestamp="20241013 16:47:38.367" level="INFO">${result} = 2024-10-13 16:47:33,696 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:33,792 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:31.719" endtime="20241013 16:47:38.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:38.367" endtime="20241013 16:47:38.367"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:47:31.718" endtime="20241013 16:47:38.367"/>
</test>
<test id="s1-s2-s5-t5" name="[List] File Status in FILE_SYSTEM_OPTIMIZED Bucket" line="49">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation LIST_STATUS -n 1 -t 1 --volume ${VOLUME} --bucket ${BUCKET_FSO} --batch-size ${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:38.372" level="INFO">Running command 'ozone freon ommg --operation LIST_STATUS -n 1 -t 1 --volume volume1 --bucket bucket-fso --batch-size 100 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:43.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:43.444" level="INFO">${output} = 2024-10-13 16:47:40,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:40,513 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:38.370" endtime="20241013 16:47:43.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:43.445" level="INFO">2024-10-13 16:47:40,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:40,513 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:47:40,514 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:47:40,611 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 1
2024-10-13 16:47:40,663 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:47:40,714 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:47:41,663 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:47:42,663 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:47:43,364 [shutdown-hook-0] INFO metrics: type=TIMER, name=LIST_STATUS, count=1, min=164.113057, max=164.113057, mean=164.113057, stddev=0.0, median=164.113057, p75=164.113057, p95=164.113057, p98=164.113057, p99=164.113057, p999=164.113057, mean_rate=0.9817670619569788, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:47:43,365 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:47:43,365 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:47:43,365 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:47:43.444" endtime="20241013 16:47:43.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:43.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:43.445" endtime="20241013 16:47:43.445"/>
</kw>
<status status="PASS" starttime="20241013 16:47:38.369" endtime="20241013 16:47:43.445"/>
</kw>
<msg timestamp="20241013 16:47:43.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:38.369" endtime="20241013 16:47:43.446"/>
</kw>
<msg timestamp="20241013 16:47:43.446" level="INFO">${result} = 2024-10-13 16:47:40,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:40,513 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:38.368" endtime="20241013 16:47:43.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:43.446" endtime="20241013 16:47:43.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:47:38.368" endtime="20241013 16:47:43.446"/>
</test>
<test id="s1-s2-s5-t6" name="[List] light File status in FILE_SYSTEM_OPTIMIZED Bucket" line="53">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation LIST_STATUS_LIGHT -n 1 -t 1 --volume ${VOLUME} --bucket ${BUCKET_FSO} --batch-size ${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:43.451" level="INFO">Running command 'ozone freon ommg --operation LIST_STATUS_LIGHT -n 1 -t 1 --volume volume1 --bucket bucket-fso --batch-size 100 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:48.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:48.467" level="INFO">${output} = 2024-10-13 16:47:45,535 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:45,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:43.449" endtime="20241013 16:47:48.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:48.468" level="INFO">2024-10-13 16:47:45,535 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:45,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:47:45,641 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:47:45,741 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 1
2024-10-13 16:47:45,791 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:47:45,843 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:47:46,792 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:47:47,792 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:47:48,364 [shutdown-hook-0] INFO metrics: type=TIMER, name=LIST_STATUS_LIGHT, count=1, min=81.389532, max=81.389532, mean=81.389532, stddev=0.0, median=81.389532, p75=81.389532, p95=81.389532, p98=81.389532, p99=81.389532, p999=81.389532, mean_rate=1.0167753711553185, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:47:48,365 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:47:48,365 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:47:48,365 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:47:48.467" endtime="20241013 16:47:48.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:48.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:48.468" endtime="20241013 16:47:48.469"/>
</kw>
<status status="PASS" starttime="20241013 16:47:43.449" endtime="20241013 16:47:48.469"/>
</kw>
<msg timestamp="20241013 16:47:48.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:43.448" endtime="20241013 16:47:48.469"/>
</kw>
<msg timestamp="20241013 16:47:48.469" level="INFO">${result} = 2024-10-13 16:47:45,535 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:45,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:43.448" endtime="20241013 16:47:48.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:48.469" endtime="20241013 16:47:48.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:47:43.447" endtime="20241013 16:47:48.470"/>
</test>
<test id="s1-s2-s5-t7" name="[Create] Key in OBJECT_STORE Bucket" line="57">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation CREATE_KEY -n ${n} --size 4096 --volume ${VOLUME} --bucket ${BUCKET_OBJ}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:48.475" level="INFO">Running command 'ozone freon ommg --operation CREATE_KEY -n 100 --size 4096 --volume volume1 --bucket bucket-obj 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:47:57.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:47:57.273" level="INFO">${output} = 2024-10-13 16:47:50,612 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:50,707 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:48.472" endtime="20241013 16:47:57.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:47:57.274" level="INFO">2024-10-13 16:47:50,612 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:50,707 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:47:50,707 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:47:50,798 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 100
2024-10-13 16:47:50,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:50,892 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:47:51,842 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:52,698 [pool-2-thread-6] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:47:52,785 [pool-2-thread-6] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:47:52,843 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:52,860 [pool-2-thread-9] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2024-10-13 16:47:52,992 [pool-2-thread-5] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:47:53,843 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:54,844 [Thread-5] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2024-10-13 16:47:55,845 [Thread-5] INFO freon.ProgressBar: Progress: 85.00 % (85 out of 100)
2024-10-13 16:47:56,845 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-10-13 16:47:56,891 [shutdown-hook-0] INFO metrics: type=TIMER, name=CREATE_KEY, count=100, min=88.587925, max=1605.240027, mean=349.9470727873772, stddev=391.76323073076236, median=226.295989, p75=306.903525, p95=1481.917885, p98=1584.495145, p99=1602.459901, p999=1605.240027, mean_rate=22.40310076048417, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:47:56,891 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2024-10-13 16:47:56,891 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:47:56,891 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20241013 16:47:57.273" endtime="20241013 16:47:57.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:47:57.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:47:57.274" endtime="20241013 16:47:57.275"/>
</kw>
<status status="PASS" starttime="20241013 16:47:48.472" endtime="20241013 16:47:57.275"/>
</kw>
<msg timestamp="20241013 16:47:57.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:48.472" endtime="20241013 16:47:57.275"/>
</kw>
<msg timestamp="20241013 16:47:57.275" level="INFO">${result} = 2024-10-13 16:47:50,612 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:50,707 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:48.471" endtime="20241013 16:47:57.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:47:57.275" endtime="20241013 16:47:57.276"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:47:48.470" endtime="20241013 16:47:57.276"/>
</test>
<test id="s1-s2-s5-t8" name="[Read] Key in OBJECT_STORE Bucket" line="61">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation READ_KEY -n ${n} --volume ${VOLUME} --bucket ${BUCKET_OBJ} --size 4096</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:47:57.281" level="INFO">Running command 'ozone freon ommg --operation READ_KEY -n 100 --volume volume1 --bucket bucket-obj --size 4096 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:04.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:04.092" level="INFO">${output} = 2024-10-13 16:47:59,438 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:59,542 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:57.278" endtime="20241013 16:48:04.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:04.093" level="INFO">2024-10-13 16:47:59,438 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:59,542 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:47:59,542 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:47:59,627 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 100
2024-10-13 16:47:59,673 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:47:59,713 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:00,674 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:48:01,419 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:48:01,674 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:48:02,674 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (48 out of 100)
2024-10-13 16:48:03,675 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-10-13 16:48:03,704 [shutdown-hook-0] INFO metrics: type=TIMER, name=READ_KEY, count=100, min=12.007486, max=1209.786453, mean=157.21513283000004, stddev=329.1795118811804, median=47.529678, p75=62.278795, p95=1135.659099, p98=1171.355581, p99=1181.347688, p999=1209.786453, mean_rate=41.59629253376065, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:03,704 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-10-13 16:48:03,705 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:03,705 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20241013 16:48:04.092" endtime="20241013 16:48:04.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:04.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:04.093" endtime="20241013 16:48:04.093"/>
</kw>
<status status="PASS" starttime="20241013 16:47:57.278" endtime="20241013 16:48:04.093"/>
</kw>
<msg timestamp="20241013 16:48:04.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:47:57.278" endtime="20241013 16:48:04.094"/>
</kw>
<msg timestamp="20241013 16:48:04.094" level="INFO">${result} = 2024-10-13 16:47:59,438 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:47:59,542 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:47:57.277" endtime="20241013 16:48:04.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:48:04.094" endtime="20241013 16:48:04.094"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:47:57.276" endtime="20241013 16:48:04.095"/>
</test>
<test id="s1-s2-s5-t9" name="[List] Keys in OBJECT_STORE Bucket" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation LIST_KEYS -n 1 -t 1 --volume ${VOLUME} --bucket ${BUCKET_OBJ} --batch-size ${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:04.100" level="INFO">Running command 'ozone freon ommg --operation LIST_KEYS -n 1 -t 1 --volume volume1 --bucket bucket-obj --batch-size 100 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:09.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:09.099" level="INFO">${output} = 2024-10-13 16:48:06,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:06,156 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:04.098" endtime="20241013 16:48:09.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:09.100" level="INFO">2024-10-13 16:48:06,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:06,156 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:48:06,156 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:48:06,227 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 1
2024-10-13 16:48:06,276 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:48:06,313 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:07,276 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:48:08,276 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:48:08,969 [shutdown-hook-0] INFO metrics: type=TIMER, name=LIST_KEYS, count=1, min=71.086405, max=71.086405, mean=71.086405, stddev=0.0, median=71.086405, p75=71.086405, p95=71.086405, p98=71.086405, p99=71.086405, p999=71.086405, mean_rate=0.9968058065660713, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:08,970 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:48:08,970 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:08,970 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:48:09.100" endtime="20241013 16:48:09.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:09.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:09.101" endtime="20241013 16:48:09.101"/>
</kw>
<status status="PASS" starttime="20241013 16:48:04.097" endtime="20241013 16:48:09.101"/>
</kw>
<msg timestamp="20241013 16:48:09.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:04.096" endtime="20241013 16:48:09.101"/>
</kw>
<msg timestamp="20241013 16:48:09.102" level="INFO">${result} = 2024-10-13 16:48:06,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:06,156 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:04.096" endtime="20241013 16:48:09.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:48:09.102" endtime="20241013 16:48:09.102"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:48:04.095" endtime="20241013 16:48:09.102"/>
</test>
<test id="s1-s2-s5-t10" name="[List] Light Keys in OBJECT_STORE Bucket" line="69">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation LIST_KEYS_LIGHT -n 1 -t 1 --volume ${VOLUME} --bucket ${BUCKET_OBJ} --batch-size ${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:09.107" level="INFO">Running command 'ozone freon ommg --operation LIST_KEYS_LIGHT -n 1 -t 1 --volume volume1 --bucket bucket-obj --batch-size 100 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:14.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:14.214" level="INFO">${output} = 2024-10-13 16:48:11,131 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:11,234 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:09.104" endtime="20241013 16:48:14.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:14.215" level="INFO">2024-10-13 16:48:11,131 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:11,234 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:48:11,234 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:48:11,314 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 1
2024-10-13 16:48:11,355 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:48:11,408 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:12,355 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:48:13,356 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:48:14,140 [shutdown-hook-0] INFO metrics: type=TIMER, name=LIST_KEYS_LIGHT, count=1, min=43.573723, max=43.573723, mean=43.573723, stddev=0.0, median=43.573723, p75=43.573723, p95=43.573723, p98=43.573723, p99=43.573723, p999=43.573723, mean_rate=0.9882494482215444, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:14,140 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:48:14,140 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:14,141 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:48:14.215" endtime="20241013 16:48:14.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:14.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:14.216" endtime="20241013 16:48:14.216"/>
</kw>
<status status="PASS" starttime="20241013 16:48:09.104" endtime="20241013 16:48:14.216"/>
</kw>
<msg timestamp="20241013 16:48:14.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:09.104" endtime="20241013 16:48:14.216"/>
</kw>
<msg timestamp="20241013 16:48:14.217" level="INFO">${result} = 2024-10-13 16:48:11,131 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:11,234 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:09.103" endtime="20241013 16:48:14.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:48:14.217" endtime="20241013 16:48:14.217"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:48:09.103" endtime="20241013 16:48:14.217"/>
</test>
<test id="s1-s2-s5-t11" name="[Get] Key Information in OBJECT_STORE Bucket" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ommg --operation GET_KEYINFO -n ${n} --volume ${VOLUME} --bucket ${BUCKET_OBJ}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:14.222" level="INFO">Running command 'ozone freon ommg --operation GET_KEYINFO -n 100 --volume volume1 --bucket bucket-obj 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:19.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:19.543" level="INFO">${output} = 2024-10-13 16:48:16,170 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:16,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:14.219" endtime="20241013 16:48:19.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:19.544" level="INFO">2024-10-13 16:48:16,170 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:16,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:48:16,285 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:48:16,376 [main] INFO freon.BaseFreonGenerator: Executing test with prefix '' and number-of-tests 100
2024-10-13 16:48:16,426 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:48:16,473 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:17,426 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 16:48:18,427 [Thread-5] INFO freon.ProgressBar: Progress: 80.00 % (80 out of 100)
2024-10-13 16:48:19,428 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-10-13 16:48:19,470 [shutdown-hook-0] INFO metrics: type=TIMER, name=GET_KEYINFO, count=100, min=1.473623, max=126.313485, mean=20.273785190000005, stddev=30.443099041814836, median=11.495084, p75=15.242449, p95=103.219576, p98=124.037697, p99=124.33271, p999=126.313485, mean_rate=80.5143618137, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:19,471 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:48:19,471 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:19,471 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20241013 16:48:19.543" endtime="20241013 16:48:19.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:19.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:19.544" endtime="20241013 16:48:19.545"/>
</kw>
<status status="PASS" starttime="20241013 16:48:14.219" endtime="20241013 16:48:19.545"/>
</kw>
<msg timestamp="20241013 16:48:19.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:14.219" endtime="20241013 16:48:19.545"/>
</kw>
<msg timestamp="20241013 16:48:19.545" level="INFO">${result} = 2024-10-13 16:48:16,170 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:16,285 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:14.218" endtime="20241013 16:48:19.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:48:19.545" endtime="20241013 16:48:19.546"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:48:14.218" endtime="20241013 16:48:19.546"/>
</test>
<doc>Test freon ommg command</doc>
<status status="PASS" starttime="20241013 16:47:02.317" endtime="20241013 16:48:19.547"/>
</suite>
<suite id="s1-s2-s6" name="Read-Write-Key" source="/opt/hadoop/smoketest/freon/read-write-key.robot">
<test id="s1-s2-s6-t1" name="Pre-generate 100 keys of size 1 byte each to Ozone" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:19.569" level="INFO">Running command 'ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:28.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:28.201" level="INFO">${output} = 2024-10-13 16:48:21,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:21,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:19.566" endtime="20241013 16:48:28.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:28.202" level="INFO">2024-10-13 16:48:21,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:21,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:48:21,643 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:48:21,736 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 1
2024-10-13 16:48:21,790 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:48:21,793 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:22,790 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:48:23,670 [main] INFO rpc.RpcClient: Creating Volume: voltest, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2024-10-13 16:48:23,701 [main] INFO rpc.RpcClient: Creating Bucket: voltest/buckettest, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2024-10-13 16:48:23,790 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:48:23,924 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:48:23,980 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:48:24,149 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:48:24,884 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2024-10-13 16:48:27,775 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=1, min=3994.026777, max=3994.026777, mean=3994.026777, stddev=0.0, median=3994.026777, p75=3994.026777, p95=3994.026777, p98=3994.026777, p99=3994.026777, p999=3994.026777, mean_rate=0.2466652016052795, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:27,775 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2024-10-13 16:48:27,775 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:27,776 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:48:28.201" endtime="20241013 16:48:28.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:28.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:28.202" endtime="20241013 16:48:28.203"/>
</kw>
<status status="PASS" starttime="20241013 16:48:19.566" endtime="20241013 16:48:28.203"/>
</kw>
<msg timestamp="20241013 16:48:28.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:19.566" endtime="20241013 16:48:28.203"/>
</kw>
<msg timestamp="20241013 16:48:28.203" level="INFO">${result} = 2024-10-13 16:48:21,527 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:21,643 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:19.565" endtime="20241013 16:48:28.203"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:48:19.565" endtime="20241013 16:48:28.203"/>
</test>
<test id="s1-s2-s6-t2" name="Read 10 keys from pre-generated keys" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:48:28.205" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20241013 16:48:28.205" endtime="20241013 16:48:28.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:28.208" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:34.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:34.847" level="INFO">${output} = 2024-10-13 16:48:30,158 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:30,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:28.206" endtime="20241013 16:48:34.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:34.848" level="INFO">2024-10-13 16:48:30,158 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:30,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:48:30,256 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:48:30,350 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2024-10-13 16:48:30,405 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:30,419 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:31,405 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:32,406 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:32,499 [pool-2-thread-6] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:48:33,406 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:34,406 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2024-10-13 16:48:34,450 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=1331.91374, max=1462.507968, mean=1401.4415030000002, stddev=48.78100808409997, median=1377.997735, p75=1459.86045, p95=1462.507968, p98=1462.507968, p99=1462.507968, p999=1462.507968, mean_rate=4.7593095670562935, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:34,450 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-10-13 16:48:34,450 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:34,450 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20241013 16:48:34.847" endtime="20241013 16:48:34.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:34.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:34.848" endtime="20241013 16:48:34.849"/>
</kw>
<status status="PASS" starttime="20241013 16:48:28.206" endtime="20241013 16:48:34.849"/>
</kw>
<msg timestamp="20241013 16:48:34.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:28.205" endtime="20241013 16:48:34.849"/>
</kw>
<msg timestamp="20241013 16:48:34.849" level="INFO">${result} = 2024-10-13 16:48:30,158 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:30,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:28.205" endtime="20241013 16:48:34.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:48:34.849" endtime="20241013 16:48:34.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:48:28.204" endtime="20241013 16:48:34.850"/>
</test>
<test id="s1-s2-s6-t3" name="Read 10 keys metadata from pre-generated keys" line="34">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:48:34.852" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20241013 16:48:34.852" endtime="20241013 16:48:34.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:34.855" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest --percentage-read 100 --percentage-list 0 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:40.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:40.037" level="INFO">${output} = 2024-10-13 16:48:36,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:36,883 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:34.853" endtime="20241013 16:48:40.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:40.038" level="INFO">2024-10-13 16:48:36,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:36,883 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:48:36,883 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:48:36,964 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2024-10-13 16:48:37,006 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:37,008 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:38,007 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:39,007 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2024-10-13 16:48:39,957 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=38.878111, max=73.696286, mean=59.975323200000005, stddev=13.293012781986661, median=69.108905, p75=72.720526, p95=73.696286, p98=73.696286, p99=73.696286, p999=73.696286, mean_rate=9.479144310401033, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:39,958 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:48:39,958 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:39,958 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20241013 16:48:40.038" endtime="20241013 16:48:40.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:40.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:40.039" endtime="20241013 16:48:40.039"/>
</kw>
<status status="PASS" starttime="20241013 16:48:34.853" endtime="20241013 16:48:40.039"/>
</kw>
<msg timestamp="20241013 16:48:40.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:34.852" endtime="20241013 16:48:40.039"/>
</kw>
<msg timestamp="20241013 16:48:40.040" level="INFO">${result} = 2024-10-13 16:48:36,787 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:36,883 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:34.852" endtime="20241013 16:48:40.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:48:40.040" endtime="20241013 16:48:40.040"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:48:34.851" endtime="20241013 16:48:40.040"/>
</test>
<test id="s1-s2-s6-t4" name="Read 10 keys when generate in linear manner" line="39">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:48:40.042" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20241013 16:48:40.041" endtime="20241013 16:48:40.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 1 -r 100 --size 0 -v voltest -b buckettest -p performanceTest --linear --percentage-read=0 --percentage-list=0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:40.045" level="INFO">Running command 'ozone freon ockrw -n 10 -t 1 -r 100 --size 0 -v voltest -b buckettest -p performanceTest --linear --percentage-read=0 --percentage-list=0 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:45.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:45.381" level="INFO">${output} = 2024-10-13 16:48:42,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:42,192 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:40.043" endtime="20241013 16:48:45.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:45.382" level="INFO">2024-10-13 16:48:42,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:42,192 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:48:42,193 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:48:42,255 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2024-10-13 16:48:42,297 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:42,299 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:43,297 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:44,299 [Thread-5] INFO freon.ProgressBar: Progress: 90.00 % (9 out of 10)
2024-10-13 16:48:45,299 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2024-10-13 16:48:45,312 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=11.146985, max=165.30503, mean=32.025053500000006, stddev=44.695130781809105, median=15.360893, p75=20.30307, p95=165.30503, p98=165.30503, p99=165.30503, p999=165.30503, mean_rate=7.4653423181246445, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:45,313 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:48:45,313 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:45,313 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20241013 16:48:45.381" endtime="20241013 16:48:45.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:45.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:45.382" endtime="20241013 16:48:45.383"/>
</kw>
<status status="PASS" starttime="20241013 16:48:40.043" endtime="20241013 16:48:45.383"/>
</kw>
<msg timestamp="20241013 16:48:45.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:40.042" endtime="20241013 16:48:45.383"/>
</kw>
<msg timestamp="20241013 16:48:45.383" level="INFO">${result} = 2024-10-13 16:48:42,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:42,192 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:40.042" endtime="20241013 16:48:45.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 1 -m -r 100 -v voltest -b buckettest -p performanceTest --linear --percentage-read=100 --percentage-list=0</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:45.387" level="INFO">Running command 'ozone freon ockrw -n 10 -t 1 -m -r 100 -v voltest -b buckettest -p performanceTest --linear --percentage-read=100 --percentage-list=0 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:50.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:50.281" level="INFO">${output} = 2024-10-13 16:48:47,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:47,399 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:45.385" endtime="20241013 16:48:50.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:50.282" level="INFO">2024-10-13 16:48:47,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:47,399 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:48:47,399 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:48:47,479 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2024-10-13 16:48:47,524 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:47,528 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:48,525 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:49,525 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2024-10-13 16:48:50,193 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=1.438287, max=27.822647, mean=4.9316691, stddev=7.796292624451425, median=1.833508, p75=2.535127, p95=27.822647, p98=27.822647, p99=27.822647, p999=27.822647, mean_rate=9.799203031405408, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:50,194 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:48:50,194 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:50,194 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20241013 16:48:50.282" endtime="20241013 16:48:50.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:50.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:50.282" endtime="20241013 16:48:50.283"/>
</kw>
<status status="PASS" starttime="20241013 16:48:45.384" endtime="20241013 16:48:50.283"/>
</kw>
<msg timestamp="20241013 16:48:50.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:45.384" endtime="20241013 16:48:50.283"/>
</kw>
<msg timestamp="20241013 16:48:50.283" level="INFO">${result} = 2024-10-13 16:48:47,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:47,399 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:45.383" endtime="20241013 16:48:50.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:48:50.284" endtime="20241013 16:48:50.284"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:48:40.041" endtime="20241013 16:48:50.284"/>
</test>
<test id="s1-s2-s6-t5" name="Write 10 keys of size 1 byte each from key index 0 to 99" line="45">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:48:50.286" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20241013 16:48:50.285" endtime="20241013 16:48:50.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:48:50.286" level="INFO">${size} = 1</msg>
<status status="PASS" starttime="20241013 16:48:50.286" endtime="20241013 16:48:50.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 0 --percentage-list 0 --size ${size} -r 100 -v voltest -b buckettest -p performanceTest --linear</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:50.290" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 0 --percentage-list 0 --size 1 -r 100 -v voltest -b buckettest -p performanceTest --linear 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:57.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:57.003" level="INFO">${output} = 2024-10-13 16:48:52,254 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:52,356 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:50.288" endtime="20241013 16:48:57.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:57.004" level="INFO">2024-10-13 16:48:52,254 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:52,356 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:48:52,356 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:48:52,444 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2024-10-13 16:48:52,489 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:52,503 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:48:53,490 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:54,493 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:54,670 [pool-2-thread-6] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:48:54,752 [pool-2-thread-6] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:48:54,753 [pool-2-thread-8] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig2-
2024-10-13 16:48:54,753 [pool-2-thread-4] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig9-
2024-10-13 16:48:54,752 [pool-2-thread-2] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig6-
2024-10-13 16:48:54,754 [pool-2-thread-3] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig7-
2024-10-13 16:48:54,754 [pool-2-thread-9] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig8-
2024-10-13 16:48:54,754 [pool-2-thread-10] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2024-10-13 16:48:54,755 [pool-2-thread-7] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig4-
2024-10-13 16:48:54,752 [pool-2-thread-5] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig3-
2024-10-13 16:48:54,760 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig5-
2024-10-13 16:48:55,006 [pool-2-thread-4] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:48:55,493 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:48:56,494 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2024-10-13 16:48:56,597 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=1660.113227, max=1696.854969, mean=1678.4328758000004, stddev=11.91153344569986, median=1679.750747, p75=1687.77314, p95=1696.854969, p98=1696.854969, p99=1696.854969, p999=1696.854969, mean_rate=4.59339733253204, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:48:56,598 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-10-13 16:48:56,598 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:48:56,598 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20241013 16:48:57.003" endtime="20241013 16:48:57.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:57.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:57.004" endtime="20241013 16:48:57.004"/>
</kw>
<status status="PASS" starttime="20241013 16:48:50.287" endtime="20241013 16:48:57.004"/>
</kw>
<msg timestamp="20241013 16:48:57.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:50.287" endtime="20241013 16:48:57.005"/>
</kw>
<msg timestamp="20241013 16:48:57.005" level="INFO">${result} = 2024-10-13 16:48:52,254 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:48:52,356 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:48:50.286" endtime="20241013 16:48:57.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:48:57.005" endtime="20241013 16:48:57.005"/>
</kw>
<kw name="Execute" library="os">
<var>${keyName}</var>
<arg>echo -n '1' | md5sum | head -c 7</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:57.009" level="INFO">Running command 'echo -n '1' | md5sum | head -c 7 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:48:57.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:48:57.013" level="INFO">${output} = c4ca423</msg>
<status status="PASS" starttime="20241013 16:48:57.006" endtime="20241013 16:48:57.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:48:57.014" level="INFO">c4ca423</msg>
<status status="PASS" starttime="20241013 16:48:57.013" endtime="20241013 16:48:57.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:48:57.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:48:57.014" endtime="20241013 16:48:57.014"/>
</kw>
<status status="PASS" starttime="20241013 16:48:57.006" endtime="20241013 16:48:57.014"/>
</kw>
<msg timestamp="20241013 16:48:57.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:57.006" endtime="20241013 16:48:57.015"/>
</kw>
<msg timestamp="20241013 16:48:57.015" level="INFO">${keyName} = c4ca423</msg>
<status status="PASS" starttime="20241013 16:48:57.005" endtime="20241013 16:48:57.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /voltest/buckettest/performanceTest/${keyName}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:48:57.018" level="INFO">Running command 'ozone sh key info /voltest/buckettest/performanceTest/c4ca423 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:01.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:01.228" level="INFO">${output} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "owner" : "testuser",
  "dataSize" : 1,
  "creationTime" : "2024-10-13T16:48:24.872Z",
  "modificat...</msg>
<status status="PASS" starttime="20241013 16:48:57.016" endtime="20241013 16:49:01.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:01.229" level="INFO">{
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "owner" : "testuser",
  "dataSize" : 1,
  "creationTime" : "2024-10-13T16:48:24.872Z",
  "modificationTime" : "2024-10-13T16:48:56.113Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 113750153625604322,
    "length" : 1,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 17287,
  "file" : true
}</msg>
<status status="PASS" starttime="20241013 16:49:01.228" endtime="20241013 16:49:01.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:49:01.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:49:01.229" endtime="20241013 16:49:01.229"/>
</kw>
<status status="PASS" starttime="20241013 16:48:57.016" endtime="20241013 16:49:01.230"/>
</kw>
<msg timestamp="20241013 16:49:01.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:48:57.015" endtime="20241013 16:49:01.230"/>
</kw>
<msg timestamp="20241013 16:49:01.230" level="INFO">${result} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "owner" : "testuser",
  "dataSize" : 1,
  "creationTime" : "2024-10-13T16:48:24.872Z",
  "modificat...</msg>
<status status="PASS" starttime="20241013 16:48:57.015" endtime="20241013 16:49:01.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"dataSize\" : 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:49:01.230" endtime="20241013 16:49:01.230"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:48:50.285" endtime="20241013 16:49:01.231"/>
</test>
<test id="s1-s2-s6-t6" name="Run 90 % of read-key tasks and 10 % of write-key tasks for 10 keys from pre-generated keys" line="55">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:49:01.232" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20241013 16:49:01.232" endtime="20241013 16:49:01.232"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 90 --percentage-list 0 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:01.235" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 90 --percentage-list 0 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:07.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:07.849" level="INFO">${output} = 2024-10-13 16:49:03,169 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:03,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:01.233" endtime="20241013 16:49:07.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:07.850" level="INFO">2024-10-13 16:49:03,169 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:03,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:49:03,282 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:49:03,344 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2024-10-13 16:49:03,395 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:49:03,397 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:49:04,395 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:49:05,339 [pool-2-thread-9] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:49:05,395 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:49:06,402 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:49:07,402 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2024-10-13 16:49:07,452 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=1184.587318, max=1261.344275, mean=1215.149333, stddev=22.522211865682973, median=1212.461417, p75=1232.539396, p95=1261.344275, p98=1261.344275, p99=1261.344275, p999=1261.344275, mean_rate=4.400059702650081, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:49:07,453 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-10-13 16:49:07,453 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:49:07,453 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20241013 16:49:07.850" endtime="20241013 16:49:07.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:49:07.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:49:07.850" endtime="20241013 16:49:07.851"/>
</kw>
<status status="PASS" starttime="20241013 16:49:01.233" endtime="20241013 16:49:07.851"/>
</kw>
<msg timestamp="20241013 16:49:07.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:49:01.232" endtime="20241013 16:49:07.851"/>
</kw>
<msg timestamp="20241013 16:49:07.852" level="INFO">${result} = 2024-10-13 16:49:03,169 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:03,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:01.232" endtime="20241013 16:49:07.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:49:07.852" endtime="20241013 16:49:07.852"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:49:01.231" endtime="20241013 16:49:07.852"/>
</test>
<test id="s1-s2-s6-t7" name="Run 50 % of read-key tasks, 40 % list-key tasks and 10 % of write-key tasks for 10 keys from pre-generated keys" line="60">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:49:07.854" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20241013 16:49:07.854" endtime="20241013 16:49:07.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 50 --percentage-list 40 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:07.858" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 50 --percentage-list 40 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:14.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:14.304" level="INFO">${output} = 2024-10-13 16:49:09,793 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:09,898 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:07.855" endtime="20241013 16:49:14.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:14.305" level="INFO">2024-10-13 16:49:09,793 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:09,898 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:49:09,898 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:49:10,009 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2024-10-13 16:49:10,078 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:49:10,082 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:49:11,079 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2024-10-13 16:49:12,087 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2024-10-13 16:49:12,202 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:49:12,404 [pool-2-thread-6] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig2-
2024-10-13 16:49:12,404 [pool-2-thread-5] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig3-
2024-10-13 16:49:12,404 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig4-
2024-10-13 16:49:12,405 [pool-2-thread-3] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2024-10-13 16:49:12,407 [pool-2-thread-9] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:49:12,675 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:49:13,855 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write-list, count=10, min=7.307664, max=1744.767198, mean=1370.2393372572205, stddev=675.7549821634663, median=1690.857499, p75=1734.834013, p95=1744.767198, p98=1744.767198, p99=1744.767198, p999=1744.767198, mean_rate=5.277471494588714, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:49:13,858 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-10-13 16:49:13,858 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:49:13,858 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20241013 16:49:14.304" endtime="20241013 16:49:14.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:49:14.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:49:14.305" endtime="20241013 16:49:14.305"/>
</kw>
<status status="PASS" starttime="20241013 16:49:07.855" endtime="20241013 16:49:14.305"/>
</kw>
<msg timestamp="20241013 16:49:14.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:49:07.855" endtime="20241013 16:49:14.306"/>
</kw>
<msg timestamp="20241013 16:49:14.306" level="INFO">${result} = 2024-10-13 16:49:09,793 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:09,898 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:07.854" endtime="20241013 16:49:14.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:49:14.306" endtime="20241013 16:49:14.306"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:49:07.853" endtime="20241013 16:49:14.306"/>
</test>
<doc>Test freon read/write key commands</doc>
<status status="PASS" starttime="20241013 16:48:19.550" endtime="20241013 16:49:14.307"/>
</suite>
<suite id="s1-s2-s7" name="Remove" source="/opt/hadoop/smoketest/freon/remove.robot">
<test id="s1-s2-s7-t1" name="Ozone Client Key Remover" line="26">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:14.320" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:20.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:20.376" level="INFO">${output} = 2024-10-13 16:49:16,258 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:16,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:14.318" endtime="20241013 16:49:20.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:20.377" level="INFO">2024-10-13 16:49:16,258 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:16,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:49:16,357 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:49:16,447 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2024-10-13 16:49:16,491 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:16,551 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:49:17,491 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:18,153 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:49:18,260 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2024-10-13 16:49:18,478 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.dropwizard3.Dm3MetricRegistriesImpl
2024-10-13 16:49:18,491 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:19,492 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:49:19,989 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1368.789794, max=1368.789794, mean=1368.789794, stddev=0.0, median=1368.789794, p75=1368.789794, p95=1368.789794, p98=1368.789794, p99=1368.789794, p999=1368.789794, mean_rate=0.49095533508113043, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:49:19,994 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:49:19,994 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:49:19,994 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:49:20.377" endtime="20241013 16:49:20.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:49:20.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:49:20.378" endtime="20241013 16:49:20.378"/>
</kw>
<status status="PASS" starttime="20241013 16:49:14.317" endtime="20241013 16:49:20.378"/>
</kw>
<msg timestamp="20241013 16:49:20.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:49:14.317" endtime="20241013 16:49:20.378"/>
</kw>
<msg timestamp="20241013 16:49:20.379" level="INFO">${result} = 2024-10-13 16:49:16,258 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:16,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:14.317" endtime="20241013 16:49:20.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:49:20.379" endtime="20241013 16:49:20.379"/>
</kw>
<status status="PASS" starttime="20241013 16:49:14.316" endtime="20241013 16:49:20.379"/>
</kw>
<kw name="Freon OCKR" library="freon">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:20.384" level="INFO">Running command 'ozone freon ockr --om-service-id=omservice -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:25.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:25.376" level="INFO">${output} = 2024-10-13 16:49:22,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:22,582 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:20.381" endtime="20241013 16:49:25.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:25.377" level="INFO">2024-10-13 16:49:22,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:22,582 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:49:22,582 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:49:22,636 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2024-10-13 16:49:22,666 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:22,668 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:49:23,667 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:24,668 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:49:25,292 [shutdown-hook-0] INFO metrics: type=TIMER, name=remove, count=1, min=23.258235, max=23.258235, mean=23.258235, stddev=0.0, median=23.258235, p75=23.258235, p95=23.258235, p98=23.258235, p99=23.258235, p999=23.258235, mean_rate=0.9876559002616321, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:49:25,293 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:49:25,293 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:49:25,293 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:49:25.376" endtime="20241013 16:49:25.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:49:25.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:49:25.377" endtime="20241013 16:49:25.378"/>
</kw>
<status status="PASS" starttime="20241013 16:49:20.381" endtime="20241013 16:49:25.378"/>
</kw>
<msg timestamp="20241013 16:49:25.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:49:20.381" endtime="20241013 16:49:25.378"/>
</kw>
<msg timestamp="20241013 16:49:25.378" level="INFO">${result} = 2024-10-13 16:49:22,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:22,582 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:20.380" endtime="20241013 16:49:25.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:49:25.378" endtime="20241013 16:49:25.379"/>
</kw>
<status status="PASS" starttime="20241013 16:49:20.379" endtime="20241013 16:49:25.379"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:49:14.315" endtime="20241013 16:49:25.379"/>
</test>
<test id="s1-s2-s7-t2" name="OM Bucket Remover" line="30">
<kw name="Freon OMBG" library="freon" type="SETUP">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:25.385" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:30.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:30.375" level="INFO">${output} = 2024-10-13 16:49:27,515 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:27,605 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:25.382" endtime="20241013 16:49:30.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:30.376" level="INFO">2024-10-13 16:49:27,515 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:27,605 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:49:27,605 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:49:27,681 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2024-10-13 16:49:27,727 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:27,729 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:49:28,728 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:29,728 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:49:30,313 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=33.427864, max=33.427864, mean=33.427864, stddev=0.0, median=33.427864, p75=33.427864, p95=33.427864, p98=33.427864, p99=33.427864, p999=33.427864, mean_rate=0.9644457042891519, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:49:30,314 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2024-10-13 16:49:30,314 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:49:30,314 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:49:30.375" endtime="20241013 16:49:30.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:49:30.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:49:30.376" endtime="20241013 16:49:30.377"/>
</kw>
<status status="PASS" starttime="20241013 16:49:25.382" endtime="20241013 16:49:30.377"/>
</kw>
<msg timestamp="20241013 16:49:30.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:49:25.382" endtime="20241013 16:49:30.377"/>
</kw>
<msg timestamp="20241013 16:49:30.377" level="INFO">${result} = 2024-10-13 16:49:27,515 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:27,605 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:25.381" endtime="20241013 16:49:30.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:49:30.377" endtime="20241013 16:49:30.378"/>
</kw>
<status status="PASS" starttime="20241013 16:49:25.380" endtime="20241013 16:49:30.378"/>
</kw>
<kw name="Freon OMBR" library="freon">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:30.382" level="INFO">Running command 'ozone freon ombr --om-service-id=omservice -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:34.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:34.725" level="INFO">${output} = 2024-10-13 16:49:32,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:32,478 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:30.380" endtime="20241013 16:49:34.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:34.726" level="INFO">2024-10-13 16:49:32,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:32,478 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:49:32,478 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:49:32,556 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2024-10-13 16:49:32,632 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:33,632 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:34,633 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:49:34,651 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-remove, count=1, min=434.618594, max=434.618594, mean=434.618594, stddev=0.0, median=434.618594, p75=434.618594, p95=434.618594, p98=434.618594, p99=434.618594, p999=434.618594, mean_rate=0.7316002903744964, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:49:34,652 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2024-10-13 16:49:34,652 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:49:34,652 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:49:34.726" endtime="20241013 16:49:34.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:49:34.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:49:34.727" endtime="20241013 16:49:34.727"/>
</kw>
<status status="PASS" starttime="20241013 16:49:30.380" endtime="20241013 16:49:34.727"/>
</kw>
<msg timestamp="20241013 16:49:34.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:49:30.379" endtime="20241013 16:49:34.727"/>
</kw>
<msg timestamp="20241013 16:49:34.728" level="INFO">${result} = 2024-10-13 16:49:32,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:32,478 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:30.379" endtime="20241013 16:49:34.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:49:34.728" endtime="20241013 16:49:34.728"/>
</kw>
<status status="PASS" starttime="20241013 16:49:30.378" endtime="20241013 16:49:34.728"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:49:25.380" endtime="20241013 16:49:34.728"/>
</test>
<doc>Test freon data remove commands</doc>
<status status="PASS" starttime="20241013 16:49:14.310" endtime="20241013 16:49:34.729"/>
</suite>
<suite id="s1-s2-s8" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s2-s8-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 16:49:34.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:49:34.737" endtime="20241013 16:49:34.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20241013 16:49:34.738" endtime="20241013 16:49:34.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20241013 16:49:34.738" endtime="20241013 16:49:34.738"/>
</kw>
<status status="PASS" starttime="20241013 16:49:34.736" endtime="20241013 16:49:34.738"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:49:34.736" endtime="20241013 16:49:34.738"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20241013 16:49:34.730" endtime="20241013 16:49:34.738"/>
</suite>
<suite id="s1-s2-s9" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-s9-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:34.749" level="INFO">Running command 'ozone freon ockv --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:41.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:41.029" level="INFO">${output} = 2024-10-13 16:49:36,633 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:36,749 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:34.747" endtime="20241013 16:49:41.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:41.030" level="INFO">2024-10-13 16:49:36,633 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:36,749 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 16:49:36,749 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 16:49:36,849 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2024-10-13 16:49:36,901 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:36,905 [main] INFO utils.LeakDetector: Starting leak detector thread OzoneClientObject0.
2024-10-13 16:49:37,902 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:38,654 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2024-10-13 16:49:38,903 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2024-10-13 16:49:39,903 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2024-10-13 16:49:40,658 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=17.303615, max=17.303615, mean=17.303615, stddev=0.0, median=17.303615, p75=17.303615, p95=17.303615, p98=17.303615, p99=17.303615, p999=17.303615, mean_rate=0.9680056776862935, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 16:49:40,659 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2024-10-13 16:49:40,659 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 16:49:40,659 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20241013 16:49:41.030" endtime="20241013 16:49:41.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:49:41.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:49:41.031" endtime="20241013 16:49:41.031"/>
</kw>
<status status="PASS" starttime="20241013 16:49:34.746" endtime="20241013 16:49:41.031"/>
</kw>
<msg timestamp="20241013 16:49:41.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:49:34.746" endtime="20241013 16:49:41.031"/>
</kw>
<msg timestamp="20241013 16:49:41.032" level="INFO">${result} = 2024-10-13 16:49:36,633 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 16:49:36,749 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 16:49:34.746" endtime="20241013 16:49:41.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:49:41.032" endtime="20241013 16:49:41.032"/>
</kw>
<status status="PASS" starttime="20241013 16:49:34.745" endtime="20241013 16:49:41.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:49:34.744" endtime="20241013 16:49:41.032"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20241013 16:49:34.739" endtime="20241013 16:49:41.033"/>
</suite>
<status status="PASS" starttime="20241013 16:43:03.880" endtime="20241013 16:49:41.036"/>
</suite>
<suite id="s1-s3" name="ozonefs-o3fs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 16:49:41.752" level="INFO">${random} = 40251</msg>
<status status="PASS" starttime="20241013 16:49:41.751" endtime="20241013 16:49:41.752"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:49:41.752" level="INFO">${BUCKET} = 40251-link1-o3fs</msg>
<status status="PASS" starttime="20241013 16:49:41.752" endtime="20241013 16:49:41.752"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:49:41.753" level="INFO">${BUCKET2} = 40251-link2-o3fs</msg>
<status status="PASS" starttime="20241013 16:49:41.752" endtime="20241013 16:49:41.753"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:49:41.753" level="INFO">${BUCKET_IN_VOL2} = 40251-link3-o3fs</msg>
<status status="PASS" starttime="20241013 16:49:41.753" endtime="20241013 16:49:41.753"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:49:41.756" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20241013 16:49:41.756" endtime="20241013 16:49:41.756"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:49:41.757" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20241013 16:49:41.756" endtime="20241013 16:49:41.757"/>
</kw>
<status status="PASS" starttime="20241013 16:49:41.755" endtime="20241013 16:49:41.757"/>
</kw>
<msg timestamp="20241013 16:49:41.757" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20241013 16:49:41.755" endtime="20241013 16:49:41.757"/>
</kw>
<status status="PASS" starttime="20241013 16:49:41.754" endtime="20241013 16:49:41.757"/>
</kw>
<msg timestamp="20241013 16:49:41.757" level="INFO">${url} = o3fs://40251-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20241013 16:49:41.754" endtime="20241013 16:49:41.757"/>
</kw>
<msg timestamp="20241013 16:49:41.757" level="INFO">${BASE_URL} = o3fs://40251-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20241013 16:49:41.753" endtime="20241013 16:49:41.757"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:49:41.758" level="INFO">${BASE_URL} = o3fs://40251-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20241013 16:49:41.757" endtime="20241013 16:49:41.758"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:49:41.759" level="INFO">${DEEP_URL} = o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir</msg>
<status status="PASS" starttime="20241013 16:49:41.758" endtime="20241013 16:49:41.759"/>
</kw>
<status status="PASS" starttime="20241013 16:49:41.751" endtime="20241013 16:49:41.759"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:41.762" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:45.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:45.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:49:41.760" endtime="20241013 16:49:45.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:45.874" level="INFO"/>
<status status="PASS" starttime="20241013 16:49:45.874" endtime="20241013 16:49:45.875"/>
</kw>
<status status="PASS" starttime="20241013 16:49:41.759" endtime="20241013 16:49:45.875"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:45.877" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:49.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:49.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:49:45.875" endtime="20241013 16:49:49.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:49.741" level="INFO"/>
<status status="PASS" starttime="20241013 16:49:49.741" endtime="20241013 16:49:49.741"/>
</kw>
<status status="PASS" starttime="20241013 16:49:45.875" endtime="20241013 16:49:49.741"/>
</kw>
<status status="PASS" starttime="20241013 16:49:41.759" endtime="20241013 16:49:49.741"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:49.747" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:53.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:53.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:49:49.745" endtime="20241013 16:49:53.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:53.842" level="INFO"/>
<status status="PASS" starttime="20241013 16:49:53.842" endtime="20241013 16:49:53.842"/>
</kw>
<status status="PASS" starttime="20241013 16:49:49.745" endtime="20241013 16:49:53.842"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:53.845" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:49:57.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:49:57.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:49:53.843" endtime="20241013 16:49:57.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:49:57.508" level="INFO"/>
<status status="PASS" starttime="20241013 16:49:57.508" endtime="20241013 16:49:57.508"/>
</kw>
<status status="PASS" starttime="20241013 16:49:53.843" endtime="20241013 16:49:57.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:49:57.512" level="INFO">Running command 'ozone sh bucket create fstest1-src/40251-link1-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:01.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:01.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:49:57.510" endtime="20241013 16:50:01.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:01.371" level="INFO"/>
<status status="PASS" starttime="20241013 16:50:01.371" endtime="20241013 16:50:01.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:01.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:01.372" endtime="20241013 16:50:01.372"/>
</kw>
<status status="PASS" starttime="20241013 16:49:57.510" endtime="20241013 16:50:01.372"/>
</kw>
<msg timestamp="20241013 16:50:01.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:49:57.509" endtime="20241013 16:50:01.372"/>
</kw>
<status status="PASS" starttime="20241013 16:49:57.509" endtime="20241013 16:50:01.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:01.376" level="INFO">Running command 'ozone sh bucket create fstest1-src/40251-link2-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:05.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:05.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:50:01.374" endtime="20241013 16:50:05.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:05.184" level="INFO"/>
<status status="PASS" starttime="20241013 16:50:05.183" endtime="20241013 16:50:05.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:05.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:05.184" endtime="20241013 16:50:05.185"/>
</kw>
<status status="PASS" starttime="20241013 16:50:01.373" endtime="20241013 16:50:05.185"/>
</kw>
<msg timestamp="20241013 16:50:05.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:01.373" endtime="20241013 16:50:05.185"/>
</kw>
<status status="PASS" starttime="20241013 16:50:01.373" endtime="20241013 16:50:05.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:05.189" level="INFO">Running command 'ozone sh bucket create fstest2-src/40251-link3-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:09.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:09.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:50:05.187" endtime="20241013 16:50:09.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:09.309" level="INFO"/>
<status status="PASS" starttime="20241013 16:50:09.308" endtime="20241013 16:50:09.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:09.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:09.309" endtime="20241013 16:50:09.309"/>
</kw>
<status status="PASS" starttime="20241013 16:50:05.187" endtime="20241013 16:50:09.310"/>
</kw>
<msg timestamp="20241013 16:50:09.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:05.186" endtime="20241013 16:50:09.310"/>
</kw>
<status status="PASS" starttime="20241013 16:50:05.185" endtime="20241013 16:50:09.310"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:09.313" level="INFO">Running command 'ozone sh bucket link fstest1-src/40251-link1-o3fs-src fstest1/40251-link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:13.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:13.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:50:09.311" endtime="20241013 16:50:13.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:13.179" level="INFO"/>
<status status="PASS" starttime="20241013 16:50:13.178" endtime="20241013 16:50:13.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:13.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:13.179" endtime="20241013 16:50:13.179"/>
</kw>
<status status="PASS" starttime="20241013 16:50:09.311" endtime="20241013 16:50:13.180"/>
</kw>
<msg timestamp="20241013 16:50:13.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:09.311" endtime="20241013 16:50:13.180"/>
</kw>
<status status="PASS" starttime="20241013 16:50:09.310" endtime="20241013 16:50:13.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:13.183" level="INFO">Running command 'ozone sh bucket link fstest1-src/40251-link2-o3fs-src fstest1/40251-link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:16.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:16.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:50:13.181" endtime="20241013 16:50:16.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:16.951" level="INFO"/>
<status status="PASS" starttime="20241013 16:50:16.951" endtime="20241013 16:50:16.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:16.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:16.952" endtime="20241013 16:50:16.952"/>
</kw>
<status status="PASS" starttime="20241013 16:50:13.181" endtime="20241013 16:50:16.952"/>
</kw>
<msg timestamp="20241013 16:50:16.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:13.180" endtime="20241013 16:50:16.952"/>
</kw>
<status status="PASS" starttime="20241013 16:50:13.180" endtime="20241013 16:50:16.952"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:16.956" level="INFO">Running command 'ozone sh bucket link fstest2-src/40251-link3-o3fs-src fstest2/40251-link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:20.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:20.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:50:16.954" endtime="20241013 16:50:20.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:20.642" level="INFO"/>
<status status="PASS" starttime="20241013 16:50:20.641" endtime="20241013 16:50:20.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:20.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:20.642" endtime="20241013 16:50:20.642"/>
</kw>
<status status="PASS" starttime="20241013 16:50:16.953" endtime="20241013 16:50:20.643"/>
</kw>
<msg timestamp="20241013 16:50:20.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:16.953" endtime="20241013 16:50:20.643"/>
</kw>
<status status="PASS" starttime="20241013 16:50:16.953" endtime="20241013 16:50:20.643"/>
</kw>
<status status="PASS" starttime="20241013 16:49:49.744" endtime="20241013 16:50:20.643"/>
</kw>
<status status="PASS" starttime="20241013 16:49:49.742" endtime="20241013 16:50:20.643"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:20.646" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:24.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:24.779" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20241013 16:50:20.644" endtime="20241013 16:50:24.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:24.780" level="INFO">[ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2024-10-13T16:49:45.779Z",
  "modificationTime" : "2024-10-13T16:49:45.779Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2024-10-13T16:49:53.736Z",
  "modificationTime" : "2024-10-13T16:49:53.736Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2024-10-13T16:49:49.614Z",
  "modificationTime" : "2024-10-13T16:49:49.614Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2024-10-13T16:49:57.416Z",
  "modificationTime" : "2024-10-13T16:49:57.416Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "hsync-volume",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2024-10-13T16:44:33.490Z",
  "modificationTime" : "2024-10-13T16:44:33.490Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "om",
  "owner" : "om",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2024-10-13T16:42:37.382Z",
  "modificationTime" : "2024-10-13T16:42:37.382Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2024-10-13T16:44:16.085Z",
  "modificationTime" : "2024-10-13T16:44:16.085Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "voltest",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2024-10-13T16:48:23.682Z",
  "modificationTime" : "2024-10-13T16:48:23.682Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "volume1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2024-10-13T16:47:06.092Z",
  "modificationTime" : "2024-10-13T16:47:06.092Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20241013 16:50:24.779" endtime="20241013 16:50:24.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:24.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:24.780" endtime="20241013 16:50:24.780"/>
</kw>
<status status="PASS" starttime="20241013 16:50:20.644" endtime="20241013 16:50:24.780"/>
</kw>
<msg timestamp="20241013 16:50:24.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:20.644" endtime="20241013 16:50:24.781"/>
</kw>
<msg timestamp="20241013 16:50:24.781" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20241013 16:50:20.643" endtime="20241013 16:50:24.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:50:24.781" endtime="20241013 16:50:24.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:50:24.781" endtime="20241013 16:50:24.782"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 16:50:24.782" endtime="20241013 16:50:24.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:24.786" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:28.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:28.976" level="INFO">${output} = [ {
  "volumeName" : "fstest1",
  "bucketName" : "40251-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "40251-link1-o3fs-src",
  "creationTime" : "2024-10-13T16:50:13.021Z",
  "modi...</msg>
<status status="PASS" starttime="20241013 16:50:24.783" endtime="20241013 16:50:28.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:28.977" level="INFO">[ {
  "volumeName" : "fstest1",
  "bucketName" : "40251-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "40251-link1-o3fs-src",
  "creationTime" : "2024-10-13T16:50:13.021Z",
  "modificationTime" : "2024-10-13T16:50:13.021Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "fstest1",
  "bucketName" : "40251-link2-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "40251-link2-o3fs-src",
  "creationTime" : "2024-10-13T16:50:16.844Z",
  "modificationTime" : "2024-10-13T16:50:16.844Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20241013 16:50:28.976" endtime="20241013 16:50:28.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:28.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:28.977" endtime="20241013 16:50:28.977"/>
</kw>
<status status="PASS" starttime="20241013 16:50:24.783" endtime="20241013 16:50:28.977"/>
</kw>
<msg timestamp="20241013 16:50:28.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:24.783" endtime="20241013 16:50:28.978"/>
</kw>
<msg timestamp="20241013 16:50:28.978" level="INFO">${result} = [ {
  "volumeName" : "fstest1",
  "bucketName" : "40251-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "40251-link1-o3fs-src",
  "creationTime" : "2024-10-13T16:50:13.021Z",
  "modi...</msg>
<status status="PASS" starttime="20241013 16:50:24.782" endtime="20241013 16:50:28.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:50:28.978" endtime="20241013 16:50:28.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:50:28.978" endtime="20241013 16:50:28.979"/>
</kw>
<status status="PASS" starttime="20241013 16:50:20.643" endtime="20241013 16:50:28.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:28.979" level="INFO">Completed setup for o3fs tests with links in fstest1/40251-link1-o3fs using FS base URL: o3fs://40251-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20241013 16:50:28.979" endtime="20241013 16:50:28.979"/>
</kw>
<status status="PASS" starttime="20241013 16:49:41.751" endtime="20241013 16:50:28.979"/>
</kw>
<test id="s1-s3-t1" name="List root" line="26">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:50:28.983" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20241013 16:50:28.983" endtime="20241013 16:50:28.983"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:50:28.984" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20241013 16:50:28.984" endtime="20241013 16:50:28.984"/>
</kw>
<status status="PASS" starttime="20241013 16:50:28.983" endtime="20241013 16:50:28.984"/>
</kw>
<msg timestamp="20241013 16:50:28.984" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20241013 16:50:28.982" endtime="20241013 16:50:28.984"/>
</kw>
<status status="PASS" starttime="20241013 16:50:28.981" endtime="20241013 16:50:28.984"/>
</kw>
<msg timestamp="20241013 16:50:28.985" level="INFO">${url} = o3fs://40251-link1-o3fs.fstest1.omservice/</msg>
<status status="PASS" starttime="20241013 16:50:28.981" endtime="20241013 16:50:28.985"/>
</kw>
<msg timestamp="20241013 16:50:28.985" level="INFO">${root} = o3fs://40251-link1-o3fs.fstest1.omservice/</msg>
<status status="PASS" starttime="20241013 16:50:28.980" endtime="20241013 16:50:28.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:28.988" level="INFO">Running command 'ozone fs -ls o3fs://40251-link1-o3fs.fstest1.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:32.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:32.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:50:28.986" endtime="20241013 16:50:32.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:32.205" level="INFO"/>
<status status="PASS" starttime="20241013 16:50:32.205" endtime="20241013 16:50:32.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:32.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:32.205" endtime="20241013 16:50:32.206"/>
</kw>
<status status="PASS" starttime="20241013 16:50:28.985" endtime="20241013 16:50:32.206"/>
</kw>
<msg timestamp="20241013 16:50:32.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:28.985" endtime="20241013 16:50:32.206"/>
</kw>
<status status="PASS" starttime="20241013 16:50:28.985" endtime="20241013 16:50:32.206"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:50:28.979" endtime="20241013 16:50:32.207"/>
</test>
<test id="s1-s3-t2" name="List non-existent volume" line="30">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:50:32.212" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20241013 16:50:32.211" endtime="20241013 16:50:32.212"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:50:32.212" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20241013 16:50:32.212" endtime="20241013 16:50:32.212"/>
</kw>
<status status="PASS" starttime="20241013 16:50:32.211" endtime="20241013 16:50:32.212"/>
</kw>
<msg timestamp="20241013 16:50:32.213" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20241013 16:50:32.210" endtime="20241013 16:50:32.213"/>
</kw>
<status status="PASS" starttime="20241013 16:50:32.210" endtime="20241013 16:50:32.213"/>
</kw>
<msg timestamp="20241013 16:50:32.213" level="INFO">${url} = o3fs://40251-link1-o3fs.no-such-volume.omservice/</msg>
<status status="PASS" starttime="20241013 16:50:32.209" endtime="20241013 16:50:32.213"/>
</kw>
<msg timestamp="20241013 16:50:32.213" level="INFO">${url} = o3fs://40251-link1-o3fs.no-such-volume.omservice/</msg>
<status status="PASS" starttime="20241013 16:50:32.208" endtime="20241013 16:50:32.213"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:32.216" level="INFO">Running command 'ozone fs -ls o3fs://40251-link1-o3fs.no-such-volume.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:35.562" level="INFO">${rc} = 1</msg>
<msg timestamp="20241013 16:50:35.562" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20241013 16:50:32.214" endtime="20241013 16:50:35.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:35.563" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20241013 16:50:35.563" endtime="20241013 16:50:35.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:35.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:35.564" endtime="20241013 16:50:35.564"/>
</kw>
<msg timestamp="20241013 16:50:35.564" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20241013 16:50:32.213" endtime="20241013 16:50:35.564"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 16:50:35.564" endtime="20241013 16:50:35.565"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:50:32.207" endtime="20241013 16:50:35.565"/>
</test>
<test id="s1-s3-t3" name="List non-existent bucket" line="35">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:50:35.570" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20241013 16:50:35.570" endtime="20241013 16:50:35.570"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:50:35.571" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20241013 16:50:35.570" endtime="20241013 16:50:35.571"/>
</kw>
<status status="PASS" starttime="20241013 16:50:35.569" endtime="20241013 16:50:35.571"/>
</kw>
<msg timestamp="20241013 16:50:35.571" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20241013 16:50:35.569" endtime="20241013 16:50:35.571"/>
</kw>
<status status="PASS" starttime="20241013 16:50:35.568" endtime="20241013 16:50:35.571"/>
</kw>
<msg timestamp="20241013 16:50:35.571" level="INFO">${url} = o3fs://no-such-bucket.fstest1.omservice/</msg>
<status status="PASS" starttime="20241013 16:50:35.568" endtime="20241013 16:50:35.571"/>
</kw>
<msg timestamp="20241013 16:50:35.571" level="INFO">${url} = o3fs://no-such-bucket.fstest1.omservice/</msg>
<status status="PASS" starttime="20241013 16:50:35.566" endtime="20241013 16:50:35.571"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:35.574" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:38.959" level="INFO">${rc} = 1</msg>
<msg timestamp="20241013 16:50:38.959" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20241013 16:50:35.572" endtime="20241013 16:50:38.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:38.960" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20241013 16:50:38.960" endtime="20241013 16:50:38.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:38.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:38.961" endtime="20241013 16:50:38.961"/>
</kw>
<msg timestamp="20241013 16:50:38.961" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20241013 16:50:35.571" endtime="20241013 16:50:38.961"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 16:50:38.962" endtime="20241013 16:50:38.962"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:50:35.566" endtime="20241013 16:50:38.962"/>
</test>
<test id="s1-s3-t4" name="Create dir with parents" line="40">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:38.967" level="INFO">Running command 'ozone fs -mkdir -p o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:42.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:42.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:50:38.964" endtime="20241013 16:50:42.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:42.497" level="INFO"/>
<status status="PASS" starttime="20241013 16:50:42.496" endtime="20241013 16:50:42.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:42.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:42.497" endtime="20241013 16:50:42.497"/>
</kw>
<status status="PASS" starttime="20241013 16:50:38.964" endtime="20241013 16:50:42.498"/>
</kw>
<msg timestamp="20241013 16:50:42.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:38.964" endtime="20241013 16:50:42.498"/>
</kw>
<status status="PASS" starttime="20241013 16:50:38.963" endtime="20241013 16:50:42.498"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:42.501" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:46.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:46.673" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20241013 16:50:42.499" endtime="20241013 16:50:46.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:46.674" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20241013 16:50:46.673" endtime="20241013 16:50:46.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:46.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:46.674" endtime="20241013 16:50:46.675"/>
</kw>
<status status="PASS" starttime="20241013 16:50:42.499" endtime="20241013 16:50:46.675"/>
</kw>
<msg timestamp="20241013 16:50:46.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:42.498" endtime="20241013 16:50:46.675"/>
</kw>
<msg timestamp="20241013 16:50:46.675" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20241013 16:50:42.498" endtime="20241013 16:50:46.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:50:46.675" endtime="20241013 16:50:46.676"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:50:38.963" endtime="20241013 16:50:46.676"/>
</test>
<test id="s1-s3-t5" name="Copy from local" line="45">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:46.680" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:51.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:51.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:50:46.678" endtime="20241013 16:50:51.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:51.889" level="INFO"/>
<status status="PASS" starttime="20241013 16:50:51.889" endtime="20241013 16:50:51.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:51.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:51.890" endtime="20241013 16:50:51.890"/>
</kw>
<status status="PASS" starttime="20241013 16:50:46.677" endtime="20241013 16:50:51.890"/>
</kw>
<msg timestamp="20241013 16:50:51.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:46.677" endtime="20241013 16:50:51.890"/>
</kw>
<status status="PASS" starttime="20241013 16:50:46.677" endtime="20241013 16:50:51.890"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:51.894" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:50:56.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:50:56.321" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:50:51.892" endtime="20241013 16:50:56.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:50:56.322" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:50:56.321" endtime="20241013 16:50:56.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:50:56.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:50:56.322" endtime="20241013 16:50:56.323"/>
</kw>
<status status="PASS" starttime="20241013 16:50:51.891" endtime="20241013 16:50:56.323"/>
</kw>
<msg timestamp="20241013 16:50:56.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:51.891" endtime="20241013 16:50:56.323"/>
</kw>
<msg timestamp="20241013 16:50:56.323" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:50:51.891" endtime="20241013 16:50:56.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:50:56.323" endtime="20241013 16:50:56.324"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:50:56.327" level="INFO">Running command 'ozone sh key info fstest1/40251-link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:00.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:00.505" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20241013 16:50:56.325" endtime="20241013 16:51:00.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:00.506" level="INFO">THREE</msg>
<status status="PASS" starttime="20241013 16:51:00.506" endtime="20241013 16:51:00.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:00.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:00.507" endtime="20241013 16:51:00.507"/>
</kw>
<status status="PASS" starttime="20241013 16:50:56.324" endtime="20241013 16:51:00.507"/>
</kw>
<msg timestamp="20241013 16:51:00.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:50:56.324" endtime="20241013 16:51:00.507"/>
</kw>
<msg timestamp="20241013 16:51:00.507" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20241013 16:50:56.324" endtime="20241013 16:51:00.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:51:00.508" endtime="20241013 16:51:00.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:50:46.676" endtime="20241013 16:51:00.508"/>
</test>
<test id="s1-s3-t6" name="Put" line="52">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:00.513" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:05.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:05.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:51:00.511" endtime="20241013 16:51:05.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:05.939" level="INFO"/>
<status status="PASS" starttime="20241013 16:51:05.938" endtime="20241013 16:51:05.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:05.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:05.939" endtime="20241013 16:51:05.939"/>
</kw>
<status status="PASS" starttime="20241013 16:51:00.510" endtime="20241013 16:51:05.940"/>
</kw>
<msg timestamp="20241013 16:51:05.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:00.510" endtime="20241013 16:51:05.940"/>
</kw>
<msg timestamp="20241013 16:51:05.940" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 16:51:00.509" endtime="20241013 16:51:05.940"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20241013 16:51:05.940" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20241013 16:51:05.940" endtime="20241013 16:51:05.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:05.944" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:10.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:10.072" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20241013 16:51:05.942" endtime="20241013 16:51:10.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:10.073" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20241013 16:51:10.073" endtime="20241013 16:51:10.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:10.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:10.074" endtime="20241013 16:51:10.074"/>
</kw>
<status status="PASS" starttime="20241013 16:51:05.941" endtime="20241013 16:51:10.074"/>
</kw>
<msg timestamp="20241013 16:51:10.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:05.941" endtime="20241013 16:51:10.074"/>
</kw>
<msg timestamp="20241013 16:51:10.074" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20241013 16:51:05.940" endtime="20241013 16:51:10.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:10.075" endtime="20241013 16:51:10.075"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:51:00.509" endtime="20241013 16:51:10.075"/>
</test>
<test id="s1-s3-t7" name="Check disk usage after create a file which uses RATIS replication type" line="59">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 16:51:10.077" level="INFO">${vol} = rjuqrjlq</msg>
<status status="PASS" starttime="20241013 16:51:10.076" endtime="20241013 16:51:10.077"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 16:51:10.077" level="INFO">${bucket} = fxotjnbu</msg>
<status status="PASS" starttime="20241013 16:51:10.077" endtime="20241013 16:51:10.077"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:10.081" level="INFO">Running command 'ozone sh volume create /rjuqrjlq 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:14.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:14.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:51:10.078" endtime="20241013 16:51:14.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:14.201" level="INFO"/>
<status status="PASS" starttime="20241013 16:51:14.201" endtime="20241013 16:51:14.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:14.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:14.202" endtime="20241013 16:51:14.202"/>
</kw>
<status status="PASS" starttime="20241013 16:51:10.078" endtime="20241013 16:51:14.202"/>
</kw>
<msg timestamp="20241013 16:51:14.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:10.078" endtime="20241013 16:51:14.202"/>
</kw>
<status status="PASS" starttime="20241013 16:51:10.077" endtime="20241013 16:51:14.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type RATIS --replication 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:14.206" level="INFO">Running command 'ozone sh bucket create /rjuqrjlq/fxotjnbu --type RATIS --replication 3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:18.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:18.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:51:14.204" endtime="20241013 16:51:18.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:18.262" level="INFO"/>
<status status="PASS" starttime="20241013 16:51:18.261" endtime="20241013 16:51:18.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:18.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:18.262" endtime="20241013 16:51:18.263"/>
</kw>
<status status="PASS" starttime="20241013 16:51:14.204" endtime="20241013 16:51:18.263"/>
</kw>
<msg timestamp="20241013 16:51:18.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:14.203" endtime="20241013 16:51:18.263"/>
</kw>
<status status="PASS" starttime="20241013 16:51:14.203" endtime="20241013 16:51:18.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE1.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:18.268" level="INFO">Running command 'ozone fs -put NOTICE.txt /rjuqrjlq/fxotjnbu/PUTFILE1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:23.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:23.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:51:18.265" endtime="20241013 16:51:23.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:23.735" level="INFO"/>
<status status="PASS" starttime="20241013 16:51:23.734" endtime="20241013 16:51:23.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:23.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:23.735" endtime="20241013 16:51:23.736"/>
</kw>
<status status="PASS" starttime="20241013 16:51:18.265" endtime="20241013 16:51:23.736"/>
</kw>
<msg timestamp="20241013 16:51:23.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:18.264" endtime="20241013 16:51:23.736"/>
</kw>
<status status="PASS" starttime="20241013 16:51:18.264" endtime="20241013 16:51:23.736"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:23.739" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:23.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:23.743" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20241013 16:51:23.737" endtime="20241013 16:51:23.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:23.744" level="INFO">17289</msg>
<status status="PASS" starttime="20241013 16:51:23.744" endtime="20241013 16:51:23.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:23.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:23.744" endtime="20241013 16:51:23.745"/>
</kw>
<status status="PASS" starttime="20241013 16:51:23.737" endtime="20241013 16:51:23.745"/>
</kw>
<msg timestamp="20241013 16:51:23.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:23.737" endtime="20241013 16:51:23.745"/>
</kw>
<msg timestamp="20241013 16:51:23.745" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20241013 16:51:23.736" endtime="20241013 16:51:23.745"/>
</kw>
<kw name="Get Disk Usage of File with RATIS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} * ${replicationFactor}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241013 16:51:23.746" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20241013 16:51:23.746" endtime="20241013 16:51:23.746"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20241013 16:51:23.747" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20241013 16:51:23.746" endtime="20241013 16:51:23.747"/>
</kw>
<msg timestamp="20241013 16:51:23.747" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20241013 16:51:23.745" endtime="20241013 16:51:23.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:23.750" level="INFO">Running command 'ozone fs -du /rjuqrjlq/fxotjnbu 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:27.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:27.215" level="INFO">${output} = 17289  51867  /rjuqrjlq/fxotjnbu/PUTFILE1.txt</msg>
<status status="PASS" starttime="20241013 16:51:23.748" endtime="20241013 16:51:27.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:27.216" level="INFO">17289  51867  /rjuqrjlq/fxotjnbu/PUTFILE1.txt</msg>
<status status="PASS" starttime="20241013 16:51:27.216" endtime="20241013 16:51:27.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:27.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:27.217" endtime="20241013 16:51:27.217"/>
</kw>
<status status="PASS" starttime="20241013 16:51:23.748" endtime="20241013 16:51:27.217"/>
</kw>
<msg timestamp="20241013 16:51:27.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:23.747" endtime="20241013 16:51:27.217"/>
</kw>
<msg timestamp="20241013 16:51:27.217" level="INFO">${result} = 17289  51867  /rjuqrjlq/fxotjnbu/PUTFILE1.txt</msg>
<status status="PASS" starttime="20241013 16:51:23.747" endtime="20241013 16:51:27.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE1.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:27.218" endtime="20241013 16:51:27.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:27.218" endtime="20241013 16:51:27.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:27.218" endtime="20241013 16:51:27.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:51:10.075" endtime="20241013 16:51:27.219"/>
</test>
<test id="s1-s3-t8" name="Put with Streaming" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ${DEEP_URL}/STREAMING.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:27.223" level="INFO">Running command 'ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/STREAMING.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:32.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:32.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:51:27.221" endtime="20241013 16:51:32.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:32.434" level="INFO"/>
<status status="PASS" starttime="20241013 16:51:32.434" endtime="20241013 16:51:32.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:32.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:32.435" endtime="20241013 16:51:32.435"/>
</kw>
<status status="PASS" starttime="20241013 16:51:27.221" endtime="20241013 16:51:32.435"/>
</kw>
<msg timestamp="20241013 16:51:32.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:27.220" endtime="20241013 16:51:32.435"/>
</kw>
<msg timestamp="20241013 16:51:32.436" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 16:51:27.220" endtime="20241013 16:51:32.436"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20241013 16:51:32.436" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20241013 16:51:32.436" endtime="20241013 16:51:32.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:32.440" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:36.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:36.512" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:51:32.438" endtime="20241013 16:51:36.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:36.513" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:51:36.512" endtime="20241013 16:51:36.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:36.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:36.513" endtime="20241013 16:51:36.513"/>
</kw>
<status status="PASS" starttime="20241013 16:51:32.437" endtime="20241013 16:51:36.514"/>
</kw>
<msg timestamp="20241013 16:51:36.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:32.437" endtime="20241013 16:51:36.514"/>
</kw>
<msg timestamp="20241013 16:51:36.514" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:51:32.436" endtime="20241013 16:51:36.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:36.514" endtime="20241013 16:51:36.515"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:51:27.219" endtime="20241013 16:51:36.515"/>
</test>
<test id="s1-s3-t9" name="List" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:36.520" level="INFO">Running command 'ozone fs -ls o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:39.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:39.922" level="INFO">${output} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:50 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:...</msg>
<status status="PASS" starttime="20241013 16:51:36.517" endtime="20241013 16:51:39.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:39.923" level="INFO">Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:50 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:51 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:51 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:51:39.922" endtime="20241013 16:51:39.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:39.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:39.923" endtime="20241013 16:51:39.923"/>
</kw>
<status status="PASS" starttime="20241013 16:51:36.517" endtime="20241013 16:51:39.923"/>
</kw>
<msg timestamp="20241013 16:51:39.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:36.517" endtime="20241013 16:51:39.924"/>
</kw>
<msg timestamp="20241013 16:51:39.924" level="INFO">${result} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:50 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:...</msg>
<status status="PASS" starttime="20241013 16:51:36.516" endtime="20241013 16:51:39.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:39.924" endtime="20241013 16:51:39.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:39.924" endtime="20241013 16:51:39.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:39.925" endtime="20241013 16:51:39.925"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:51:36.515" endtime="20241013 16:51:39.925"/>
</test>
<test id="s1-s3-t10" name="Move" line="86">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:39.930" level="INFO">Running command 'ozone fs -mv o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/NOTICE.txt o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:43.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:43.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:51:39.927" endtime="20241013 16:51:43.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:43.317" level="INFO"/>
<status status="PASS" starttime="20241013 16:51:43.316" endtime="20241013 16:51:43.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:43.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:43.317" endtime="20241013 16:51:43.317"/>
</kw>
<status status="PASS" starttime="20241013 16:51:39.927" endtime="20241013 16:51:43.318"/>
</kw>
<msg timestamp="20241013 16:51:43.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:39.927" endtime="20241013 16:51:43.318"/>
</kw>
<status status="PASS" starttime="20241013 16:51:39.926" endtime="20241013 16:51:43.318"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:43.322" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:47.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:47.542" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:51:43.319" endtime="20241013 16:51:47.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:47.543" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:51:47.542" endtime="20241013 16:51:47.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:47.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:47.543" endtime="20241013 16:51:47.544"/>
</kw>
<status status="PASS" starttime="20241013 16:51:43.319" endtime="20241013 16:51:47.544"/>
</kw>
<msg timestamp="20241013 16:51:47.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:43.319" endtime="20241013 16:51:47.544"/>
</kw>
<msg timestamp="20241013 16:51:47.544" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:51:43.318" endtime="20241013 16:51:47.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:47.544" endtime="20241013 16:51:47.545"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:51:47.545" endtime="20241013 16:51:47.545"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:51:39.926" endtime="20241013 16:51:47.545"/>
</test>
<test id="s1-s3-t11" name="Copy within FS" line="92">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:47.550" level="INFO">Running command 'ozone fs -mkdir -p o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:51.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:51.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:51:47.548" endtime="20241013 16:51:51.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:51.029" level="INFO"/>
<status status="PASS" starttime="20241013 16:51:51.029" endtime="20241013 16:51:51.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:51.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:51.029" endtime="20241013 16:51:51.030"/>
</kw>
<status status="PASS" starttime="20241013 16:51:47.547" endtime="20241013 16:51:51.030"/>
</kw>
<msg timestamp="20241013 16:51:51.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:47.547" endtime="20241013 16:51:51.030"/>
</kw>
<status status="PASS" starttime="20241013 16:51:47.546" endtime="20241013 16:51:51.030"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:51.034" level="INFO">Running command 'ozone fs -cp o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/MOVED.TXT o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:51:56.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:51:56.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:51:51.032" endtime="20241013 16:51:56.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:51:56.369" level="INFO"/>
<status status="PASS" starttime="20241013 16:51:56.369" endtime="20241013 16:51:56.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:51:56.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:51:56.370" endtime="20241013 16:51:56.370"/>
</kw>
<status status="PASS" starttime="20241013 16:51:51.031" endtime="20241013 16:51:56.370"/>
</kw>
<msg timestamp="20241013 16:51:56.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:51.031" endtime="20241013 16:51:56.370"/>
</kw>
<status status="PASS" starttime="20241013 16:51:51.030" endtime="20241013 16:51:56.370"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:51:56.374" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:00.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:00.590" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:51:56.372" endtime="20241013 16:52:00.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:00.591" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:52:00.591" endtime="20241013 16:52:00.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:00.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:00.592" endtime="20241013 16:52:00.592"/>
</kw>
<status status="PASS" starttime="20241013 16:51:56.371" endtime="20241013 16:52:00.592"/>
</kw>
<msg timestamp="20241013 16:52:00.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:51:56.371" endtime="20241013 16:52:00.592"/>
</kw>
<msg timestamp="20241013 16:52:00.593" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:51:56.371" endtime="20241013 16:52:00.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:52:00.593" endtime="20241013 16:52:00.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:00.597" level="INFO">Running command 'ozone fs -ls o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:03.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:03.889" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:51 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:52:00.594" endtime="20241013 16:52:03.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:03.890" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:51 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:52:03.890" endtime="20241013 16:52:03.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:03.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:03.891" endtime="20241013 16:52:03.891"/>
</kw>
<status status="PASS" starttime="20241013 16:52:00.594" endtime="20241013 16:52:03.891"/>
</kw>
<msg timestamp="20241013 16:52:03.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:00.594" endtime="20241013 16:52:03.892"/>
</kw>
<msg timestamp="20241013 16:52:03.892" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:51 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:52:00.593" endtime="20241013 16:52:03.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:52:03.892" endtime="20241013 16:52:03.892"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:52:03.892" endtime="20241013 16:52:03.893"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:51:47.546" endtime="20241013 16:52:03.893"/>
</test>
<test id="s1-s3-t12" name="Cat file" line="102">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:03.897" level="INFO">Running command 'ozone fs -cat o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:08.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:08.808" level="INFO">${output} = Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
----------------...</msg>
<status status="PASS" starttime="20241013 16:52:03.895" endtime="20241013 16:52:08.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:08.809" level="INFO">Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcpkix-jdk18on
====================

Copyright (c) 2000 - 2023 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

ch.qos.reload4j:reload4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20241013 16:52:08.809" endtime="20241013 16:52:08.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:08.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:08.810" endtime="20241013 16:52:08.810"/>
</kw>
<status status="PASS" starttime="20241013 16:52:03.895" endtime="20241013 16:52:08.810"/>
</kw>
<msg timestamp="20241013 16:52:08.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:03.894" endtime="20241013 16:52:08.811"/>
</kw>
<status status="PASS" starttime="20241013 16:52:03.894" endtime="20241013 16:52:08.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:52:03.893" endtime="20241013 16:52:08.812"/>
</test>
<test id="s1-s3-t13" name="Delete file" line="105">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:08.816" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:12.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:12.211" level="INFO">${output} = Deleted o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:52:08.814" endtime="20241013 16:52:12.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:12.212" level="INFO">Deleted o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20241013 16:52:12.211" endtime="20241013 16:52:12.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:12.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:12.212" endtime="20241013 16:52:12.213"/>
</kw>
<status status="PASS" starttime="20241013 16:52:08.813" endtime="20241013 16:52:12.213"/>
</kw>
<msg timestamp="20241013 16:52:12.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:08.813" endtime="20241013 16:52:12.213"/>
</kw>
<status status="PASS" starttime="20241013 16:52:08.813" endtime="20241013 16:52:12.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:12.216" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:16.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:16.444" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20241013 16:52:12.214" endtime="20241013 16:52:16.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:16.445" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20241013 16:52:16.444" endtime="20241013 16:52:16.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:16.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:16.445" endtime="20241013 16:52:16.446"/>
</kw>
<status status="PASS" starttime="20241013 16:52:12.214" endtime="20241013 16:52:16.446"/>
</kw>
<msg timestamp="20241013 16:52:16.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:12.214" endtime="20241013 16:52:16.446"/>
</kw>
<msg timestamp="20241013 16:52:16.446" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20241013 16:52:12.213" endtime="20241013 16:52:16.446"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:52:16.446" endtime="20241013 16:52:16.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:52:08.812" endtime="20241013 16:52:16.447"/>
</test>
<test id="s1-s3-t14" name="Delete dir" line="110">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:16.451" level="INFO">Running command 'ozone fs -rmdir o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:19.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:19.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:16.449" endtime="20241013 16:52:19.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:19.903" level="INFO"/>
<status status="PASS" starttime="20241013 16:52:19.902" endtime="20241013 16:52:19.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:19.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:19.903" endtime="20241013 16:52:19.904"/>
</kw>
<status status="PASS" starttime="20241013 16:52:16.448" endtime="20241013 16:52:19.904"/>
</kw>
<msg timestamp="20241013 16:52:19.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:16.448" endtime="20241013 16:52:19.904"/>
</kw>
<msg timestamp="20241013 16:52:19.904" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 16:52:16.448" endtime="20241013 16:52:19.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:19.909" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:23.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:23.811" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:52:19.906" endtime="20241013 16:52:23.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:23.812" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:52:23.811" endtime="20241013 16:52:23.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:23.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:23.812" endtime="20241013 16:52:23.813"/>
</kw>
<status status="PASS" starttime="20241013 16:52:19.906" endtime="20241013 16:52:23.813"/>
</kw>
<msg timestamp="20241013 16:52:23.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:19.905" endtime="20241013 16:52:23.813"/>
</kw>
<msg timestamp="20241013 16:52:23.813" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20241013 16:52:19.905" endtime="20241013 16:52:23.813"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:52:23.813" endtime="20241013 16:52:23.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:52:16.447" endtime="20241013 16:52:23.814"/>
</test>
<test id="s1-s3-t15" name="Touch file" line="115">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:23.818" level="INFO">Running command 'ozone fs -touch o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:27.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:27.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:23.816" endtime="20241013 16:52:27.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:27.331" level="INFO"/>
<status status="PASS" starttime="20241013 16:52:27.331" endtime="20241013 16:52:27.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:27.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:27.332" endtime="20241013 16:52:27.332"/>
</kw>
<status status="PASS" starttime="20241013 16:52:23.816" endtime="20241013 16:52:27.332"/>
</kw>
<msg timestamp="20241013 16:52:27.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:23.816" endtime="20241013 16:52:27.332"/>
</kw>
<status status="PASS" starttime="20241013 16:52:23.815" endtime="20241013 16:52:27.333"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:27.336" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:31.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:31.752" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20241013 16:52:27.334" endtime="20241013 16:52:31.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:31.753" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20241013 16:52:31.752" endtime="20241013 16:52:31.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:31.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:31.753" endtime="20241013 16:52:31.753"/>
</kw>
<status status="PASS" starttime="20241013 16:52:27.334" endtime="20241013 16:52:31.754"/>
</kw>
<msg timestamp="20241013 16:52:31.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:27.333" endtime="20241013 16:52:31.754"/>
</kw>
<msg timestamp="20241013 16:52:31.754" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20241013 16:52:27.333" endtime="20241013 16:52:31.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:52:31.754" endtime="20241013 16:52:31.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:52:23.814" endtime="20241013 16:52:31.754"/>
</test>
<test id="s1-s3-t16" name="Delete file with Trash" line="120">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:31.759" level="INFO">Running command 'ozone fs -touch o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:35.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:35.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:31.757" endtime="20241013 16:52:35.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:35.167" level="INFO"/>
<status status="PASS" starttime="20241013 16:52:35.166" endtime="20241013 16:52:35.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:35.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:35.167" endtime="20241013 16:52:35.167"/>
</kw>
<status status="PASS" starttime="20241013 16:52:31.756" endtime="20241013 16:52:35.167"/>
</kw>
<msg timestamp="20241013 16:52:35.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:31.756" endtime="20241013 16:52:35.168"/>
</kw>
<status status="PASS" starttime="20241013 16:52:31.755" endtime="20241013 16:52:35.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:35.172" level="INFO">Running command 'ozone fs -rm o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:38.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:38.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:35.169" endtime="20241013 16:52:38.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:38.691" level="INFO"/>
<status status="PASS" starttime="20241013 16:52:38.691" endtime="20241013 16:52:38.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:38.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:38.692" endtime="20241013 16:52:38.692"/>
</kw>
<status status="PASS" starttime="20241013 16:52:35.169" endtime="20241013 16:52:38.692"/>
</kw>
<msg timestamp="20241013 16:52:38.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:35.168" endtime="20241013 16:52:38.692"/>
</kw>
<status status="PASS" starttime="20241013 16:52:35.168" endtime="20241013 16:52:38.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:38.696" level="INFO">Running command 'ozone fs -ls -R o3fs://40251-link1-o3fs.fstest1.omservice/// 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:42.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:42.200" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstes...</msg>
<status status="PASS" starttime="20241013 16:52:38.694" endtime="20241013 16:52:42.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:42.201" level="INFO">drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/.Trash/testuser/Current
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:50 o3fs://40251-link1-o3fs.fstest1.omservice/test
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:50 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:50 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:51 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:51 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/STREAMING.txt
-rw-rw-rw-   3 testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20241013 16:52:42.201" endtime="20241013 16:52:42.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:42.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:42.201" endtime="20241013 16:52:42.202"/>
</kw>
<status status="PASS" starttime="20241013 16:52:38.693" endtime="20241013 16:52:42.202"/>
</kw>
<msg timestamp="20241013 16:52:42.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:38.693" endtime="20241013 16:52:42.202"/>
</kw>
<msg timestamp="20241013 16:52:42.202" level="INFO">${result} = drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:52 o3fs://40251-link1-o3fs.fstes...</msg>
<status status="PASS" starttime="20241013 16:52:38.693" endtime="20241013 16:52:42.202"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:52:42.202" endtime="20241013 16:52:42.203"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20241013 16:52:42.203" endtime="20241013 16:52:42.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:52:42.203" endtime="20241013 16:52:42.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:52:31.755" endtime="20241013 16:52:42.204"/>
</test>
<test id="s1-s3-t17" name="Delete recursively" line="128">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:42.208" level="INFO">Running command 'ozone fs -mkdir -p o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:45.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:45.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:42.206" endtime="20241013 16:52:45.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:45.412" level="INFO"/>
<status status="PASS" starttime="20241013 16:52:45.411" endtime="20241013 16:52:45.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:45.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:45.412" endtime="20241013 16:52:45.412"/>
</kw>
<status status="PASS" starttime="20241013 16:52:42.205" endtime="20241013 16:52:45.413"/>
</kw>
<msg timestamp="20241013 16:52:45.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:42.205" endtime="20241013 16:52:45.413"/>
</kw>
<status status="PASS" starttime="20241013 16:52:42.205" endtime="20241013 16:52:45.413"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:45.416" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://40251-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:48.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:48.669" level="INFO">${output} = Deleted o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20241013 16:52:45.414" endtime="20241013 16:52:48.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:48.670" level="INFO">Deleted o3fs://40251-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20241013 16:52:48.670" endtime="20241013 16:52:48.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:48.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:48.671" endtime="20241013 16:52:48.671"/>
</kw>
<status status="PASS" starttime="20241013 16:52:45.414" endtime="20241013 16:52:48.671"/>
</kw>
<msg timestamp="20241013 16:52:48.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:45.413" endtime="20241013 16:52:48.671"/>
</kw>
<status status="PASS" starttime="20241013 16:52:45.413" endtime="20241013 16:52:48.671"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:48.675" level="INFO">Running command 'ozone sh key list fstest1/40251-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:52.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:52.610" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/o3fs/
.Trash/testuser/Current/test/o3fs/dir/
.Trash/testuser/Current/test/o3fs/dir/testFile...</msg>
<status status="PASS" starttime="20241013 16:52:48.673" endtime="20241013 16:52:52.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:52.611" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/o3fs/
.Trash/testuser/Current/test/o3fs/dir/
.Trash/testuser/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20241013 16:52:52.610" endtime="20241013 16:52:52.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:52.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:52.611" endtime="20241013 16:52:52.612"/>
</kw>
<status status="PASS" starttime="20241013 16:52:48.672" endtime="20241013 16:52:52.612"/>
</kw>
<msg timestamp="20241013 16:52:52.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:48.672" endtime="20241013 16:52:52.612"/>
</kw>
<msg timestamp="20241013 16:52:52.612" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/o3fs/
.Trash/testuser/Current/test/o3fs/dir/
.Trash/testuser/Current/test/o3fs/dir/testFile...</msg>
<status status="PASS" starttime="20241013 16:52:48.672" endtime="20241013 16:52:52.612"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:52:52.612" endtime="20241013 16:52:52.613"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:52:42.204" endtime="20241013 16:52:52.613"/>
</test>
<test id="s1-s3-t18" name="List recursively" line="134">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:52.617" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:52.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:52.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:52.615" endtime="20241013 16:52:52.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:52.622" level="INFO"/>
<status status="PASS" starttime="20241013 16:52:52.621" endtime="20241013 16:52:52.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:52.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:52.622" endtime="20241013 16:52:52.623"/>
</kw>
<status status="PASS" starttime="20241013 16:52:52.615" endtime="20241013 16:52:52.623"/>
</kw>
<msg timestamp="20241013 16:52:52.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:52.614" endtime="20241013 16:52:52.623"/>
</kw>
<status status="PASS" starttime="20241013 16:52:52.614" endtime="20241013 16:52:52.623"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:52.626" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:52.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:52.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:52.624" endtime="20241013 16:52:52.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:52.630" level="INFO"/>
<status status="PASS" starttime="20241013 16:52:52.630" endtime="20241013 16:52:52.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:52.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:52.630" endtime="20241013 16:52:52.631"/>
</kw>
<status status="PASS" starttime="20241013 16:52:52.624" endtime="20241013 16:52:52.631"/>
</kw>
<msg timestamp="20241013 16:52:52.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:52.623" endtime="20241013 16:52:52.631"/>
</kw>
<status status="PASS" starttime="20241013 16:52:52.623" endtime="20241013 16:52:52.631"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:52.634" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:52.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:52.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:52.632" endtime="20241013 16:52:52.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:52.639" level="INFO"/>
<status status="PASS" starttime="20241013 16:52:52.638" endtime="20241013 16:52:52.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:52.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:52.639" endtime="20241013 16:52:52.639"/>
</kw>
<status status="PASS" starttime="20241013 16:52:52.632" endtime="20241013 16:52:52.639"/>
</kw>
<msg timestamp="20241013 16:52:52.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:52.632" endtime="20241013 16:52:52.640"/>
</kw>
<status status="PASS" starttime="20241013 16:52:52.631" endtime="20241013 16:52:52.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:52.643" level="INFO">Running command 'ozone fs -mkdir -p o3fs://40251-link1-o3fs.fstest1.omservice//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:52:55.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:52:55.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:52.641" endtime="20241013 16:52:55.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:52:55.975" level="INFO"/>
<status status="PASS" starttime="20241013 16:52:55.975" endtime="20241013 16:52:55.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:52:55.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:52:55.976" endtime="20241013 16:52:55.976"/>
</kw>
<status status="PASS" starttime="20241013 16:52:52.641" endtime="20241013 16:52:55.976"/>
</kw>
<msg timestamp="20241013 16:52:55.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:52.640" endtime="20241013 16:52:55.976"/>
</kw>
<status status="PASS" starttime="20241013 16:52:52.640" endtime="20241013 16:52:55.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:52:55.980" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://40251-link1-o3fs.fstest1.omservice//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:01.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:01.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:52:55.978" endtime="20241013 16:53:01.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:01.347" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:01.347" endtime="20241013 16:53:01.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:01.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:01.347" endtime="20241013 16:53:01.348"/>
</kw>
<status status="PASS" starttime="20241013 16:52:55.977" endtime="20241013 16:53:01.348"/>
</kw>
<msg timestamp="20241013 16:53:01.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:52:55.977" endtime="20241013 16:53:01.348"/>
</kw>
<status status="PASS" starttime="20241013 16:52:55.977" endtime="20241013 16:53:01.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:01.352" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://40251-link1-o3fs.fstest1.omservice//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:06.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:06.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:01.350" endtime="20241013 16:53:06.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:06.471" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:06.470" endtime="20241013 16:53:06.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:06.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:06.471" endtime="20241013 16:53:06.472"/>
</kw>
<status status="PASS" starttime="20241013 16:53:01.349" endtime="20241013 16:53:06.472"/>
</kw>
<msg timestamp="20241013 16:53:06.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:01.349" endtime="20241013 16:53:06.472"/>
</kw>
<status status="PASS" starttime="20241013 16:53:01.348" endtime="20241013 16:53:06.472"/>
</kw>
<status status="PASS" starttime="20241013 16:52:52.614" endtime="20241013 16:53:06.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:06.476" level="INFO">Running command 'ozone fs -ls -R o3fs://40251-link1-o3fs.fstest1.omservice//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:09.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:09.778" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:53 o3fs://40251-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:53 o3fs://40251-lin...</msg>
<status status="PASS" starttime="20241013 16:53:06.473" endtime="20241013 16:53:09.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:09.779" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:53 o3fs://40251-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:53 o3fs://40251-link1-o3fs.fstest1.omservice/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:53 o3fs://40251-link1-o3fs.fstest1.omservice/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20241013 16:53:09.778" endtime="20241013 16:53:09.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:09.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:09.779" endtime="20241013 16:53:09.780"/>
</kw>
<status status="PASS" starttime="20241013 16:53:06.473" endtime="20241013 16:53:09.780"/>
</kw>
<msg timestamp="20241013 16:53:09.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:06.473" endtime="20241013 16:53:09.780"/>
</kw>
<msg timestamp="20241013 16:53:09.780" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:53 o3fs://40251-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2024-10-13 16:53 o3fs://40251-lin...</msg>
<status status="PASS" starttime="20241013 16:53:06.472" endtime="20241013 16:53:09.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:53:09.780" endtime="20241013 16:53:09.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:53:09.781" endtime="20241013 16:53:09.781"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:52:52.613" endtime="20241013 16:53:09.781"/>
</test>
<test id="s1-s3-t19" name="Copy to other bucket" line="140">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:53:09.796" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20241013 16:53:09.785" endtime="20241013 16:53:09.796"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:53:09.796" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20241013 16:53:09.796" endtime="20241013 16:53:09.796"/>
</kw>
<status status="PASS" starttime="20241013 16:53:09.785" endtime="20241013 16:53:09.796"/>
</kw>
<msg timestamp="20241013 16:53:09.796" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20241013 16:53:09.784" endtime="20241013 16:53:09.796"/>
</kw>
<status status="PASS" starttime="20241013 16:53:09.783" endtime="20241013 16:53:09.797"/>
</kw>
<msg timestamp="20241013 16:53:09.797" level="INFO">${url} = o3fs://40251-link2-o3fs.fstest1.omservice/testdir2</msg>
<status status="PASS" starttime="20241013 16:53:09.783" endtime="20241013 16:53:09.797"/>
</kw>
<msg timestamp="20241013 16:53:09.797" level="INFO">${target} = o3fs://40251-link2-o3fs.fstest1.omservice/testdir2</msg>
<status status="PASS" starttime="20241013 16:53:09.782" endtime="20241013 16:53:09.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:09.800" level="INFO">Running command 'ozone fs -mkdir -p o3fs://40251-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:13.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:13.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:09.798" endtime="20241013 16:53:13.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:13.175" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:13.174" endtime="20241013 16:53:13.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:13.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:13.175" endtime="20241013 16:53:13.176"/>
</kw>
<status status="PASS" starttime="20241013 16:53:09.798" endtime="20241013 16:53:13.176"/>
</kw>
<msg timestamp="20241013 16:53:13.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:09.797" endtime="20241013 16:53:13.176"/>
</kw>
<status status="PASS" starttime="20241013 16:53:09.797" endtime="20241013 16:53:13.176"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:13.180" level="INFO">Running command 'ozone fs -cp o3fs://40251-link1-o3fs.fstest1.omservice///testdir1/localdir1 o3fs://40251-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:18.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:18.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:13.177" endtime="20241013 16:53:18.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:18.753" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:18.752" endtime="20241013 16:53:18.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:18.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:18.753" endtime="20241013 16:53:18.753"/>
</kw>
<status status="PASS" starttime="20241013 16:53:13.177" endtime="20241013 16:53:18.753"/>
</kw>
<msg timestamp="20241013 16:53:18.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:13.177" endtime="20241013 16:53:18.754"/>
</kw>
<status status="PASS" starttime="20241013 16:53:13.176" endtime="20241013 16:53:18.754"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:18.757" level="INFO">Running command 'ozone fs -rm -r o3fs://40251-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:22.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:22.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:18.755" endtime="20241013 16:53:22.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:22.360" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:22.360" endtime="20241013 16:53:22.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:22.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:22.360" endtime="20241013 16:53:22.361"/>
</kw>
<status status="PASS" starttime="20241013 16:53:18.755" endtime="20241013 16:53:22.361"/>
</kw>
<msg timestamp="20241013 16:53:22.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:18.754" endtime="20241013 16:53:22.361"/>
</kw>
<status status="PASS" starttime="20241013 16:53:18.754" endtime="20241013 16:53:22.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:53:09.782" endtime="20241013 16:53:22.361"/>
</test>
<test id="s1-s3-t20" name="Copy to other volume" line="146">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241013 16:53:22.366" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20241013 16:53:22.366" endtime="20241013 16:53:22.366"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:53:22.366" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20241013 16:53:22.366" endtime="20241013 16:53:22.366"/>
</kw>
<status status="PASS" starttime="20241013 16:53:22.365" endtime="20241013 16:53:22.367"/>
</kw>
<msg timestamp="20241013 16:53:22.367" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20241013 16:53:22.364" endtime="20241013 16:53:22.367"/>
</kw>
<status status="PASS" starttime="20241013 16:53:22.364" endtime="20241013 16:53:22.367"/>
</kw>
<msg timestamp="20241013 16:53:22.367" level="INFO">${url} = o3fs://40251-link3-o3fs.fstest2.omservice/testdir3</msg>
<status status="PASS" starttime="20241013 16:53:22.363" endtime="20241013 16:53:22.367"/>
</kw>
<msg timestamp="20241013 16:53:22.367" level="INFO">${target} = o3fs://40251-link3-o3fs.fstest2.omservice/testdir3</msg>
<status status="PASS" starttime="20241013 16:53:22.363" endtime="20241013 16:53:22.367"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:22.370" level="INFO">Running command 'ozone fs -mkdir -p o3fs://40251-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:25.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:25.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:22.368" endtime="20241013 16:53:25.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:25.546" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:25.546" endtime="20241013 16:53:25.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:25.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:25.546" endtime="20241013 16:53:25.547"/>
</kw>
<status status="PASS" starttime="20241013 16:53:22.368" endtime="20241013 16:53:25.547"/>
</kw>
<msg timestamp="20241013 16:53:25.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:22.368" endtime="20241013 16:53:25.547"/>
</kw>
<status status="PASS" starttime="20241013 16:53:22.367" endtime="20241013 16:53:25.547"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:25.551" level="INFO">Running command 'ozone fs -cp o3fs://40251-link1-o3fs.fstest1.omservice///testdir1/localdir1 o3fs://40251-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:30.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:30.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:25.549" endtime="20241013 16:53:30.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:30.889" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:30.888" endtime="20241013 16:53:30.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:30.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:30.889" endtime="20241013 16:53:30.889"/>
</kw>
<status status="PASS" starttime="20241013 16:53:25.548" endtime="20241013 16:53:30.890"/>
</kw>
<msg timestamp="20241013 16:53:30.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:25.548" endtime="20241013 16:53:30.890"/>
</kw>
<status status="PASS" starttime="20241013 16:53:25.547" endtime="20241013 16:53:30.890"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:30.893" level="INFO">Running command 'ozone fs -rm -r o3fs://40251-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:34.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:34.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:30.891" endtime="20241013 16:53:34.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:34.229" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:34.229" endtime="20241013 16:53:34.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:34.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:34.230" endtime="20241013 16:53:34.230"/>
</kw>
<status status="PASS" starttime="20241013 16:53:30.891" endtime="20241013 16:53:34.230"/>
</kw>
<msg timestamp="20241013 16:53:34.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:30.891" endtime="20241013 16:53:34.230"/>
</kw>
<status status="PASS" starttime="20241013 16:53:30.890" endtime="20241013 16:53:34.231"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:53:22.362" endtime="20241013 16:53:34.231"/>
</test>
<test id="s1-s3-t21" name="List file created via shell" line="152">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:34.235" level="INFO">Running command 'ozone sh key put fstest1/40251-link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:39.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:39.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:34.233" endtime="20241013 16:53:39.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:39.711" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:39.711" endtime="20241013 16:53:39.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:39.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:39.711" endtime="20241013 16:53:39.712"/>
</kw>
<status status="PASS" starttime="20241013 16:53:34.233" endtime="20241013 16:53:39.712"/>
</kw>
<msg timestamp="20241013 16:53:39.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:34.232" endtime="20241013 16:53:39.712"/>
</kw>
<status status="PASS" starttime="20241013 16:53:34.232" endtime="20241013 16:53:39.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:39.716" level="INFO">Running command 'ozone fs -ls o3fs://40251-link1-o3fs.fstest1.omservice//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:43.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:43.167" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:53 o3fs://40251-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20241013 16:53:39.714" endtime="20241013 16:53:43.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:43.168" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:53 o3fs://40251-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20241013 16:53:43.168" endtime="20241013 16:53:43.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:43.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:43.169" endtime="20241013 16:53:43.169"/>
</kw>
<status status="PASS" starttime="20241013 16:53:39.713" endtime="20241013 16:53:43.169"/>
</kw>
<msg timestamp="20241013 16:53:43.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:39.713" endtime="20241013 16:53:43.169"/>
</kw>
<msg timestamp="20241013 16:53:43.169" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2024-10-13 16:53 o3fs://40251-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20241013 16:53:39.712" endtime="20241013 16:53:43.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:53:43.170" endtime="20241013 16:53:43.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:53:34.231" endtime="20241013 16:53:43.170"/>
</test>
<test id="s1-s3-t22" name="Reject overwrite existing" line="157">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:43.174" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://40251-link1-o3fs.fstest1.omservice//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:46.469" level="INFO">${rc} = 1</msg>
<msg timestamp="20241013 16:53:46.469" level="INFO">${output} = copyFromLocal: `o3fs://40251-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20241013 16:53:43.172" endtime="20241013 16:53:46.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:46.470" level="INFO">copyFromLocal: `o3fs://40251-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20241013 16:53:46.469" endtime="20241013 16:53:46.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:46.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:46.470" endtime="20241013 16:53:46.470"/>
</kw>
<msg timestamp="20241013 16:53:46.471" level="INFO">${result} = copyFromLocal: `o3fs://40251-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20241013 16:53:43.171" endtime="20241013 16:53:46.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:53:46.471" endtime="20241013 16:53:46.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:53:43.170" endtime="20241013 16:53:46.471"/>
</test>
<test id="s1-s3-t23" name="Get file" line="161">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:46.476" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:46.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:46.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:46.473" endtime="20241013 16:53:46.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:46.480" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:46.480" endtime="20241013 16:53:46.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:46.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:46.481" endtime="20241013 16:53:46.481"/>
</kw>
<status status="PASS" starttime="20241013 16:53:46.473" endtime="20241013 16:53:46.481"/>
</kw>
<msg timestamp="20241013 16:53:46.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:46.473" endtime="20241013 16:53:46.481"/>
</kw>
<status status="PASS" starttime="20241013 16:53:46.472" endtime="20241013 16:53:46.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:46.484" level="INFO">Running command 'ozone fs -get o3fs://40251-link1-o3fs.fstest1.omservice//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:51.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:51.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:46.483" endtime="20241013 16:53:51.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:51.789" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:51.788" endtime="20241013 16:53:51.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:51.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:51.789" endtime="20241013 16:53:51.789"/>
</kw>
<status status="PASS" starttime="20241013 16:53:46.482" endtime="20241013 16:53:51.789"/>
</kw>
<msg timestamp="20241013 16:53:51.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:46.482" endtime="20241013 16:53:51.790"/>
</kw>
<status status="PASS" starttime="20241013 16:53:46.482" endtime="20241013 16:53:51.790"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20241013 16:53:51.790" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20241013 16:53:51.790" endtime="20241013 16:53:51.790"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 16:53:46.472" endtime="20241013 16:53:51.790"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20241013 16:49:41.700" endtime="20241013 16:53:51.792"/>
</suite>
<suite id="s1-s4" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 16:53:52.529" level="INFO">${random} = 11650</msg>
<status status="PASS" starttime="20241013 16:53:52.529" endtime="20241013 16:53:52.529"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:53:52.530" level="INFO">${source} = 11650-source</msg>
<status status="PASS" starttime="20241013 16:53:52.529" endtime="20241013 16:53:52.530"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:53:52.531" level="INFO">${target} = 11650-target</msg>
<status status="PASS" starttime="20241013 16:53:52.530" endtime="20241013 16:53:52.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:52.534" level="INFO">Running command 'ozone sh volume create 11650-source 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:53:56.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:53:56.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:52.532" endtime="20241013 16:53:56.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:53:56.324" level="INFO"/>
<status status="PASS" starttime="20241013 16:53:56.323" endtime="20241013 16:53:56.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:53:56.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:53:56.324" endtime="20241013 16:53:56.324"/>
</kw>
<status status="PASS" starttime="20241013 16:53:52.532" endtime="20241013 16:53:56.325"/>
</kw>
<msg timestamp="20241013 16:53:56.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:52.532" endtime="20241013 16:53:56.325"/>
</kw>
<status status="PASS" starttime="20241013 16:53:52.531" endtime="20241013 16:53:56.325"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:53:56.328" level="INFO">Running command 'ozone sh volume create 11650-target 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:00.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:00.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:53:56.326" endtime="20241013 16:54:00.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:00.332" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:00.332" endtime="20241013 16:54:00.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:00.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:00.333" endtime="20241013 16:54:00.333"/>
</kw>
<status status="PASS" starttime="20241013 16:53:56.326" endtime="20241013 16:54:00.333"/>
</kw>
<msg timestamp="20241013 16:54:00.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:53:56.325" endtime="20241013 16:54:00.333"/>
</kw>
<status status="PASS" starttime="20241013 16:53:56.325" endtime="20241013 16:54:00.334"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:00.338" level="INFO">Running command 'ozone sh bucket create 11650-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:04.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:04.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:00.335" endtime="20241013 16:54:04.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:04.243" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:04.243" endtime="20241013 16:54:04.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:04.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:04.244" endtime="20241013 16:54:04.244"/>
</kw>
<status status="PASS" starttime="20241013 16:54:00.335" endtime="20241013 16:54:04.244"/>
</kw>
<msg timestamp="20241013 16:54:04.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:00.335" endtime="20241013 16:54:04.244"/>
</kw>
<status status="PASS" starttime="20241013 16:54:00.334" endtime="20241013 16:54:04.244"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:04.248" level="INFO">Running command 'ozone sh key put 11650-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:09.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:09.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:04.246" endtime="20241013 16:54:09.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:09.913" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:09.913" endtime="20241013 16:54:09.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:09.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:09.913" endtime="20241013 16:54:09.914"/>
</kw>
<status status="PASS" starttime="20241013 16:54:04.245" endtime="20241013 16:54:09.914"/>
</kw>
<msg timestamp="20241013 16:54:09.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:04.245" endtime="20241013 16:54:09.914"/>
</kw>
<status status="PASS" starttime="20241013 16:54:04.245" endtime="20241013 16:54:09.914"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:09.918" level="INFO">Running command 'ozone sh bucket create 11650-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:13.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:13.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:09.915" endtime="20241013 16:54:13.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:13.796" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:13.796" endtime="20241013 16:54:13.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:13.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:13.796" endtime="20241013 16:54:13.797"/>
</kw>
<status status="PASS" starttime="20241013 16:54:09.915" endtime="20241013 16:54:13.797"/>
</kw>
<msg timestamp="20241013 16:54:13.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:09.915" endtime="20241013 16:54:13.797"/>
</kw>
<status status="PASS" starttime="20241013 16:54:09.914" endtime="20241013 16:54:13.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:13.801" level="INFO">Running command 'ozone sh bucket link 11650-source/unreadable-bucket 11650-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:17.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:17.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:13.798" endtime="20241013 16:54:17.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:17.694" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:17.693" endtime="20241013 16:54:17.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:17.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:17.694" endtime="20241013 16:54:17.694"/>
</kw>
<status status="PASS" starttime="20241013 16:54:13.798" endtime="20241013 16:54:17.695"/>
</kw>
<msg timestamp="20241013 16:54:17.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:13.798" endtime="20241013 16:54:17.695"/>
</kw>
<status status="PASS" starttime="20241013 16:54:13.797" endtime="20241013 16:54:17.695"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:r[DEFAULT] ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:17.698" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:r[DEFAULT] 11650-target 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:21.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:21.700" level="INFO">${output} = ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20241013 16:54:17.696" endtime="20241013 16:54:21.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:21.701" level="INFO">ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20241013 16:54:21.701" endtime="20241013 16:54:21.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:21.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:21.701" endtime="20241013 16:54:21.702"/>
</kw>
<status status="PASS" starttime="20241013 16:54:17.696" endtime="20241013 16:54:21.702"/>
</kw>
<msg timestamp="20241013 16:54:21.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:17.695" endtime="20241013 16:54:21.702"/>
</kw>
<status status="PASS" starttime="20241013 16:54:17.695" endtime="20241013 16:54:21.702"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:21.706" level="INFO">Running command 'ozone sh bucket link 11650-source/readable-bucket 11650-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:25.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:25.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:21.703" endtime="20241013 16:54:25.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:25.540" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:25.540" endtime="20241013 16:54:25.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:25.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:25.541" endtime="20241013 16:54:25.541"/>
</kw>
<status status="PASS" starttime="20241013 16:54:21.703" endtime="20241013 16:54:25.541"/>
</kw>
<msg timestamp="20241013 16:54:25.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:21.703" endtime="20241013 16:54:25.541"/>
</kw>
<status status="PASS" starttime="20241013 16:54:21.702" endtime="20241013 16:54:25.541"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:25.545" level="INFO">Running command 'ozone sh bucket link 11650-source/readable-bucket 11650-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:29.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:29.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:25.543" endtime="20241013 16:54:29.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:29.230" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:29.229" endtime="20241013 16:54:29.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:29.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:29.230" endtime="20241013 16:54:29.230"/>
</kw>
<status status="PASS" starttime="20241013 16:54:25.543" endtime="20241013 16:54:29.230"/>
</kw>
<msg timestamp="20241013 16:54:29.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:25.542" endtime="20241013 16:54:29.231"/>
</kw>
<status status="PASS" starttime="20241013 16:54:25.542" endtime="20241013 16:54:29.231"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:29.234" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:rl 11650-source 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:32.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:32.820" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:54:29.232" endtime="20241013 16:54:32.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:32.821" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:54:32.820" endtime="20241013 16:54:32.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:32.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:32.821" endtime="20241013 16:54:32.821"/>
</kw>
<status status="PASS" starttime="20241013 16:54:29.231" endtime="20241013 16:54:32.822"/>
</kw>
<msg timestamp="20241013 16:54:32.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:29.231" endtime="20241013 16:54:32.822"/>
</kw>
<status status="PASS" starttime="20241013 16:54:29.231" endtime="20241013 16:54:32.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:32.825" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2:rl 11650-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:36.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:36.538" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:54:32.823" endtime="20241013 16:54:36.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:36.539" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:54:36.539" endtime="20241013 16:54:36.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:36.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:36.540" endtime="20241013 16:54:36.540"/>
</kw>
<status status="PASS" starttime="20241013 16:54:32.823" endtime="20241013 16:54:36.540"/>
</kw>
<msg timestamp="20241013 16:54:36.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:32.822" endtime="20241013 16:54:36.540"/>
</kw>
<status status="PASS" starttime="20241013 16:54:32.822" endtime="20241013 16:54:36.540"/>
</kw>
<status status="PASS" starttime="20241013 16:54:00.334" endtime="20241013 16:54:36.540"/>
</kw>
<status status="PASS" starttime="20241013 16:54:00.334" endtime="20241013 16:54:36.541"/>
</kw>
<status status="PASS" starttime="20241013 16:53:52.528" endtime="20241013 16:54:36.541"/>
</kw>
<test id="s1-s4-t1" name="Link to non-existent bucket" line="94">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:54:36.542" endtime="20241013 16:54:36.542"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:36.546" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:36.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:36.550" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:54:36.544" endtime="20241013 16:54:36.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:36.551" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:54:36.550" endtime="20241013 16:54:36.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:36.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:36.551" endtime="20241013 16:54:36.552"/>
</kw>
<status status="PASS" starttime="20241013 16:54:36.543" endtime="20241013 16:54:36.552"/>
</kw>
<msg timestamp="20241013 16:54:36.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:36.543" endtime="20241013 16:54:36.552"/>
</kw>
<msg timestamp="20241013 16:54:36.552" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:54:36.543" endtime="20241013 16:54:36.552"/>
</kw>
<msg timestamp="20241013 16:54:36.552" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:54:36.543" endtime="20241013 16:54:36.552"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:54:36.553" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:54:36.552" endtime="20241013 16:54:36.553"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:36.556" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:36.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:36.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:36.554" endtime="20241013 16:54:36.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:36.906" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:36.906" endtime="20241013 16:54:36.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:36.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:36.907" endtime="20241013 16:54:36.907"/>
</kw>
<status status="PASS" starttime="20241013 16:54:36.554" endtime="20241013 16:54:36.907"/>
</kw>
<msg timestamp="20241013 16:54:36.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:36.554" endtime="20241013 16:54:36.907"/>
</kw>
<status status="PASS" starttime="20241013 16:54:36.553" endtime="20241013 16:54:36.907"/>
</kw>
<status status="PASS" starttime="20241013 16:54:36.553" endtime="20241013 16:54:36.908"/>
</kw>
<status status="PASS" starttime="20241013 16:54:36.542" endtime="20241013 16:54:36.908"/>
</kw>
<status status="PASS" starttime="20241013 16:54:36.541" endtime="20241013 16:54:36.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:36.911" level="INFO">Running command 'ozone sh bucket link 11650-source/no-such-bucket 11650-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:40.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:40.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:36.909" endtime="20241013 16:54:40.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:40.745" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:40.745" endtime="20241013 16:54:40.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:40.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:40.745" endtime="20241013 16:54:40.746"/>
</kw>
<status status="PASS" starttime="20241013 16:54:36.909" endtime="20241013 16:54:40.746"/>
</kw>
<msg timestamp="20241013 16:54:40.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:36.908" endtime="20241013 16:54:40.746"/>
</kw>
<status status="PASS" starttime="20241013 16:54:36.908" endtime="20241013 16:54:40.746"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:40.749" level="INFO">Running command 'ozone sh key list 11650-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:44.406" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 16:54:44.406" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: 11650-source/no-such-bucket</msg>
<status status="PASS" starttime="20241013 16:54:40.747" endtime="20241013 16:54:44.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:44.407" level="INFO">BUCKET_NOT_FOUND Bucket not found: 11650-source/no-such-bucket</msg>
<status status="PASS" starttime="20241013 16:54:44.407" endtime="20241013 16:54:44.408"/>
</kw>
<msg timestamp="20241013 16:54:44.408" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found: 11650-source/no-such-bucket</msg>
<status status="PASS" starttime="20241013 16:54:40.746" endtime="20241013 16:54:44.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:54:44.408" endtime="20241013 16:54:44.408"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:54:36.541" endtime="20241013 16:54:44.408"/>
</test>
<test id="s1-s4-t2" name="Key create passthrough" line="99">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:54:44.410" endtime="20241013 16:54:44.411"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:44.414" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:44.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:44.418" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:54:44.412" endtime="20241013 16:54:44.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:44.419" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:54:44.418" endtime="20241013 16:54:44.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:44.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:44.419" endtime="20241013 16:54:44.420"/>
</kw>
<status status="PASS" starttime="20241013 16:54:44.412" endtime="20241013 16:54:44.420"/>
</kw>
<msg timestamp="20241013 16:54:44.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:44.411" endtime="20241013 16:54:44.420"/>
</kw>
<msg timestamp="20241013 16:54:44.420" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:54:44.411" endtime="20241013 16:54:44.420"/>
</kw>
<msg timestamp="20241013 16:54:44.420" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:54:44.411" endtime="20241013 16:54:44.420"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:54:44.421" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:54:44.420" endtime="20241013 16:54:44.421"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:44.424" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:44.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:44.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:44.422" endtime="20241013 16:54:44.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:44.780" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:44.779" endtime="20241013 16:54:44.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:44.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:44.780" endtime="20241013 16:54:44.781"/>
</kw>
<status status="PASS" starttime="20241013 16:54:44.422" endtime="20241013 16:54:44.781"/>
</kw>
<msg timestamp="20241013 16:54:44.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:44.422" endtime="20241013 16:54:44.781"/>
</kw>
<status status="PASS" starttime="20241013 16:54:44.421" endtime="20241013 16:54:44.781"/>
</kw>
<status status="PASS" starttime="20241013 16:54:44.421" endtime="20241013 16:54:44.781"/>
</kw>
<status status="PASS" starttime="20241013 16:54:44.410" endtime="20241013 16:54:44.781"/>
</kw>
<status status="PASS" starttime="20241013 16:54:44.409" endtime="20241013 16:54:44.781"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:44.785" level="INFO">Running command 'ozone sh bucket link 11650-source/bucket1 11650-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:48.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:48.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:44.783" endtime="20241013 16:54:48.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:48.726" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:48.725" endtime="20241013 16:54:48.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:48.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:48.726" endtime="20241013 16:54:48.726"/>
</kw>
<status status="PASS" starttime="20241013 16:54:44.782" endtime="20241013 16:54:48.726"/>
</kw>
<msg timestamp="20241013 16:54:48.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:44.782" endtime="20241013 16:54:48.727"/>
</kw>
<status status="PASS" starttime="20241013 16:54:44.781" endtime="20241013 16:54:48.727"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:48.730" level="INFO">Running command 'ozone sh bucket create 11650-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:52.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:52.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:48.728" endtime="20241013 16:54:52.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:52.439" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:52.438" endtime="20241013 16:54:52.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:52.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:52.439" endtime="20241013 16:54:52.439"/>
</kw>
<status status="PASS" starttime="20241013 16:54:48.728" endtime="20241013 16:54:52.440"/>
</kw>
<msg timestamp="20241013 16:54:52.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:48.727" endtime="20241013 16:54:52.440"/>
</kw>
<status status="PASS" starttime="20241013 16:54:48.727" endtime="20241013 16:54:52.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:52.444" level="INFO">Running command 'ozone sh key put 11650-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:54:57.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:54:57.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:52.441" endtime="20241013 16:54:57.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:54:57.996" level="INFO"/>
<status status="PASS" starttime="20241013 16:54:57.995" endtime="20241013 16:54:57.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:54:57.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:54:57.996" endtime="20241013 16:54:57.996"/>
</kw>
<status status="PASS" starttime="20241013 16:54:52.441" endtime="20241013 16:54:57.996"/>
</kw>
<msg timestamp="20241013 16:54:57.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:52.441" endtime="20241013 16:54:57.997"/>
</kw>
<status status="PASS" starttime="20241013 16:54:52.440" endtime="20241013 16:54:57.997"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 16:54:57.998" level="INFO">${postfix} = 26929</msg>
<status status="PASS" starttime="20241013 16:54:57.998" endtime="20241013 16:54:57.998"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:54:57.998" level="INFO">${tmpfile} = /tmp/tempkey-26929</msg>
<status status="PASS" starttime="20241013 16:54:57.998" endtime="20241013 16:54:57.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:54:58.002" level="INFO">Running command 'ozone sh key get 11650-target/link1/key1 /tmp/tempkey-26929 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:03.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:03.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:54:58.000" endtime="20241013 16:55:03.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:03.476" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:03.475" endtime="20241013 16:55:03.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:03.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:03.476" endtime="20241013 16:55:03.476"/>
</kw>
<status status="PASS" starttime="20241013 16:54:57.999" endtime="20241013 16:55:03.477"/>
</kw>
<msg timestamp="20241013 16:55:03.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:54:57.999" endtime="20241013 16:55:03.477"/>
</kw>
<status status="PASS" starttime="20241013 16:54:57.999" endtime="20241013 16:55:03.477"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20241013 16:55:03.479" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-26929 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:03.482" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20241013 16:55:03.477" endtime="20241013 16:55:03.483"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:03.486" level="INFO">Running command 'rm -f /tmp/tempkey-26929 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:03.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:03.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:03.484" endtime="20241013 16:55:03.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:03.491" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:03.490" endtime="20241013 16:55:03.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:03.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:03.491" endtime="20241013 16:55:03.491"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.484" endtime="20241013 16:55:03.491"/>
</kw>
<msg timestamp="20241013 16:55:03.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:03.484" endtime="20241013 16:55:03.492"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.483" endtime="20241013 16:55:03.492"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:55:03.492" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241013 16:55:03.492" endtime="20241013 16:55:03.492"/>
</kw>
<msg timestamp="20241013 16:55:03.492" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241013 16:54:57.997" endtime="20241013 16:55:03.492"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241013 16:55:03.493" endtime="20241013 16:55:03.493"/>
</kw>
<status status="PASS" starttime="20241013 16:54:57.997" endtime="20241013 16:55:03.493"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:54:44.409" endtime="20241013 16:55:03.493"/>
</test>
<test id="s1-s4-t3" name="Key read passthrough" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:55:03.495" endtime="20241013 16:55:03.495"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:03.499" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:03.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:03.502" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:03.497" endtime="20241013 16:55:03.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:03.503" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:55:03.503" endtime="20241013 16:55:03.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:03.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:03.503" endtime="20241013 16:55:03.504"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.496" endtime="20241013 16:55:03.504"/>
</kw>
<msg timestamp="20241013 16:55:03.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:03.496" endtime="20241013 16:55:03.504"/>
</kw>
<msg timestamp="20241013 16:55:03.504" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:03.496" endtime="20241013 16:55:03.504"/>
</kw>
<msg timestamp="20241013 16:55:03.505" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:03.495" endtime="20241013 16:55:03.505"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:55:03.505" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:03.505" endtime="20241013 16:55:03.505"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:03.508" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:03.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:03.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:03.507" endtime="20241013 16:55:03.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:03.797" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:03.797" endtime="20241013 16:55:03.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:03.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:03.798" endtime="20241013 16:55:03.798"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.506" endtime="20241013 16:55:03.798"/>
</kw>
<msg timestamp="20241013 16:55:03.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:03.506" endtime="20241013 16:55:03.798"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.506" endtime="20241013 16:55:03.798"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.505" endtime="20241013 16:55:03.799"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.495" endtime="20241013 16:55:03.799"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.494" endtime="20241013 16:55:03.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:03.802" level="INFO">Running command 'ozone sh key put 11650-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:09.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:09.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:03.800" endtime="20241013 16:55:09.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:09.571" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:09.571" endtime="20241013 16:55:09.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:09.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:09.571" endtime="20241013 16:55:09.572"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.800" endtime="20241013 16:55:09.572"/>
</kw>
<msg timestamp="20241013 16:55:09.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:03.799" endtime="20241013 16:55:09.572"/>
</kw>
<status status="PASS" starttime="20241013 16:55:03.799" endtime="20241013 16:55:09.572"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 16:55:09.574" level="INFO">${postfix} = 05168</msg>
<status status="PASS" starttime="20241013 16:55:09.573" endtime="20241013 16:55:09.574"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:55:09.574" level="INFO">${tmpfile} = /tmp/tempkey-05168</msg>
<status status="PASS" starttime="20241013 16:55:09.574" endtime="20241013 16:55:09.574"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:09.578" level="INFO">Running command 'ozone sh key get 11650-source/bucket1/key2 /tmp/tempkey-05168 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:14.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:14.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:09.575" endtime="20241013 16:55:14.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:14.829" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:14.829" endtime="20241013 16:55:14.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:14.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:14.829" endtime="20241013 16:55:14.830"/>
</kw>
<status status="PASS" starttime="20241013 16:55:09.575" endtime="20241013 16:55:14.830"/>
</kw>
<msg timestamp="20241013 16:55:14.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:09.575" endtime="20241013 16:55:14.830"/>
</kw>
<status status="PASS" starttime="20241013 16:55:09.574" endtime="20241013 16:55:14.830"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20241013 16:55:14.833" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-05168 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:14.836" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20241013 16:55:14.830" endtime="20241013 16:55:14.836"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:14.839" level="INFO">Running command 'rm -f /tmp/tempkey-05168 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:14.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:14.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:14.837" endtime="20241013 16:55:14.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:14.844" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:14.844" endtime="20241013 16:55:14.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:14.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:14.844" endtime="20241013 16:55:14.845"/>
</kw>
<status status="PASS" starttime="20241013 16:55:14.837" endtime="20241013 16:55:14.845"/>
</kw>
<msg timestamp="20241013 16:55:14.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:14.837" endtime="20241013 16:55:14.845"/>
</kw>
<status status="PASS" starttime="20241013 16:55:14.836" endtime="20241013 16:55:14.845"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:55:14.846" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241013 16:55:14.845" endtime="20241013 16:55:14.846"/>
</kw>
<msg timestamp="20241013 16:55:14.846" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241013 16:55:09.573" endtime="20241013 16:55:14.846"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241013 16:55:14.846" endtime="20241013 16:55:14.846"/>
</kw>
<status status="PASS" starttime="20241013 16:55:09.573" endtime="20241013 16:55:14.846"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:55:03.494" endtime="20241013 16:55:14.846"/>
</test>
<test id="s1-s4-t4" name="Key list passthrough" line="109">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:55:14.848" endtime="20241013 16:55:14.848"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:14.852" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:14.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:14.856" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:14.850" endtime="20241013 16:55:14.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:14.856" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:55:14.856" endtime="20241013 16:55:14.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:14.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:14.857" endtime="20241013 16:55:14.857"/>
</kw>
<status status="PASS" starttime="20241013 16:55:14.849" endtime="20241013 16:55:14.857"/>
</kw>
<msg timestamp="20241013 16:55:14.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:14.849" endtime="20241013 16:55:14.857"/>
</kw>
<msg timestamp="20241013 16:55:14.857" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:14.849" endtime="20241013 16:55:14.858"/>
</kw>
<msg timestamp="20241013 16:55:14.858" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:14.849" endtime="20241013 16:55:14.858"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:55:14.858" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:14.858" endtime="20241013 16:55:14.858"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:14.862" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:15.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:15.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:14.860" endtime="20241013 16:55:15.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:15.145" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:15.144" endtime="20241013 16:55:15.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:15.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:15.145" endtime="20241013 16:55:15.146"/>
</kw>
<status status="PASS" starttime="20241013 16:55:14.859" endtime="20241013 16:55:15.146"/>
</kw>
<msg timestamp="20241013 16:55:15.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:14.859" endtime="20241013 16:55:15.146"/>
</kw>
<status status="PASS" starttime="20241013 16:55:14.859" endtime="20241013 16:55:15.146"/>
</kw>
<status status="PASS" starttime="20241013 16:55:14.858" endtime="20241013 16:55:15.146"/>
</kw>
<status status="PASS" starttime="20241013 16:55:14.848" endtime="20241013 16:55:15.146"/>
</kw>
<status status="PASS" starttime="20241013 16:55:14.848" endtime="20241013 16:55:15.146"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:15.150" level="INFO">Running command 'ozone sh key list 11650-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:19.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:19.259" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20241013 16:55:15.147" endtime="20241013 16:55:19.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:19.260" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20241013 16:55:19.259" endtime="20241013 16:55:19.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:19.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:19.260" endtime="20241013 16:55:19.260"/>
</kw>
<status status="PASS" starttime="20241013 16:55:15.147" endtime="20241013 16:55:19.260"/>
</kw>
<msg timestamp="20241013 16:55:19.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:15.147" endtime="20241013 16:55:19.261"/>
</kw>
<msg timestamp="20241013 16:55:19.261" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20241013 16:55:15.146" endtime="20241013 16:55:19.261"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:19.264" level="INFO">Running command 'ozone sh key list 11650-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:23.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:23.199" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20241013 16:55:19.262" endtime="20241013 16:55:23.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:23.200" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20241013 16:55:23.200" endtime="20241013 16:55:23.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:23.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:23.201" endtime="20241013 16:55:23.201"/>
</kw>
<status status="PASS" starttime="20241013 16:55:19.262" endtime="20241013 16:55:23.201"/>
</kw>
<msg timestamp="20241013 16:55:23.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:19.261" endtime="20241013 16:55:23.201"/>
</kw>
<msg timestamp="20241013 16:55:23.201" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20241013 16:55:19.261" endtime="20241013 16:55:23.201"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:55:23.202" endtime="20241013 16:55:23.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:23.202" endtime="20241013 16:55:23.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:23.202" endtime="20241013 16:55:23.203"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:55:14.847" endtime="20241013 16:55:23.203"/>
</test>
<test id="s1-s4-t5" name="Key delete passthrough" line="116">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:55:23.205" endtime="20241013 16:55:23.205"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:23.209" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:23.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:23.213" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:23.206" endtime="20241013 16:55:23.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:23.213" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:55:23.213" endtime="20241013 16:55:23.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:23.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:23.214" endtime="20241013 16:55:23.214"/>
</kw>
<status status="PASS" starttime="20241013 16:55:23.206" endtime="20241013 16:55:23.214"/>
</kw>
<msg timestamp="20241013 16:55:23.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:23.206" endtime="20241013 16:55:23.214"/>
</kw>
<msg timestamp="20241013 16:55:23.214" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:23.205" endtime="20241013 16:55:23.214"/>
</kw>
<msg timestamp="20241013 16:55:23.215" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:23.205" endtime="20241013 16:55:23.215"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:55:23.215" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:23.215" endtime="20241013 16:55:23.215"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:23.219" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:23.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:23.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:23.217" endtime="20241013 16:55:23.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:23.434" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:23.434" endtime="20241013 16:55:23.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:23.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:23.434" endtime="20241013 16:55:23.435"/>
</kw>
<status status="PASS" starttime="20241013 16:55:23.217" endtime="20241013 16:55:23.435"/>
</kw>
<msg timestamp="20241013 16:55:23.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:23.216" endtime="20241013 16:55:23.435"/>
</kw>
<status status="PASS" starttime="20241013 16:55:23.216" endtime="20241013 16:55:23.435"/>
</kw>
<status status="PASS" starttime="20241013 16:55:23.216" endtime="20241013 16:55:23.435"/>
</kw>
<status status="PASS" starttime="20241013 16:55:23.204" endtime="20241013 16:55:23.435"/>
</kw>
<status status="PASS" starttime="20241013 16:55:23.204" endtime="20241013 16:55:23.435"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:23.439" level="INFO">Running command 'ozone sh key delete 11650-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:27.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:27.355" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20241013 16:55:23.437" endtime="20241013 16:55:27.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:27.356" level="INFO">Key moved inside Trash: /.Trash/testuser/Current/key2 </msg>
<status status="PASS" starttime="20241013 16:55:27.355" endtime="20241013 16:55:27.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:27.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:27.356" endtime="20241013 16:55:27.357"/>
</kw>
<status status="PASS" starttime="20241013 16:55:23.436" endtime="20241013 16:55:27.357"/>
</kw>
<msg timestamp="20241013 16:55:27.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:23.436" endtime="20241013 16:55:27.357"/>
</kw>
<status status="PASS" starttime="20241013 16:55:23.436" endtime="20241013 16:55:27.357"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket1keys}</var>
<arg>ozone sh key list ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:27.361" level="INFO">Running command 'ozone sh key list 11650-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:31.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:31.469" level="INFO">${output} = [ {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "...</msg>
<status status="PASS" starttime="20241013 16:55:27.359" endtime="20241013 16:55:31.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:31.470" level="INFO">[ {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "2024-10-13T16:55:27.240Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "2024-10-13T16:55:27.240Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "2024-10-13T16:55:27.247Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-10-13T16:55:07.593Z",
  "modificationTime" : "2024-10-13T16:55:09.137Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-10-13T16:54:56.118Z",
  "modificationTime" : "2024-10-13T16:54:57.490Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20241013 16:55:31.470" endtime="20241013 16:55:31.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:31.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:31.470" endtime="20241013 16:55:31.471"/>
</kw>
<status status="PASS" starttime="20241013 16:55:27.358" endtime="20241013 16:55:31.471"/>
</kw>
<msg timestamp="20241013 16:55:31.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:27.358" endtime="20241013 16:55:31.471"/>
</kw>
<msg timestamp="20241013 16:55:31.471" level="INFO">${bucket1keys} = [ {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "...</msg>
<status status="PASS" starttime="20241013 16:55:27.358" endtime="20241013 16:55:31.472"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash")) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:31.475" level="INFO">Running command 'echo '[ {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "2024-10-13T16:55:27.240Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "2024-10-13T16:55:27.240Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "2024-10-13T16:55:27.247Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-10-13T16:55:07.593Z",
  "modificationTime" : "2024-10-13T16:55:09.137Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-10-13T16:54:56.118Z",
  "modificationTime" : "2024-10-13T16:54:57.490Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash")) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:31.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:31.481" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20241013 16:55:31.473" endtime="20241013 16:55:31.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:31.481" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20241013 16:55:31.481" endtime="20241013 16:55:31.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:31.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:31.482" endtime="20241013 16:55:31.482"/>
</kw>
<status status="PASS" starttime="20241013 16:55:31.472" endtime="20241013 16:55:31.482"/>
</kw>
<msg timestamp="20241013 16:55:31.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:31.472" endtime="20241013 16:55:31.482"/>
</kw>
<msg timestamp="20241013 16:55:31.483" level="INFO">${source_list} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/key2</msg>
<status status="PASS" starttime="20241013 16:55:31.472" endtime="20241013 16:55:31.483"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${source_list}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20241013 16:55:31.483" endtime="20241013 16:55:31.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:31.483" endtime="20241013 16:55:31.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${bucket1keys}' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:31.487" level="INFO">Running command 'echo '[ {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "2024-10-13T16:55:27.240Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/",
  "owner" : "testuser",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "2024-10-13T16:55:27.240Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/",
  "owner" : "",
  "dataSize" : 0,
  "creationTime" : "2024-10-13T16:55:27.240Z",
  "modificationTime" : "2024-10-13T16:55:27.247Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : ".Trash/testuser/Current/key2",
  "owner" : "testuser",
  "dataSize" : 17289,
  "creationTime" : "2024-10-13T16:55:07.593Z",
  "modificationTime" : "2024-10-13T16:55:09.137Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
}, {
  "volumeName" : "11650-source",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-10-13T16:54:56.118Z",
  "modificationTime" : "2024-10-13T16:54:57.490Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]' | jq -r '.[] | select(.name | startswith(".Trash") | not) | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:31.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:31.492" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20241013 16:55:31.485" endtime="20241013 16:55:31.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:31.493" level="INFO">key1</msg>
<status status="PASS" starttime="20241013 16:55:31.492" endtime="20241013 16:55:31.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:31.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:31.493" endtime="20241013 16:55:31.494"/>
</kw>
<status status="PASS" starttime="20241013 16:55:31.484" endtime="20241013 16:55:31.494"/>
</kw>
<msg timestamp="20241013 16:55:31.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:31.484" endtime="20241013 16:55:31.494"/>
</kw>
<msg timestamp="20241013 16:55:31.494" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20241013 16:55:31.484" endtime="20241013 16:55:31.494"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:31.494" endtime="20241013 16:55:31.494"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:55:23.203" endtime="20241013 16:55:31.495"/>
</test>
<test id="s1-s4-t6" name="Bucket list contains links" line="125">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:55:31.496" endtime="20241013 16:55:31.497"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:31.500" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:31.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:31.503" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:31.498" endtime="20241013 16:55:31.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:31.504" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:55:31.504" endtime="20241013 16:55:31.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:31.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:31.504" endtime="20241013 16:55:31.505"/>
</kw>
<status status="PASS" starttime="20241013 16:55:31.498" endtime="20241013 16:55:31.505"/>
</kw>
<msg timestamp="20241013 16:55:31.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:31.497" endtime="20241013 16:55:31.505"/>
</kw>
<msg timestamp="20241013 16:55:31.505" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:31.497" endtime="20241013 16:55:31.505"/>
</kw>
<msg timestamp="20241013 16:55:31.505" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:31.497" endtime="20241013 16:55:31.505"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:55:31.506" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:31.506" endtime="20241013 16:55:31.506"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:31.509" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:31.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:31.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:31.507" endtime="20241013 16:55:31.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:31.724" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:31.723" endtime="20241013 16:55:31.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:31.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:31.724" endtime="20241013 16:55:31.726"/>
</kw>
<status status="PASS" starttime="20241013 16:55:31.507" endtime="20241013 16:55:31.726"/>
</kw>
<msg timestamp="20241013 16:55:31.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:31.507" endtime="20241013 16:55:31.726"/>
</kw>
<status status="PASS" starttime="20241013 16:55:31.506" endtime="20241013 16:55:31.726"/>
</kw>
<status status="PASS" starttime="20241013 16:55:31.506" endtime="20241013 16:55:31.726"/>
</kw>
<status status="PASS" starttime="20241013 16:55:31.496" endtime="20241013 16:55:31.726"/>
</kw>
<status status="PASS" starttime="20241013 16:55:31.496" endtime="20241013 16:55:31.726"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:31.730" level="INFO">Running command 'ozone sh bucket list 11650-target 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:35.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:35.807" level="INFO">${output} = [ {
  "volumeName" : "11650-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2024-10-13T16:54:40.621Z",
  "modific...</msg>
<status status="PASS" starttime="20241013 16:55:31.727" endtime="20241013 16:55:35.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:35.808" level="INFO">[ {
  "volumeName" : "11650-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2024-10-13T16:54:40.621Z",
  "modificationTime" : "2024-10-13T16:54:40.621Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "11650-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-10-13T16:54:17.595Z",
  "modificationTime" : "2024-10-13T16:54:17.595Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "11650-target",
  "bucketName" : "link1",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-10-13T16:54:48.598Z",
  "modificationTime" : "2024-10-13T16:54:48.598Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "11650-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2024-10-13T16:54:25.454Z",
  "modificationTime" : "2024-10-13T16:54:25.454Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "11650-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2024-10-13T16:54:29.142Z",
  "modificationTime" : "2024-10-13T16:54:29.142Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20241013 16:55:35.808" endtime="20241013 16:55:35.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:35.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:35.808" endtime="20241013 16:55:35.809"/>
</kw>
<status status="PASS" starttime="20241013 16:55:31.727" endtime="20241013 16:55:35.809"/>
</kw>
<msg timestamp="20241013 16:55:35.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:31.727" endtime="20241013 16:55:35.809"/>
</kw>
<msg timestamp="20241013 16:55:35.809" level="INFO">${result} = [ {
  "volumeName" : "11650-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2024-10-13T16:54:40.621Z",
  "modific...</msg>
<status status="PASS" starttime="20241013 16:55:31.726" endtime="20241013 16:55:35.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:35.809" endtime="20241013 16:55:35.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:35.810" endtime="20241013 16:55:35.810"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:55:31.495" endtime="20241013 16:55:35.810"/>
</test>
<test id="s1-s4-t7" name="Bucket info shows source" line="130">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:55:35.812" endtime="20241013 16:55:35.812"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:35.816" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:35.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:35.820" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:35.814" endtime="20241013 16:55:35.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:35.820" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:55:35.820" endtime="20241013 16:55:35.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:35.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:35.820" endtime="20241013 16:55:35.821"/>
</kw>
<status status="PASS" starttime="20241013 16:55:35.813" endtime="20241013 16:55:35.821"/>
</kw>
<msg timestamp="20241013 16:55:35.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:35.813" endtime="20241013 16:55:35.821"/>
</kw>
<msg timestamp="20241013 16:55:35.821" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:35.813" endtime="20241013 16:55:35.821"/>
</kw>
<msg timestamp="20241013 16:55:35.822" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:35.812" endtime="20241013 16:55:35.822"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:55:35.822" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:35.822" endtime="20241013 16:55:35.822"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:35.825" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:36.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:36.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:35.824" endtime="20241013 16:55:36.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:36.057" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:36.056" endtime="20241013 16:55:36.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:36.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:36.057" endtime="20241013 16:55:36.067"/>
</kw>
<status status="PASS" starttime="20241013 16:55:35.823" endtime="20241013 16:55:36.068"/>
</kw>
<msg timestamp="20241013 16:55:36.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:35.823" endtime="20241013 16:55:36.068"/>
</kw>
<status status="PASS" starttime="20241013 16:55:35.822" endtime="20241013 16:55:36.068"/>
</kw>
<status status="PASS" starttime="20241013 16:55:35.822" endtime="20241013 16:55:36.068"/>
</kw>
<status status="PASS" starttime="20241013 16:55:35.812" endtime="20241013 16:55:36.068"/>
</kw>
<status status="PASS" starttime="20241013 16:55:35.811" endtime="20241013 16:55:36.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:36.071" level="INFO">Running command 'ozone sh bucket info 11650-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:40.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:40.130" level="INFO">${output} = {
  "volumeName" : "11650-target",
  "bucketName" : "link1",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-10-13T16:54:48.598Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20241013 16:55:36.069" endtime="20241013 16:55:40.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:40.131" level="INFO">{
  "volumeName" : "11650-target",
  "bucketName" : "link1",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-10-13T16:54:48.598Z",
  "modificationTime" : "2024-10-13T16:54:48.598Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20241013 16:55:40.130" endtime="20241013 16:55:40.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:40.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:40.131" endtime="20241013 16:55:40.131"/>
</kw>
<status status="PASS" starttime="20241013 16:55:36.069" endtime="20241013 16:55:40.131"/>
</kw>
<msg timestamp="20241013 16:55:40.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:36.068" endtime="20241013 16:55:40.132"/>
</kw>
<msg timestamp="20241013 16:55:40.132" level="INFO">${result} = {
  "volumeName" : "11650-target",
  "bucketName" : "link1",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-10-13T16:54:48.598Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20241013 16:55:36.068" endtime="20241013 16:55:40.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:40.132" endtime="20241013 16:55:40.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:40.132" endtime="20241013 16:55:40.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:40.133" endtime="20241013 16:55:40.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:40.133" endtime="20241013 16:55:40.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:40.133" endtime="20241013 16:55:40.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:40.134" endtime="20241013 16:55:40.134"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:55:40.134" endtime="20241013 16:55:40.134"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:55:35.811" endtime="20241013 16:55:40.134"/>
</test>
<test id="s1-s4-t8" name="Source and target bucket have different ACLs" line="140">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:55:40.136" endtime="20241013 16:55:40.136"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:40.140" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:40.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:40.144" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:40.138" endtime="20241013 16:55:40.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:40.145" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:55:40.144" endtime="20241013 16:55:40.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:40.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:40.145" endtime="20241013 16:55:40.145"/>
</kw>
<status status="PASS" starttime="20241013 16:55:40.137" endtime="20241013 16:55:40.146"/>
</kw>
<msg timestamp="20241013 16:55:40.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:40.137" endtime="20241013 16:55:40.146"/>
</kw>
<msg timestamp="20241013 16:55:40.146" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:55:40.137" endtime="20241013 16:55:40.146"/>
</kw>
<msg timestamp="20241013 16:55:40.146" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:40.136" endtime="20241013 16:55:40.146"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:55:40.147" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:55:40.146" endtime="20241013 16:55:40.147"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:40.150" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:40.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:40.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:40.148" endtime="20241013 16:55:40.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:40.233" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:40.233" endtime="20241013 16:55:40.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:40.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:40.233" endtime="20241013 16:55:40.234"/>
</kw>
<status status="PASS" starttime="20241013 16:55:40.148" endtime="20241013 16:55:40.234"/>
</kw>
<msg timestamp="20241013 16:55:40.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:40.148" endtime="20241013 16:55:40.234"/>
</kw>
<status status="PASS" starttime="20241013 16:55:40.147" endtime="20241013 16:55:40.234"/>
</kw>
<status status="PASS" starttime="20241013 16:55:40.147" endtime="20241013 16:55:40.234"/>
</kw>
<status status="PASS" starttime="20241013 16:55:40.136" endtime="20241013 16:55:40.234"/>
</kw>
<status status="PASS" starttime="20241013 16:55:40.135" endtime="20241013 16:55:40.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:40.239" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 11650-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:44.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:44.034" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:55:40.236" endtime="20241013 16:55:44.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:44.035" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:55:44.034" endtime="20241013 16:55:44.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:44.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:44.035" endtime="20241013 16:55:44.036"/>
</kw>
<status status="PASS" starttime="20241013 16:55:40.236" endtime="20241013 16:55:44.036"/>
</kw>
<msg timestamp="20241013 16:55:44.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:40.236" endtime="20241013 16:55:44.036"/>
</kw>
<status status="PASS" starttime="20241013 16:55:40.235" endtime="20241013 16:55:44.036"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:44.041" level="INFO">Running command 'ozone sh bucket getacl 11650-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:48.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:48.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:44.038" endtime="20241013 16:55:48.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:48.040" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:48.039" endtime="20241013 16:55:48.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:48.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:48.040" endtime="20241013 16:55:48.040"/>
</kw>
<status status="PASS" starttime="20241013 16:55:44.038" endtime="20241013 16:55:48.040"/>
</kw>
<msg timestamp="20241013 16:55:48.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:44.038" endtime="20241013 16:55:48.040"/>
</kw>
<msg timestamp="20241013 16:55:48.041" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20241013 16:55:44.037" endtime="20241013 16:55:48.041"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:55:48.041" endtime="20241013 16:55:48.041"/>
</kw>
<status status="PASS" starttime="20241013 16:55:44.036" endtime="20241013 16:55:48.041"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:48.046" level="INFO">Running command 'ozone sh bucket getacl --source=false 11650-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:51.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:51.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:55:48.044" endtime="20241013 16:55:51.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:51.901" level="INFO"/>
<status status="PASS" starttime="20241013 16:55:51.900" endtime="20241013 16:55:51.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:51.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:51.901" endtime="20241013 16:55:51.902"/>
</kw>
<status status="PASS" starttime="20241013 16:55:48.043" endtime="20241013 16:55:51.902"/>
</kw>
<msg timestamp="20241013 16:55:51.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:48.043" endtime="20241013 16:55:51.902"/>
</kw>
<msg timestamp="20241013 16:55:51.902" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20241013 16:55:48.042" endtime="20241013 16:55:51.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:55:51.902" endtime="20241013 16:55:51.903"/>
</kw>
<status status="PASS" starttime="20241013 16:55:48.041" endtime="20241013 16:55:51.903"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:51.907" level="INFO">Running command 'ozone sh bucket getacl --source 11650-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:55.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:55.766" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:55:51.905" endtime="20241013 16:55:55.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:55.767" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:55:55.766" endtime="20241013 16:55:55.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:55.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:55.767" endtime="20241013 16:55:55.768"/>
</kw>
<status status="PASS" starttime="20241013 16:55:51.904" endtime="20241013 16:55:55.768"/>
</kw>
<msg timestamp="20241013 16:55:55.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:51.904" endtime="20241013 16:55:55.768"/>
</kw>
<msg timestamp="20241013 16:55:55.768" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:55:51.903" endtime="20241013 16:55:55.768"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:55:55.768" endtime="20241013 16:55:55.769"/>
</kw>
<status status="PASS" starttime="20241013 16:55:51.903" endtime="20241013 16:55:55.769"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:55.773" level="INFO">Running command 'ozone sh bucket getacl 11650-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:55:59.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:55:59.858" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:55:55.771" endtime="20241013 16:55:59.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:55:59.859" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:55:59.858" endtime="20241013 16:55:59.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:55:59.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:55:59.859" endtime="20241013 16:55:59.859"/>
</kw>
<status status="PASS" starttime="20241013 16:55:55.770" endtime="20241013 16:55:59.860"/>
</kw>
<msg timestamp="20241013 16:55:59.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:55.770" endtime="20241013 16:55:59.860"/>
</kw>
<msg timestamp="20241013 16:55:59.860" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:55:55.769" endtime="20241013 16:55:59.860"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:55:59.860" endtime="20241013 16:55:59.860"/>
</kw>
<status status="PASS" starttime="20241013 16:55:55.769" endtime="20241013 16:55:59.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:55:59.864" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 11650-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:04.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:04.062" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20241013 16:55:59.862" endtime="20241013 16:56:04.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:04.063" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20241013 16:56:04.062" endtime="20241013 16:56:04.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:04.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:04.063" endtime="20241013 16:56:04.063"/>
</kw>
<status status="PASS" starttime="20241013 16:55:59.861" endtime="20241013 16:56:04.063"/>
</kw>
<msg timestamp="20241013 16:56:04.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:55:59.861" endtime="20241013 16:56:04.064"/>
</kw>
<status status="PASS" starttime="20241013 16:55:59.861" endtime="20241013 16:56:04.064"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:04.069" level="INFO">Running command 'ozone sh bucket getacl 11650-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:08.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:08.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:56:04.066" endtime="20241013 16:56:08.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:08.142" level="INFO"/>
<status status="PASS" starttime="20241013 16:56:08.142" endtime="20241013 16:56:08.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:08.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:08.143" endtime="20241013 16:56:08.143"/>
</kw>
<status status="PASS" starttime="20241013 16:56:04.066" endtime="20241013 16:56:08.143"/>
</kw>
<msg timestamp="20241013 16:56:08.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:04.066" endtime="20241013 16:56:08.144"/>
</kw>
<msg timestamp="20241013 16:56:08.144" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20241013 16:56:04.065" endtime="20241013 16:56:08.144"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:56:08.144" endtime="20241013 16:56:08.144"/>
</kw>
<status status="PASS" starttime="20241013 16:56:04.064" endtime="20241013 16:56:08.144"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:08.148" level="INFO">Running command 'ozone sh bucket getacl --source 11650-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:12.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:12.594" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:56:08.146" endtime="20241013 16:56:12.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:12.595" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:56:12.594" endtime="20241013 16:56:12.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:12.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:12.595" endtime="20241013 16:56:12.595"/>
</kw>
<status status="PASS" starttime="20241013 16:56:08.146" endtime="20241013 16:56:12.595"/>
</kw>
<msg timestamp="20241013 16:56:12.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:08.146" endtime="20241013 16:56:12.596"/>
</kw>
<msg timestamp="20241013 16:56:12.596" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:56:08.145" endtime="20241013 16:56:12.596"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:56:12.596" endtime="20241013 16:56:12.596"/>
</kw>
<status status="PASS" starttime="20241013 16:56:08.144" endtime="20241013 16:56:12.596"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:12.600" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 11650-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:16.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:16.500" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20241013 16:56:12.597" endtime="20241013 16:56:16.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:16.501" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20241013 16:56:16.501" endtime="20241013 16:56:16.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:16.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:16.501" endtime="20241013 16:56:16.502"/>
</kw>
<status status="PASS" starttime="20241013 16:56:12.597" endtime="20241013 16:56:16.502"/>
</kw>
<msg timestamp="20241013 16:56:16.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:12.597" endtime="20241013 16:56:16.502"/>
</kw>
<status status="PASS" starttime="20241013 16:56:12.596" endtime="20241013 16:56:16.502"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:16.507" level="INFO">Running command 'ozone sh bucket getacl 11650-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:20.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:20.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:56:16.505" endtime="20241013 16:56:20.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:20.599" level="INFO"/>
<status status="PASS" starttime="20241013 16:56:20.598" endtime="20241013 16:56:20.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:20.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:20.599" endtime="20241013 16:56:20.600"/>
</kw>
<status status="PASS" starttime="20241013 16:56:16.504" endtime="20241013 16:56:20.600"/>
</kw>
<msg timestamp="20241013 16:56:20.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:16.504" endtime="20241013 16:56:20.600"/>
</kw>
<msg timestamp="20241013 16:56:20.600" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20241013 16:56:16.504" endtime="20241013 16:56:20.600"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:56:20.600" endtime="20241013 16:56:20.601"/>
</kw>
<status status="PASS" starttime="20241013 16:56:16.503" endtime="20241013 16:56:20.601"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:20.605" level="INFO">Running command 'ozone sh bucket getacl --source 11650-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:24.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:24.923" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:56:20.602" endtime="20241013 16:56:24.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:24.924" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20241013 16:56:24.923" endtime="20241013 16:56:24.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:24.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:24.924" endtime="20241013 16:56:24.924"/>
</kw>
<status status="PASS" starttime="20241013 16:56:20.602" endtime="20241013 16:56:24.925"/>
</kw>
<msg timestamp="20241013 16:56:24.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:20.602" endtime="20241013 16:56:24.925"/>
</kw>
<msg timestamp="20241013 16:56:24.925" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:56:20.601" endtime="20241013 16:56:24.925"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:56:24.925" endtime="20241013 16:56:24.926"/>
</kw>
<status status="PASS" starttime="20241013 16:56:20.601" endtime="20241013 16:56:24.926"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:24.929" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 11650-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:28.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:28.809" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:56:24.927" endtime="20241013 16:56:28.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:28.810" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:56:28.809" endtime="20241013 16:56:28.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:28.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:28.810" endtime="20241013 16:56:28.810"/>
</kw>
<status status="PASS" starttime="20241013 16:56:24.926" endtime="20241013 16:56:28.811"/>
</kw>
<msg timestamp="20241013 16:56:28.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:24.926" endtime="20241013 16:56:28.811"/>
</kw>
<status status="PASS" starttime="20241013 16:56:24.926" endtime="20241013 16:56:28.811"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:28.816" level="INFO">Running command 'ozone sh bucket getacl 11650-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:32.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:32.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:56:28.813" endtime="20241013 16:56:32.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:32.741" level="INFO"/>
<status status="PASS" starttime="20241013 16:56:32.741" endtime="20241013 16:56:32.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:32.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:32.741" endtime="20241013 16:56:32.742"/>
</kw>
<status status="PASS" starttime="20241013 16:56:28.813" endtime="20241013 16:56:32.742"/>
</kw>
<msg timestamp="20241013 16:56:32.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:28.813" endtime="20241013 16:56:32.742"/>
</kw>
<msg timestamp="20241013 16:56:32.742" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20241013 16:56:28.812" endtime="20241013 16:56:32.742"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:56:32.742" endtime="20241013 16:56:32.743"/>
</kw>
<status status="PASS" starttime="20241013 16:56:28.811" endtime="20241013 16:56:32.743"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:32.747" level="INFO">Running command 'ozone sh bucket getacl --source 11650-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:36.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:36.775" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20241013 16:56:32.745" endtime="20241013 16:56:36.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:36.776" level="INFO">READ</msg>
<status status="PASS" starttime="20241013 16:56:36.775" endtime="20241013 16:56:36.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:36.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:36.776" endtime="20241013 16:56:36.776"/>
</kw>
<status status="PASS" starttime="20241013 16:56:32.745" endtime="20241013 16:56:36.777"/>
</kw>
<msg timestamp="20241013 16:56:36.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:32.744" endtime="20241013 16:56:36.777"/>
</kw>
<msg timestamp="20241013 16:56:36.777" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20241013 16:56:32.743" endtime="20241013 16:56:36.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:56:36.777" endtime="20241013 16:56:36.777"/>
</kw>
<status status="PASS" starttime="20241013 16:56:32.743" endtime="20241013 16:56:36.777"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:55:40.135" endtime="20241013 16:56:36.778"/>
</test>
<test id="s1-s4-t9" name="Source and target key have same ACLs" line="159">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:56:36.779" endtime="20241013 16:56:36.780"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:36.783" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:36.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:36.787" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:56:36.781" endtime="20241013 16:56:36.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:36.788" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:56:36.787" endtime="20241013 16:56:36.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:36.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:36.788" endtime="20241013 16:56:36.788"/>
</kw>
<status status="PASS" starttime="20241013 16:56:36.781" endtime="20241013 16:56:36.789"/>
</kw>
<msg timestamp="20241013 16:56:36.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:36.780" endtime="20241013 16:56:36.789"/>
</kw>
<msg timestamp="20241013 16:56:36.789" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:56:36.780" endtime="20241013 16:56:36.789"/>
</kw>
<msg timestamp="20241013 16:56:36.789" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:56:36.780" endtime="20241013 16:56:36.789"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:56:36.790" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:56:36.789" endtime="20241013 16:56:36.790"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:36.793" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:36.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:36.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:56:36.791" endtime="20241013 16:56:36.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:36.946" level="INFO"/>
<status status="PASS" starttime="20241013 16:56:36.946" endtime="20241013 16:56:36.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:36.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:36.947" endtime="20241013 16:56:36.947"/>
</kw>
<status status="PASS" starttime="20241013 16:56:36.791" endtime="20241013 16:56:36.947"/>
</kw>
<msg timestamp="20241013 16:56:36.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:36.790" endtime="20241013 16:56:36.947"/>
</kw>
<status status="PASS" starttime="20241013 16:56:36.790" endtime="20241013 16:56:36.948"/>
</kw>
<status status="PASS" starttime="20241013 16:56:36.790" endtime="20241013 16:56:36.948"/>
</kw>
<status status="PASS" starttime="20241013 16:56:36.779" endtime="20241013 16:56:36.948"/>
</kw>
<status status="PASS" starttime="20241013 16:56:36.779" endtime="20241013 16:56:36.948"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:36.952" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 11650-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:40.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:40.889" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:56:36.949" endtime="20241013 16:56:40.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:40.890" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:56:40.890" endtime="20241013 16:56:40.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:40.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:40.890" endtime="20241013 16:56:40.891"/>
</kw>
<status status="PASS" starttime="20241013 16:56:36.949" endtime="20241013 16:56:40.891"/>
</kw>
<msg timestamp="20241013 16:56:40.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:36.948" endtime="20241013 16:56:40.891"/>
</kw>
<status status="PASS" starttime="20241013 16:56:36.948" endtime="20241013 16:56:40.891"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:40.896" level="INFO">Running command 'ozone sh key getacl 11650-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:45.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:45.276" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:56:40.893" endtime="20241013 16:56:45.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:45.277" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:56:45.276" endtime="20241013 16:56:45.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:45.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:45.277" endtime="20241013 16:56:45.278"/>
</kw>
<status status="PASS" starttime="20241013 16:56:40.893" endtime="20241013 16:56:45.278"/>
</kw>
<msg timestamp="20241013 16:56:45.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:40.893" endtime="20241013 16:56:45.278"/>
</kw>
<msg timestamp="20241013 16:56:45.278" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:56:40.892" endtime="20241013 16:56:45.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:56:45.278" endtime="20241013 16:56:45.279"/>
</kw>
<status status="PASS" starttime="20241013 16:56:40.892" endtime="20241013 16:56:45.279"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:45.283" level="INFO">Running command 'ozone sh key getacl 11650-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:49.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:49.534" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:56:45.281" endtime="20241013 16:56:49.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:49.535" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:56:49.535" endtime="20241013 16:56:49.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:49.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:49.535" endtime="20241013 16:56:49.536"/>
</kw>
<status status="PASS" starttime="20241013 16:56:45.280" endtime="20241013 16:56:49.536"/>
</kw>
<msg timestamp="20241013 16:56:49.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:45.280" endtime="20241013 16:56:49.536"/>
</kw>
<msg timestamp="20241013 16:56:49.536" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:56:45.279" endtime="20241013 16:56:49.536"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:56:49.537" endtime="20241013 16:56:49.537"/>
</kw>
<status status="PASS" starttime="20241013 16:56:45.279" endtime="20241013 16:56:49.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:49.540" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 11650-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:53.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:53.469" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20241013 16:56:49.538" endtime="20241013 16:56:53.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:53.470" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20241013 16:56:53.470" endtime="20241013 16:56:53.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:53.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:53.471" endtime="20241013 16:56:53.471"/>
</kw>
<status status="PASS" starttime="20241013 16:56:49.538" endtime="20241013 16:56:53.471"/>
</kw>
<msg timestamp="20241013 16:56:53.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:49.538" endtime="20241013 16:56:53.471"/>
</kw>
<status status="PASS" starttime="20241013 16:56:49.537" endtime="20241013 16:56:53.472"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:53.477" level="INFO">Running command 'ozone sh key getacl 11650-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:56:57.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:56:57.480" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:56:53.474" endtime="20241013 16:56:57.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:56:57.481" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:56:57.480" endtime="20241013 16:56:57.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:56:57.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:56:57.481" endtime="20241013 16:56:57.481"/>
</kw>
<status status="PASS" starttime="20241013 16:56:53.473" endtime="20241013 16:56:57.482"/>
</kw>
<msg timestamp="20241013 16:56:57.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:53.473" endtime="20241013 16:56:57.482"/>
</kw>
<msg timestamp="20241013 16:56:57.482" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:56:53.472" endtime="20241013 16:56:57.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:56:57.482" endtime="20241013 16:56:57.482"/>
</kw>
<status status="PASS" starttime="20241013 16:56:53.472" endtime="20241013 16:56:57.482"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:56:57.486" level="INFO">Running command 'ozone sh key getacl 11650-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:01.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:01.661" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:56:57.484" endtime="20241013 16:57:01.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:01.662" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:57:01.662" endtime="20241013 16:57:01.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:01.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:01.662" endtime="20241013 16:57:01.663"/>
</kw>
<status status="PASS" starttime="20241013 16:56:57.484" endtime="20241013 16:57:01.663"/>
</kw>
<msg timestamp="20241013 16:57:01.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:56:57.484" endtime="20241013 16:57:01.663"/>
</kw>
<msg timestamp="20241013 16:57:01.663" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:56:57.483" endtime="20241013 16:57:01.663"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:01.664" endtime="20241013 16:57:01.664"/>
</kw>
<status status="PASS" starttime="20241013 16:56:57.483" endtime="20241013 16:57:01.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:01.668" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 11650-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:05.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:05.505" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20241013 16:57:01.665" endtime="20241013 16:57:05.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:05.506" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20241013 16:57:05.506" endtime="20241013 16:57:05.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:05.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:05.507" endtime="20241013 16:57:05.507"/>
</kw>
<status status="PASS" starttime="20241013 16:57:01.665" endtime="20241013 16:57:05.507"/>
</kw>
<msg timestamp="20241013 16:57:05.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:01.665" endtime="20241013 16:57:05.508"/>
</kw>
<status status="PASS" starttime="20241013 16:57:01.664" endtime="20241013 16:57:05.508"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:05.512" level="INFO">Running command 'ozone sh key getacl 11650-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:09.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:09.596" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:05.510" endtime="20241013 16:57:09.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:09.597" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:09.597" endtime="20241013 16:57:09.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:09.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:09.597" endtime="20241013 16:57:09.598"/>
</kw>
<status status="PASS" starttime="20241013 16:57:05.509" endtime="20241013 16:57:09.598"/>
</kw>
<msg timestamp="20241013 16:57:09.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:05.509" endtime="20241013 16:57:09.598"/>
</kw>
<msg timestamp="20241013 16:57:09.598" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:05.508" endtime="20241013 16:57:09.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:09.598" endtime="20241013 16:57:09.599"/>
</kw>
<status status="PASS" starttime="20241013 16:57:05.508" endtime="20241013 16:57:09.599"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:09.603" level="INFO">Running command 'ozone sh key getacl 11650-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:13.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:13.723" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:09.601" endtime="20241013 16:57:13.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:13.725" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:13.724" endtime="20241013 16:57:13.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:13.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:13.725" endtime="20241013 16:57:13.725"/>
</kw>
<status status="PASS" starttime="20241013 16:57:09.601" endtime="20241013 16:57:13.725"/>
</kw>
<msg timestamp="20241013 16:57:13.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:09.600" endtime="20241013 16:57:13.725"/>
</kw>
<msg timestamp="20241013 16:57:13.726" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:09.600" endtime="20241013 16:57:13.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:13.726" endtime="20241013 16:57:13.726"/>
</kw>
<status status="PASS" starttime="20241013 16:57:09.599" endtime="20241013 16:57:13.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:13.730" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 11650-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:17.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:17.786" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:57:13.727" endtime="20241013 16:57:17.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:17.787" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:57:17.786" endtime="20241013 16:57:17.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:17.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:17.787" endtime="20241013 16:57:17.788"/>
</kw>
<status status="PASS" starttime="20241013 16:57:13.727" endtime="20241013 16:57:17.788"/>
</kw>
<msg timestamp="20241013 16:57:17.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:13.727" endtime="20241013 16:57:17.788"/>
</kw>
<status status="PASS" starttime="20241013 16:57:13.726" endtime="20241013 16:57:17.788"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:17.793" level="INFO">Running command 'ozone sh key getacl 11650-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:21.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:21.946" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20241013 16:57:17.790" endtime="20241013 16:57:21.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:21.948" level="INFO">READ</msg>
<status status="PASS" starttime="20241013 16:57:21.947" endtime="20241013 16:57:21.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:21.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:21.948" endtime="20241013 16:57:21.948"/>
</kw>
<status status="PASS" starttime="20241013 16:57:17.790" endtime="20241013 16:57:21.948"/>
</kw>
<msg timestamp="20241013 16:57:21.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:17.790" endtime="20241013 16:57:21.949"/>
</kw>
<msg timestamp="20241013 16:57:21.949" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20241013 16:57:17.789" endtime="20241013 16:57:21.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:21.949" endtime="20241013 16:57:21.949"/>
</kw>
<status status="PASS" starttime="20241013 16:57:17.788" endtime="20241013 16:57:21.949"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:21.953" level="INFO">Running command 'ozone sh key getacl 11650-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:26.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:26.012" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20241013 16:57:21.951" endtime="20241013 16:57:26.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:26.013" level="INFO">READ</msg>
<status status="PASS" starttime="20241013 16:57:26.013" endtime="20241013 16:57:26.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:26.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:26.014" endtime="20241013 16:57:26.014"/>
</kw>
<status status="PASS" starttime="20241013 16:57:21.951" endtime="20241013 16:57:26.015"/>
</kw>
<msg timestamp="20241013 16:57:26.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:21.951" endtime="20241013 16:57:26.015"/>
</kw>
<msg timestamp="20241013 16:57:26.015" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20241013 16:57:21.950" endtime="20241013 16:57:26.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:26.015" endtime="20241013 16:57:26.015"/>
</kw>
<status status="PASS" starttime="20241013 16:57:21.950" endtime="20241013 16:57:26.015"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:56:36.778" endtime="20241013 16:57:26.016"/>
</test>
<test id="s1-s4-t10" name="Source and target prefix have same ACLs" line="174">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:57:26.017" endtime="20241013 16:57:26.018"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:26.021" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:26.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:26.025" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:57:26.019" endtime="20241013 16:57:26.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:26.026" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:57:26.025" endtime="20241013 16:57:26.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:26.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:26.026" endtime="20241013 16:57:26.027"/>
</kw>
<status status="PASS" starttime="20241013 16:57:26.019" endtime="20241013 16:57:26.027"/>
</kw>
<msg timestamp="20241013 16:57:26.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:26.018" endtime="20241013 16:57:26.027"/>
</kw>
<msg timestamp="20241013 16:57:26.027" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:57:26.018" endtime="20241013 16:57:26.027"/>
</kw>
<msg timestamp="20241013 16:57:26.027" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:57:26.018" endtime="20241013 16:57:26.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:57:26.028" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:57:26.027" endtime="20241013 16:57:26.028"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:26.031" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:26.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:26.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:57:26.029" endtime="20241013 16:57:26.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:26.201" level="INFO"/>
<status status="PASS" starttime="20241013 16:57:26.200" endtime="20241013 16:57:26.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:26.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:26.201" endtime="20241013 16:57:26.201"/>
</kw>
<status status="PASS" starttime="20241013 16:57:26.029" endtime="20241013 16:57:26.202"/>
</kw>
<msg timestamp="20241013 16:57:26.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:26.029" endtime="20241013 16:57:26.202"/>
</kw>
<status status="PASS" starttime="20241013 16:57:26.028" endtime="20241013 16:57:26.202"/>
</kw>
<status status="PASS" starttime="20241013 16:57:26.028" endtime="20241013 16:57:26.202"/>
</kw>
<status status="PASS" starttime="20241013 16:57:26.017" endtime="20241013 16:57:26.202"/>
</kw>
<status status="PASS" starttime="20241013 16:57:26.017" endtime="20241013 16:57:26.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl user:user1:rwxy ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:26.206" level="INFO">Running command 'ozone sh prefix addacl --acl user:user1:rwxy 11650-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:30.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:30.271" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:57:26.203" endtime="20241013 16:57:30.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:30.272" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:57:30.271" endtime="20241013 16:57:30.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:30.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:30.272" endtime="20241013 16:57:30.273"/>
</kw>
<status status="PASS" starttime="20241013 16:57:26.203" endtime="20241013 16:57:30.273"/>
</kw>
<msg timestamp="20241013 16:57:30.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:26.203" endtime="20241013 16:57:30.273"/>
</kw>
<status status="PASS" starttime="20241013 16:57:26.202" endtime="20241013 16:57:30.273"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:30.278" level="INFO">Running command 'ozone sh prefix getacl 11650-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:34.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:34.279" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:57:30.275" endtime="20241013 16:57:34.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:34.280" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:57:34.279" endtime="20241013 16:57:34.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:34.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:34.280" endtime="20241013 16:57:34.280"/>
</kw>
<status status="PASS" starttime="20241013 16:57:30.275" endtime="20241013 16:57:34.281"/>
</kw>
<msg timestamp="20241013 16:57:34.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:30.275" endtime="20241013 16:57:34.281"/>
</kw>
<msg timestamp="20241013 16:57:34.281" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:57:30.274" endtime="20241013 16:57:34.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:34.281" endtime="20241013 16:57:34.281"/>
</kw>
<status status="PASS" starttime="20241013 16:57:30.274" endtime="20241013 16:57:34.282"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:34.286" level="INFO">Running command 'ozone sh prefix getacl 11650-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:38.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:38.379" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:57:34.284" endtime="20241013 16:57:38.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:38.380" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:57:38.380" endtime="20241013 16:57:38.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:38.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:38.380" endtime="20241013 16:57:38.381"/>
</kw>
<status status="PASS" starttime="20241013 16:57:34.283" endtime="20241013 16:57:38.381"/>
</kw>
<msg timestamp="20241013 16:57:38.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:34.283" endtime="20241013 16:57:38.381"/>
</kw>
<msg timestamp="20241013 16:57:38.381" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20241013 16:57:34.282" endtime="20241013 16:57:38.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:38.382" endtime="20241013 16:57:38.382"/>
</kw>
<status status="PASS" starttime="20241013 16:57:34.282" endtime="20241013 16:57:38.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix removeacl --acl user:user1:y ${target}/link1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:38.386" level="INFO">Running command 'ozone sh prefix removeacl --acl user:user1:y 11650-target/link1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:42.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:42.266" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20241013 16:57:38.384" endtime="20241013 16:57:42.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:42.267" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20241013 16:57:42.266" endtime="20241013 16:57:42.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:42.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:42.267" endtime="20241013 16:57:42.267"/>
</kw>
<status status="PASS" starttime="20241013 16:57:38.383" endtime="20241013 16:57:42.267"/>
</kw>
<msg timestamp="20241013 16:57:42.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:38.383" endtime="20241013 16:57:42.268"/>
</kw>
<status status="PASS" starttime="20241013 16:57:38.382" endtime="20241013 16:57:42.268"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:42.272" level="INFO">Running command 'ozone sh prefix getacl 11650-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:46.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:46.316" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:57:42.270" endtime="20241013 16:57:46.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:46.318" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:57:46.317" endtime="20241013 16:57:46.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:46.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:46.318" endtime="20241013 16:57:46.318"/>
</kw>
<status status="PASS" starttime="20241013 16:57:42.269" endtime="20241013 16:57:46.318"/>
</kw>
<msg timestamp="20241013 16:57:46.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:42.269" endtime="20241013 16:57:46.318"/>
</kw>
<msg timestamp="20241013 16:57:46.319" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:57:42.268" endtime="20241013 16:57:46.319"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:46.319" endtime="20241013 16:57:46.319"/>
</kw>
<status status="PASS" starttime="20241013 16:57:42.268" endtime="20241013 16:57:46.319"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:46.323" level="INFO">Running command 'ozone sh prefix getacl 11650-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:50.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:50.211" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:57:46.321" endtime="20241013 16:57:50.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:50.212" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:57:50.212" endtime="20241013 16:57:50.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:50.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:50.213" endtime="20241013 16:57:50.213"/>
</kw>
<status status="PASS" starttime="20241013 16:57:46.321" endtime="20241013 16:57:50.213"/>
</kw>
<msg timestamp="20241013 16:57:50.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:46.321" endtime="20241013 16:57:50.213"/>
</kw>
<msg timestamp="20241013 16:57:50.214" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20241013 16:57:46.320" endtime="20241013 16:57:50.214"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:50.214" endtime="20241013 16:57:50.214"/>
</kw>
<status status="PASS" starttime="20241013 16:57:46.319" endtime="20241013 16:57:50.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix setacl --acl user:user1:rw ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:50.218" level="INFO">Running command 'ozone sh prefix setacl --acl user:user1:rw 11650-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:54.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:54.041" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20241013 16:57:50.215" endtime="20241013 16:57:54.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:54.042" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20241013 16:57:54.041" endtime="20241013 16:57:54.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:54.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:54.042" endtime="20241013 16:57:54.042"/>
</kw>
<status status="PASS" starttime="20241013 16:57:50.215" endtime="20241013 16:57:54.042"/>
</kw>
<msg timestamp="20241013 16:57:54.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:50.215" endtime="20241013 16:57:54.043"/>
</kw>
<status status="PASS" starttime="20241013 16:57:50.214" endtime="20241013 16:57:54.043"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:54.047" level="INFO">Running command 'ozone sh prefix getacl 11650-target/link1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:57:58.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:57:58.218" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:54.045" endtime="20241013 16:57:58.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:57:58.219" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:58.218" endtime="20241013 16:57:58.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:57:58.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:57:58.219" endtime="20241013 16:57:58.220"/>
</kw>
<status status="PASS" starttime="20241013 16:57:54.044" endtime="20241013 16:57:58.220"/>
</kw>
<msg timestamp="20241013 16:57:58.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:54.044" endtime="20241013 16:57:58.220"/>
</kw>
<msg timestamp="20241013 16:57:58.220" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:54.043" endtime="20241013 16:57:58.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:57:58.220" endtime="20241013 16:57:58.221"/>
</kw>
<status status="PASS" starttime="20241013 16:57:54.043" endtime="20241013 16:57:58.221"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:57:58.226" level="INFO">Running command 'ozone sh prefix getacl 11650-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:02.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:02.279" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:58.223" endtime="20241013 16:58:02.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:02.280" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20241013 16:58:02.279" endtime="20241013 16:58:02.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:02.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:02.280" endtime="20241013 16:58:02.281"/>
</kw>
<status status="PASS" starttime="20241013 16:57:58.223" endtime="20241013 16:58:02.281"/>
</kw>
<msg timestamp="20241013 16:58:02.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:57:58.223" endtime="20241013 16:58:02.281"/>
</kw>
<msg timestamp="20241013 16:58:02.281" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20241013 16:57:58.221" endtime="20241013 16:58:02.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:58:02.282" endtime="20241013 16:58:02.282"/>
</kw>
<status status="PASS" starttime="20241013 16:57:58.221" endtime="20241013 16:58:02.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl --acl group:group2:r ${source}/bucket1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:02.286" level="INFO">Running command 'ozone sh prefix addacl --acl group:group2:r 11650-source/bucket1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:06.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:06.135" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:58:02.283" endtime="20241013 16:58:06.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:06.136" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20241013 16:58:06.135" endtime="20241013 16:58:06.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:06.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:06.136" endtime="20241013 16:58:06.137"/>
</kw>
<status status="PASS" starttime="20241013 16:58:02.283" endtime="20241013 16:58:06.137"/>
</kw>
<msg timestamp="20241013 16:58:06.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:02.283" endtime="20241013 16:58:06.137"/>
</kw>
<status status="PASS" starttime="20241013 16:58:02.282" endtime="20241013 16:58:06.137"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${target}/link1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:06.141" level="INFO">Running command 'ozone sh prefix getacl 11650-target/link1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:10.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:10.061" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20241013 16:58:06.139" endtime="20241013 16:58:10.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:10.062" level="INFO">READ</msg>
<status status="PASS" starttime="20241013 16:58:10.062" endtime="20241013 16:58:10.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:10.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:10.062" endtime="20241013 16:58:10.063"/>
</kw>
<status status="PASS" starttime="20241013 16:58:06.139" endtime="20241013 16:58:10.063"/>
</kw>
<msg timestamp="20241013 16:58:10.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:06.138" endtime="20241013 16:58:10.063"/>
</kw>
<msg timestamp="20241013 16:58:10.063" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20241013 16:58:06.138" endtime="20241013 16:58:10.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:58:10.064" endtime="20241013 16:58:10.064"/>
</kw>
<status status="PASS" starttime="20241013 16:58:06.137" endtime="20241013 16:58:10.064"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>prefix</arg>
<arg>${source}/bucket1/prefix1/</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:10.068" level="INFO">Running command 'ozone sh prefix getacl 11650-source/bucket1/prefix1/ | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:14.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:14.386" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20241013 16:58:10.066" endtime="20241013 16:58:14.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:14.387" level="INFO">READ</msg>
<status status="PASS" starttime="20241013 16:58:14.386" endtime="20241013 16:58:14.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:14.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:14.387" endtime="20241013 16:58:14.387"/>
</kw>
<status status="PASS" starttime="20241013 16:58:10.066" endtime="20241013 16:58:14.388"/>
</kw>
<msg timestamp="20241013 16:58:14.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:10.065" endtime="20241013 16:58:14.388"/>
</kw>
<msg timestamp="20241013 16:58:14.388" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20241013 16:58:10.065" endtime="20241013 16:58:14.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 16:58:14.388" endtime="20241013 16:58:14.388"/>
</kw>
<status status="PASS" starttime="20241013 16:58:10.064" endtime="20241013 16:58:14.389"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:57:26.016" endtime="20241013 16:58:14.389"/>
</test>
<test id="s1-s4-t11" name="Buckets and links share namespace" line="189">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:58:14.391" endtime="20241013 16:58:14.391"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:14.395" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:14.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:14.398" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:14.393" endtime="20241013 16:58:14.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:14.399" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:58:14.399" endtime="20241013 16:58:14.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:14.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:14.399" endtime="20241013 16:58:14.400"/>
</kw>
<status status="PASS" starttime="20241013 16:58:14.392" endtime="20241013 16:58:14.400"/>
</kw>
<msg timestamp="20241013 16:58:14.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:14.392" endtime="20241013 16:58:14.400"/>
</kw>
<msg timestamp="20241013 16:58:14.400" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:14.392" endtime="20241013 16:58:14.400"/>
</kw>
<msg timestamp="20241013 16:58:14.401" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:14.391" endtime="20241013 16:58:14.401"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:58:14.401" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:14.401" endtime="20241013 16:58:14.401"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:14.404" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:14.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:14.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:14.403" endtime="20241013 16:58:14.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:14.487" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:14.486" endtime="20241013 16:58:14.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:14.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:14.487" endtime="20241013 16:58:14.488"/>
</kw>
<status status="PASS" starttime="20241013 16:58:14.402" endtime="20241013 16:58:14.488"/>
</kw>
<msg timestamp="20241013 16:58:14.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:14.402" endtime="20241013 16:58:14.488"/>
</kw>
<status status="PASS" starttime="20241013 16:58:14.401" endtime="20241013 16:58:14.489"/>
</kw>
<status status="PASS" starttime="20241013 16:58:14.401" endtime="20241013 16:58:14.489"/>
</kw>
<status status="PASS" starttime="20241013 16:58:14.391" endtime="20241013 16:58:14.489"/>
</kw>
<status status="PASS" starttime="20241013 16:58:14.390" endtime="20241013 16:58:14.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:14.493" level="INFO">Running command 'ozone sh bucket link 11650-source/bucket2 11650-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:18.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:18.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:14.490" endtime="20241013 16:58:18.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:18.039" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:18.039" endtime="20241013 16:58:18.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:18.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:18.040" endtime="20241013 16:58:18.040"/>
</kw>
<status status="PASS" starttime="20241013 16:58:14.490" endtime="20241013 16:58:18.040"/>
</kw>
<msg timestamp="20241013 16:58:18.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:14.489" endtime="20241013 16:58:18.041"/>
</kw>
<status status="PASS" starttime="20241013 16:58:14.489" endtime="20241013 16:58:18.041"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:18.043" level="INFO">Running command 'ozone sh bucket create 11650-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:21.849" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 16:58:21.849" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20241013 16:58:18.041" endtime="20241013 16:58:21.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:21.850" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20241013 16:58:21.849" endtime="20241013 16:58:21.850"/>
</kw>
<msg timestamp="20241013 16:58:21.850" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20241013 16:58:18.041" endtime="20241013 16:58:21.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:58:21.850" endtime="20241013 16:58:21.851"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:21.855" level="INFO">Running command 'ozone sh bucket create 11650-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:25.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:25.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:21.852" endtime="20241013 16:58:25.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:25.833" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:25.833" endtime="20241013 16:58:25.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:25.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:25.833" endtime="20241013 16:58:25.834"/>
</kw>
<status status="PASS" starttime="20241013 16:58:21.852" endtime="20241013 16:58:25.834"/>
</kw>
<msg timestamp="20241013 16:58:25.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:21.851" endtime="20241013 16:58:25.834"/>
</kw>
<status status="PASS" starttime="20241013 16:58:21.851" endtime="20241013 16:58:25.834"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:25.837" level="INFO">Running command 'ozone sh bucket link 11650-source/bucket1 11650-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:29.732" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 16:58:29.732" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20241013 16:58:25.835" endtime="20241013 16:58:29.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:29.733" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20241013 16:58:29.733" endtime="20241013 16:58:29.733"/>
</kw>
<msg timestamp="20241013 16:58:29.734" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20241013 16:58:25.835" endtime="20241013 16:58:29.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:58:29.734" endtime="20241013 16:58:29.734"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:58:14.389" endtime="20241013 16:58:29.734"/>
</test>
<test id="s1-s4-t12" name="Can follow link with read access" line="198">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:58:29.736" endtime="20241013 16:58:29.736"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:29.740" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:29.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:29.744" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:29.738" endtime="20241013 16:58:29.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:29.745" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:58:29.744" endtime="20241013 16:58:29.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:29.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:29.745" endtime="20241013 16:58:29.745"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.737" endtime="20241013 16:58:29.745"/>
</kw>
<msg timestamp="20241013 16:58:29.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:29.737" endtime="20241013 16:58:29.746"/>
</kw>
<msg timestamp="20241013 16:58:29.746" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:29.737" endtime="20241013 16:58:29.746"/>
</kw>
<msg timestamp="20241013 16:58:29.746" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:29.736" endtime="20241013 16:58:29.746"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:58:29.746" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:29.746" endtime="20241013 16:58:29.746"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:29.750" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:29.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:29.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:29.748" endtime="20241013 16:58:29.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:29.833" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:29.833" endtime="20241013 16:58:29.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:29.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:29.833" endtime="20241013 16:58:29.834"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.748" endtime="20241013 16:58:29.834"/>
</kw>
<msg timestamp="20241013 16:58:29.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:29.747" endtime="20241013 16:58:29.834"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.747" endtime="20241013 16:58:29.834"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.747" endtime="20241013 16:58:29.834"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.736" endtime="20241013 16:58:29.834"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.735" endtime="20241013 16:58:29.834"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:29.838" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:29.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:29.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:29.837" endtime="20241013 16:58:29.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:29.844" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:29.843" endtime="20241013 16:58:29.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:29.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:29.844" endtime="20241013 16:58:29.844"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.836" endtime="20241013 16:58:29.844"/>
</kw>
<msg timestamp="20241013 16:58:29.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:29.836" endtime="20241013 16:58:29.845"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.835" endtime="20241013 16:58:29.845"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:58:29.845" endtime="20241013 16:58:29.846"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:29.849" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:29.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:29.852" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:29.847" endtime="20241013 16:58:29.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:29.853" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:58:29.853" endtime="20241013 16:58:29.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:29.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:29.853" endtime="20241013 16:58:29.854"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.846" endtime="20241013 16:58:29.854"/>
</kw>
<msg timestamp="20241013 16:58:29.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:29.846" endtime="20241013 16:58:29.854"/>
</kw>
<msg timestamp="20241013 16:58:29.854" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:29.846" endtime="20241013 16:58:29.854"/>
</kw>
<msg timestamp="20241013 16:58:29.854" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:29.846" endtime="20241013 16:58:29.854"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:58:29.855" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:29.854" endtime="20241013 16:58:29.855"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:29.858" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:29.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:29.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:29.856" endtime="20241013 16:58:29.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:29.874" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:29.873" endtime="20241013 16:58:29.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:29.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:29.874" endtime="20241013 16:58:29.874"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.856" endtime="20241013 16:58:29.874"/>
</kw>
<msg timestamp="20241013 16:58:29.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:29.856" endtime="20241013 16:58:29.875"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.855" endtime="20241013 16:58:29.875"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.855" endtime="20241013 16:58:29.875"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.845" endtime="20241013 16:58:29.875"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.845" endtime="20241013 16:58:29.875"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:29.882" level="INFO">Running command 'ozone sh key list 11650-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:33.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:33.999" level="INFO">${output} = [ {
  "volumeName" : "11650-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-10-13T16:54:08.035Z"...</msg>
<status status="PASS" starttime="20241013 16:58:29.879" endtime="20241013 16:58:33.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:34.000" level="INFO">[ {
  "volumeName" : "11650-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-10-13T16:54:08.035Z",
  "modificationTime" : "2024-10-13T16:54:09.481Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20241013 16:58:33.999" endtime="20241013 16:58:34.000"/>
</kw>
<msg timestamp="20241013 16:58:34.000" level="INFO">${result} = [ {
  "volumeName" : "11650-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-10-13T16:54:08.035Z"...</msg>
<status status="PASS" starttime="20241013 16:58:29.879" endtime="20241013 16:58:34.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:58:34.001" endtime="20241013 16:58:34.001"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:34.005" level="INFO">Running command 'ozone sh key list 11650-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:37.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:37.801" level="INFO">${output} = [ {
  "volumeName" : "11650-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-10-13T16:54:08.035Z"...</msg>
<status status="PASS" starttime="20241013 16:58:34.002" endtime="20241013 16:58:37.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:37.802" level="INFO">[ {
  "volumeName" : "11650-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-10-13T16:54:08.035Z",
  "modificationTime" : "2024-10-13T16:54:09.481Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20241013 16:58:37.801" endtime="20241013 16:58:37.802"/>
</kw>
<msg timestamp="20241013 16:58:37.802" level="INFO">${result} = [ {
  "volumeName" : "11650-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "owner" : "testuser",
  "dataSize" : 1125,
  "creationTime" : "2024-10-13T16:54:08.035Z"...</msg>
<status status="PASS" starttime="20241013 16:58:34.001" endtime="20241013 16:58:37.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:58:37.803" endtime="20241013 16:58:37.803"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.835" endtime="20241013 16:58:37.803"/>
</kw>
<status status="PASS" starttime="20241013 16:58:29.835" endtime="20241013 16:58:37.803"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:58:29.735" endtime="20241013 16:58:37.803"/>
</test>
<test id="s1-s4-t13" name="Cannot follow link without read access" line="201">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:58:37.805" endtime="20241013 16:58:37.806"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:37.809" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:37.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:37.813" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:37.807" endtime="20241013 16:58:37.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:37.814" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:58:37.813" endtime="20241013 16:58:37.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:37.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:37.814" endtime="20241013 16:58:37.814"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.807" endtime="20241013 16:58:37.815"/>
</kw>
<msg timestamp="20241013 16:58:37.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:37.806" endtime="20241013 16:58:37.815"/>
</kw>
<msg timestamp="20241013 16:58:37.815" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:37.806" endtime="20241013 16:58:37.815"/>
</kw>
<msg timestamp="20241013 16:58:37.815" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:37.806" endtime="20241013 16:58:37.815"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:58:37.815" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:37.815" endtime="20241013 16:58:37.816"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:37.819" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:37.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:37.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:37.817" endtime="20241013 16:58:37.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:37.837" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:37.837" endtime="20241013 16:58:37.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:37.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:37.838" endtime="20241013 16:58:37.838"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.817" endtime="20241013 16:58:37.838"/>
</kw>
<msg timestamp="20241013 16:58:37.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:37.816" endtime="20241013 16:58:37.838"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.816" endtime="20241013 16:58:37.838"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.816" endtime="20241013 16:58:37.839"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.805" endtime="20241013 16:58:37.839"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.804" endtime="20241013 16:58:37.839"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:37.842" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:37.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:37.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:37.840" endtime="20241013 16:58:37.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:37.847" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:37.847" endtime="20241013 16:58:37.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:37.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:37.847" endtime="20241013 16:58:37.848"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.840" endtime="20241013 16:58:37.848"/>
</kw>
<msg timestamp="20241013 16:58:37.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:37.840" endtime="20241013 16:58:37.848"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.840" endtime="20241013 16:58:37.848"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:58:37.849" endtime="20241013 16:58:37.849"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:37.853" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:37.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:37.856" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:37.851" endtime="20241013 16:58:37.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:37.857" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:58:37.857" endtime="20241013 16:58:37.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:37.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:37.857" endtime="20241013 16:58:37.858"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.850" endtime="20241013 16:58:37.858"/>
</kw>
<msg timestamp="20241013 16:58:37.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:37.850" endtime="20241013 16:58:37.858"/>
</kw>
<msg timestamp="20241013 16:58:37.858" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:37.850" endtime="20241013 16:58:37.858"/>
</kw>
<msg timestamp="20241013 16:58:37.858" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:37.849" endtime="20241013 16:58:37.858"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:58:37.859" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:37.858" endtime="20241013 16:58:37.859"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:37.862" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:37.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:37.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:37.860" endtime="20241013 16:58:37.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:37.944" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:37.944" endtime="20241013 16:58:37.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:37.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:37.945" endtime="20241013 16:58:37.945"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.860" endtime="20241013 16:58:37.945"/>
</kw>
<msg timestamp="20241013 16:58:37.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:37.860" endtime="20241013 16:58:37.945"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.859" endtime="20241013 16:58:37.945"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.859" endtime="20241013 16:58:37.945"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.849" endtime="20241013 16:58:37.945"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.848" endtime="20241013 16:58:37.946"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:37.948" level="INFO">Running command 'ozone sh key list 11650-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:41.712" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 16:58:41.712" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:11650-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20241013 16:58:37.946" endtime="20241013 16:58:41.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:41.713" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:11650-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20241013 16:58:41.712" endtime="20241013 16:58:41.713"/>
</kw>
<msg timestamp="20241013 16:58:41.713" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:11650-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20241013 16:58:37.946" endtime="20241013 16:58:41.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:58:41.714" endtime="20241013 16:58:41.714"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:41.717" level="INFO">Running command 'ozone sh key list 11650-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:45.734" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 16:58:45.734" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:11650-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20241013 16:58:41.714" endtime="20241013 16:58:45.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:45.735" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:11650-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20241013 16:58:45.735" endtime="20241013 16:58:45.735"/>
</kw>
<msg timestamp="20241013 16:58:45.736" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:11650-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20241013 16:58:41.714" endtime="20241013 16:58:45.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:58:45.736" endtime="20241013 16:58:45.736"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.839" endtime="20241013 16:58:45.736"/>
</kw>
<status status="PASS" starttime="20241013 16:58:37.839" endtime="20241013 16:58:45.736"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:58:37.804" endtime="20241013 16:58:45.737"/>
</test>
<test id="s1-s4-t14" name="ACL verified on source and target bucket" line="204">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:58:45.739" endtime="20241013 16:58:45.739"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:45.743" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:45.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:45.746" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:45.740" endtime="20241013 16:58:45.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:45.747" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:58:45.747" endtime="20241013 16:58:45.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:45.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:45.747" endtime="20241013 16:58:45.748"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.740" endtime="20241013 16:58:45.748"/>
</kw>
<msg timestamp="20241013 16:58:45.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:45.740" endtime="20241013 16:58:45.748"/>
</kw>
<msg timestamp="20241013 16:58:45.748" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:45.739" endtime="20241013 16:58:45.748"/>
</kw>
<msg timestamp="20241013 16:58:45.748" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:45.739" endtime="20241013 16:58:45.748"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:58:45.749" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:45.749" endtime="20241013 16:58:45.749"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:45.752" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:45.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:45.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:45.750" endtime="20241013 16:58:45.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:45.839" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:45.839" endtime="20241013 16:58:45.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:45.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:45.839" endtime="20241013 16:58:45.840"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.750" endtime="20241013 16:58:45.840"/>
</kw>
<msg timestamp="20241013 16:58:45.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:45.750" endtime="20241013 16:58:45.840"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.749" endtime="20241013 16:58:45.840"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.749" endtime="20241013 16:58:45.840"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.738" endtime="20241013 16:58:45.840"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.738" endtime="20241013 16:58:45.840"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source and target bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:45.844" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:45.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:45.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:45.842" endtime="20241013 16:58:45.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:45.849" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:45.849" endtime="20241013 16:58:45.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:45.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:45.849" endtime="20241013 16:58:45.850"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.842" endtime="20241013 16:58:45.850"/>
</kw>
<msg timestamp="20241013 16:58:45.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:45.842" endtime="20241013 16:58:45.850"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.841" endtime="20241013 16:58:45.850"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:58:45.851" endtime="20241013 16:58:45.851"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:45.854" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:45.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:45.858" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:45.852" endtime="20241013 16:58:45.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:45.859" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:58:45.858" endtime="20241013 16:58:45.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:45.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:45.859" endtime="20241013 16:58:45.859"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.852" endtime="20241013 16:58:45.860"/>
</kw>
<msg timestamp="20241013 16:58:45.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:45.852" endtime="20241013 16:58:45.860"/>
</kw>
<msg timestamp="20241013 16:58:45.860" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:45.851" endtime="20241013 16:58:45.860"/>
</kw>
<msg timestamp="20241013 16:58:45.860" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:45.851" endtime="20241013 16:58:45.860"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:58:45.861" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:45.860" endtime="20241013 16:58:45.861"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:45.864" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:45.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:45.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:45.862" endtime="20241013 16:58:45.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:45.887" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:45.887" endtime="20241013 16:58:45.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:45.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:45.887" endtime="20241013 16:58:45.888"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.862" endtime="20241013 16:58:45.888"/>
</kw>
<msg timestamp="20241013 16:58:45.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:45.861" endtime="20241013 16:58:45.888"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.861" endtime="20241013 16:58:45.888"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.861" endtime="20241013 16:58:45.888"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.850" endtime="20241013 16:58:45.888"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.850" endtime="20241013 16:58:45.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:45.891" level="INFO">Running command 'ozone sh bucket info 11650-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:49.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:49.642" level="INFO">${output} = {
  "volumeName" : "11650-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-10-13T16:54:17.595Z...</msg>
<status status="PASS" starttime="20241013 16:58:45.889" endtime="20241013 16:58:49.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:49.643" level="INFO">{
  "volumeName" : "11650-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-10-13T16:54:17.595Z",
  "modificationTime" : "2024-10-13T16:54:17.595Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20241013 16:58:49.643" endtime="20241013 16:58:49.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:49.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:49.644" endtime="20241013 16:58:49.644"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.889" endtime="20241013 16:58:49.644"/>
</kw>
<msg timestamp="20241013 16:58:49.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:45.889" endtime="20241013 16:58:49.644"/>
</kw>
<msg timestamp="20241013 16:58:49.645" level="INFO">${result} = {
  "volumeName" : "11650-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-10-13T16:54:17.595Z...</msg>
<status status="PASS" starttime="20241013 16:58:45.888" endtime="20241013 16:58:49.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:58:49.645" endtime="20241013 16:58:49.645"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:58:49.645" endtime="20241013 16:58:49.645"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:49.648" level="INFO">Running command 'ozone sh bucket info 11650-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:53.654" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 16:58:53.655" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:11650-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20241013 16:58:49.646" endtime="20241013 16:58:53.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:53.656" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:11650-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20241013 16:58:53.655" endtime="20241013 16:58:53.656"/>
</kw>
<msg timestamp="20241013 16:58:53.656" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:11650-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20241013 16:58:49.646" endtime="20241013 16:58:53.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:58:53.656" endtime="20241013 16:58:53.656"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.841" endtime="20241013 16:58:53.656"/>
</kw>
<status status="PASS" starttime="20241013 16:58:45.841" endtime="20241013 16:58:53.657"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:58:45.737" endtime="20241013 16:58:53.657"/>
</test>
<test id="s1-s4-t15" name="Loop in link chain is detected" line="207">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:58:53.659" endtime="20241013 16:58:53.659"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:53.663" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:53.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:53.667" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:53.661" endtime="20241013 16:58:53.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:53.668" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:58:53.667" endtime="20241013 16:58:53.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:53.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:53.668" endtime="20241013 16:58:53.668"/>
</kw>
<status status="PASS" starttime="20241013 16:58:53.660" endtime="20241013 16:58:53.669"/>
</kw>
<msg timestamp="20241013 16:58:53.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:53.660" endtime="20241013 16:58:53.669"/>
</kw>
<msg timestamp="20241013 16:58:53.669" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:58:53.660" endtime="20241013 16:58:53.669"/>
</kw>
<msg timestamp="20241013 16:58:53.669" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:53.659" endtime="20241013 16:58:53.669"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:58:53.670" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:58:53.669" endtime="20241013 16:58:53.670"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:53.673" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:53.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:53.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:53.671" endtime="20241013 16:58:53.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:53.692" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:53.691" endtime="20241013 16:58:53.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:53.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:53.692" endtime="20241013 16:58:53.692"/>
</kw>
<status status="PASS" starttime="20241013 16:58:53.671" endtime="20241013 16:58:53.693"/>
</kw>
<msg timestamp="20241013 16:58:53.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:53.670" endtime="20241013 16:58:53.693"/>
</kw>
<status status="PASS" starttime="20241013 16:58:53.670" endtime="20241013 16:58:53.693"/>
</kw>
<status status="PASS" starttime="20241013 16:58:53.670" endtime="20241013 16:58:53.693"/>
</kw>
<status status="PASS" starttime="20241013 16:58:53.658" endtime="20241013 16:58:53.693"/>
</kw>
<status status="PASS" starttime="20241013 16:58:53.658" endtime="20241013 16:58:53.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:53.696" level="INFO">Running command 'ozone sh bucket link 11650-target/loop1 11650-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:58:57.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:58:57.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:53.694" endtime="20241013 16:58:57.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:58:57.526" level="INFO"/>
<status status="PASS" starttime="20241013 16:58:57.525" endtime="20241013 16:58:57.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:58:57.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:58:57.526" endtime="20241013 16:58:57.527"/>
</kw>
<status status="PASS" starttime="20241013 16:58:53.694" endtime="20241013 16:58:57.527"/>
</kw>
<msg timestamp="20241013 16:58:57.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:53.694" endtime="20241013 16:58:57.527"/>
</kw>
<status status="PASS" starttime="20241013 16:58:53.693" endtime="20241013 16:58:57.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:58:57.531" level="INFO">Running command 'ozone sh bucket link 11650-target/loop2 11650-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:01.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:01.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:58:57.528" endtime="20241013 16:59:01.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:01.331" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:01.331" endtime="20241013 16:59:01.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:01.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:01.331" endtime="20241013 16:59:01.332"/>
</kw>
<status status="PASS" starttime="20241013 16:58:57.528" endtime="20241013 16:59:01.332"/>
</kw>
<msg timestamp="20241013 16:59:01.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:58:57.528" endtime="20241013 16:59:01.332"/>
</kw>
<status status="PASS" starttime="20241013 16:58:57.527" endtime="20241013 16:59:01.332"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:01.336" level="INFO">Running command 'ozone sh bucket link 11650-target/loop3 11650-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:05.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:05.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:01.334" endtime="20241013 16:59:05.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:05.130" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:05.129" endtime="20241013 16:59:05.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:05.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:05.130" endtime="20241013 16:59:05.130"/>
</kw>
<status status="PASS" starttime="20241013 16:59:01.333" endtime="20241013 16:59:05.130"/>
</kw>
<msg timestamp="20241013 16:59:05.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:01.333" endtime="20241013 16:59:05.131"/>
</kw>
<status status="PASS" starttime="20241013 16:59:01.332" endtime="20241013 16:59:05.131"/>
</kw>
<status status="PASS" starttime="20241013 16:58:53.658" endtime="20241013 16:59:05.131"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:05.133" level="INFO">Running command 'ozone sh key list 11650-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:09.035" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 16:59:09.035" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20241013 16:59:05.131" endtime="20241013 16:59:09.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:09.036" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20241013 16:59:09.035" endtime="20241013 16:59:09.036"/>
</kw>
<msg timestamp="20241013 16:59:09.036" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20241013 16:59:05.131" endtime="20241013 16:59:09.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:59:09.036" endtime="20241013 16:59:09.037"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:09.041" level="INFO">Running command 'ozone sh bucket delete 11650-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:12.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:12.866" level="INFO">${output} = Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20241013 16:59:09.039" endtime="20241013 16:59:12.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:12.867" level="INFO">Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20241013 16:59:12.866" endtime="20241013 16:59:12.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:12.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:12.867" endtime="20241013 16:59:12.867"/>
</kw>
<status status="PASS" starttime="20241013 16:59:09.038" endtime="20241013 16:59:12.868"/>
</kw>
<msg timestamp="20241013 16:59:12.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:09.038" endtime="20241013 16:59:12.868"/>
</kw>
<status status="PASS" starttime="20241013 16:59:09.037" endtime="20241013 16:59:12.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:12.871" level="INFO">Running command 'ozone sh bucket delete 11650-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:16.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:16.786" level="INFO">${output} = Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20241013 16:59:12.869" endtime="20241013 16:59:16.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:16.787" level="INFO">Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20241013 16:59:16.786" endtime="20241013 16:59:16.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:16.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:16.787" endtime="20241013 16:59:16.787"/>
</kw>
<status status="PASS" starttime="20241013 16:59:12.869" endtime="20241013 16:59:16.788"/>
</kw>
<msg timestamp="20241013 16:59:16.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:12.869" endtime="20241013 16:59:16.788"/>
</kw>
<status status="PASS" starttime="20241013 16:59:12.868" endtime="20241013 16:59:16.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:16.792" level="INFO">Running command 'ozone sh bucket delete 11650-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:20.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:20.406" level="INFO">${output} = Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20241013 16:59:16.789" endtime="20241013 16:59:20.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:20.407" level="INFO">Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20241013 16:59:20.407" endtime="20241013 16:59:20.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:20.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:20.407" endtime="20241013 16:59:20.408"/>
</kw>
<status status="PASS" starttime="20241013 16:59:16.789" endtime="20241013 16:59:20.408"/>
</kw>
<msg timestamp="20241013 16:59:20.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:16.789" endtime="20241013 16:59:20.408"/>
</kw>
<status status="PASS" starttime="20241013 16:59:16.788" endtime="20241013 16:59:20.408"/>
</kw>
<status status="PASS" starttime="20241013 16:59:09.037" endtime="20241013 16:59:20.408"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:58:53.657" endtime="20241013 16:59:20.408"/>
</test>
<test id="s1-s4-t16" name="Multiple links to same bucket are allowed" line="213">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:59:20.410" endtime="20241013 16:59:20.411"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:20.414" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:20.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:20.418" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:59:20.412" endtime="20241013 16:59:20.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:20.419" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:59:20.418" endtime="20241013 16:59:20.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:20.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:20.419" endtime="20241013 16:59:20.419"/>
</kw>
<status status="PASS" starttime="20241013 16:59:20.412" endtime="20241013 16:59:20.420"/>
</kw>
<msg timestamp="20241013 16:59:20.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:20.412" endtime="20241013 16:59:20.420"/>
</kw>
<msg timestamp="20241013 16:59:20.420" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:59:20.411" endtime="20241013 16:59:20.420"/>
</kw>
<msg timestamp="20241013 16:59:20.420" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:59:20.411" endtime="20241013 16:59:20.420"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:59:20.421" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:59:20.420" endtime="20241013 16:59:20.421"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:20.424" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:20.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:20.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:20.422" endtime="20241013 16:59:20.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:20.440" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:20.440" endtime="20241013 16:59:20.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:20.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:20.440" endtime="20241013 16:59:20.441"/>
</kw>
<status status="PASS" starttime="20241013 16:59:20.422" endtime="20241013 16:59:20.441"/>
</kw>
<msg timestamp="20241013 16:59:20.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:20.421" endtime="20241013 16:59:20.441"/>
</kw>
<status status="PASS" starttime="20241013 16:59:20.421" endtime="20241013 16:59:20.441"/>
</kw>
<status status="PASS" starttime="20241013 16:59:20.421" endtime="20241013 16:59:20.441"/>
</kw>
<status status="PASS" starttime="20241013 16:59:20.410" endtime="20241013 16:59:20.441"/>
</kw>
<status status="PASS" starttime="20241013 16:59:20.410" endtime="20241013 16:59:20.441"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:20.445" level="INFO">Running command 'ozone sh bucket link 11650-source/bucket1 11650-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:24.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:24.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:20.443" endtime="20241013 16:59:24.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:24.309" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:24.308" endtime="20241013 16:59:24.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:24.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:24.309" endtime="20241013 16:59:24.309"/>
</kw>
<status status="PASS" starttime="20241013 16:59:20.442" endtime="20241013 16:59:24.310"/>
</kw>
<msg timestamp="20241013 16:59:24.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:20.442" endtime="20241013 16:59:24.310"/>
</kw>
<status status="PASS" starttime="20241013 16:59:20.442" endtime="20241013 16:59:24.310"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:24.313" level="INFO">Running command 'ozone sh key put 11650-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:30.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:30.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:24.311" endtime="20241013 16:59:30.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:30.102" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:30.102" endtime="20241013 16:59:30.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:30.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:30.103" endtime="20241013 16:59:30.103"/>
</kw>
<status status="PASS" starttime="20241013 16:59:24.311" endtime="20241013 16:59:30.103"/>
</kw>
<msg timestamp="20241013 16:59:30.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:24.310" endtime="20241013 16:59:30.104"/>
</kw>
<status status="PASS" starttime="20241013 16:59:24.310" endtime="20241013 16:59:30.104"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 16:59:30.105" level="INFO">${postfix} = 34711</msg>
<status status="PASS" starttime="20241013 16:59:30.105" endtime="20241013 16:59:30.105"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 16:59:30.106" level="INFO">${tmpfile} = /tmp/tempkey-34711</msg>
<status status="PASS" starttime="20241013 16:59:30.106" endtime="20241013 16:59:30.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:30.109" level="INFO">Running command 'ozone sh key get 11650-target/link1/key3 /tmp/tempkey-34711 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:35.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:35.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:30.107" endtime="20241013 16:59:35.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:35.389" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:35.388" endtime="20241013 16:59:35.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:35.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:35.389" endtime="20241013 16:59:35.390"/>
</kw>
<status status="PASS" starttime="20241013 16:59:30.107" endtime="20241013 16:59:35.390"/>
</kw>
<msg timestamp="20241013 16:59:35.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:30.106" endtime="20241013 16:59:35.390"/>
</kw>
<status status="PASS" starttime="20241013 16:59:30.106" endtime="20241013 16:59:35.390"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20241013 16:59:35.393" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-34711 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:35.396" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20241013 16:59:35.390" endtime="20241013 16:59:35.396"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:35.400" level="INFO">Running command 'rm -f /tmp/tempkey-34711 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:35.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:35.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:35.398" endtime="20241013 16:59:35.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:35.404" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:35.404" endtime="20241013 16:59:35.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:35.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:35.404" endtime="20241013 16:59:35.405"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.397" endtime="20241013 16:59:35.405"/>
</kw>
<msg timestamp="20241013 16:59:35.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:35.397" endtime="20241013 16:59:35.405"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.396" endtime="20241013 16:59:35.405"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241013 16:59:35.406" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241013 16:59:35.405" endtime="20241013 16:59:35.406"/>
</kw>
<msg timestamp="20241013 16:59:35.406" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241013 16:59:30.104" endtime="20241013 16:59:35.406"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241013 16:59:35.406" endtime="20241013 16:59:35.406"/>
</kw>
<status status="PASS" starttime="20241013 16:59:30.104" endtime="20241013 16:59:35.406"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:59:20.409" endtime="20241013 16:59:35.407"/>
</test>
<test id="s1-s4-t17" name="Source bucket not affected by deleting link" line="218">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:59:35.408" endtime="20241013 16:59:35.409"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:35.412" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:35.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:35.416" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:59:35.410" endtime="20241013 16:59:35.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:35.416" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:59:35.416" endtime="20241013 16:59:35.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:35.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:35.417" endtime="20241013 16:59:35.418"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.410" endtime="20241013 16:59:35.418"/>
</kw>
<msg timestamp="20241013 16:59:35.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:35.409" endtime="20241013 16:59:35.418"/>
</kw>
<msg timestamp="20241013 16:59:35.418" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:59:35.409" endtime="20241013 16:59:35.418"/>
</kw>
<msg timestamp="20241013 16:59:35.418" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:59:35.409" endtime="20241013 16:59:35.419"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:59:35.419" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:59:35.419" endtime="20241013 16:59:35.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:35.422" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:35.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:35.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:35.420" endtime="20241013 16:59:35.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:35.506" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:35.505" endtime="20241013 16:59:35.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:35.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:35.506" endtime="20241013 16:59:35.506"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.420" endtime="20241013 16:59:35.506"/>
</kw>
<msg timestamp="20241013 16:59:35.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:35.420" endtime="20241013 16:59:35.507"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.419" endtime="20241013 16:59:35.507"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.419" endtime="20241013 16:59:35.507"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.408" endtime="20241013 16:59:35.507"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.408" endtime="20241013 16:59:35.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:35.510" level="INFO">Running command 'ozone sh bucket delete 11650-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:39.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:39.390" level="INFO">${output} = Bucket link1 is deleted</msg>
<status status="PASS" starttime="20241013 16:59:35.508" endtime="20241013 16:59:39.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:39.391" level="INFO">Bucket link1 is deleted</msg>
<status status="PASS" starttime="20241013 16:59:39.390" endtime="20241013 16:59:39.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:39.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:39.391" endtime="20241013 16:59:39.391"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.508" endtime="20241013 16:59:39.392"/>
</kw>
<msg timestamp="20241013 16:59:39.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:35.507" endtime="20241013 16:59:39.392"/>
</kw>
<status status="PASS" starttime="20241013 16:59:35.507" endtime="20241013 16:59:39.392"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:39.396" level="INFO">Running command 'ozone sh bucket list 11650-target 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:43.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:43.169" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "11650-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20241013 16:59:39.393" endtime="20241013 16:59:43.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:43.170" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "11650-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2024-10-13T16:58:25.713Z",
  "modificationTime" : "2024-10-13T16:58:25.713Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "11650-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2024-10-13T16:54:40.621Z",
  "modificationTime" : "2024-10-13T16:54:40.621Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "11650-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2024-10-13T16:54:17.595Z",
  "modificationTime" : "2024-10-13T16:54:17.595Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "11650-target",
  "bucketName" : "link2",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2024-10-13T16:58:17.944Z",
  "modificationTime" : "2024-10-13T16:58:17.944Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "11650-target",
  "bucketName" : "link3",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-10-13T16:59:24.208Z",
  "modificationTime" : "2024-10-13T16:59:24.208Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "11650-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2024-10-13T16:54:25.454Z",
  "modificationTime" : "2024-10-13T16:54:25.454Z",
  "owner" : "testuser",
  "link" : true
}, {
  "volumeName" : "11650-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2024-10-13T16:54:29.142Z",
  "modificationTime" : "2024-10-13T16:54:29.142Z",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20241013 16:59:43.169" endtime="20241013 16:59:43.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:43.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:43.170" endtime="20241013 16:59:43.170"/>
</kw>
<status status="PASS" starttime="20241013 16:59:39.393" endtime="20241013 16:59:43.171"/>
</kw>
<msg timestamp="20241013 16:59:43.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:39.393" endtime="20241013 16:59:43.171"/>
</kw>
<msg timestamp="20241013 16:59:43.171" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "11650-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "listCacheSize" : 1000,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "...</msg>
<status status="PASS" starttime="20241013 16:59:39.392" endtime="20241013 16:59:43.171"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:59:43.171" endtime="20241013 16:59:43.171"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:43.175" level="INFO">Running command 'ozone sh key list 11650-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:47.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:47.145" level="INFO">${output} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20241013 16:59:43.173" endtime="20241013 16:59:47.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:47.146" level="INFO">.Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20241013 16:59:47.146" endtime="20241013 16:59:47.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:47.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:47.146" endtime="20241013 16:59:47.147"/>
</kw>
<status status="PASS" starttime="20241013 16:59:43.172" endtime="20241013 16:59:47.147"/>
</kw>
<msg timestamp="20241013 16:59:47.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:43.172" endtime="20241013 16:59:47.147"/>
</kw>
<msg timestamp="20241013 16:59:47.147" level="INFO">${source_list} = .Trash/
.Trash/testuser/
key1
key3</msg>
<status status="PASS" starttime="20241013 16:59:43.172" endtime="20241013 16:59:47.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:59:47.148" endtime="20241013 16:59:47.148"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:59:35.407" endtime="20241013 16:59:47.148"/>
</test>
<test id="s1-s4-t18" name="Setting bucket property on link not allowed" line="225">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:59:47.150" endtime="20241013 16:59:47.151"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:47.154" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:47.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:47.158" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:59:47.152" endtime="20241013 16:59:47.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:47.159" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:59:47.158" endtime="20241013 16:59:47.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:47.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:47.159" endtime="20241013 16:59:47.159"/>
</kw>
<status status="PASS" starttime="20241013 16:59:47.151" endtime="20241013 16:59:47.159"/>
</kw>
<msg timestamp="20241013 16:59:47.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:47.151" endtime="20241013 16:59:47.160"/>
</kw>
<msg timestamp="20241013 16:59:47.160" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:59:47.151" endtime="20241013 16:59:47.160"/>
</kw>
<msg timestamp="20241013 16:59:47.160" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:59:47.151" endtime="20241013 16:59:47.160"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:59:47.160" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:59:47.160" endtime="20241013 16:59:47.160"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:47.164" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:47.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:47.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:47.162" endtime="20241013 16:59:47.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:47.314" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:47.313" endtime="20241013 16:59:47.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:47.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:47.314" endtime="20241013 16:59:47.314"/>
</kw>
<status status="PASS" starttime="20241013 16:59:47.161" endtime="20241013 16:59:47.314"/>
</kw>
<msg timestamp="20241013 16:59:47.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:47.161" endtime="20241013 16:59:47.315"/>
</kw>
<status status="PASS" starttime="20241013 16:59:47.161" endtime="20241013 16:59:47.315"/>
</kw>
<status status="PASS" starttime="20241013 16:59:47.160" endtime="20241013 16:59:47.315"/>
</kw>
<status status="PASS" starttime="20241013 16:59:47.150" endtime="20241013 16:59:47.315"/>
</kw>
<status status="PASS" starttime="20241013 16:59:47.149" endtime="20241013 16:59:47.315"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:47.318" level="INFO">Running command 'ozone sh bucket link 11650-source/bucket1 11650-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:51.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:51.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:47.316" endtime="20241013 16:59:51.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:51.254" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:51.254" endtime="20241013 16:59:51.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:51.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:51.255" endtime="20241013 16:59:51.255"/>
</kw>
<status status="PASS" starttime="20241013 16:59:47.316" endtime="20241013 16:59:51.255"/>
</kw>
<msg timestamp="20241013 16:59:51.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:47.316" endtime="20241013 16:59:51.256"/>
</kw>
<status status="PASS" starttime="20241013 16:59:47.315" endtime="20241013 16:59:51.256"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:51.259" level="INFO">Running command 'ozone sh bucket setquota 11650-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:55.084" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 16:59:55.084" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20241013 16:59:51.256" endtime="20241013 16:59:55.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:55.085" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20241013 16:59:55.085" endtime="20241013 16:59:55.085"/>
</kw>
<msg timestamp="20241013 16:59:55.086" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20241013 16:59:51.256" endtime="20241013 16:59:55.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:59:55.086" endtime="20241013 16:59:55.086"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:55.090" level="INFO">Running command 'ozone sh bucket info 11650-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:59.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:59.066" level="INFO">${output} = {
  "volumeName" : "11650-target",
  "bucketName" : "link4",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-10-13T16:59:51.065Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20241013 16:59:55.088" endtime="20241013 16:59:59.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:59.067" level="INFO">{
  "volumeName" : "11650-target",
  "bucketName" : "link4",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-10-13T16:59:51.065Z",
  "modificationTime" : "2024-10-13T16:59:51.065Z",
  "owner" : "testuser",
  "link" : true
}</msg>
<status status="PASS" starttime="20241013 16:59:59.067" endtime="20241013 16:59:59.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:59.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:59.068" endtime="20241013 16:59:59.068"/>
</kw>
<status status="PASS" starttime="20241013 16:59:55.087" endtime="20241013 16:59:59.068"/>
</kw>
<msg timestamp="20241013 16:59:59.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:55.087" endtime="20241013 16:59:59.068"/>
</kw>
<msg timestamp="20241013 16:59:59.068" level="INFO">${result} = {
  "volumeName" : "11650-target",
  "bucketName" : "link4",
  "sourceVolume" : "11650-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2024-10-13T16:59:51.065Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20241013 16:59:55.086" endtime="20241013 16:59:59.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 16:59:59.069" endtime="20241013 16:59:59.069"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20241013 16:59:47.148" endtime="20241013 16:59:59.069"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20241013 16:53:52.480" endtime="20241013 16:59:59.071"/>
</suite>
<suite id="s1-s5" name="s3-encrypted" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 16:59:59.868" endtime="20241013 16:59:59.868"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 16:59:59.869" level="INFO">${randStr} = 8611235405</msg>
<status status="PASS" starttime="20241013 16:59:59.869" endtime="20241013 16:59:59.869"/>
</kw>
<msg timestamp="20241013 16:59:59.869" level="INFO">${random} = ozone-test-8611235405</msg>
<status status="PASS" starttime="20241013 16:59:59.869" endtime="20241013 16:59:59.869"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 16:59:59.870" level="INFO">${PREFIX} = ozone-test-8611235405</msg>
<status status="PASS" starttime="20241013 16:59:59.869" endtime="20241013 16:59:59.870"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.868" endtime="20241013 16:59:59.870"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.868" endtime="20241013 16:59:59.870"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:59.880" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:59.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:59.883" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20241013 16:59:59.871" endtime="20241013 16:59:59.883"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 16:59:59.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:59.883" endtime="20241013 16:59:59.884"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20241013 16:59:59.884" endtime="20241013 16:59:59.884"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 16:59:59.884" endtime="20241013 16:59:59.884"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20241013 16:59:59.884" endtime="20241013 16:59:59.884"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 16:59:59.884" endtime="20241013 16:59:59.884"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.871" endtime="20241013 16:59:59.884"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.871" endtime="20241013 16:59:59.884"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 16:59:59.886" endtime="20241013 16:59:59.886"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:59.889" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:59.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:59.893" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 16:59:59.887" endtime="20241013 16:59:59.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:59.894" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 16:59:59.893" endtime="20241013 16:59:59.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:59.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:59.894" endtime="20241013 16:59:59.894"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.887" endtime="20241013 16:59:59.894"/>
</kw>
<msg timestamp="20241013 16:59:59.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:59.887" endtime="20241013 16:59:59.894"/>
</kw>
<msg timestamp="20241013 16:59:59.894" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 16:59:59.887" endtime="20241013 16:59:59.895"/>
</kw>
<msg timestamp="20241013 16:59:59.895" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:59:59.886" endtime="20241013 16:59:59.895"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 16:59:59.895" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 16:59:59.895" endtime="20241013 16:59:59.895"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:59.899" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 16:59:59.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 16:59:59.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 16:59:59.897" endtime="20241013 16:59:59.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 16:59:59.982" level="INFO"/>
<status status="PASS" starttime="20241013 16:59:59.981" endtime="20241013 16:59:59.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 16:59:59.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 16:59:59.982" endtime="20241013 16:59:59.982"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.897" endtime="20241013 16:59:59.982"/>
</kw>
<msg timestamp="20241013 16:59:59.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 16:59:59.896" endtime="20241013 16:59:59.983"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.896" endtime="20241013 16:59:59.983"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.895" endtime="20241013 16:59:59.983"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.886" endtime="20241013 16:59:59.983"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.885" endtime="20241013 16:59:59.983"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 16:59:59.986" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:03.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:03.135" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982</msg>
<status status="PASS" starttime="20241013 16:59:59.984" endtime="20241013 17:00:03.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:03.136" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982</msg>
<status status="PASS" starttime="20241013 17:00:03.135" endtime="20241013 17:00:03.136"/>
</kw>
<msg timestamp="20241013 17:00:03.136" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982</msg>
<status status="PASS" starttime="20241013 16:59:59.984" endtime="20241013 17:00:03.136"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20241013 17:00:03.137" level="FAIL">'awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20241013 17:00:03.136" endtime="20241013 17:00:03.137"/>
</kw>
<msg timestamp="20241013 17:00:03.137" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20241013 17:00:03.136" endtime="20241013 17:00:03.137"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20241013 17:00:03.137" endtime="20241013 17:00:03.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20241013 17:00:03.138" endtime="20241013 17:00:03.138"/>
</kw>
<status status="NOT RUN" starttime="20241013 17:00:03.137" endtime="20241013 17:00:03.138"/>
</branch>
<status status="PASS" starttime="20241013 17:00:03.137" endtime="20241013 17:00:03.138"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241013 17:00:03.138" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241013 17:00:03.138" endtime="20241013 17:00:03.138"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241013 17:00:03.139" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241013 17:00:03.138" endtime="20241013 17:00:03.139"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241013 17:00:03.139" level="INFO">${secret} = ['3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982']</msg>
<status status="PASS" starttime="20241013 17:00:03.139" endtime="20241013 17:00:03.139"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 17:00:03.140" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:00:03.139" endtime="20241013 17:00:03.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 17:00:03.141" level="INFO">${secret} = 3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982</msg>
<status status="PASS" starttime="20241013 17:00:03.140" endtime="20241013 17:00:03.141"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:03.145" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:03.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:03.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:03.142" endtime="20241013 17:00:03.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:03.551" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:03.551" endtime="20241013 17:00:03.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:03.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:03.551" endtime="20241013 17:00:03.552"/>
</kw>
<status status="PASS" starttime="20241013 17:00:03.142" endtime="20241013 17:00:03.552"/>
</kw>
<msg timestamp="20241013 17:00:03.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:03.141" endtime="20241013 17:00:03.552"/>
</kw>
<status status="PASS" starttime="20241013 17:00:03.141" endtime="20241013 17:00:03.552"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:03.555" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:03.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:03.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:03.553" endtime="20241013 17:00:03.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:03.931" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:03.930" endtime="20241013 17:00:03.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:03.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:03.931" endtime="20241013 17:00:03.931"/>
</kw>
<status status="PASS" starttime="20241013 17:00:03.553" endtime="20241013 17:00:03.932"/>
</kw>
<msg timestamp="20241013 17:00:03.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:03.552" endtime="20241013 17:00:03.932"/>
</kw>
<status status="PASS" starttime="20241013 17:00:03.552" endtime="20241013 17:00:03.932"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:03.935" level="INFO">Running command 'aws configure set aws_secret_access_key 3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:04.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:04.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:03.933" endtime="20241013 17:00:04.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:04.320" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:04.319" endtime="20241013 17:00:04.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:04.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:04.320" endtime="20241013 17:00:04.320"/>
</kw>
<status status="PASS" starttime="20241013 17:00:03.933" endtime="20241013 17:00:04.321"/>
</kw>
<msg timestamp="20241013 17:00:04.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:03.932" endtime="20241013 17:00:04.321"/>
</kw>
<status status="PASS" starttime="20241013 17:00:03.932" endtime="20241013 17:00:04.321"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:04.324" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:04.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:04.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:04.322" endtime="20241013 17:00:04.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:04.712" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:04.712" endtime="20241013 17:00:04.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:04.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:04.713" endtime="20241013 17:00:04.713"/>
</kw>
<status status="PASS" starttime="20241013 17:00:04.322" endtime="20241013 17:00:04.713"/>
</kw>
<msg timestamp="20241013 17:00:04.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:04.321" endtime="20241013 17:00:04.713"/>
</kw>
<status status="PASS" starttime="20241013 17:00:04.321" endtime="20241013 17:00:04.713"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:04.717" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:05.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:05.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:04.715" endtime="20241013 17:00:05.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:05.101" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:05.101" endtime="20241013 17:00:05.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:05.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:05.102" endtime="20241013 17:00:05.102"/>
</kw>
<status status="PASS" starttime="20241013 17:00:04.714" endtime="20241013 17:00:05.102"/>
</kw>
<msg timestamp="20241013 17:00:05.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:04.714" endtime="20241013 17:00:05.102"/>
</kw>
<status status="PASS" starttime="20241013 17:00:04.714" endtime="20241013 17:00:05.102"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.983" endtime="20241013 17:00:05.102"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.983" endtime="20241013 17:00:05.103"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:00:05.103" endtime="20241013 17:00:05.103"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.885" endtime="20241013 17:00:05.103"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.885" endtime="20241013 17:00:05.103"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:00:05.103" endtime="20241013 17:00:05.104"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:00:05.104" endtime="20241013 17:00:05.104"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:00:05.105" endtime="20241013 17:00:05.105"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:05.108" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://omservice/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:08.757" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:00:08.757" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20241013 17:00:05.105" endtime="20241013 17:00:08.757"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:00:08.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:08.758" endtime="20241013 17:00:08.758"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:08.758" endtime="20241013 17:00:08.758"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:08.758" endtime="20241013 17:00:08.758"/>
</kw>
<msg timestamp="20241013 17:00:08.759" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20241013 17:00:05.105" endtime="20241013 17:00:08.759"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:00:08.759" endtime="20241013 17:00:08.759"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} --layout ${BUCKET_LAYOUT} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:08.762" level="INFO">Running command 'ozone sh bucket create -k key1 --layout OBJECT_STORE o3://omservice/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:12.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:12.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:08.760" endtime="20241013 17:00:12.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:12.691" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:12.690" endtime="20241013 17:00:12.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:12.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:12.691" endtime="20241013 17:00:12.691"/>
</kw>
<status status="PASS" starttime="20241013 17:00:08.760" endtime="20241013 17:00:12.692"/>
</kw>
<msg timestamp="20241013 17:00:12.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:08.760" endtime="20241013 17:00:12.692"/>
</kw>
<status status="PASS" starttime="20241013 17:00:08.759" endtime="20241013 17:00:12.692"/>
</kw>
<status status="PASS" starttime="20241013 17:00:05.104" endtime="20241013 17:00:12.692"/>
</kw>
<status status="PASS" starttime="20241013 17:00:05.104" endtime="20241013 17:00:12.692"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:00:12.692" endtime="20241013 17:00:12.692"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:00:12.693" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20241013 17:00:12.693" endtime="20241013 17:00:12.693"/>
</kw>
<status status="PASS" starttime="20241013 16:59:59.868" endtime="20241013 17:00:12.693"/>
</kw>
<suite id="s1-s5-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:00:12.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:12.703" endtime="20241013 17:00:12.703"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:12.703" endtime="20241013 17:00:12.703"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:12.703" endtime="20241013 17:00:12.703"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:12.704" endtime="20241013 17:00:12.704"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:12.704" endtime="20241013 17:00:12.704"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:12.704" endtime="20241013 17:00:12.704"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:12.704" endtime="20241013 17:00:12.704"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:12.704" endtime="20241013 17:00:12.704"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:00:12.704" endtime="20241013 17:00:12.704"/>
</kw>
<status status="PASS" starttime="20241013 17:00:12.702" endtime="20241013 17:00:12.704"/>
</kw>
<test id="s1-s5-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:12.708" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:00:12.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:12.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:12.706" endtime="20241013 17:00:12.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:12.713" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:12.713" endtime="20241013 17:00:12.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:12.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:12.713" endtime="20241013 17:00:12.714"/>
</kw>
<status status="PASS" starttime="20241013 17:00:12.705" endtime="20241013 17:00:12.714"/>
</kw>
<msg timestamp="20241013 17:00:12.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:12.705" endtime="20241013 17:00:12.714"/>
</kw>
<status status="PASS" starttime="20241013 17:00:12.705" endtime="20241013 17:00:12.714"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:12.718" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:16.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:16.107" level="INFO">${output} = Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20241013 17:00:12.716" endtime="20241013 17:00:16.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:16.108" level="INFO">Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20241013 17:00:16.107" endtime="20241013 17:00:16.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:16.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:16.108" endtime="20241013 17:00:16.109"/>
</kw>
<status status="PASS" starttime="20241013 17:00:12.715" endtime="20241013 17:00:16.109"/>
</kw>
<msg timestamp="20241013 17:00:16.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:12.715" endtime="20241013 17:00:16.109"/>
</kw>
<msg timestamp="20241013 17:00:16.110" level="INFO">${output} = Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20241013 17:00:12.715" endtime="20241013 17:00:16.110"/>
</kw>
<msg timestamp="20241013 17:00:16.110" level="INFO">${result} = Completed 29 Bytes/29 Bytes (9 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20241013 17:00:12.714" endtime="20241013 17:00:16.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:16.110" endtime="20241013 17:00:16.111"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:16.117" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:16.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:16.624" level="INFO">${output} = Completed 29 Bytes/29 Bytes (464 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20241013 17:00:16.113" endtime="20241013 17:00:16.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:16.625" level="INFO">Completed 29 Bytes/29 Bytes (464 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20241013 17:00:16.625" endtime="20241013 17:00:16.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:16.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:16.625" endtime="20241013 17:00:16.626"/>
</kw>
<status status="PASS" starttime="20241013 17:00:16.112" endtime="20241013 17:00:16.626"/>
</kw>
<msg timestamp="20241013 17:00:16.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:16.112" endtime="20241013 17:00:16.626"/>
</kw>
<msg timestamp="20241013 17:00:16.626" level="INFO">${output} = Completed 29 Bytes/29 Bytes (464 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20241013 17:00:16.111" endtime="20241013 17:00:16.627"/>
</kw>
<msg timestamp="20241013 17:00:16.627" level="INFO">${result} = Completed 29 Bytes/29 Bytes (464 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20241013 17:00:16.111" endtime="20241013 17:00:16.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:16.627" endtime="20241013 17:00:16.627"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:16.631" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:17.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:17.127" level="INFO">${output} =                            PRE dir1/
2024-10-13 17:00:16         29 testfile</msg>
<status status="PASS" starttime="20241013 17:00:16.629" endtime="20241013 17:00:17.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:17.128" level="INFO">                           PRE dir1/
2024-10-13 17:00:16         29 testfile</msg>
<status status="PASS" starttime="20241013 17:00:17.127" endtime="20241013 17:00:17.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:17.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:17.128" endtime="20241013 17:00:17.128"/>
</kw>
<status status="PASS" starttime="20241013 17:00:16.628" endtime="20241013 17:00:17.129"/>
</kw>
<msg timestamp="20241013 17:00:17.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:16.628" endtime="20241013 17:00:17.129"/>
</kw>
<msg timestamp="20241013 17:00:17.129" level="INFO">${output} =                            PRE dir1/
2024-10-13 17:00:16         29 testfile</msg>
<status status="PASS" starttime="20241013 17:00:16.628" endtime="20241013 17:00:17.129"/>
</kw>
<msg timestamp="20241013 17:00:17.129" level="INFO">${result} =                            PRE dir1/
2024-10-13 17:00:16         29 testfile</msg>
<status status="PASS" starttime="20241013 17:00:16.627" endtime="20241013 17:00:17.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:17.129" endtime="20241013 17:00:17.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:17.130" endtime="20241013 17:00:17.130"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:17.130" endtime="20241013 17:00:17.130"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:17.134" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:17.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:17.602" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20241013 17:00:17.132" endtime="20241013 17:00:17.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:17.603" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20241013 17:00:17.602" endtime="20241013 17:00:17.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:17.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:17.603" endtime="20241013 17:00:17.604"/>
</kw>
<status status="PASS" starttime="20241013 17:00:17.132" endtime="20241013 17:00:17.604"/>
</kw>
<msg timestamp="20241013 17:00:17.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:17.131" endtime="20241013 17:00:17.604"/>
</kw>
<msg timestamp="20241013 17:00:17.604" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20241013 17:00:17.131" endtime="20241013 17:00:17.604"/>
</kw>
<msg timestamp="20241013 17:00:17.604" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20241013 17:00:17.130" endtime="20241013 17:00:17.604"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:17.604" endtime="20241013 17:00:17.605"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:17.605" endtime="20241013 17:00:17.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:17.605" endtime="20241013 17:00:17.605"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:17.609" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:18.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:18.061" level="INFO">${output} = 2024-10-13 17:00:16         29 file</msg>
<status status="PASS" starttime="20241013 17:00:17.607" endtime="20241013 17:00:18.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:18.062" level="INFO">2024-10-13 17:00:16         29 file</msg>
<status status="PASS" starttime="20241013 17:00:18.062" endtime="20241013 17:00:18.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:18.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:18.063" endtime="20241013 17:00:18.063"/>
</kw>
<status status="PASS" starttime="20241013 17:00:17.607" endtime="20241013 17:00:18.063"/>
</kw>
<msg timestamp="20241013 17:00:18.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:17.607" endtime="20241013 17:00:18.063"/>
</kw>
<msg timestamp="20241013 17:00:18.063" level="INFO">${output} = 2024-10-13 17:00:16         29 file</msg>
<status status="PASS" starttime="20241013 17:00:17.606" endtime="20241013 17:00:18.063"/>
</kw>
<msg timestamp="20241013 17:00:18.064" level="INFO">${result} = 2024-10-13 17:00:16         29 file</msg>
<status status="PASS" starttime="20241013 17:00:17.606" endtime="20241013 17:00:18.064"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:18.064" endtime="20241013 17:00:18.064"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:18.064" endtime="20241013 17:00:18.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:18.065" endtime="20241013 17:00:18.065"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:12.704" endtime="20241013 17:00:18.065"/>
</test>
<test id="s1-s5-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:18.070" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:00:18.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:18.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:18.067" endtime="20241013 17:00:18.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:18.075" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:18.074" endtime="20241013 17:00:18.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:18.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:18.075" endtime="20241013 17:00:18.075"/>
</kw>
<status status="PASS" starttime="20241013 17:00:18.067" endtime="20241013 17:00:18.075"/>
</kw>
<msg timestamp="20241013 17:00:18.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:18.067" endtime="20241013 17:00:18.076"/>
</kw>
<status status="PASS" starttime="20241013 17:00:18.066" endtime="20241013 17:00:18.076"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:18.079" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:18.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:18.617" level="INFO">${output} = Completed 29 Bytes/29 Bytes (318 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20241013 17:00:18.077" endtime="20241013 17:00:18.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:18.618" level="INFO">Completed 29 Bytes/29 Bytes (318 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20241013 17:00:18.617" endtime="20241013 17:00:18.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:18.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:18.618" endtime="20241013 17:00:18.618"/>
</kw>
<status status="PASS" starttime="20241013 17:00:18.077" endtime="20241013 17:00:18.618"/>
</kw>
<msg timestamp="20241013 17:00:18.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:18.077" endtime="20241013 17:00:18.619"/>
</kw>
<msg timestamp="20241013 17:00:18.619" level="INFO">${output} = Completed 29 Bytes/29 Bytes (318 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20241013 17:00:18.076" endtime="20241013 17:00:18.619"/>
</kw>
<msg timestamp="20241013 17:00:18.619" level="INFO">${result} = Completed 29 Bytes/29 Bytes (318 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20241013 17:00:18.076" endtime="20241013 17:00:18.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:18.619" endtime="20241013 17:00:18.619"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:18.623" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:19.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:19.090" level="INFO">${output} = 2024-10-13 17:00:18         29 a+b</msg>
<status status="PASS" starttime="20241013 17:00:18.621" endtime="20241013 17:00:19.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:19.092" level="INFO">2024-10-13 17:00:18         29 a+b</msg>
<status status="PASS" starttime="20241013 17:00:19.091" endtime="20241013 17:00:19.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:19.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:19.092" endtime="20241013 17:00:19.093"/>
</kw>
<status status="PASS" starttime="20241013 17:00:18.621" endtime="20241013 17:00:19.093"/>
</kw>
<msg timestamp="20241013 17:00:19.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:18.620" endtime="20241013 17:00:19.093"/>
</kw>
<msg timestamp="20241013 17:00:19.093" level="INFO">${output} = 2024-10-13 17:00:18         29 a+b</msg>
<status status="PASS" starttime="20241013 17:00:18.620" endtime="20241013 17:00:19.093"/>
</kw>
<msg timestamp="20241013 17:00:19.093" level="INFO">${result} = 2024-10-13 17:00:18         29 a+b</msg>
<status status="PASS" starttime="20241013 17:00:18.620" endtime="20241013 17:00:19.093"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:19.094" endtime="20241013 17:00:19.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:19.094" endtime="20241013 17:00:19.094"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:18.066" endtime="20241013 17:00:19.095"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:00:12.693" endtime="20241013 17:00:19.096"/>
</suite>
<suite id="s1-s5-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:00:19.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:19.111" endtime="20241013 17:00:19.111"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:19.111" endtime="20241013 17:00:19.111"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:19.111" endtime="20241013 17:00:19.111"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:19.111" endtime="20241013 17:00:19.111"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:19.111" endtime="20241013 17:00:19.111"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:19.112" endtime="20241013 17:00:19.112"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:19.112" endtime="20241013 17:00:19.112"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:19.112" endtime="20241013 17:00:19.112"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:00:19.112" endtime="20241013 17:00:19.112"/>
</kw>
<status status="PASS" starttime="20241013 17:00:19.110" endtime="20241013 17:00:19.112"/>
</kw>
<test id="s1-s5-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:19.116" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:26.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:26.558" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20241013 17:00:19.114" endtime="20241013 17:00:26.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:26.560" level="INFO">test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To continue receiving service updates, bug fixes, and security updates please upgrade to Python 3.7 or later. More information can be found here: https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/
  warnings.warn(warning, PythonDeprecationWarning)
ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 7.186s

OK
{'ResponseMetadata': {'RequestId': '79bfa1fa-a679-4a6c-a3c7-53c0e51b994d', 'HostId': '9DpAMJuQ', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:19 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:19 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-gzrrcoyaac', 'server': 'Ozone', 'x-amz-id-2': '9DpAMJuQ', 'x-amz-request-id': '79bfa1fa-a679-4a6c-a3c7-53c0e51b994d', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-gzrrcoyaac'}
None
None
None
{'ResponseMetadata': {'RequestId': 'a428204d-78b9-40ad-8014-951a87c5e19d', 'HostId': '38EX6rMmgENS6', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:21 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:21 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-qkfdwykoah', 'server': 'Ozone', 'x-amz-id-2': '38EX6rMmgENS6', 'x-amz-request-id': 'a428204d-78b9-40ad-8014-951a87c5e19d', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-qkfdwykoah'}
{'ResponseMetadata': {'RequestId': 'af8acbc4-d602-436b-9d96-a78d57016a65', 'HostId': 'hubcYljnuRSNN', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:21 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:21 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'hubcYljnuRSNN', 'x-amz-request-id': 'af8acbc4-d602-436b-9d96-a78d57016a65', 'content-length': '467'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-qkfdwykoah', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 21, 600000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 12, 304000, tzinfo=tzlocal())}, {'Name': 'ozone-test-gzrrcoyaac', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 19, 453000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '6c80d1ce-b8cc-43ac-86e1-948420042b2b', 'HostId': 'fCl3VslV', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:21 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:21 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'fCl3VslV', 'x-amz-request-id': '6c80d1ce-b8cc-43ac-86e1-948420042b2b', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'b103475a-0a32-4b52-a16c-ec1879ca3c49', 'HostId': 'evvtYAkFXWd1p0i', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:21 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:21 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'evvtYAkFXWd1p0i', 'x-amz-request-id': 'b103475a-0a32-4b52-a16c-ec1879ca3c49'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '127b0519-db2c-4699-84d9-5680b1d3bcef', 'HostId': '1Q7mUZBTKqR', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:21 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:21 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Sun, 13 Oct 2024 17:00:21 GMT', 'server': 'Ozone', 'x-amz-id-2': '1Q7mUZBTKqR', 'x-amz-request-id': '127b0519-db2c-4699-84d9-5680b1d3bcef', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2024, 10, 13, 17, 0, 21, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2024, 10, 13, 17, 0, 21, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '8b99e095-998e-46ff-8a7d-284dfc08ebed', 'HostId': 'MLTs59GlZ8', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:21 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:21 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'MLTs59GlZ8', 'x-amz-request-id': '8b99e095-998e-46ff-8a7d-284dfc08ebed', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '5c7ee924-380f-4c1e-a755-3a33d8b91baa', 'HostId': 'S0PvG9JeLW6nSH', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:21 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:21 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Sun, 13 Oct 2024 17:00:19 GMT', 'server': 'Ozone', 'x-amz-id-2': 'S0PvG9JeLW6nSH', 'x-amz-request-id': '5c7ee924-380f-4c1e-a755-3a33d8b91baa', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2024, 10, 13, 17, 0, 19, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2024, 10, 13, 17, 0, 21, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '4668cde7-7e99-46a8-a42f-07cb65c309c1', 'HostId': 'vAFNzXaf2i', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:21 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:21 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'vAFNzXaf2i', 'x-amz-request-id': '4668cde7-7e99-46a8-a42f-07cb65c309c1', 'content-length': '289'}, 'RetryAttempts': 0}, 'Bucket': 'encrypted', 'Key': 'ddgcqctoou', 'UploadId': 'c3a01757-71be-4495-b21a-c42626e5f7d7-113301181038530822'}
{'ResponseMetadata': {'RequestId': '09db0ec2-f821-40a3-bcd1-300f39c1479b', 'HostId': 'f5MMnOUzAG2dZ', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:00:26 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:00:26 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'f5MMnOUzAG2dZ', 'x-amz-request-id': '09db0ec2-f821-40a3-bcd1-300f39c1479b', 'content-length': '292'}, 'RetryAttempts': 0}, 'Location': 'encrypted', 'Bucket': 'encrypted', 'Key': 'ddgcqctoou', 'ETag': '"27474247826a4d3ef022a25bece0ad53-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20241013 17:00:26.559" endtime="20241013 17:00:26.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:26.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:26.560" endtime="20241013 17:00:26.561"/>
</kw>
<status status="PASS" starttime="20241013 17:00:19.113" endtime="20241013 17:00:26.561"/>
</kw>
<msg timestamp="20241013 17:00:26.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:19.113" endtime="20241013 17:00:26.562"/>
</kw>
<msg timestamp="20241013 17:00:26.562" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20241013 17:00:19.113" endtime="20241013 17:00:26.562"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20241013 17:00:19.112" endtime="20241013 17:00:26.563"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20241013 17:00:19.097" endtime="20241013 17:00:26.565"/>
</suite>
<suite id="s1-s5-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:00:26.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:26.600" endtime="20241013 17:00:26.601"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:26.601" endtime="20241013 17:00:26.601"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:26.601" endtime="20241013 17:00:26.601"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:26.601" endtime="20241013 17:00:26.601"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:26.602" endtime="20241013 17:00:26.602"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:26.602" endtime="20241013 17:00:26.602"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:26.602" endtime="20241013 17:00:26.602"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:26.602" endtime="20241013 17:00:26.602"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:00:26.602" endtime="20241013 17:00:26.602"/>
</kw>
<status status="PASS" starttime="20241013 17:00:26.600" endtime="20241013 17:00:26.602"/>
</kw>
<test id="s1-s5-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:26.605" level="INFO">${randStr} = 0911889721</msg>
<status status="PASS" starttime="20241013 17:00:26.604" endtime="20241013 17:00:26.605"/>
</kw>
<msg timestamp="20241013 17:00:26.605" level="INFO">${postfix} = ozone-test-0911889721</msg>
<status status="PASS" starttime="20241013 17:00:26.604" endtime="20241013 17:00:26.605"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 17:00:26.606" level="INFO">${bucket} = bucket-ozone-test-0911889721</msg>
<status status="PASS" starttime="20241013 17:00:26.606" endtime="20241013 17:00:26.606"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:26.617" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-0911889721 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:27.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:27.180" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0911889721"
}</msg>
<status status="PASS" starttime="20241013 17:00:26.610" endtime="20241013 17:00:27.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:27.181" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-0911889721"
}</msg>
<status status="PASS" starttime="20241013 17:00:27.181" endtime="20241013 17:00:27.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:27.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:27.182" endtime="20241013 17:00:27.182"/>
</kw>
<status status="PASS" starttime="20241013 17:00:26.609" endtime="20241013 17:00:27.182"/>
</kw>
<msg timestamp="20241013 17:00:27.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:26.609" endtime="20241013 17:00:27.182"/>
</kw>
<msg timestamp="20241013 17:00:27.183" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0911889721"
}</msg>
<status status="PASS" starttime="20241013 17:00:26.607" endtime="20241013 17:00:27.183"/>
</kw>
<msg timestamp="20241013 17:00:27.183" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0911889721"
}</msg>
<status status="PASS" starttime="20241013 17:00:26.607" endtime="20241013 17:00:27.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:27.183" endtime="20241013 17:00:27.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:27.183" endtime="20241013 17:00:27.184"/>
</kw>
<status status="PASS" starttime="20241013 17:00:26.606" endtime="20241013 17:00:27.184"/>
</kw>
<status status="PASS" starttime="20241013 17:00:26.603" endtime="20241013 17:00:27.184"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:26.603" endtime="20241013 17:00:27.184"/>
</test>
<test id="s1-s5-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:27.186" level="INFO">${randStr} = 7514566194</msg>
<status status="PASS" starttime="20241013 17:00:27.186" endtime="20241013 17:00:27.186"/>
</kw>
<msg timestamp="20241013 17:00:27.186" level="INFO">${postfix} = ozone-test-7514566194</msg>
<status status="PASS" starttime="20241013 17:00:27.185" endtime="20241013 17:00:27.186"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 17:00:27.187" level="INFO">${bucket} = bucket-ozone-test-7514566194</msg>
<status status="PASS" starttime="20241013 17:00:27.186" endtime="20241013 17:00:27.187"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:27.191" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-7514566194 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:27.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:27.671" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7514566194"
}</msg>
<status status="PASS" starttime="20241013 17:00:27.188" endtime="20241013 17:00:27.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:27.672" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-7514566194"
}</msg>
<status status="PASS" starttime="20241013 17:00:27.672" endtime="20241013 17:00:27.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:27.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:27.672" endtime="20241013 17:00:27.673"/>
</kw>
<status status="PASS" starttime="20241013 17:00:27.188" endtime="20241013 17:00:27.673"/>
</kw>
<msg timestamp="20241013 17:00:27.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:27.188" endtime="20241013 17:00:27.673"/>
</kw>
<msg timestamp="20241013 17:00:27.673" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7514566194"
}</msg>
<status status="PASS" starttime="20241013 17:00:27.187" endtime="20241013 17:00:27.673"/>
</kw>
<msg timestamp="20241013 17:00:27.674" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7514566194"
}</msg>
<status status="PASS" starttime="20241013 17:00:27.187" endtime="20241013 17:00:27.674"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:27.674" endtime="20241013 17:00:27.674"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:27.674" endtime="20241013 17:00:27.674"/>
</kw>
<status status="PASS" starttime="20241013 17:00:27.187" endtime="20241013 17:00:27.675"/>
</kw>
<msg timestamp="20241013 17:00:27.675" level="INFO">${bucket} = bucket-ozone-test-7514566194</msg>
<status status="PASS" starttime="20241013 17:00:27.185" endtime="20241013 17:00:27.675"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:27.678" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-7514566194 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:28.212" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:00:28.212" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20241013 17:00:27.676" endtime="20241013 17:00:28.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:28.213" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20241013 17:00:28.213" endtime="20241013 17:00:28.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:28.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:28.214" endtime="20241013 17:00:28.214"/>
</kw>
<msg timestamp="20241013 17:00:28.214" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20241013 17:00:27.675" endtime="20241013 17:00:28.214"/>
</kw>
<msg timestamp="20241013 17:00:28.214" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20241013 17:00:27.675" endtime="20241013 17:00:28.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:28.215" endtime="20241013 17:00:28.215"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:27.184" endtime="20241013 17:00:28.215"/>
</test>
<test id="s1-s5-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:28.217" level="INFO">${randStr} = 9874175486</msg>
<status status="PASS" starttime="20241013 17:00:28.217" endtime="20241013 17:00:28.218"/>
</kw>
<msg timestamp="20241013 17:00:28.218" level="INFO">${randStr} = ozone-test-9874175486</msg>
<status status="PASS" starttime="20241013 17:00:28.217" endtime="20241013 17:00:28.218"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:28.221" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-9874175486 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:28.698" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:00:28.698" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20241013 17:00:28.219" endtime="20241013 17:00:28.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:28.699" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20241013 17:00:28.698" endtime="20241013 17:00:28.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:28.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:28.699" endtime="20241013 17:00:28.700"/>
</kw>
<msg timestamp="20241013 17:00:28.700" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20241013 17:00:28.218" endtime="20241013 17:00:28.700"/>
</kw>
<msg timestamp="20241013 17:00:28.700" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20241013 17:00:28.218" endtime="20241013 17:00:28.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:28.700" endtime="20241013 17:00:28.701"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:28.216" endtime="20241013 17:00:28.701"/>
</test>
<test id="s1-s5-s3-t4" name="Create new bucket and check no group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:28.703" level="INFO">${randStr} = 0018347170</msg>
<status status="PASS" starttime="20241013 17:00:28.703" endtime="20241013 17:00:28.703"/>
</kw>
<msg timestamp="20241013 17:00:28.703" level="INFO">${postfix} = ozone-test-0018347170</msg>
<status status="PASS" starttime="20241013 17:00:28.702" endtime="20241013 17:00:28.703"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 17:00:28.704" level="INFO">${bucket} = bucket-ozone-test-0018347170</msg>
<status status="PASS" starttime="20241013 17:00:28.703" endtime="20241013 17:00:28.704"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:28.708" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-0018347170 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:29.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:29.186" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0018347170"
}</msg>
<status status="PASS" starttime="20241013 17:00:28.706" endtime="20241013 17:00:29.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:29.187" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-0018347170"
}</msg>
<status status="PASS" starttime="20241013 17:00:29.187" endtime="20241013 17:00:29.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:29.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:29.188" endtime="20241013 17:00:29.188"/>
</kw>
<status status="PASS" starttime="20241013 17:00:28.705" endtime="20241013 17:00:29.188"/>
</kw>
<msg timestamp="20241013 17:00:29.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:28.705" endtime="20241013 17:00:29.188"/>
</kw>
<msg timestamp="20241013 17:00:29.188" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0018347170"
}</msg>
<status status="PASS" starttime="20241013 17:00:28.705" endtime="20241013 17:00:29.188"/>
</kw>
<msg timestamp="20241013 17:00:29.189" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0018347170"
}</msg>
<status status="PASS" starttime="20241013 17:00:28.704" endtime="20241013 17:00:29.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:29.189" endtime="20241013 17:00:29.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:29.189" endtime="20241013 17:00:29.190"/>
</kw>
<status status="PASS" starttime="20241013 17:00:28.704" endtime="20241013 17:00:29.190"/>
</kw>
<msg timestamp="20241013 17:00:29.190" level="INFO">${bucket} = bucket-ozone-test-0018347170</msg>
<status status="PASS" starttime="20241013 17:00:28.702" endtime="20241013 17:00:29.190"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:29.193" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-0018347170 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:33.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:33.036" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "NONE" ]
} ]</msg>
<status status="PASS" starttime="20241013 17:00:29.191" endtime="20241013 17:00:33.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:33.037" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "NONE" ]
} ]</msg>
<status status="PASS" starttime="20241013 17:00:33.037" endtime="20241013 17:00:33.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:33.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:33.037" endtime="20241013 17:00:33.038"/>
</kw>
<status status="PASS" starttime="20241013 17:00:29.191" endtime="20241013 17:00:33.038"/>
</kw>
<msg timestamp="20241013 17:00:33.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:29.190" endtime="20241013 17:00:33.038"/>
</kw>
<msg timestamp="20241013 17:00:33.038" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "NONE" ]
} ]</msg>
<status status="PASS" starttime="20241013 17:00:29.190" endtime="20241013 17:00:33.038"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241013 17:00:33.039" level="INFO">${group} = ['"GROUP"']</msg>
<status status="PASS" starttime="20241013 17:00:33.038" endtime="20241013 17:00:33.039"/>
</kw>
<if>
<branch type="IF" condition="'${group}' is not '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241013 17:00:33.040" level="INFO">${json} = [{'type': 'USER', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['ALL']}, {'type': 'GROUP', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['NONE']}]</msg>
<status status="PASS" starttime="20241013 17:00:33.039" endtime="20241013 17:00:33.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:33.040" endtime="20241013 17:00:33.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>NONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:33.040" endtime="20241013 17:00:33.041"/>
</kw>
<status status="PASS" starttime="20241013 17:00:33.039" endtime="20241013 17:00:33.041"/>
</branch>
<status status="PASS" starttime="20241013 17:00:33.039" endtime="20241013 17:00:33.041"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:28.701" endtime="20241013 17:00:33.041"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:00:26.575" endtime="20241013 17:00:33.042"/>
</suite>
<suite id="s1-s5-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:00:33.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:33.052" endtime="20241013 17:00:33.052"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:33.052" endtime="20241013 17:00:33.052"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:33.052" endtime="20241013 17:00:33.052"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:33.052" endtime="20241013 17:00:33.052"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:33.053" endtime="20241013 17:00:33.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:33.053" endtime="20241013 17:00:33.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:33.053" endtime="20241013 17:00:33.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:33.053" endtime="20241013 17:00:33.053"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:00:33.053" endtime="20241013 17:00:33.053"/>
</kw>
<status status="PASS" starttime="20241013 17:00:33.052" endtime="20241013 17:00:33.053"/>
</kw>
<test id="s1-s5-s4-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:33.056" level="INFO">${randStr} = 7490526710</msg>
<status status="PASS" starttime="20241013 17:00:33.055" endtime="20241013 17:00:33.056"/>
</kw>
<msg timestamp="20241013 17:00:33.056" level="INFO">${postfix} = ozone-test-7490526710</msg>
<status status="PASS" starttime="20241013 17:00:33.055" endtime="20241013 17:00:33.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 17:00:33.056" level="INFO">${bucket} = bucket-ozone-test-7490526710</msg>
<status status="PASS" starttime="20241013 17:00:33.056" endtime="20241013 17:00:33.056"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:33.060" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-7490526710 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:33.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:33.532" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7490526710"
}</msg>
<status status="PASS" starttime="20241013 17:00:33.058" endtime="20241013 17:00:33.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:33.533" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-7490526710"
}</msg>
<status status="PASS" starttime="20241013 17:00:33.532" endtime="20241013 17:00:33.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:33.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:33.533" endtime="20241013 17:00:33.533"/>
</kw>
<status status="PASS" starttime="20241013 17:00:33.057" endtime="20241013 17:00:33.534"/>
</kw>
<msg timestamp="20241013 17:00:33.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:33.057" endtime="20241013 17:00:33.534"/>
</kw>
<msg timestamp="20241013 17:00:33.534" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7490526710"
}</msg>
<status status="PASS" starttime="20241013 17:00:33.057" endtime="20241013 17:00:33.534"/>
</kw>
<msg timestamp="20241013 17:00:33.534" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7490526710"
}</msg>
<status status="PASS" starttime="20241013 17:00:33.057" endtime="20241013 17:00:33.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:33.534" endtime="20241013 17:00:33.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:33.535" endtime="20241013 17:00:33.535"/>
</kw>
<status status="PASS" starttime="20241013 17:00:33.056" endtime="20241013 17:00:33.535"/>
</kw>
<status status="PASS" starttime="20241013 17:00:33.055" endtime="20241013 17:00:33.535"/>
</kw>
<status status="PASS" starttime="20241013 17:00:33.054" endtime="20241013 17:00:33.535"/>
</kw>
<msg timestamp="20241013 17:00:33.535" level="INFO">${bucket} = bucket-ozone-test-7490526710</msg>
<status status="PASS" starttime="20241013 17:00:33.054" endtime="20241013 17:00:33.535"/>
</kw>
<msg timestamp="20241013 17:00:33.536" level="INFO">${bucket} = bucket-ozone-test-7490526710</msg>
<status status="PASS" starttime="20241013 17:00:33.054" endtime="20241013 17:00:33.536"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:33.540" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-7490526710 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:34.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:34.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:33.537" endtime="20241013 17:00:34.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:34.009" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:34.008" endtime="20241013 17:00:34.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:34.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:34.009" endtime="20241013 17:00:34.009"/>
</kw>
<status status="PASS" starttime="20241013 17:00:33.537" endtime="20241013 17:00:34.010"/>
</kw>
<msg timestamp="20241013 17:00:34.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:33.537" endtime="20241013 17:00:34.010"/>
</kw>
<msg timestamp="20241013 17:00:34.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:33.536" endtime="20241013 17:00:34.010"/>
</kw>
<status status="PASS" starttime="20241013 17:00:33.536" endtime="20241013 17:00:34.010"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:33.053" endtime="20241013 17:00:34.010"/>
</test>
<test id="s1-s5-s4-t2" name="Delete non-existent bucket" line="41">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:34.012" level="INFO">${randStr} = 2981023114</msg>
<status status="PASS" starttime="20241013 17:00:34.012" endtime="20241013 17:00:34.012"/>
</kw>
<msg timestamp="20241013 17:00:34.012" level="INFO">${randStr} = ozone-test-2981023114</msg>
<status status="PASS" starttime="20241013 17:00:34.011" endtime="20241013 17:00:34.013"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:34.016" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-2981023114 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:34.479" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:00:34.479" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:00:34.013" endtime="20241013 17:00:34.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:34.480" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:00:34.479" endtime="20241013 17:00:34.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:34.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:34.480" endtime="20241013 17:00:34.481"/>
</kw>
<msg timestamp="20241013 17:00:34.481" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:00:34.013" endtime="20241013 17:00:34.481"/>
</kw>
<msg timestamp="20241013 17:00:34.481" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:00:34.013" endtime="20241013 17:00:34.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:34.481" endtime="20241013 17:00:34.482"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:34.011" endtime="20241013 17:00:34.482"/>
</test>
<test id="s1-s5-s4-t3" name="Delete bucket with incomplete multipart uploads" line="47">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:34.484" level="INFO">${randStr} = 2020164687</msg>
<status status="PASS" starttime="20241013 17:00:34.484" endtime="20241013 17:00:34.484"/>
</kw>
<msg timestamp="20241013 17:00:34.484" level="INFO">${postfix} = ozone-test-2020164687</msg>
<status status="PASS" starttime="20241013 17:00:34.483" endtime="20241013 17:00:34.484"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 17:00:34.485" level="INFO">${bucket} = bucket-ozone-test-2020164687</msg>
<status status="PASS" starttime="20241013 17:00:34.484" endtime="20241013 17:00:34.485"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:34.489" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2020164687 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:34.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:34.959" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2020164687"
}</msg>
<status status="PASS" starttime="20241013 17:00:34.487" endtime="20241013 17:00:34.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:34.960" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2020164687"
}</msg>
<status status="PASS" starttime="20241013 17:00:34.959" endtime="20241013 17:00:34.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:34.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:34.960" endtime="20241013 17:00:34.960"/>
</kw>
<status status="PASS" starttime="20241013 17:00:34.486" endtime="20241013 17:00:34.961"/>
</kw>
<msg timestamp="20241013 17:00:34.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:34.486" endtime="20241013 17:00:34.961"/>
</kw>
<msg timestamp="20241013 17:00:34.961" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2020164687"
}</msg>
<status status="PASS" starttime="20241013 17:00:34.485" endtime="20241013 17:00:34.961"/>
</kw>
<msg timestamp="20241013 17:00:34.961" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2020164687"
}</msg>
<status status="PASS" starttime="20241013 17:00:34.485" endtime="20241013 17:00:34.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:34.961" endtime="20241013 17:00:34.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:34.962" endtime="20241013 17:00:34.962"/>
</kw>
<status status="PASS" starttime="20241013 17:00:34.485" endtime="20241013 17:00:34.962"/>
</kw>
<msg timestamp="20241013 17:00:34.962" level="INFO">${bucket} = bucket-ozone-test-2020164687</msg>
<status status="PASS" starttime="20241013 17:00:34.483" endtime="20241013 17:00:34.962"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${initiate_result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key incomplete-multipartkey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:34.967" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-2020164687 --key incomplete-multipartkey 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:35.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:35.447" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-2020164687",
    "Key": "incomplete-multipartkey",
    "UploadId": "3055cb47-2087-4188-8c81-5b9ad621a52a-113301181916188937"
}</msg>
<status status="PASS" starttime="20241013 17:00:34.964" endtime="20241013 17:00:35.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:35.448" level="INFO">{
    "Bucket": "bucket-ozone-test-2020164687",
    "Key": "incomplete-multipartkey",
    "UploadId": "3055cb47-2087-4188-8c81-5b9ad621a52a-113301181916188937"
}</msg>
<status status="PASS" starttime="20241013 17:00:35.448" endtime="20241013 17:00:35.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:35.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:35.449" endtime="20241013 17:00:35.449"/>
</kw>
<status status="PASS" starttime="20241013 17:00:34.964" endtime="20241013 17:00:35.449"/>
</kw>
<msg timestamp="20241013 17:00:35.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:34.963" endtime="20241013 17:00:35.449"/>
</kw>
<msg timestamp="20241013 17:00:35.450" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-2020164687",
    "Key": "incomplete-multipartkey",
    "UploadId": "3055cb47-2087-4188-8c81-5b9ad621a52a-113301181916188937"
}</msg>
<status status="PASS" starttime="20241013 17:00:34.963" endtime="20241013 17:00:35.450"/>
</kw>
<msg timestamp="20241013 17:00:35.450" level="INFO">${initiate_result} = {
    "Bucket": "bucket-ozone-test-2020164687",
    "Key": "incomplete-multipartkey",
    "UploadId": "3055cb47-2087-4188-8c81-5b9ad621a52a-113301181916188937"
}</msg>
<status status="PASS" starttime="20241013 17:00:34.962" endtime="20241013 17:00:35.450"/>
</kw>
<kw name="Execute" library="os">
<var>${uploadID}</var>
<arg>echo '${initiate_result}' | jq -r '.UploadId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:35.454" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-2020164687",
    "Key": "incomplete-multipartkey",
    "UploadId": "3055cb47-2087-4188-8c81-5b9ad621a52a-113301181916188937"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:35.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:35.459" level="INFO">${output} = 3055cb47-2087-4188-8c81-5b9ad621a52a-113301181916188937</msg>
<status status="PASS" starttime="20241013 17:00:35.451" endtime="20241013 17:00:35.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:35.460" level="INFO">3055cb47-2087-4188-8c81-5b9ad621a52a-113301181916188937</msg>
<status status="PASS" starttime="20241013 17:00:35.459" endtime="20241013 17:00:35.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:35.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:35.460" endtime="20241013 17:00:35.461"/>
</kw>
<status status="PASS" starttime="20241013 17:00:35.451" endtime="20241013 17:00:35.461"/>
</kw>
<msg timestamp="20241013 17:00:35.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:35.451" endtime="20241013 17:00:35.461"/>
</kw>
<msg timestamp="20241013 17:00:35.461" level="INFO">${uploadID} = 3055cb47-2087-4188-8c81-5b9ad621a52a-113301181916188937</msg>
<status status="PASS" starttime="20241013 17:00:35.450" endtime="20241013 17:00:35.461"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:35.461" endtime="20241013 17:00:35.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>incomplete-multipartkey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:35.462" endtime="20241013 17:00:35.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:35.462" endtime="20241013 17:00:35.462"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:35.466" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-2020164687 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:35.926" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:00:35.926" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20241013 17:00:35.464" endtime="20241013 17:00:35.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:35.927" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20241013 17:00:35.926" endtime="20241013 17:00:35.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:35.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:35.927" endtime="20241013 17:00:35.928"/>
</kw>
<msg timestamp="20241013 17:00:35.928" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20241013 17:00:35.463" endtime="20241013 17:00:35.928"/>
</kw>
<msg timestamp="20241013 17:00:35.928" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20241013 17:00:35.462" endtime="20241013 17:00:35.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:35.928" endtime="20241013 17:00:35.929"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${abort_result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key incomplete-multipartkey --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:35.932" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-2020164687 --key incomplete-multipartkey --upload-id 3055cb47-2087-4188-8c81-5b9ad621a52a-113301181916188937 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:36.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:36.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:35.930" endtime="20241013 17:00:36.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:36.418" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:36.417" endtime="20241013 17:00:36.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:36.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:36.418" endtime="20241013 17:00:36.418"/>
</kw>
<msg timestamp="20241013 17:00:36.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:35.929" endtime="20241013 17:00:36.419"/>
</kw>
<msg timestamp="20241013 17:00:36.419" level="INFO">${abort_result} = </msg>
<status status="PASS" starttime="20241013 17:00:35.929" endtime="20241013 17:00:36.419"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:36.422" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-2020164687 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:36.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:36.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:36.420" endtime="20241013 17:00:36.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:36.885" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:36.884" endtime="20241013 17:00:36.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:36.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:36.885" endtime="20241013 17:00:36.885"/>
</kw>
<msg timestamp="20241013 17:00:36.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:36.420" endtime="20241013 17:00:36.886"/>
</kw>
<msg timestamp="20241013 17:00:36.886" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20241013 17:00:36.419" endtime="20241013 17:00:36.886"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:34.482" endtime="20241013 17:00:36.886"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:00:33.043" endtime="20241013 17:00:36.887"/>
</suite>
<suite id="s1-s5-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:00:36.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:36.897" endtime="20241013 17:00:36.898"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:36.898" endtime="20241013 17:00:36.898"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:36.898" endtime="20241013 17:00:36.898"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:36.898" endtime="20241013 17:00:36.898"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:36.898" endtime="20241013 17:00:36.898"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:36.898" endtime="20241013 17:00:36.898"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:36.898" endtime="20241013 17:00:36.899"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:36.899" endtime="20241013 17:00:36.899"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:00:36.899" endtime="20241013 17:00:36.899"/>
</kw>
<status status="PASS" starttime="20241013 17:00:36.897" endtime="20241013 17:00:36.899"/>
</kw>
<test id="s1-s5-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:36.903" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:37.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:37.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:36.901" endtime="20241013 17:00:37.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:37.370" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:37.369" endtime="20241013 17:00:37.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:37.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:37.370" endtime="20241013 17:00:37.370"/>
</kw>
<status status="PASS" starttime="20241013 17:00:36.901" endtime="20241013 17:00:37.370"/>
</kw>
<msg timestamp="20241013 17:00:37.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:36.901" endtime="20241013 17:00:37.370"/>
</kw>
<msg timestamp="20241013 17:00:37.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:36.900" endtime="20241013 17:00:37.371"/>
</kw>
<msg timestamp="20241013 17:00:37.371" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:00:36.900" endtime="20241013 17:00:37.371"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:36.899" endtime="20241013 17:00:37.371"/>
</test>
<test id="s1-s5-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:37.373" level="INFO">${randStr} = 2033426065</msg>
<status status="PASS" starttime="20241013 17:00:37.373" endtime="20241013 17:00:37.373"/>
</kw>
<msg timestamp="20241013 17:00:37.373" level="INFO">${randStr} = ozone-test-2033426065</msg>
<status status="PASS" starttime="20241013 17:00:37.372" endtime="20241013 17:00:37.373"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:37.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-2033426065 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:37.834" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:00:37.834" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:00:37.374" endtime="20241013 17:00:37.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:37.836" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:00:37.835" endtime="20241013 17:00:37.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:37.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:37.836" endtime="20241013 17:00:37.836"/>
</kw>
<msg timestamp="20241013 17:00:37.836" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:00:37.374" endtime="20241013 17:00:37.836"/>
</kw>
<msg timestamp="20241013 17:00:37.837" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:00:37.374" endtime="20241013 17:00:37.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:37.837" endtime="20241013 17:00:37.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:37.837" endtime="20241013 17:00:37.837"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:37.372" endtime="20241013 17:00:37.838"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:00:36.888" endtime="20241013 17:00:37.838"/>
</suite>
<suite id="s1-s5-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:00:37.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:37.848" endtime="20241013 17:00:37.849"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:37.849" endtime="20241013 17:00:37.849"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:37.849" endtime="20241013 17:00:37.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:37.849" endtime="20241013 17:00:37.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:37.849" endtime="20241013 17:00:37.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:37.849" endtime="20241013 17:00:37.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:37.850" endtime="20241013 17:00:37.850"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:37.850" endtime="20241013 17:00:37.850"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:00:37.850" endtime="20241013 17:00:37.850"/>
</kw>
<status status="PASS" starttime="20241013 17:00:37.848" endtime="20241013 17:00:37.850"/>
</kw>
<test id="s1-s5-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:37.854" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:38.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:38.322" level="INFO">${output} = bucket-ozone-test-0018347170
bucket-ozone-test-0911889721
bucket-ozone-test-7514566194
bucket-qkfdwykoah
encrypted</msg>
<status status="PASS" starttime="20241013 17:00:37.852" endtime="20241013 17:00:38.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:38.323" level="INFO">bucket-ozone-test-0018347170
bucket-ozone-test-0911889721
bucket-ozone-test-7514566194
bucket-qkfdwykoah
encrypted</msg>
<status status="PASS" starttime="20241013 17:00:38.323" endtime="20241013 17:00:38.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:38.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:38.323" endtime="20241013 17:00:38.324"/>
</kw>
<status status="PASS" starttime="20241013 17:00:37.851" endtime="20241013 17:00:38.324"/>
</kw>
<msg timestamp="20241013 17:00:38.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:37.851" endtime="20241013 17:00:38.324"/>
</kw>
<msg timestamp="20241013 17:00:38.324" level="INFO">${output} = bucket-ozone-test-0018347170
bucket-ozone-test-0911889721
bucket-ozone-test-7514566194
bucket-qkfdwykoah
encrypted</msg>
<status status="PASS" starttime="20241013 17:00:37.851" endtime="20241013 17:00:38.324"/>
</kw>
<msg timestamp="20241013 17:00:38.325" level="INFO">${result} = bucket-ozone-test-0018347170
bucket-ozone-test-0911889721
bucket-ozone-test-7514566194
bucket-qkfdwykoah
encrypted</msg>
<status status="PASS" starttime="20241013 17:00:37.850" endtime="20241013 17:00:38.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:38.325" endtime="20241013 17:00:38.325"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:37.850" endtime="20241013 17:00:38.325"/>
</test>
<test id="s1-s5-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:00:38.326" endtime="20241013 17:00:38.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:38.330" level="INFO">Running command 'ozone sh bucket info /s3v/encrypted | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:42.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:42.468" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20241013 17:00:38.328" endtime="20241013 17:00:42.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:42.469" level="INFO">testuser</msg>
<status status="PASS" starttime="20241013 17:00:42.468" endtime="20241013 17:00:42.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:42.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:42.469" endtime="20241013 17:00:42.470"/>
</kw>
<status status="PASS" starttime="20241013 17:00:38.327" endtime="20241013 17:00:42.470"/>
</kw>
<msg timestamp="20241013 17:00:42.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:38.327" endtime="20241013 17:00:42.470"/>
</kw>
<msg timestamp="20241013 17:00:42.470" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20241013 17:00:38.327" endtime="20241013 17:00:42.470"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:00:42.470" endtime="20241013 17:00:42.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:38.326" endtime="20241013 17:00:42.471"/>
</test>
<test id="s1-s5-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:42.476" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:42.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:42.858" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:00:42.473" endtime="20241013 17:00:42.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:42.859" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:00:42.858" endtime="20241013 17:00:42.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:42.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:42.859" endtime="20241013 17:00:42.859"/>
</kw>
<status status="PASS" starttime="20241013 17:00:42.473" endtime="20241013 17:00:42.860"/>
</kw>
<msg timestamp="20241013 17:00:42.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:42.473" endtime="20241013 17:00:42.860"/>
</kw>
<msg timestamp="20241013 17:00:42.860" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:00:42.472" endtime="20241013 17:00:42.860"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20241013 17:00:42.860" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:00:42.860" endtime="20241013 17:00:42.861"/>
</kw>
<status status="PASS" starttime="20241013 17:00:42.472" endtime="20241013 17:00:42.861"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:42.864" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:43.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:43.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:42.862" endtime="20241013 17:00:43.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:43.247" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:43.246" endtime="20241013 17:00:43.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:43.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:43.247" endtime="20241013 17:00:43.247"/>
</kw>
<status status="PASS" starttime="20241013 17:00:42.861" endtime="20241013 17:00:43.248"/>
</kw>
<msg timestamp="20241013 17:00:43.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:42.861" endtime="20241013 17:00:43.248"/>
</kw>
<status status="PASS" starttime="20241013 17:00:42.861" endtime="20241013 17:00:43.248"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:43.251" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:43.731" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:00:43.731" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20241013 17:00:43.249" endtime="20241013 17:00:43.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:43.732" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20241013 17:00:43.732" endtime="20241013 17:00:43.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:43.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:43.732" endtime="20241013 17:00:43.733"/>
</kw>
<msg timestamp="20241013 17:00:43.733" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20241013 17:00:43.248" endtime="20241013 17:00:43.733"/>
</kw>
<msg timestamp="20241013 17:00:43.733" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20241013 17:00:43.248" endtime="20241013 17:00:43.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:43.733" endtime="20241013 17:00:43.734"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:43.738" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:44.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:44.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:43.736" endtime="20241013 17:00:44.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:44.173" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:44.172" endtime="20241013 17:00:44.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:44.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:44.173" endtime="20241013 17:00:44.173"/>
</kw>
<status status="PASS" starttime="20241013 17:00:43.735" endtime="20241013 17:00:44.174"/>
</kw>
<msg timestamp="20241013 17:00:44.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:43.735" endtime="20241013 17:00:44.174"/>
</kw>
<status status="PASS" starttime="20241013 17:00:43.734" endtime="20241013 17:00:44.174"/>
</kw>
<status status="PASS" starttime="20241013 17:00:43.734" endtime="20241013 17:00:44.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:42.471" endtime="20241013 17:00:44.174"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:00:37.840" endtime="20241013 17:00:44.175"/>
</suite>
<suite id="s1-s5-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:00:44.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:44.186" endtime="20241013 17:00:44.187"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:44.187" endtime="20241013 17:00:44.187"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:44.187" endtime="20241013 17:00:44.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:44.187" endtime="20241013 17:00:44.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:44.187" endtime="20241013 17:00:44.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:44.187" endtime="20241013 17:00:44.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:44.188" endtime="20241013 17:00:44.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:44.188" endtime="20241013 17:00:44.188"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:00:44.188" endtime="20241013 17:00:44.188"/>
</kw>
<status status="PASS" starttime="20241013 17:00:44.186" endtime="20241013 17:00:44.188"/>
</kw>
<test id="s1-s5-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:44.192" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:44.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:44.582" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:00:44.190" endtime="20241013 17:00:44.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:44.583" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:00:44.583" endtime="20241013 17:00:44.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:44.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:44.583" endtime="20241013 17:00:44.584"/>
</kw>
<status status="PASS" starttime="20241013 17:00:44.189" endtime="20241013 17:00:44.584"/>
</kw>
<msg timestamp="20241013 17:00:44.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:44.189" endtime="20241013 17:00:44.584"/>
</kw>
<msg timestamp="20241013 17:00:44.584" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:00:44.189" endtime="20241013 17:00:44.584"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:44.588" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:44.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:44.967" level="INFO">${output} = 3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982</msg>
<status status="PASS" starttime="20241013 17:00:44.586" endtime="20241013 17:00:44.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:44.968" level="INFO">3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982</msg>
<status status="PASS" starttime="20241013 17:00:44.967" endtime="20241013 17:00:44.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:44.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:44.968" endtime="20241013 17:00:44.968"/>
</kw>
<status status="PASS" starttime="20241013 17:00:44.585" endtime="20241013 17:00:44.969"/>
</kw>
<msg timestamp="20241013 17:00:44.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:44.585" endtime="20241013 17:00:44.969"/>
</kw>
<msg timestamp="20241013 17:00:44.969" level="INFO">${secret} = 3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982</msg>
<status status="PASS" starttime="20241013 17:00:44.585" endtime="20241013 17:00:44.969"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20241013 17:00:44.969" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value '3b99d843c627a34e01792ae4d6212f76ca45ba7a15ff225621149911016e4982'.</msg>
<status status="PASS" starttime="20241013 17:00:44.969" endtime="20241013 17:00:44.969"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20241013 17:00:44.970" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20241013 17:00:44.969" endtime="20241013 17:00:44.970"/>
</kw>
<status status="PASS" starttime="20241013 17:00:44.188" endtime="20241013 17:00:44.970"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:44.974" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-encrypted  2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:49.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:49.346" level="INFO">${output} = 2024-10-13 17:00:47,085 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 17:00:47,179 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 17:00:44.972" endtime="20241013 17:00:49.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:49.354" level="INFO">2024-10-13 17:00:47,085 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 17:00:47,179 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-10-13 17:00:47,179 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-10-13 17:00:47,234 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-encrypted and number-of-tests 100
2024-10-13 17:00:47,264 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-10-13 17:00:48,271 [Thread-5] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2024-10-13 17:00:49,271 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-10-13 17:00:49,283 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=17.628936, max=202.590802, mean=80.99611736000006, stddev=44.969912354315085, median=72.741616, p75=103.448493, p95=172.209726, p98=192.88717, p99=193.511207, p999=202.590802, mean_rate=75.95354609117102, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-10-13 17:00:49,283 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2024-10-13 17:00:49,283 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-10-13 17:00:49,283 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20241013 17:00:49.354" endtime="20241013 17:00:49.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:49.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:49.355" endtime="20241013 17:00:49.355"/>
</kw>
<status status="PASS" starttime="20241013 17:00:44.972" endtime="20241013 17:00:49.355"/>
</kw>
<msg timestamp="20241013 17:00:49.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:44.972" endtime="20241013 17:00:49.355"/>
</kw>
<msg timestamp="20241013 17:00:49.356" level="INFO">${result} = 2024-10-13 17:00:47,085 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-10-13 17:00:47,179 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20241013 17:00:44.971" endtime="20241013 17:00:49.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:49.356" endtime="20241013 17:00:49.356"/>
</kw>
<status status="PASS" starttime="20241013 17:00:44.970" endtime="20241013 17:00:49.356"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20241013 17:00:44.188" endtime="20241013 17:00:49.356"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:00:44.176" endtime="20241013 17:00:49.357"/>
</suite>
<suite id="s1-s5-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:00:49.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:49.371" endtime="20241013 17:00:49.371"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:49.372" endtime="20241013 17:00:49.372"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:00:49.372" endtime="20241013 17:00:49.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:49.372" endtime="20241013 17:00:49.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:49.372" endtime="20241013 17:00:49.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:49.372" endtime="20241013 17:00:49.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:49.372" endtime="20241013 17:00:49.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:00:49.373" endtime="20241013 17:00:49.373"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:00:49.373" endtime="20241013 17:00:49.373"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.371" endtime="20241013 17:00:49.373"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>5121</arg>
<arg>/tmp/part1</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:00:49.374" endtime="20241013 17:00:49.375"/>
</kw>
<msg timestamp="20241013 17:00:49.375" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20241013 17:00:49.374" endtime="20241013 17:00:49.375"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:49.378" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:49.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:49.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:49.376" endtime="20241013 17:00:49.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:49.421" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:49.421" endtime="20241013 17:00:49.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:49.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:49.422" endtime="20241013 17:00:49.422"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.375" endtime="20241013 17:00:49.422"/>
</kw>
<msg timestamp="20241013 17:00:49.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:49.375" endtime="20241013 17:00:49.422"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.375" endtime="20241013 17:00:49.422"/>
</kw>
<msg timestamp="20241013 17:00:49.422" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20241013 17:00:49.373" endtime="20241013 17:00:49.422"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.373" endtime="20241013 17:00:49.423"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>1023</arg>
<arg>/tmp/part2</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:00:49.424" endtime="20241013 17:00:49.425"/>
</kw>
<msg timestamp="20241013 17:00:49.425" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20241013 17:00:49.424" endtime="20241013 17:00:49.425"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:49.428" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:49.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:49.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:49.426" endtime="20241013 17:00:49.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:49.440" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:49.439" endtime="20241013 17:00:49.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:49.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:49.440" endtime="20241013 17:00:49.440"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.425" endtime="20241013 17:00:49.440"/>
</kw>
<msg timestamp="20241013 17:00:49.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:49.425" endtime="20241013 17:00:49.440"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.425" endtime="20241013 17:00:49.441"/>
</kw>
<msg timestamp="20241013 17:00:49.441" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20241013 17:00:49.423" endtime="20241013 17:00:49.441"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.423" endtime="20241013 17:00:49.441"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>10</arg>
<arg>/tmp/10mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:00:49.443" endtime="20241013 17:00:49.443"/>
</kw>
<msg timestamp="20241013 17:00:49.443" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20241013 17:00:49.442" endtime="20241013 17:00:49.443"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:49.446" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10mb bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:49.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:49.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:49.444" endtime="20241013 17:00:49.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:49.496" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:49.495" endtime="20241013 17:00:49.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:49.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:49.496" endtime="20241013 17:00:49.496"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.444" endtime="20241013 17:00:49.496"/>
</kw>
<msg timestamp="20241013 17:00:49.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:49.443" endtime="20241013 17:00:49.496"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.443" endtime="20241013 17:00:49.497"/>
</kw>
<msg timestamp="20241013 17:00:49.497" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20241013 17:00:49.441" endtime="20241013 17:00:49.497"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.441" endtime="20241013 17:00:49.497"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>22</arg>
<arg>/tmp/22mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:00:49.499" endtime="20241013 17:00:49.499"/>
</kw>
<msg timestamp="20241013 17:00:49.499" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20241013 17:00:49.498" endtime="20241013 17:00:49.499"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:49.502" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/22mb bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:49.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:49.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:49.500" endtime="20241013 17:00:49.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:49.609" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:49.609" endtime="20241013 17:00:49.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:49.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:49.609" endtime="20241013 17:00:49.610"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.500" endtime="20241013 17:00:49.610"/>
</kw>
<msg timestamp="20241013 17:00:49.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:49.500" endtime="20241013 17:00:49.610"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.499" endtime="20241013 17:00:49.610"/>
</kw>
<msg timestamp="20241013 17:00:49.610" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20241013 17:00:49.497" endtime="20241013 17:00:49.610"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.497" endtime="20241013 17:00:49.611"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>10</arg>
<arg>/tmp/10kb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:00:49.613" endtime="20241013 17:00:49.613"/>
</kw>
<msg timestamp="20241013 17:00:49.613" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20241013 17:00:49.612" endtime="20241013 17:00:49.613"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:49.617" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10kb bs=1024 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:49.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:49.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:49.614" endtime="20241013 17:00:49.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:49.622" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:49.622" endtime="20241013 17:00:49.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:49.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:49.622" endtime="20241013 17:00:49.623"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.614" endtime="20241013 17:00:49.623"/>
</kw>
<msg timestamp="20241013 17:00:49.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:49.613" endtime="20241013 17:00:49.623"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.613" endtime="20241013 17:00:49.624"/>
</kw>
<msg timestamp="20241013 17:00:49.624" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20241013 17:00:49.611" endtime="20241013 17:00:49.624"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.611" endtime="20241013 17:00:49.624"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.371" endtime="20241013 17:00:49.624"/>
</kw>
<test id="s1-s5-s8-t1" name="Test Multipart Upload With Adjusted Length" line="59">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:49.627" level="INFO">${randStr} = 6203929549</msg>
<status status="PASS" starttime="20241013 17:00:49.626" endtime="20241013 17:00:49.627"/>
</kw>
<msg timestamp="20241013 17:00:49.627" level="INFO">${random} = ozone-test-6203929549</msg>
<status status="PASS" starttime="20241013 17:00:49.626" endtime="20241013 17:00:49.627"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:00:49.628" level="INFO">${PREFIX} = ozone-test-6203929549</msg>
<status status="PASS" starttime="20241013 17:00:49.627" endtime="20241013 17:00:49.628"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.625" endtime="20241013 17:00:49.628"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:49.632" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-6203929549 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:50.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:50.108" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-6203929549",
    "UploadId": "cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234"
}</msg>
<status status="PASS" starttime="20241013 17:00:49.630" endtime="20241013 17:00:50.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:50.109" level="INFO">{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-6203929549",
    "UploadId": "cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234"
}</msg>
<status status="PASS" starttime="20241013 17:00:50.109" endtime="20241013 17:00:50.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:50.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:50.109" endtime="20241013 17:00:50.110"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.630" endtime="20241013 17:00:50.110"/>
</kw>
<msg timestamp="20241013 17:00:50.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:49.630" endtime="20241013 17:00:50.110"/>
</kw>
<msg timestamp="20241013 17:00:50.111" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-6203929549",
    "UploadId": "cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234"
}</msg>
<status status="PASS" starttime="20241013 17:00:49.629" endtime="20241013 17:00:50.111"/>
</kw>
<msg timestamp="20241013 17:00:50.111" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-6203929549",
    "UploadId": "cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234"
}</msg>
<status status="PASS" starttime="20241013 17:00:49.629" endtime="20241013 17:00:50.111"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:50.114" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-6203929549",
    "UploadId": "cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:50.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:50.121" level="INFO">${output} = cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234</msg>
<status status="PASS" starttime="20241013 17:00:50.112" endtime="20241013 17:00:50.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:50.122" level="INFO">cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234</msg>
<status status="PASS" starttime="20241013 17:00:50.121" endtime="20241013 17:00:50.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:50.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:50.122" endtime="20241013 17:00:50.123"/>
</kw>
<msg timestamp="20241013 17:00:50.123" level="INFO">${upload_id} = cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234</msg>
<status status="PASS" starttime="20241013 17:00:50.111" endtime="20241013 17:00:50.123"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20241013 17:00:50.123" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20241013 17:00:50.123" endtime="20241013 17:00:50.123"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241013 17:00:50.124" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20241013 17:00:50.124" endtime="20241013 17:00:50.124"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:50.128" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-6203929549 --part-number 1 --body /tmp/part1 --upload-id cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:50.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:50.847" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:50.126" endtime="20241013 17:00:50.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:50.848" level="INFO">{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:50.847" endtime="20241013 17:00:50.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:50.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:50.849" endtime="20241013 17:00:50.849"/>
</kw>
<status status="PASS" starttime="20241013 17:00:50.126" endtime="20241013 17:00:50.849"/>
</kw>
<msg timestamp="20241013 17:00:50.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:50.126" endtime="20241013 17:00:50.850"/>
</kw>
<msg timestamp="20241013 17:00:50.850" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:50.125" endtime="20241013 17:00:50.850"/>
</kw>
<msg timestamp="20241013 17:00:50.850" level="INFO">${result} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:50.124" endtime="20241013 17:00:50.850"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:50.855" level="INFO">Running command 'echo '{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:50.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:50.862" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:00:50.852" endtime="20241013 17:00:50.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:50.863" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:00:50.862" endtime="20241013 17:00:50.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:50.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:50.863" endtime="20241013 17:00:50.863"/>
</kw>
<status status="PASS" starttime="20241013 17:00:50.852" endtime="20241013 17:00:50.864"/>
</kw>
<msg timestamp="20241013 17:00:50.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:50.851" endtime="20241013 17:00:50.864"/>
</kw>
<msg timestamp="20241013 17:00:50.864" level="INFO">${etag} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:00:50.851" endtime="20241013 17:00:50.864"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:00:50.864" endtime="20241013 17:00:50.865"/>
</kw>
<status status="PASS" starttime="20241013 17:00:50.124" endtime="20241013 17:00:50.865"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241013 17:00:50.866" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20241013 17:00:50.865" endtime="20241013 17:00:50.866"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:50.871" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-6203929549 --part-number 2 --body /tmp/part2 --upload-id cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:51.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:51.570" level="INFO">${output} = {
    "ETag": "4f4073e7e5489c140069b41c964cc10e"
}</msg>
<status status="PASS" starttime="20241013 17:00:50.868" endtime="20241013 17:00:51.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:51.571" level="INFO">{
    "ETag": "4f4073e7e5489c140069b41c964cc10e"
}</msg>
<status status="PASS" starttime="20241013 17:00:51.571" endtime="20241013 17:00:51.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:51.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:51.571" endtime="20241013 17:00:51.572"/>
</kw>
<status status="PASS" starttime="20241013 17:00:50.868" endtime="20241013 17:00:51.572"/>
</kw>
<msg timestamp="20241013 17:00:51.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:50.867" endtime="20241013 17:00:51.572"/>
</kw>
<msg timestamp="20241013 17:00:51.572" level="INFO">${output} = {
    "ETag": "4f4073e7e5489c140069b41c964cc10e"
}</msg>
<status status="PASS" starttime="20241013 17:00:50.867" endtime="20241013 17:00:51.572"/>
</kw>
<msg timestamp="20241013 17:00:51.572" level="INFO">${result} = {
    "ETag": "4f4073e7e5489c140069b41c964cc10e"
}</msg>
<status status="PASS" starttime="20241013 17:00:50.866" endtime="20241013 17:00:51.572"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:51.576" level="INFO">Running command 'echo '{
    "ETag": "4f4073e7e5489c140069b41c964cc10e"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:51.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:51.583" level="INFO">${output} = 4f4073e7e5489c140069b41c964cc10e</msg>
<status status="PASS" starttime="20241013 17:00:51.574" endtime="20241013 17:00:51.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:51.584" level="INFO">4f4073e7e5489c140069b41c964cc10e</msg>
<status status="PASS" starttime="20241013 17:00:51.583" endtime="20241013 17:00:51.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:51.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:51.584" endtime="20241013 17:00:51.584"/>
</kw>
<status status="PASS" starttime="20241013 17:00:51.574" endtime="20241013 17:00:51.585"/>
</kw>
<msg timestamp="20241013 17:00:51.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:51.573" endtime="20241013 17:00:51.585"/>
</kw>
<msg timestamp="20241013 17:00:51.585" level="INFO">${etag} = 4f4073e7e5489c140069b41c964cc10e</msg>
<status status="PASS" starttime="20241013 17:00:51.573" endtime="20241013 17:00:51.585"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:00:51.585" endtime="20241013 17:00:51.585"/>
</kw>
<status status="PASS" starttime="20241013 17:00:50.865" endtime="20241013 17:00:51.585"/>
</iter>
<status status="PASS" starttime="20241013 17:00:50.123" endtime="20241013 17:00:51.586"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20241013 17:00:51.586" level="INFO">${parts} = {ETag=2616367cb18232af9ef277a5228b106c,PartNumber=1},{ETag=4f4073e7e5489c140069b41c964cc10e,PartNumber=2}</msg>
<status status="PASS" starttime="20241013 17:00:51.586" endtime="20241013 17:00:51.586"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:51.590" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-6203929549 --upload-id cdd9be33-23b5-484c-b6c6-3e597366742d-113301182877012234 --multipart-upload 'Parts=[{ETag=2616367cb18232af9ef277a5228b106c,PartNumber=1},{ETag=4f4073e7e5489c140069b41c964cc10e,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:52.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:52.061" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-6203929549",
    "ETag": "\"e33db4d78c9b813631486b5d4d870280-2\""
}</msg>
<status status="PASS" starttime="20241013 17:00:51.588" endtime="20241013 17:00:52.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:52.063" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-6203929549",
    "ETag": "\"e33db4d78c9b813631486b5d4d870280-2\""
}</msg>
<status status="PASS" starttime="20241013 17:00:52.062" endtime="20241013 17:00:52.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:52.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:52.063" endtime="20241013 17:00:52.063"/>
</kw>
<status status="PASS" starttime="20241013 17:00:51.587" endtime="20241013 17:00:52.063"/>
</kw>
<msg timestamp="20241013 17:00:52.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:51.587" endtime="20241013 17:00:52.064"/>
</kw>
<msg timestamp="20241013 17:00:52.064" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-6203929549",
    "ETag": "\"e33db4d78c9b813631486b5d4d870280-2\""
}</msg>
<status status="PASS" starttime="20241013 17:00:51.587" endtime="20241013 17:00:52.064"/>
</kw>
<status status="PASS" starttime="20241013 17:00:51.586" endtime="20241013 17:00:52.064"/>
</kw>
<status status="PASS" starttime="20241013 17:00:49.628" endtime="20241013 17:00:52.064"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:52.066" level="INFO">${randStr} = 2435806377</msg>
<status status="PASS" starttime="20241013 17:00:52.065" endtime="20241013 17:00:52.066"/>
</kw>
<msg timestamp="20241013 17:00:52.066" level="INFO">${random} = ozone-test-2435806377</msg>
<status status="PASS" starttime="20241013 17:00:52.065" endtime="20241013 17:00:52.066"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:52.070" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key multipart/adjusted_length_ozone-test-6203929549 /tmp/verifyozone-test-2435806377 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:53.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:53.334" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:52 GMT",
    "ContentLength": 6291456,
    "ETag": "\"e33db4d78c9b813631486b5d4d870280-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:00:52.068" endtime="20241013 17:00:53.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:53.335" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:52 GMT",
    "ContentLength": 6291456,
    "ETag": "\"e33db4d78c9b813631486b5d4d870280-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:00:52 GMT",
    "Metadata": {},
    "PartsCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:00:53.335" endtime="20241013 17:00:53.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:53.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:53.336" endtime="20241013 17:00:53.336"/>
</kw>
<status status="PASS" starttime="20241013 17:00:52.067" endtime="20241013 17:00:53.336"/>
</kw>
<msg timestamp="20241013 17:00:53.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:52.067" endtime="20241013 17:00:53.337"/>
</kw>
<msg timestamp="20241013 17:00:53.337" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:52 GMT",
    "ContentLength": 6291456,
    "ETag": "\"e33db4d78c9b813631486b5d4d870280-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:00:52.066" endtime="20241013 17:00:53.337"/>
</kw>
<status status="PASS" starttime="20241013 17:00:52.066" endtime="20241013 17:00:53.337"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20241013 17:00:53.337" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20241013 17:00:53.337" endtime="20241013 17:00:53.338"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:53.346" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-2435806377'.</msg>
<msg timestamp="20241013 17:00:53.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:53.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:53.339" endtime="20241013 17:00:53.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:53.363" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:53.362" endtime="20241013 17:00:53.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:53.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:53.363" endtime="20241013 17:00:53.363"/>
</kw>
<status status="PASS" starttime="20241013 17:00:53.339" endtime="20241013 17:00:53.364"/>
</kw>
<msg timestamp="20241013 17:00:53.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:53.338" endtime="20241013 17:00:53.364"/>
</kw>
<status status="PASS" starttime="20241013 17:00:53.338" endtime="20241013 17:00:53.364"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:53.369" level="INFO">Running command 'md5sum /tmp/originalozone-test-2435806377 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:53.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:53.391" level="INFO">${output} = 227abc64036044ce73449d5674ddfb18</msg>
<status status="PASS" starttime="20241013 17:00:53.366" endtime="20241013 17:00:53.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:53.392" level="INFO">227abc64036044ce73449d5674ddfb18</msg>
<status status="PASS" starttime="20241013 17:00:53.391" endtime="20241013 17:00:53.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:53.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:53.392" endtime="20241013 17:00:53.393"/>
</kw>
<status status="PASS" starttime="20241013 17:00:53.365" endtime="20241013 17:00:53.393"/>
</kw>
<msg timestamp="20241013 17:00:53.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:53.365" endtime="20241013 17:00:53.393"/>
</kw>
<msg timestamp="20241013 17:00:53.393" level="INFO">${checksumbefore} = 227abc64036044ce73449d5674ddfb18</msg>
<status status="PASS" starttime="20241013 17:00:53.365" endtime="20241013 17:00:53.393"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:53.399" level="INFO">Running command 'md5sum /tmp/verifyozone-test-2435806377 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:53.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:53.426" level="INFO">${output} = 227abc64036044ce73449d5674ddfb18</msg>
<status status="PASS" starttime="20241013 17:00:53.395" endtime="20241013 17:00:53.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:53.427" level="INFO">227abc64036044ce73449d5674ddfb18</msg>
<status status="PASS" starttime="20241013 17:00:53.426" endtime="20241013 17:00:53.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:53.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:53.427" endtime="20241013 17:00:53.428"/>
</kw>
<status status="PASS" starttime="20241013 17:00:53.395" endtime="20241013 17:00:53.428"/>
</kw>
<msg timestamp="20241013 17:00:53.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:53.394" endtime="20241013 17:00:53.428"/>
</kw>
<msg timestamp="20241013 17:00:53.428" level="INFO">${checksumafter} = 227abc64036044ce73449d5674ddfb18</msg>
<status status="PASS" starttime="20241013 17:00:53.394" endtime="20241013 17:00:53.428"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:00:53.428" endtime="20241013 17:00:53.429"/>
</kw>
<status status="PASS" starttime="20241013 17:00:53.364" endtime="20241013 17:00:53.429"/>
</kw>
<status status="PASS" starttime="20241013 17:00:52.064" endtime="20241013 17:00:53.429"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:49.625" endtime="20241013 17:00:53.430"/>
</test>
<test id="s1-s5-s8-t2" name="Test Multipart Upload" line="63">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:53.433" level="INFO">${randStr} = 5146560249</msg>
<status status="PASS" starttime="20241013 17:00:53.432" endtime="20241013 17:00:53.433"/>
</kw>
<msg timestamp="20241013 17:00:53.433" level="INFO">${random} = ozone-test-5146560249</msg>
<status status="PASS" starttime="20241013 17:00:53.431" endtime="20241013 17:00:53.433"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:00:53.433" level="INFO">${PREFIX} = ozone-test-5146560249</msg>
<status status="PASS" starttime="20241013 17:00:53.433" endtime="20241013 17:00:53.434"/>
</kw>
<status status="PASS" starttime="20241013 17:00:53.431" endtime="20241013 17:00:53.434"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:53.439" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-5146560249/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:53.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:53.939" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "8d28a273-6e06-4f73-a2da-e3d29d6bfba6-113301183128801549"
}</msg>
<status status="PASS" starttime="20241013 17:00:53.435" endtime="20241013 17:00:53.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:53.940" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "8d28a273-6e06-4f73-a2da-e3d29d6bfba6-113301183128801549"
}</msg>
<status status="PASS" starttime="20241013 17:00:53.939" endtime="20241013 17:00:53.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:53.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:53.940" endtime="20241013 17:00:53.940"/>
</kw>
<status status="PASS" starttime="20241013 17:00:53.435" endtime="20241013 17:00:53.940"/>
</kw>
<msg timestamp="20241013 17:00:53.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:53.435" endtime="20241013 17:00:53.941"/>
</kw>
<msg timestamp="20241013 17:00:53.941" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "8d28a273-6e06-4f73-a2da-e3d29d6bfba6-113301183128801549"
}</msg>
<status status="PASS" starttime="20241013 17:00:53.434" endtime="20241013 17:00:53.941"/>
</kw>
<msg timestamp="20241013 17:00:53.941" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "8d28a273-6e06-4f73-a2da-e3d29d6bfba6-113301183128801549"
}</msg>
<status status="PASS" starttime="20241013 17:00:53.434" endtime="20241013 17:00:53.941"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:53.944" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "8d28a273-6e06-4f73-a2da-e3d29d6bfba6-113301183128801549"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:53.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:53.949" level="INFO">${output} = 8d28a273-6e06-4f73-a2da-e3d29d6bfba6-113301183128801549</msg>
<status status="PASS" starttime="20241013 17:00:53.942" endtime="20241013 17:00:53.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:53.950" level="INFO">8d28a273-6e06-4f73-a2da-e3d29d6bfba6-113301183128801549</msg>
<status status="PASS" starttime="20241013 17:00:53.950" endtime="20241013 17:00:53.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:53.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:53.950" endtime="20241013 17:00:53.951"/>
</kw>
<msg timestamp="20241013 17:00:53.951" level="INFO">${uploadID} = 8d28a273-6e06-4f73-a2da-e3d29d6bfba6-113301183128801549</msg>
<status status="PASS" starttime="20241013 17:00:53.941" endtime="20241013 17:00:53.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:53.951" endtime="20241013 17:00:53.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:53.951" endtime="20241013 17:00:53.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:53.952" endtime="20241013 17:00:53.952"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:53.956" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-5146560249/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:54.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:54.423" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510"
}</msg>
<status status="PASS" starttime="20241013 17:00:53.954" endtime="20241013 17:00:54.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:54.424" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510"
}</msg>
<status status="PASS" starttime="20241013 17:00:54.424" endtime="20241013 17:00:54.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:54.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:54.424" endtime="20241013 17:00:54.425"/>
</kw>
<status status="PASS" starttime="20241013 17:00:53.953" endtime="20241013 17:00:54.425"/>
</kw>
<msg timestamp="20241013 17:00:54.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:53.953" endtime="20241013 17:00:54.425"/>
</kw>
<msg timestamp="20241013 17:00:54.425" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510"
}</msg>
<status status="PASS" starttime="20241013 17:00:53.953" endtime="20241013 17:00:54.425"/>
</kw>
<msg timestamp="20241013 17:00:54.426" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510"
}</msg>
<status status="PASS" starttime="20241013 17:00:53.952" endtime="20241013 17:00:54.426"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:54.429" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-5146560249/multipartKey",
    "UploadId": "ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:54.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:54.434" level="INFO">${output} = ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510</msg>
<status status="PASS" starttime="20241013 17:00:54.426" endtime="20241013 17:00:54.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:54.435" level="INFO">ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510</msg>
<status status="PASS" starttime="20241013 17:00:54.435" endtime="20241013 17:00:54.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:54.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:54.435" endtime="20241013 17:00:54.436"/>
</kw>
<msg timestamp="20241013 17:00:54.436" level="INFO">${nextUploadID} = ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510</msg>
<status status="PASS" starttime="20241013 17:00:54.426" endtime="20241013 17:00:54.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:54.436" endtime="20241013 17:00:54.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:54.437" endtime="20241013 17:00:54.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:54.437" endtime="20241013 17:00:54.437"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20241013 17:00:54.437" endtime="20241013 17:00:54.438"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:54.442" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-5146560249/multipartKey --part-number 1 --body /tmp/part1 --upload-id ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:55.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:55.041" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:54.440" endtime="20241013 17:00:55.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:55.042" level="INFO">{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:55.042" endtime="20241013 17:00:55.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:55.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:55.043" endtime="20241013 17:00:55.043"/>
</kw>
<status status="PASS" starttime="20241013 17:00:54.439" endtime="20241013 17:00:55.043"/>
</kw>
<msg timestamp="20241013 17:00:55.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:54.439" endtime="20241013 17:00:55.043"/>
</kw>
<msg timestamp="20241013 17:00:55.044" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:54.438" endtime="20241013 17:00:55.044"/>
</kw>
<msg timestamp="20241013 17:00:55.044" level="INFO">${result} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:54.438" endtime="20241013 17:00:55.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:55.044" endtime="20241013 17:00:55.044"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:55.048" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-5146560249/multipartKey --part-number 1 --body /tmp/part1 --upload-id ce3dca68-812c-4fb5-b978-0c090f1780cd-113301183160586510 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:55.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:55.749" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:55.046" endtime="20241013 17:00:55.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:55.750" level="INFO">{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:55.749" endtime="20241013 17:00:55.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:55.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:55.750" endtime="20241013 17:00:55.751"/>
</kw>
<status status="PASS" starttime="20241013 17:00:55.046" endtime="20241013 17:00:55.751"/>
</kw>
<msg timestamp="20241013 17:00:55.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:55.045" endtime="20241013 17:00:55.751"/>
</kw>
<msg timestamp="20241013 17:00:55.751" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:55.045" endtime="20241013 17:00:55.751"/>
</kw>
<msg timestamp="20241013 17:00:55.752" level="INFO">${result} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:55.044" endtime="20241013 17:00:55.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:55.752" endtime="20241013 17:00:55.752"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:53.430" endtime="20241013 17:00:55.752"/>
</test>
<test id="s1-s5-s8-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:00:55.755" level="INFO">${randStr} = 8291753013</msg>
<status status="PASS" starttime="20241013 17:00:55.754" endtime="20241013 17:00:55.755"/>
</kw>
<msg timestamp="20241013 17:00:55.755" level="INFO">${random} = ozone-test-8291753013</msg>
<status status="PASS" starttime="20241013 17:00:55.754" endtime="20241013 17:00:55.755"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:00:55.755" level="INFO">${PREFIX} = ozone-test-8291753013</msg>
<status status="PASS" starttime="20241013 17:00:55.755" endtime="20241013 17:00:55.756"/>
</kw>
<status status="PASS" starttime="20241013 17:00:55.754" endtime="20241013 17:00:55.756"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:55.760" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-8291753013/multipartKey1 --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:56.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:56.259" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "UploadId": "be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537"
}</msg>
<status status="PASS" starttime="20241013 17:00:55.757" endtime="20241013 17:00:56.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:56.260" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "UploadId": "be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537"
}</msg>
<status status="PASS" starttime="20241013 17:00:56.259" endtime="20241013 17:00:56.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:56.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:56.260" endtime="20241013 17:00:56.261"/>
</kw>
<status status="PASS" starttime="20241013 17:00:55.757" endtime="20241013 17:00:56.261"/>
</kw>
<msg timestamp="20241013 17:00:56.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:55.757" endtime="20241013 17:00:56.261"/>
</kw>
<msg timestamp="20241013 17:00:56.261" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "UploadId": "be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537"
}</msg>
<status status="PASS" starttime="20241013 17:00:55.756" endtime="20241013 17:00:56.261"/>
</kw>
<msg timestamp="20241013 17:00:56.261" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "UploadId": "be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537"
}</msg>
<status status="PASS" starttime="20241013 17:00:55.756" endtime="20241013 17:00:56.261"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:56.264" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "UploadId": "be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:56.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:56.270" level="INFO">${output} = be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537</msg>
<status status="PASS" starttime="20241013 17:00:56.262" endtime="20241013 17:00:56.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:56.271" level="INFO">be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537</msg>
<status status="PASS" starttime="20241013 17:00:56.270" endtime="20241013 17:00:56.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:56.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:56.271" endtime="20241013 17:00:56.272"/>
</kw>
<msg timestamp="20241013 17:00:56.272" level="INFO">${uploadID} = be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537</msg>
<status status="PASS" starttime="20241013 17:00:56.261" endtime="20241013 17:00:56.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:56.272" endtime="20241013 17:00:56.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:56.272" endtime="20241013 17:00:56.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:56.273" endtime="20241013 17:00:56.273"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:56.276" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-8291753013/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:56.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:56.954" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:56.275" endtime="20241013 17:00:56.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:56.955" level="INFO">{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:56.954" endtime="20241013 17:00:56.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:56.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:56.956" endtime="20241013 17:00:56.956"/>
</kw>
<status status="PASS" starttime="20241013 17:00:56.274" endtime="20241013 17:00:56.957"/>
</kw>
<msg timestamp="20241013 17:00:56.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:56.274" endtime="20241013 17:00:56.957"/>
</kw>
<msg timestamp="20241013 17:00:56.957" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:56.274" endtime="20241013 17:00:56.957"/>
</kw>
<msg timestamp="20241013 17:00:56.957" level="INFO">${result} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:00:56.273" endtime="20241013 17:00:56.958"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:56.962" level="INFO">Running command 'echo '{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:56.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:56.978" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:00:56.959" endtime="20241013 17:00:56.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:56.980" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:00:56.979" endtime="20241013 17:00:56.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:56.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:56.980" endtime="20241013 17:00:56.981"/>
</kw>
<msg timestamp="20241013 17:00:56.981" level="INFO">${eTag1} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:00:56.958" endtime="20241013 17:00:56.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:56.982" endtime="20241013 17:00:56.982"/>
</kw>
<kw name="Execute" library="os">
<var>${part1Md5Sum}</var>
<arg>md5sum /tmp/part1 | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:56.987" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:57.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:57.014" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:00:56.984" endtime="20241013 17:00:57.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:57.016" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:00:57.015" endtime="20241013 17:00:57.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:57.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:57.017" endtime="20241013 17:00:57.018"/>
</kw>
<status status="PASS" starttime="20241013 17:00:56.983" endtime="20241013 17:00:57.018"/>
</kw>
<msg timestamp="20241013 17:00:57.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:56.983" endtime="20241013 17:00:57.019"/>
</kw>
<msg timestamp="20241013 17:00:57.019" level="INFO">${part1Md5Sum} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:00:56.982" endtime="20241013 17:00:57.019"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${eTag1}</arg>
<arg>${part1Md5Sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:00:57.019" endtime="20241013 17:00:57.020"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:57.026" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20241013 17:00:57.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:57.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:00:57.023" endtime="20241013 17:00:57.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:57.030" level="INFO"/>
<status status="PASS" starttime="20241013 17:00:57.030" endtime="20241013 17:00:57.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:57.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:57.031" endtime="20241013 17:00:57.031"/>
</kw>
<status status="PASS" starttime="20241013 17:00:57.022" endtime="20241013 17:00:57.031"/>
</kw>
<msg timestamp="20241013 17:00:57.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:57.021" endtime="20241013 17:00:57.032"/>
</kw>
<status status="PASS" starttime="20241013 17:00:57.020" endtime="20241013 17:00:57.032"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:57.037" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-8291753013/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:57.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:57.692" level="INFO">${output} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:00:57.034" endtime="20241013 17:00:57.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:57.693" level="INFO">{
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:00:57.693" endtime="20241013 17:00:57.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:57.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:57.693" endtime="20241013 17:00:57.694"/>
</kw>
<status status="PASS" starttime="20241013 17:00:57.034" endtime="20241013 17:00:57.694"/>
</kw>
<msg timestamp="20241013 17:00:57.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:57.033" endtime="20241013 17:00:57.694"/>
</kw>
<msg timestamp="20241013 17:00:57.694" level="INFO">${output} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:00:57.033" endtime="20241013 17:00:57.694"/>
</kw>
<msg timestamp="20241013 17:00:57.695" level="INFO">${result} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:00:57.032" endtime="20241013 17:00:57.695"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:57.698" level="INFO">Running command 'echo '{
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:57.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:57.703" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:00:57.695" endtime="20241013 17:00:57.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:57.704" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:00:57.704" endtime="20241013 17:00:57.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:57.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:57.704" endtime="20241013 17:00:57.705"/>
</kw>
<msg timestamp="20241013 17:00:57.705" level="INFO">${eTag2} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:00:57.695" endtime="20241013 17:00:57.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:57.705" endtime="20241013 17:00:57.705"/>
</kw>
<kw name="Execute" library="os">
<var>${part2Md5Sum}</var>
<arg>md5sum /tmp/part2 | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:57.709" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:57.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:57.714" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:00:57.707" endtime="20241013 17:00:57.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:57.715" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:00:57.714" endtime="20241013 17:00:57.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:57.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:57.715" endtime="20241013 17:00:57.715"/>
</kw>
<status status="PASS" starttime="20241013 17:00:57.706" endtime="20241013 17:00:57.716"/>
</kw>
<msg timestamp="20241013 17:00:57.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:57.706" endtime="20241013 17:00:57.716"/>
</kw>
<msg timestamp="20241013 17:00:57.716" level="INFO">${part2Md5Sum} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:00:57.706" endtime="20241013 17:00:57.716"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${eTag2}</arg>
<arg>${part2Md5Sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:00:57.716" endtime="20241013 17:00:57.716"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:57.719" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537 --bucket encrypted --key ozone-test-8291753013/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:58.179" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:00:58.179" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20241013 17:00:57.717" endtime="20241013 17:00:58.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:58.180" level="INFO">
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20241013 17:00:58.179" endtime="20241013 17:00:58.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:58.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:58.180" endtime="20241013 17:00:58.180"/>
</kw>
<msg timestamp="20241013 17:00:58.181" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20241013 17:00:57.717" endtime="20241013 17:00:58.181"/>
</kw>
<msg timestamp="20241013 17:00:58.181" level="INFO">${result} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20241013 17:00:57.716" endtime="20241013 17:00:58.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRequest</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:58.181" endtime="20241013 17:00:58.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>must specify at least one part</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:58.181" endtime="20241013 17:00:58.182"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:58.187" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id be4f317a-d0e2-4595-b5f5-9883b60fa629-113301183280779537 --bucket encrypted --key ozone-test-8291753013/multipartKey1 --multipart-upload 'Parts=[{ETag=2616367cb18232af9ef277a5228b106c,PartNumber=1},{ETag=9e6cc3c0311e8eb9548e860d8caf6734,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:58.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:58.654" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\""
}</msg>
<status status="PASS" starttime="20241013 17:00:58.184" endtime="20241013 17:00:58.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:58.655" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\""
}</msg>
<status status="PASS" starttime="20241013 17:00:58.655" endtime="20241013 17:00:58.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:58.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:58.656" endtime="20241013 17:00:58.656"/>
</kw>
<status status="PASS" starttime="20241013 17:00:58.183" endtime="20241013 17:00:58.656"/>
</kw>
<msg timestamp="20241013 17:00:58.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:58.183" endtime="20241013 17:00:58.656"/>
</kw>
<msg timestamp="20241013 17:00:58.657" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\""
}</msg>
<status status="PASS" starttime="20241013 17:00:58.182" endtime="20241013 17:00:58.657"/>
</kw>
<msg timestamp="20241013 17:00:58.657" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\""
}</msg>
<status status="PASS" starttime="20241013 17:00:58.182" endtime="20241013 17:00:58.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:58.657" endtime="20241013 17:00:58.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:58.657" endtime="20241013 17:00:58.658"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${resultETag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:58.660" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-8291753013/multipartKey1",
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:58.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:58.666" level="INFO">${output} = "ecfd60133c888ec74fc6ad92faf66f62-2"</msg>
<status status="PASS" starttime="20241013 17:00:58.658" endtime="20241013 17:00:58.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:58.667" level="INFO">"ecfd60133c888ec74fc6ad92faf66f62-2"</msg>
<status status="PASS" starttime="20241013 17:00:58.666" endtime="20241013 17:00:58.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:58.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:58.667" endtime="20241013 17:00:58.668"/>
</kw>
<msg timestamp="20241013 17:00:58.668" level="INFO">${resultETag} = "ecfd60133c888ec74fc6ad92faf66f62-2"</msg>
<status status="PASS" starttime="20241013 17:00:58.658" endtime="20241013 17:00:58.668"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedResultETag}</var>
<arg>echo -n ${eTag1}${eTag2} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:58.671" level="INFO">Running command 'echo -n 2616367cb18232af9ef277a5228b106c9e6cc3c0311e8eb9548e860d8caf6734 | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:58.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:58.676" level="INFO">${output} = ecfd60133c888ec74fc6ad92faf66f62</msg>
<status status="PASS" starttime="20241013 17:00:58.669" endtime="20241013 17:00:58.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:58.676" level="INFO">ecfd60133c888ec74fc6ad92faf66f62</msg>
<status status="PASS" starttime="20241013 17:00:58.676" endtime="20241013 17:00:58.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:58.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:58.677" endtime="20241013 17:00:58.677"/>
</kw>
<status status="PASS" starttime="20241013 17:00:58.669" endtime="20241013 17:00:58.677"/>
</kw>
<msg timestamp="20241013 17:00:58.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:58.668" endtime="20241013 17:00:58.677"/>
</kw>
<msg timestamp="20241013 17:00:58.677" level="INFO">${expectedResultETag} = ecfd60133c888ec74fc6ad92faf66f62</msg>
<status status="PASS" starttime="20241013 17:00:58.668" endtime="20241013 17:00:58.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:58.677" endtime="20241013 17:00:58.678"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resultETag}</arg>
<arg>"${expectedResultETag}-2"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:00:58.678" endtime="20241013 17:00:58.678"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:58.682" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8291753013/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:59.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:59.154" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20241013 17:00:58.680" endtime="20241013 17:00:59.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:59.155" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:00:59 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:00:59.155" endtime="20241013 17:00:59.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:59.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:59.155" endtime="20241013 17:00:59.156"/>
</kw>
<status status="PASS" starttime="20241013 17:00:58.679" endtime="20241013 17:00:59.156"/>
</kw>
<msg timestamp="20241013 17:00:59.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:58.679" endtime="20241013 17:00:59.156"/>
</kw>
<msg timestamp="20241013 17:00:59.156" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20241013 17:00:58.679" endtime="20241013 17:00:59.157"/>
</kw>
<msg timestamp="20241013 17:00:59.157" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20241013 17:00:58.678" endtime="20241013 17:00:59.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:59.157" endtime="20241013 17:00:59.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:00:59.157" endtime="20241013 17:00:59.157"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:59.160" level="INFO">Running command 'echo '{
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:00:59 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:00:59.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:00:59.166" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:00:59.158" endtime="20241013 17:00:59.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:00:59.166" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:00:59.166" endtime="20241013 17:00:59.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:00:59.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:00:59.167" endtime="20241013 17:00:59.167"/>
</kw>
<msg timestamp="20241013 17:00:59.167" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20241013 17:00:59.158" endtime="20241013 17:00:59.167"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:00:59.167" endtime="20241013 17:00:59.168"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:00:59.171" level="INFO">Running command 'ozone sh key info /s3v/encrypted/ozone-test-8291753013/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:03.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:03.405" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-8291753013/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 5243910,
  "creationTime" : "2024-10-13T17:00:58.609Z",...</msg>
<status status="PASS" starttime="20241013 17:00:59.169" endtime="20241013 17:01:03.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:03.406" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-8291753013/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 5243910,
  "creationTime" : "2024-10-13T17:00:58.609Z",
  "modificationTime" : "2024-10-13T17:00:58.609Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "ecfd60133c888ec74fc6ad92faf66f62-2",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 113750153625604363,
    "length" : 5243904,
    "offset" : 0,
    "keyOffset" : 0
  }, {
    "containerID" : 2,
    "localID" : 113750153625604364,
    "length" : 6,
    "offset" : 0,
    "keyOffset" : 5243904
  } ],
  "generation" : 17937,
  "fileEncryptionInfo" : {
    "cipherSuite" : "AES_CTR_NOPADDING",
    "iv" : "tCmhQA7VVVTSRSb33QNSsw==",
    "keyName" : "key1",
    "ezKeyVersionName" : "key1@0",
    "cryptoProtocolVersion" : "ENCRYPTION_ZONES",
    "encryptedDataEncryptionKey" : "09Uif920uDgmLvzudDjWcw=="
  },
  "file" : true
}</msg>
<status status="PASS" starttime="20241013 17:01:03.405" endtime="20241013 17:01:03.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:03.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:03.406" endtime="20241013 17:01:03.406"/>
</kw>
<status status="PASS" starttime="20241013 17:00:59.169" endtime="20241013 17:01:03.407"/>
</kw>
<msg timestamp="20241013 17:01:03.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:00:59.168" endtime="20241013 17:01:03.407"/>
</kw>
<msg timestamp="20241013 17:01:03.407" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-8291753013/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 5243910,
  "creationTime" : "2024-10-13T17:00:58.609Z",...</msg>
<status status="PASS" starttime="20241013 17:00:59.168" endtime="20241013 17:01:03.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:03.407" endtime="20241013 17:01:03.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:03.408" endtime="20241013 17:01:03.408"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:03.408" endtime="20241013 17:01:03.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:03.409" endtime="20241013 17:01:03.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:03.409" endtime="20241013 17:01:03.409"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:03.413" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8291753013/multipartKey1 /tmp/ozone-test-8291753013-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:04.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:04.693" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:03.411" endtime="20241013 17:01:04.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:04.694" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:03 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:01:04.694" endtime="20241013 17:01:04.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:04.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:04.695" endtime="20241013 17:01:04.695"/>
</kw>
<status status="PASS" starttime="20241013 17:01:03.410" endtime="20241013 17:01:04.695"/>
</kw>
<msg timestamp="20241013 17:01:04.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:03.410" endtime="20241013 17:01:04.696"/>
</kw>
<msg timestamp="20241013 17:01:04.696" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:03.410" endtime="20241013 17:01:04.696"/>
</kw>
<msg timestamp="20241013 17:01:04.696" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:03.409" endtime="20241013 17:01:04.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:04.696" endtime="20241013 17:01:04.697"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:04.700" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:03 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:04.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:04.706" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:01:04.697" endtime="20241013 17:01:04.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:04.707" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:01:04.706" endtime="20241013 17:01:04.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:04.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:04.707" endtime="20241013 17:01:04.708"/>
</kw>
<msg timestamp="20241013 17:01:04.708" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20241013 17:01:04.697" endtime="20241013 17:01:04.708"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:04.709" endtime="20241013 17:01:04.709"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:04.713" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243910,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:03 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:04.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:04.718" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:01:04.710" endtime="20241013 17:01:04.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:04.719" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:01:04.719" endtime="20241013 17:01:04.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:04.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:04.720" endtime="20241013 17:01:04.720"/>
</kw>
<msg timestamp="20241013 17:01:04.720" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20241013 17:01:04.709" endtime="20241013 17:01:04.720"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:04.721" endtime="20241013 17:01:04.721"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:04.725" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-8291753013-multipartKey1'.</msg>
<msg timestamp="20241013 17:01:04.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:04.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:04.723" endtime="20241013 17:01:04.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:04.737" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:04.736" endtime="20241013 17:01:04.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:04.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:04.737" endtime="20241013 17:01:04.738"/>
</kw>
<status status="PASS" starttime="20241013 17:01:04.722" endtime="20241013 17:01:04.738"/>
</kw>
<msg timestamp="20241013 17:01:04.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:04.722" endtime="20241013 17:01:04.739"/>
</kw>
<status status="PASS" starttime="20241013 17:01:04.721" endtime="20241013 17:01:04.739"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:04.744" level="INFO">Running command 'md5sum /tmp/ozone-test-8291753013-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:04.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:04.759" level="INFO">${output} = 4ef3e08c4c0101a44b2070d4083c4e09</msg>
<status status="PASS" starttime="20241013 17:01:04.741" endtime="20241013 17:01:04.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:04.760" level="INFO">4ef3e08c4c0101a44b2070d4083c4e09</msg>
<status status="PASS" starttime="20241013 17:01:04.760" endtime="20241013 17:01:04.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:04.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:04.761" endtime="20241013 17:01:04.761"/>
</kw>
<status status="PASS" starttime="20241013 17:01:04.741" endtime="20241013 17:01:04.761"/>
</kw>
<msg timestamp="20241013 17:01:04.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:04.740" endtime="20241013 17:01:04.762"/>
</kw>
<msg timestamp="20241013 17:01:04.762" level="INFO">${checksumbefore} = 4ef3e08c4c0101a44b2070d4083c4e09</msg>
<status status="PASS" starttime="20241013 17:01:04.740" endtime="20241013 17:01:04.762"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:04.766" level="INFO">Running command 'md5sum /tmp/ozone-test-8291753013-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:04.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:04.779" level="INFO">${output} = 4ef3e08c4c0101a44b2070d4083c4e09</msg>
<status status="PASS" starttime="20241013 17:01:04.763" endtime="20241013 17:01:04.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:04.781" level="INFO">4ef3e08c4c0101a44b2070d4083c4e09</msg>
<status status="PASS" starttime="20241013 17:01:04.780" endtime="20241013 17:01:04.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:04.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:04.781" endtime="20241013 17:01:04.781"/>
</kw>
<status status="PASS" starttime="20241013 17:01:04.763" endtime="20241013 17:01:04.782"/>
</kw>
<msg timestamp="20241013 17:01:04.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:04.763" endtime="20241013 17:01:04.782"/>
</kw>
<msg timestamp="20241013 17:01:04.782" level="INFO">${checksumafter} = 4ef3e08c4c0101a44b2070d4083c4e09</msg>
<status status="PASS" starttime="20241013 17:01:04.762" endtime="20241013 17:01:04.782"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:04.782" endtime="20241013 17:01:04.783"/>
</kw>
<status status="PASS" starttime="20241013 17:01:04.739" endtime="20241013 17:01:04.783"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:04.788" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8291753013/multipartKey1 --part-number 1 /tmp/ozone-test-8291753013-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:05.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:05.913" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:04.785" endtime="20241013 17:01:05.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:05.914" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:05 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:01:05.913" endtime="20241013 17:01:05.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:05.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:05.914" endtime="20241013 17:01:05.915"/>
</kw>
<status status="PASS" starttime="20241013 17:01:04.785" endtime="20241013 17:01:05.915"/>
</kw>
<msg timestamp="20241013 17:01:05.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:04.784" endtime="20241013 17:01:05.915"/>
</kw>
<msg timestamp="20241013 17:01:05.915" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:04.784" endtime="20241013 17:01:05.915"/>
</kw>
<msg timestamp="20241013 17:01:05.916" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:04.783" endtime="20241013 17:01:05.916"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:05.919" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:05.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:05.933" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:05.917" endtime="20241013 17:01:05.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:05.933" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:05.933" endtime="20241013 17:01:05.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:05.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:05.934" endtime="20241013 17:01:05.934"/>
</kw>
<status status="PASS" starttime="20241013 17:01:05.917" endtime="20241013 17:01:05.934"/>
</kw>
<msg timestamp="20241013 17:01:05.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:05.917" endtime="20241013 17:01:05.934"/>
</kw>
<msg timestamp="20241013 17:01:05.934" level="INFO">${checksumbefore} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:05.916" endtime="20241013 17:01:05.935"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:05.938" level="INFO">Running command 'md5sum /tmp/ozone-test-8291753013-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:05.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:05.951" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:05.936" endtime="20241013 17:01:05.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:05.952" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:05.951" endtime="20241013 17:01:05.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:05.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:05.952" endtime="20241013 17:01:05.953"/>
</kw>
<status status="PASS" starttime="20241013 17:01:05.935" endtime="20241013 17:01:05.953"/>
</kw>
<msg timestamp="20241013 17:01:05.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:05.935" endtime="20241013 17:01:05.953"/>
</kw>
<msg timestamp="20241013 17:01:05.953" level="INFO">${checksumafter} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:05.935" endtime="20241013 17:01:05.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:05.953" endtime="20241013 17:01:05.953"/>
</kw>
<status status="PASS" starttime="20241013 17:01:05.916" endtime="20241013 17:01:05.954"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:05.956" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:05 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:05.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:05.962" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:01:05.954" endtime="20241013 17:01:05.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:05.962" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:01:05.962" endtime="20241013 17:01:05.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:05.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:05.963" endtime="20241013 17:01:05.963"/>
</kw>
<msg timestamp="20241013 17:01:05.963" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20241013 17:01:05.954" endtime="20241013 17:01:05.963"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:05.964" endtime="20241013 17:01:05.964"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:05.966" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 5243904,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:05 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:05.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:05.971" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:01:05.964" endtime="20241013 17:01:05.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:05.972" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:01:05.972" endtime="20241013 17:01:05.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:05.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:05.973" endtime="20241013 17:01:05.973"/>
</kw>
<msg timestamp="20241013 17:01:05.973" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20241013 17:01:05.964" endtime="20241013 17:01:05.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:05.973" endtime="20241013 17:01:05.974"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:05.977" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8291753013/multipartKey1 --part-number 2 /tmp/ozone-test-8291753013-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:06.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:06.444" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 6,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:01:05.975" endtime="20241013 17:01:06.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:06.445" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 6,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:06 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:01:06.444" endtime="20241013 17:01:06.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:06.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:06.445" endtime="20241013 17:01:06.445"/>
</kw>
<status status="PASS" starttime="20241013 17:01:05.975" endtime="20241013 17:01:06.445"/>
</kw>
<msg timestamp="20241013 17:01:06.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:05.975" endtime="20241013 17:01:06.446"/>
</kw>
<msg timestamp="20241013 17:01:06.446" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 6,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:01:05.974" endtime="20241013 17:01:06.446"/>
</kw>
<msg timestamp="20241013 17:01:06.446" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:00:58 GMT",
    "ContentLength": 6,
    "ETag": "\"ecfd60133c888ec74fc6ad92faf66f62-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:01:05.974" endtime="20241013 17:01:06.446"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:06.450" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:06.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:06.454" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:06.448" endtime="20241013 17:01:06.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:06.455" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:06.455" endtime="20241013 17:01:06.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:06.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:06.456" endtime="20241013 17:01:06.456"/>
</kw>
<status status="PASS" starttime="20241013 17:01:06.447" endtime="20241013 17:01:06.456"/>
</kw>
<msg timestamp="20241013 17:01:06.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:06.447" endtime="20241013 17:01:06.456"/>
</kw>
<msg timestamp="20241013 17:01:06.456" level="INFO">${checksumbefore} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:06.447" endtime="20241013 17:01:06.456"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:06.460" level="INFO">Running command 'md5sum /tmp/ozone-test-8291753013-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:06.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:06.464" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:06.458" endtime="20241013 17:01:06.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:06.465" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:06.465" endtime="20241013 17:01:06.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:06.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:06.465" endtime="20241013 17:01:06.466"/>
</kw>
<status status="PASS" starttime="20241013 17:01:06.457" endtime="20241013 17:01:06.466"/>
</kw>
<msg timestamp="20241013 17:01:06.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:06.457" endtime="20241013 17:01:06.466"/>
</kw>
<msg timestamp="20241013 17:01:06.466" level="INFO">${checksumafter} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:06.457" endtime="20241013 17:01:06.466"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:06.466" endtime="20241013 17:01:06.467"/>
</kw>
<status status="PASS" starttime="20241013 17:01:06.446" endtime="20241013 17:01:06.467"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:00:55.753" endtime="20241013 17:01:06.467"/>
</test>
<test id="s1-s5-s8-t4" name="Test Multipart Upload with user defined metadata size larger than 2 KB" line="164">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:06.469" level="INFO">${randStr} = 0089468377</msg>
<status status="PASS" starttime="20241013 17:01:06.469" endtime="20241013 17:01:06.469"/>
</kw>
<msg timestamp="20241013 17:01:06.470" level="INFO">${random} = ozone-test-0089468377</msg>
<status status="PASS" starttime="20241013 17:01:06.469" endtime="20241013 17:01:06.470"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:06.470" level="INFO">${PREFIX} = ozone-test-0089468377</msg>
<status status="PASS" starttime="20241013 17:01:06.470" endtime="20241013 17:01:06.470"/>
</kw>
<status status="PASS" starttime="20241013 17:01:06.468" endtime="20241013 17:01:06.470"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:06.473" level="INFO">${custom_metadata_value} = jN2t2ljKLCHPBVVjMn4ZARACnPAFEqV5gEWqKiz9pmTiv13PLyKWDk6sKrRuGJArLHdlVNY7AQQHktB6eBQqRsM1C4Q0a1Mddt1t99fdrR9ETLrLVq78DsQjKPuYAkR7BuvLRVGDuTjZ89uB0H0kwzVCdnOtlxAGPkRS6WLvMN5puX31G5BhUywChCpLG3KMRYjCpryt...</msg>
<status status="PASS" starttime="20241013 17:01:06.470" endtime="20241013 17:01:06.473"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/mpuWithLargeMetadata --metadata="custom-key1=${custom_metadata_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:06.477" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-0089468377/mpuWithLargeMetadata --metadata="custom-key1=jN2t2ljKLCHPBVVjMn4ZARACnPAFEqV5gEWqKiz9pmTiv13PLyKWDk6sKrRuGJArLHdlVNY7AQQHktB6eBQqRsM1C4Q0a1Mddt1t99fdrR9ETLrLVq78DsQjKPuYAkR7BuvLRVGDuTjZ89uB0H0kwzVCdnOtlxAGPkRS6WLvMN5puX31G5BhUywChCpLG3KMRYjCprytKpwJVYvVIOI5wIChgGtfjyG2JsyjKWCkPF02QM7cNuVPdir5YFvKBsfUtzkE6c1KqHM1wbwNYY1cX4d9I9kc6iQ1Tc4ogOSrEzNFncjb8sPGL4TUpytEnS34BYh68M7xk5uQkhMfi0k5XOP7JLk6tiSXqrPoHSXaaRTJBY1sngCINFGNUYZUBHwpVPX9dHKUdXFApknOVDLo6H14oiRvT0wQLF2vGOYKQwPVynDAkr0mb9Y3uCn8aqRJ1jTPE4UFcPSXLLxRl7bKaiuseiKc5Jaj0uYUX1UGuj6WCHpYiUhd1z20Jaih7Grgh2VTr5NFGfosNL9BpGqFhj4CedNEwlEBkdZiJFEskL1z84t2lWapg4vvo9sCqBc3HQCsK0uW5SW2QM3SJNKZuqLObJuP0VyeHEzcxIjSdj6px4bieEfEgYqT8t9ihTxvJ99PSogpAJrP3as3WMvJ7qAp5pJdq8sjSMLuTtP2zbZATRC9DKsHWoPSLfpvRkzIo7Q0HXzlPXmEk19szDLtQxOUJG0UFKRvPPhUYdqhJiAEKyOtjj6sPYZQKrwouwVVo3dT1prYVKGY2qTL94JnaCO4nym8U5NSaOeIhLwGhrxWBttIMl3KelcZh4Q1lEpTpqJRTNvfkTtVUe2icsIJsM8YHSizukdZfTgvHo7ZvN7p5W8jrkzHOcB0Crx3cO1IIPh3Elg331XnP1vjC4EAtgN2hE35Chben4vxHATZNMt54GkQ6BKxCUjPyQuDIQoNbc8Urfewq9oNWzVr81XsiDC6AAcir8KZWKlZ7ruhI45cT5wPKyRl2h3f30v8eC9CqERE4nwGbCu0UuD9bxfPrerhUO9D8W8kvUnRQfW5BrhITGgSZVoIcsN8RvOMnPySaUUz8CfppqfPL6uEHBV2WaBdRh5Iwr14QSNlsQC6Z8h51sMHQ9wwVny304aQ5s6qB8mRWF3hXLHWyOJQlJgTfL5DhBAcTpFJ6JD2LZSo9L7c6xldZ4yCiZz61w7SEmd422U8O5o1WiDOhXU4IQGeiFOA9YwYLVAhcug6KeZnYIIc58ATC9g0HL5zsHOEdHX3NIkOaes40FYg9rrRCmivwdkfpOru7y7MrWRolZiaMNjt8hXxNI3WiMgwT0BQsMJ9gCp4PeQqe49mRvEgvsOdwU6Duw2Lse05qvT9ziCVfQRT2eRYpYWBuJHRlHCOUHGxuWcekV5ETER51kOOgyUOwpsCC59iWzbNu7YL1TCIgzwpfQh91AOPjnZIpA4fIpX4Pha1dS4D9YNuR8ITBGigRYYdQsOLlQ7TeSpbQ3SxEFWuJ4sL0Ir6Jt1O7xFXRL5gpg36UW0AVEJwApWJZwhb3poLBhKMWDCDBcCYflIIXpIWBHk9Is3g2O44anC7a3108OtLNW21joUFZoTGUP7uAoeB6jhnb6qiUYMrfOym3ExgOaYOyZyPHSs1CzLTR8IIrx8ol5QHyzan79v11Zr7wJDcgYkQ34lhjnZtGRHcXXZ2JwTnENMSVv6bZrundQZ1Lk1IrAJdEPHpdSInlvqeGc89rXcvnoawo63xu1hrZAnyLdM74jkxrbmlXqfQQ2MUP2WPQiSKfw0pCxBBAhUY5mvmc2BBDBMV5F0feoXkQTAImfFGFYtj8fuJDjO61IeGkIu00l5tztS2TdkblOZGKvBpHRMEcpXG3dfQznzQRBXLxamu0h0PBvKJ5QhGV5X9W5fsLVi1dRJvB1zOrCioobHkIkcQpSBhu0k1OvKYw9zbf00oEKEdyjEIYDOx936nckhYJvGn9EqWqGL1PSVdGmL0ePGTlj7KvpoXgn0656V9X9Z77YjbUnSdxADBBbELCfSYANseksO0hjaXYNVb5JU4NfvBkUGmmWHzB4IdVXVeKrIBWLLFd1g9ehcbRHHUvOlQhXC18W92oWEBTbRKHmVu2URK1kPAVWvxjCcHxhDlHLXeEQ9GAWhBZi1NhSH43ipToui8qUC44YzVG718J40jf2l1jJospxRi8NolwX96sZF8Eq7H9S7SomfeSs6TjTmPbAQHbP7oORSby12mcW4pvbVHgSF6tuziodW8nHACqBr4yn0JvodZ6ZAh0woeQ0EcpcLtyJkePUzj3kZBBzm53bHwkv0DQrQINqWItcsw4GOFwafQ6RBJUl2L133TZPzmq97Gnr1MKj46CSXFVobPXhiwQBkiPg9fsNPlsOl6yQtifkCeURCBZbh0ZIAAE5qU3NszPoOnbo6O4w7UMPqAwKwgCaxLuD77xOxlFYc0T9jJcdT1DQmRL3Jw1UMBAaNodl3bfIxvuysdleShp9S8zdPrBxYjbRxQ0i9Imp1JdhbZZocn9K9RoPnPRlj68hdlh9iLRRFxo9g1LCYQilEKKMH8B8dvqVotJ9YLxqhbQGl7ghVMjSAlCWN2rIabtyxKEdZe0ruw0lixmnfMkKSTdd6xgxnhqtF9sPv5DECW1i2j6Iik7dwWa75yhehZWba1AVvoCtKf9TWIREsWqWmEMfdPclpaoYLqyueQbquh7uW81jB1Ijsm5JK5sukhLMxzQPfJwbvTmuIIbuIvRR0i2GKDG2L3e7C0h0nnt3B0tFHeWkjsRqh3W7VDDGWUFPBU6OTYveYNyKvt5Q5q9EK5IcNo7wsJ3ujyEgnKGfwMs6mIl4NYvDZyLYJJo3qvyRylGx0iJ86MS9tiwZk7811ml0CE7g5khCKYoau82DjtXZ9YCHnX3vPODbN9PwMPNnEtKksxQAUQYpUHRQ8NxlHmVUVb3RoTR2UuPiLUsPRvldHHHZ7cxiti" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:06.938" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:06.938" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:01:06.475" endtime="20241013 17:01:06.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:06.939" level="INFO">
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:01:06.938" endtime="20241013 17:01:06.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:06.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:06.939" endtime="20241013 17:01:06.939"/>
</kw>
<msg timestamp="20241013 17:01:06.940" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:01:06.474" endtime="20241013 17:01:06.940"/>
</kw>
<msg timestamp="20241013 17:01:06.940" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:01:06.474" endtime="20241013 17:01:06.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:06.940" endtime="20241013 17:01:06.940"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:06.940" endtime="20241013 17:01:06.941"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:06.468" endtime="20241013 17:01:06.941"/>
</test>
<test id="s1-s5-s8-t5" name="Test Multipart Upload Complete Entity too small" line="170">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:06.943" level="INFO">${randStr} = 4956431763</msg>
<status status="PASS" starttime="20241013 17:01:06.943" endtime="20241013 17:01:06.943"/>
</kw>
<msg timestamp="20241013 17:01:06.943" level="INFO">${random} = ozone-test-4956431763</msg>
<status status="PASS" starttime="20241013 17:01:06.942" endtime="20241013 17:01:06.943"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:06.944" level="INFO">${PREFIX} = ozone-test-4956431763</msg>
<status status="PASS" starttime="20241013 17:01:06.943" endtime="20241013 17:01:06.944"/>
</kw>
<status status="PASS" starttime="20241013 17:01:06.942" endtime="20241013 17:01:06.944"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:06.948" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4956431763/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:07.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:07.429" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4956431763/multipartKey2",
    "UploadId": "ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516"
}</msg>
<status status="PASS" starttime="20241013 17:01:06.945" endtime="20241013 17:01:07.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:07.430" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4956431763/multipartKey2",
    "UploadId": "ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516"
}</msg>
<status status="PASS" starttime="20241013 17:01:07.430" endtime="20241013 17:01:07.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:07.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:07.430" endtime="20241013 17:01:07.431"/>
</kw>
<status status="PASS" starttime="20241013 17:01:06.945" endtime="20241013 17:01:07.431"/>
</kw>
<msg timestamp="20241013 17:01:07.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:06.945" endtime="20241013 17:01:07.431"/>
</kw>
<msg timestamp="20241013 17:01:07.431" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4956431763/multipartKey2",
    "UploadId": "ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516"
}</msg>
<status status="PASS" starttime="20241013 17:01:06.944" endtime="20241013 17:01:07.431"/>
</kw>
<msg timestamp="20241013 17:01:07.431" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4956431763/multipartKey2",
    "UploadId": "ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516"
}</msg>
<status status="PASS" starttime="20241013 17:01:06.944" endtime="20241013 17:01:07.432"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:07.435" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4956431763/multipartKey2",
    "UploadId": "ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:07.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:07.440" level="INFO">${output} = ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516</msg>
<status status="PASS" starttime="20241013 17:01:07.432" endtime="20241013 17:01:07.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:07.441" level="INFO">ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516</msg>
<status status="PASS" starttime="20241013 17:01:07.441" endtime="20241013 17:01:07.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:07.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:07.441" endtime="20241013 17:01:07.442"/>
</kw>
<msg timestamp="20241013 17:01:07.442" level="INFO">${uploadID} = ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516</msg>
<status status="PASS" starttime="20241013 17:01:07.432" endtime="20241013 17:01:07.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:07.442" endtime="20241013 17:01:07.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:07.443" endtime="20241013 17:01:07.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:07.443" endtime="20241013 17:01:07.443"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/10kb --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:07.447" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4956431763/multipartKey2 --part-number 1 --body /tmp/10kb --upload-id ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:08.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:08.003" level="INFO">${output} = {
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}</msg>
<status status="PASS" starttime="20241013 17:01:07.445" endtime="20241013 17:01:08.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:08.005" level="INFO">{
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}</msg>
<status status="PASS" starttime="20241013 17:01:08.004" endtime="20241013 17:01:08.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:08.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:08.005" endtime="20241013 17:01:08.005"/>
</kw>
<status status="PASS" starttime="20241013 17:01:07.445" endtime="20241013 17:01:08.005"/>
</kw>
<msg timestamp="20241013 17:01:08.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:07.445" endtime="20241013 17:01:08.006"/>
</kw>
<msg timestamp="20241013 17:01:08.006" level="INFO">${output} = {
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}</msg>
<status status="PASS" starttime="20241013 17:01:07.444" endtime="20241013 17:01:08.006"/>
</kw>
<msg timestamp="20241013 17:01:08.006" level="INFO">${result} = {
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}</msg>
<status status="PASS" starttime="20241013 17:01:07.443" endtime="20241013 17:01:08.006"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:08.009" level="INFO">Running command 'echo '{
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:08.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:08.015" level="INFO">${output} = 72a5e9ab4fd4e0d9dee350ed335513d6</msg>
<status status="PASS" starttime="20241013 17:01:08.007" endtime="20241013 17:01:08.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:08.015" level="INFO">72a5e9ab4fd4e0d9dee350ed335513d6</msg>
<status status="PASS" starttime="20241013 17:01:08.015" endtime="20241013 17:01:08.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:08.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:08.016" endtime="20241013 17:01:08.016"/>
</kw>
<msg timestamp="20241013 17:01:08.016" level="INFO">${eTag1} = 72a5e9ab4fd4e0d9dee350ed335513d6</msg>
<status status="PASS" starttime="20241013 17:01:08.006" endtime="20241013 17:01:08.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:08.017" endtime="20241013 17:01:08.017"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/10kb --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:08.021" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4956431763/multipartKey2 --part-number 2 --body /tmp/10kb --upload-id ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:08.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:08.569" level="INFO">${output} = {
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}</msg>
<status status="PASS" starttime="20241013 17:01:08.019" endtime="20241013 17:01:08.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:08.571" level="INFO">{
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}</msg>
<status status="PASS" starttime="20241013 17:01:08.570" endtime="20241013 17:01:08.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:08.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:08.571" endtime="20241013 17:01:08.571"/>
</kw>
<status status="PASS" starttime="20241013 17:01:08.018" endtime="20241013 17:01:08.572"/>
</kw>
<msg timestamp="20241013 17:01:08.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:08.018" endtime="20241013 17:01:08.572"/>
</kw>
<msg timestamp="20241013 17:01:08.572" level="INFO">${output} = {
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}</msg>
<status status="PASS" starttime="20241013 17:01:08.018" endtime="20241013 17:01:08.572"/>
</kw>
<msg timestamp="20241013 17:01:08.572" level="INFO">${result} = {
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}</msg>
<status status="PASS" starttime="20241013 17:01:08.017" endtime="20241013 17:01:08.572"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:08.575" level="INFO">Running command 'echo '{
    "ETag": "72a5e9ab4fd4e0d9dee350ed335513d6"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:08.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:08.581" level="INFO">${output} = 72a5e9ab4fd4e0d9dee350ed335513d6</msg>
<status status="PASS" starttime="20241013 17:01:08.573" endtime="20241013 17:01:08.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:08.582" level="INFO">72a5e9ab4fd4e0d9dee350ed335513d6</msg>
<status status="PASS" starttime="20241013 17:01:08.581" endtime="20241013 17:01:08.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:08.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:08.582" endtime="20241013 17:01:08.582"/>
</kw>
<msg timestamp="20241013 17:01:08.582" level="INFO">${eTag2} = 72a5e9ab4fd4e0d9dee350ed335513d6</msg>
<status status="PASS" starttime="20241013 17:01:08.572" endtime="20241013 17:01:08.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:08.582" endtime="20241013 17:01:08.583"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:08.586" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id ae55728c-b379-43e1-92d4-a43dcdf2dcd8-113301184012554516 --bucket encrypted --key ozone-test-4956431763/multipartKey2 --multipart-upload 'Parts=[{ETag=72a5e9ab4fd4e0d9dee350ed335513d6,PartNumber=1},{ETag=72a5e9ab4fd4e0d9dee350ed335513d6,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:09.052" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:09.052" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20241013 17:01:08.584" endtime="20241013 17:01:09.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:09.053" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20241013 17:01:09.052" endtime="20241013 17:01:09.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:09.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:09.053" endtime="20241013 17:01:09.053"/>
</kw>
<msg timestamp="20241013 17:01:09.053" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20241013 17:01:08.584" endtime="20241013 17:01:09.054"/>
</kw>
<msg timestamp="20241013 17:01:09.054" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20241013 17:01:08.583" endtime="20241013 17:01:09.054"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:09.054" endtime="20241013 17:01:09.054"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:06.941" endtime="20241013 17:01:09.054"/>
</test>
<test id="s1-s5-s8-t6" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="191">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:09.057" level="INFO">${randStr} = 3658149914</msg>
<status status="PASS" starttime="20241013 17:01:09.056" endtime="20241013 17:01:09.057"/>
</kw>
<msg timestamp="20241013 17:01:09.057" level="INFO">${random} = ozone-test-3658149914</msg>
<status status="PASS" starttime="20241013 17:01:09.056" endtime="20241013 17:01:09.057"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:09.057" level="INFO">${PREFIX} = ozone-test-3658149914</msg>
<status status="PASS" starttime="20241013 17:01:09.057" endtime="20241013 17:01:09.057"/>
</kw>
<status status="PASS" starttime="20241013 17:01:09.055" endtime="20241013 17:01:09.057"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:09.061" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-3658149914/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:09.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:09.562" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3658149914/multipartKey3",
    "UploadId": "8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559"
}</msg>
<status status="PASS" starttime="20241013 17:01:09.059" endtime="20241013 17:01:09.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:09.564" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-3658149914/multipartKey3",
    "UploadId": "8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559"
}</msg>
<status status="PASS" starttime="20241013 17:01:09.563" endtime="20241013 17:01:09.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:09.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:09.564" endtime="20241013 17:01:09.564"/>
</kw>
<status status="PASS" starttime="20241013 17:01:09.058" endtime="20241013 17:01:09.565"/>
</kw>
<msg timestamp="20241013 17:01:09.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:09.058" endtime="20241013 17:01:09.565"/>
</kw>
<msg timestamp="20241013 17:01:09.565" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3658149914/multipartKey3",
    "UploadId": "8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559"
}</msg>
<status status="PASS" starttime="20241013 17:01:09.058" endtime="20241013 17:01:09.565"/>
</kw>
<msg timestamp="20241013 17:01:09.565" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-3658149914/multipartKey3",
    "UploadId": "8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559"
}</msg>
<status status="PASS" starttime="20241013 17:01:09.057" endtime="20241013 17:01:09.565"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:09.568" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-3658149914/multipartKey3",
    "UploadId": "8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:09.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:09.574" level="INFO">${output} = 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559</msg>
<status status="PASS" starttime="20241013 17:01:09.566" endtime="20241013 17:01:09.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:09.575" level="INFO">8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559</msg>
<status status="PASS" starttime="20241013 17:01:09.574" endtime="20241013 17:01:09.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:09.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:09.575" endtime="20241013 17:01:09.575"/>
</kw>
<msg timestamp="20241013 17:01:09.575" level="INFO">${uploadID} = 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559</msg>
<status status="PASS" starttime="20241013 17:01:09.565" endtime="20241013 17:01:09.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:09.576" endtime="20241013 17:01:09.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:09.576" endtime="20241013 17:01:09.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:09.577" endtime="20241013 17:01:09.577"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:09.580" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559 --bucket encrypted --key ozone-test-3658149914/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:10.047" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:10.047" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:09.578" endtime="20241013 17:01:10.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:10.048" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20241013 17:01:10.047" endtime="20241013 17:01:10.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:10.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:10.048" endtime="20241013 17:01:10.049"/>
</kw>
<msg timestamp="20241013 17:01:10.049" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:09.578" endtime="20241013 17:01:10.049"/>
</kw>
<msg timestamp="20241013 17:01:10.049" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:09.577" endtime="20241013 17:01:10.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:10.049" endtime="20241013 17:01:10.050"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:10.053" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559 --bucket encrypted --key ozone-test-3658149914/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:10.520" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:10.520" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:10.051" endtime="20241013 17:01:10.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:10.522" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20241013 17:01:10.521" endtime="20241013 17:01:10.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:10.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:10.522" endtime="20241013 17:01:10.522"/>
</kw>
<msg timestamp="20241013 17:01:10.523" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:10.050" endtime="20241013 17:01:10.523"/>
</kw>
<msg timestamp="20241013 17:01:10.523" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:10.050" endtime="20241013 17:01:10.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:10.523" endtime="20241013 17:01:10.524"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:10.530" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3658149914/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:11.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:11.180" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:10.527" endtime="20241013 17:01:11.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:11.181" level="INFO">{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:11.180" endtime="20241013 17:01:11.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:11.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:11.181" endtime="20241013 17:01:11.182"/>
</kw>
<status status="PASS" starttime="20241013 17:01:10.526" endtime="20241013 17:01:11.182"/>
</kw>
<msg timestamp="20241013 17:01:11.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:10.526" endtime="20241013 17:01:11.182"/>
</kw>
<msg timestamp="20241013 17:01:11.182" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:10.525" endtime="20241013 17:01:11.182"/>
</kw>
<msg timestamp="20241013 17:01:11.182" level="INFO">${result} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:10.524" endtime="20241013 17:01:11.182"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:11.185" level="INFO">Running command 'echo '{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:11.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:11.191" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:11.183" endtime="20241013 17:01:11.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:11.192" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:11.191" endtime="20241013 17:01:11.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:11.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:11.192" endtime="20241013 17:01:11.192"/>
</kw>
<msg timestamp="20241013 17:01:11.192" level="INFO">${eTag1} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:11.182" endtime="20241013 17:01:11.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:11.193" endtime="20241013 17:01:11.193"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:11.196" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3658149914/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:11.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:11.853" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:11.195" endtime="20241013 17:01:11.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:11.854" level="INFO">{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:11.853" endtime="20241013 17:01:11.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:11.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:11.854" endtime="20241013 17:01:11.855"/>
</kw>
<status status="PASS" starttime="20241013 17:01:11.194" endtime="20241013 17:01:11.855"/>
</kw>
<msg timestamp="20241013 17:01:11.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:11.194" endtime="20241013 17:01:11.855"/>
</kw>
<msg timestamp="20241013 17:01:11.855" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:11.194" endtime="20241013 17:01:11.855"/>
</kw>
<msg timestamp="20241013 17:01:11.856" level="INFO">${result} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:11.193" endtime="20241013 17:01:11.856"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:11.860" level="INFO">Running command 'echo '{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:11.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:11.870" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:11.857" endtime="20241013 17:01:11.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:11.871" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:11.871" endtime="20241013 17:01:11.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:11.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:11.872" endtime="20241013 17:01:11.872"/>
</kw>
<msg timestamp="20241013 17:01:11.873" level="INFO">${eTag2} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:11.856" endtime="20241013 17:01:11.873"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:11.873" endtime="20241013 17:01:11.874"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:11.879" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20241013 17:01:11.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:11.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:11.875" endtime="20241013 17:01:11.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:11.884" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:11.884" endtime="20241013 17:01:11.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:11.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:11.885" endtime="20241013 17:01:11.885"/>
</kw>
<status status="PASS" starttime="20241013 17:01:11.875" endtime="20241013 17:01:11.886"/>
</kw>
<msg timestamp="20241013 17:01:11.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:11.874" endtime="20241013 17:01:11.886"/>
</kw>
<status status="PASS" starttime="20241013 17:01:11.874" endtime="20241013 17:01:11.886"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:11.893" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-3658149914/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:12.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:12.497" level="INFO">${output} = {
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}</msg>
<status status="PASS" starttime="20241013 17:01:11.889" endtime="20241013 17:01:12.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:12.499" level="INFO">{
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}</msg>
<status status="PASS" starttime="20241013 17:01:12.498" endtime="20241013 17:01:12.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:12.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:12.499" endtime="20241013 17:01:12.499"/>
</kw>
<status status="PASS" starttime="20241013 17:01:11.888" endtime="20241013 17:01:12.500"/>
</kw>
<msg timestamp="20241013 17:01:12.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:11.888" endtime="20241013 17:01:12.500"/>
</kw>
<msg timestamp="20241013 17:01:12.500" level="INFO">${output} = {
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}</msg>
<status status="PASS" starttime="20241013 17:01:11.887" endtime="20241013 17:01:12.500"/>
</kw>
<msg timestamp="20241013 17:01:12.500" level="INFO">${result} = {
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}</msg>
<status status="PASS" starttime="20241013 17:01:11.886" endtime="20241013 17:01:12.500"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:12.504" level="INFO">Running command 'echo '{
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:12.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:12.512" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:01:12.501" endtime="20241013 17:01:12.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:12.513" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:01:12.513" endtime="20241013 17:01:12.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:12.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:12.514" endtime="20241013 17:01:12.514"/>
</kw>
<msg timestamp="20241013 17:01:12.514" level="INFO">${eTag3} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:01:12.501" endtime="20241013 17:01:12.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:12.515" endtime="20241013 17:01:12.515"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:12.520" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559 --bucket encrypted --key ozone-test-3658149914/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:12.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:12.990" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:12.517" endtime="20241013 17:01:12.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:12.991" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20241013 17:01:12.991" endtime="20241013 17:01:12.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:12.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:12.991" endtime="20241013 17:01:12.992"/>
</kw>
<msg timestamp="20241013 17:01:12.992" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:12.516" endtime="20241013 17:01:12.992"/>
</kw>
<msg timestamp="20241013 17:01:12.992" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:12.515" endtime="20241013 17:01:12.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:12.992" endtime="20241013 17:01:12.993"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:12.996" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559 --bucket encrypted --key ozone-test-3658149914/multipartKey3 --multipart-upload 'Parts=[{ETag=2616367cb18232af9ef277a5228b106c,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:13.468" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:13.468" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:12.994" endtime="20241013 17:01:13.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:13.469" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20241013 17:01:13.468" endtime="20241013 17:01:13.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:13.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:13.469" endtime="20241013 17:01:13.470"/>
</kw>
<msg timestamp="20241013 17:01:13.470" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:12.993" endtime="20241013 17:01:13.470"/>
</kw>
<msg timestamp="20241013 17:01:13.470" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:01:12.993" endtime="20241013 17:01:13.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:13.470" endtime="20241013 17:01:13.471"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:13.474" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559 --bucket encrypted --key ozone-test-3658149914/multipartKey3 --multipart-upload 'Parts=[{ETag=2616367cb18232af9ef277a5228b106c,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:13.969" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:13.969" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20241013 17:01:13.472" endtime="20241013 17:01:13.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:13.970" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20241013 17:01:13.970" endtime="20241013 17:01:13.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:13.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:13.971" endtime="20241013 17:01:13.971"/>
</kw>
<msg timestamp="20241013 17:01:13.971" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20241013 17:01:13.472" endtime="20241013 17:01:13.971"/>
</kw>
<msg timestamp="20241013 17:01:13.971" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20241013 17:01:13.471" endtime="20241013 17:01:13.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:13.972" endtime="20241013 17:01:13.972"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:13.976" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8c782569-5a7c-4a01-8359-d800917008a8-113301184152801559 --bucket encrypted --key ozone-test-3658149914/multipartKey3 --multipart-upload 'Parts=[{ETag=2616367cb18232af9ef277a5228b106c,PartNumber=1},{ETag=804f368834f04e8d39a8a7c76ba870e3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:14.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:14.455" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3658149914/multipartKey3",
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\""
}</msg>
<status status="PASS" starttime="20241013 17:01:13.974" endtime="20241013 17:01:14.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:14.456" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3658149914/multipartKey3",
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\""
}</msg>
<status status="PASS" starttime="20241013 17:01:14.455" endtime="20241013 17:01:14.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:14.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:14.456" endtime="20241013 17:01:14.456"/>
</kw>
<status status="PASS" starttime="20241013 17:01:13.973" endtime="20241013 17:01:14.457"/>
</kw>
<msg timestamp="20241013 17:01:14.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:13.973" endtime="20241013 17:01:14.457"/>
</kw>
<msg timestamp="20241013 17:01:14.457" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3658149914/multipartKey3",
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\""
}</msg>
<status status="PASS" starttime="20241013 17:01:13.973" endtime="20241013 17:01:14.457"/>
</kw>
<msg timestamp="20241013 17:01:14.457" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-3658149914/multipartKey3",
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\""
}</msg>
<status status="PASS" starttime="20241013 17:01:13.972" endtime="20241013 17:01:14.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:14.457" endtime="20241013 17:01:14.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:14.458" endtime="20241013 17:01:14.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:14.458" endtime="20241013 17:01:14.459"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:14.463" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-3658149914/multipartKey3 /tmp/ozone-test-3658149914-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:15.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:15.555" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 5243910,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:14.461" endtime="20241013 17:01:15.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:15.557" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 5243910,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:14 GMT",
    "Metadata": {},
    "PartsCount": 3
}</msg>
<status status="PASS" starttime="20241013 17:01:15.556" endtime="20241013 17:01:15.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:15.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:15.557" endtime="20241013 17:01:15.558"/>
</kw>
<status status="PASS" starttime="20241013 17:01:14.460" endtime="20241013 17:01:15.558"/>
</kw>
<msg timestamp="20241013 17:01:15.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:14.460" endtime="20241013 17:01:15.558"/>
</kw>
<msg timestamp="20241013 17:01:15.558" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 5243910,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:14.460" endtime="20241013 17:01:15.558"/>
</kw>
<msg timestamp="20241013 17:01:15.558" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 5243910,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:14.459" endtime="20241013 17:01:15.558"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:15.564" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-3658149914-multipartKey3'.</msg>
<msg timestamp="20241013 17:01:15.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:15.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:15.560" endtime="20241013 17:01:15.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:15.582" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:15.581" endtime="20241013 17:01:15.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:15.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:15.582" endtime="20241013 17:01:15.582"/>
</kw>
<status status="PASS" starttime="20241013 17:01:15.560" endtime="20241013 17:01:15.583"/>
</kw>
<msg timestamp="20241013 17:01:15.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:15.559" endtime="20241013 17:01:15.583"/>
</kw>
<status status="PASS" starttime="20241013 17:01:15.559" endtime="20241013 17:01:15.583"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:15.589" level="INFO">Running command 'md5sum /tmp/ozone-test-3658149914-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:15.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:15.604" level="INFO">${output} = 1cd15d8c3b8e6ad357ad286c68b0694a</msg>
<status status="PASS" starttime="20241013 17:01:15.585" endtime="20241013 17:01:15.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:15.606" level="INFO">1cd15d8c3b8e6ad357ad286c68b0694a</msg>
<status status="PASS" starttime="20241013 17:01:15.605" endtime="20241013 17:01:15.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:15.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:15.606" endtime="20241013 17:01:15.607"/>
</kw>
<status status="PASS" starttime="20241013 17:01:15.585" endtime="20241013 17:01:15.608"/>
</kw>
<msg timestamp="20241013 17:01:15.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:15.584" endtime="20241013 17:01:15.608"/>
</kw>
<msg timestamp="20241013 17:01:15.608" level="INFO">${checksumbefore} = 1cd15d8c3b8e6ad357ad286c68b0694a</msg>
<status status="PASS" starttime="20241013 17:01:15.584" endtime="20241013 17:01:15.608"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:15.615" level="INFO">Running command 'md5sum /tmp/ozone-test-3658149914-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:15.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:15.633" level="INFO">${output} = 1cd15d8c3b8e6ad357ad286c68b0694a</msg>
<status status="PASS" starttime="20241013 17:01:15.611" endtime="20241013 17:01:15.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:15.634" level="INFO">1cd15d8c3b8e6ad357ad286c68b0694a</msg>
<status status="PASS" starttime="20241013 17:01:15.633" endtime="20241013 17:01:15.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:15.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:15.634" endtime="20241013 17:01:15.636"/>
</kw>
<status status="PASS" starttime="20241013 17:01:15.610" endtime="20241013 17:01:15.636"/>
</kw>
<msg timestamp="20241013 17:01:15.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:15.610" endtime="20241013 17:01:15.636"/>
</kw>
<msg timestamp="20241013 17:01:15.636" level="INFO">${checksumafter} = 1cd15d8c3b8e6ad357ad286c68b0694a</msg>
<status status="PASS" starttime="20241013 17:01:15.609" endtime="20241013 17:01:15.636"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:15.636" endtime="20241013 17:01:15.637"/>
</kw>
<status status="PASS" starttime="20241013 17:01:15.583" endtime="20241013 17:01:15.637"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:15.643" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-3658149914/multipartKey3 --part-number 1 /tmp/ozone-test-3658149914-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:16.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:16.621" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 5243904,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:15.639" endtime="20241013 17:01:16.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:16.622" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 5243904,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:16 GMT",
    "Metadata": {},
    "PartsCount": 3
}</msg>
<status status="PASS" starttime="20241013 17:01:16.621" endtime="20241013 17:01:16.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:16.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:16.622" endtime="20241013 17:01:16.623"/>
</kw>
<status status="PASS" starttime="20241013 17:01:15.639" endtime="20241013 17:01:16.623"/>
</kw>
<msg timestamp="20241013 17:01:16.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:15.638" endtime="20241013 17:01:16.623"/>
</kw>
<msg timestamp="20241013 17:01:16.623" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 5243904,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:15.638" endtime="20241013 17:01:16.623"/>
</kw>
<msg timestamp="20241013 17:01:16.623" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 5243904,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:15.637" endtime="20241013 17:01:16.623"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:16.627" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:16.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:16.640" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:16.625" endtime="20241013 17:01:16.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:16.641" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:16.641" endtime="20241013 17:01:16.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:16.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:16.641" endtime="20241013 17:01:16.642"/>
</kw>
<status status="PASS" starttime="20241013 17:01:16.625" endtime="20241013 17:01:16.642"/>
</kw>
<msg timestamp="20241013 17:01:16.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:16.624" endtime="20241013 17:01:16.642"/>
</kw>
<msg timestamp="20241013 17:01:16.642" level="INFO">${checksumbefore} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:16.624" endtime="20241013 17:01:16.642"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:16.646" level="INFO">Running command 'md5sum /tmp/ozone-test-3658149914-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:16.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:16.658" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:16.644" endtime="20241013 17:01:16.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:16.659" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:16.659" endtime="20241013 17:01:16.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:16.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:16.659" endtime="20241013 17:01:16.660"/>
</kw>
<status status="PASS" starttime="20241013 17:01:16.643" endtime="20241013 17:01:16.660"/>
</kw>
<msg timestamp="20241013 17:01:16.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:16.643" endtime="20241013 17:01:16.660"/>
</kw>
<msg timestamp="20241013 17:01:16.660" level="INFO">${checksumafter} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:16.642" endtime="20241013 17:01:16.660"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:16.660" endtime="20241013 17:01:16.661"/>
</kw>
<status status="PASS" starttime="20241013 17:01:16.623" endtime="20241013 17:01:16.661"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:16.665" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-3658149914/multipartKey3 --part-number 3 /tmp/ozone-test-3658149914-multipartKey3-part3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:17.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:17.142" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 6,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:01:16.663" endtime="20241013 17:01:17.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:17.143" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 6,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:17 GMT",
    "Metadata": {},
    "PartsCount": 3
}</msg>
<status status="PASS" starttime="20241013 17:01:17.142" endtime="20241013 17:01:17.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:17.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:17.143" endtime="20241013 17:01:17.143"/>
</kw>
<status status="PASS" starttime="20241013 17:01:16.662" endtime="20241013 17:01:17.144"/>
</kw>
<msg timestamp="20241013 17:01:17.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:16.662" endtime="20241013 17:01:17.144"/>
</kw>
<msg timestamp="20241013 17:01:17.144" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 6,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:01:16.661" endtime="20241013 17:01:17.144"/>
</kw>
<msg timestamp="20241013 17:01:17.144" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:14 GMT",
    "ContentLength": 6,
    "ETag": "\"bd39e228b63a41124eb2cb8ff6f341a5-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:01:16.661" endtime="20241013 17:01:17.144"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part3</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:17.148" level="INFO">Running command 'md5sum /tmp/part3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:17.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:17.153" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:01:17.146" endtime="20241013 17:01:17.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:17.154" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:01:17.153" endtime="20241013 17:01:17.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:17.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:17.154" endtime="20241013 17:01:17.155"/>
</kw>
<status status="PASS" starttime="20241013 17:01:17.146" endtime="20241013 17:01:17.155"/>
</kw>
<msg timestamp="20241013 17:01:17.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:17.145" endtime="20241013 17:01:17.155"/>
</kw>
<msg timestamp="20241013 17:01:17.155" level="INFO">${checksumbefore} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:01:17.145" endtime="20241013 17:01:17.155"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:17.158" level="INFO">Running command 'md5sum /tmp/ozone-test-3658149914-multipartKey3-part3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:17.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:17.162" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:01:17.156" endtime="20241013 17:01:17.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:17.163" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:01:17.163" endtime="20241013 17:01:17.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:17.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:17.164" endtime="20241013 17:01:17.164"/>
</kw>
<status status="PASS" starttime="20241013 17:01:17.156" endtime="20241013 17:01:17.164"/>
</kw>
<msg timestamp="20241013 17:01:17.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:17.156" endtime="20241013 17:01:17.164"/>
</kw>
<msg timestamp="20241013 17:01:17.165" level="INFO">${checksumafter} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:01:17.155" endtime="20241013 17:01:17.165"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:17.165" endtime="20241013 17:01:17.165"/>
</kw>
<status status="PASS" starttime="20241013 17:01:17.144" endtime="20241013 17:01:17.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:09.055" endtime="20241013 17:01:17.165"/>
</test>
<test id="s1-s5-s8-t7" name="Test abort Multipart upload" line="241">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:17.167" level="INFO">${randStr} = 1388744123</msg>
<status status="PASS" starttime="20241013 17:01:17.167" endtime="20241013 17:01:17.167"/>
</kw>
<msg timestamp="20241013 17:01:17.167" level="INFO">${random} = ozone-test-1388744123</msg>
<status status="PASS" starttime="20241013 17:01:17.167" endtime="20241013 17:01:17.168"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:17.168" level="INFO">${PREFIX} = ozone-test-1388744123</msg>
<status status="PASS" starttime="20241013 17:01:17.168" endtime="20241013 17:01:17.168"/>
</kw>
<status status="PASS" starttime="20241013 17:01:17.166" endtime="20241013 17:01:17.168"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:17.171" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-1388744123/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:17.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:17.650" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1388744123/multipartKey4",
    "UploadId": "2052d3f9-27ac-499b-971b-8aa00d05ca88-113301184682594587"
}</msg>
<status status="PASS" starttime="20241013 17:01:17.170" endtime="20241013 17:01:17.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:17.652" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-1388744123/multipartKey4",
    "UploadId": "2052d3f9-27ac-499b-971b-8aa00d05ca88-113301184682594587"
}</msg>
<status status="PASS" starttime="20241013 17:01:17.651" endtime="20241013 17:01:17.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:17.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:17.653" endtime="20241013 17:01:17.653"/>
</kw>
<status status="PASS" starttime="20241013 17:01:17.169" endtime="20241013 17:01:17.653"/>
</kw>
<msg timestamp="20241013 17:01:17.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:17.169" endtime="20241013 17:01:17.653"/>
</kw>
<msg timestamp="20241013 17:01:17.654" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1388744123/multipartKey4",
    "UploadId": "2052d3f9-27ac-499b-971b-8aa00d05ca88-113301184682594587"
}</msg>
<status status="PASS" starttime="20241013 17:01:17.169" endtime="20241013 17:01:17.654"/>
</kw>
<msg timestamp="20241013 17:01:17.654" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1388744123/multipartKey4",
    "UploadId": "2052d3f9-27ac-499b-971b-8aa00d05ca88-113301184682594587"
}</msg>
<status status="PASS" starttime="20241013 17:01:17.168" endtime="20241013 17:01:17.654"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:17.657" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-1388744123/multipartKey4",
    "UploadId": "2052d3f9-27ac-499b-971b-8aa00d05ca88-113301184682594587"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:17.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:17.662" level="INFO">${output} = 2052d3f9-27ac-499b-971b-8aa00d05ca88-113301184682594587</msg>
<status status="PASS" starttime="20241013 17:01:17.654" endtime="20241013 17:01:17.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:17.663" level="INFO">2052d3f9-27ac-499b-971b-8aa00d05ca88-113301184682594587</msg>
<status status="PASS" starttime="20241013 17:01:17.663" endtime="20241013 17:01:17.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:17.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:17.663" endtime="20241013 17:01:17.664"/>
</kw>
<msg timestamp="20241013 17:01:17.664" level="INFO">${uploadID} = 2052d3f9-27ac-499b-971b-8aa00d05ca88-113301184682594587</msg>
<status status="PASS" starttime="20241013 17:01:17.654" endtime="20241013 17:01:17.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:17.664" endtime="20241013 17:01:17.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:17.665" endtime="20241013 17:01:17.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:17.665" endtime="20241013 17:01:17.665"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:17.668" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-1388744123/multipartKey4 --upload-id 2052d3f9-27ac-499b-971b-8aa00d05ca88-113301184682594587 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:18.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:18.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:17.666" endtime="20241013 17:01:18.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:18.122" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:18.122" endtime="20241013 17:01:18.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:18.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:18.123" endtime="20241013 17:01:18.123"/>
</kw>
<msg timestamp="20241013 17:01:18.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:17.666" endtime="20241013 17:01:18.123"/>
</kw>
<msg timestamp="20241013 17:01:18.123" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:01:17.665" endtime="20241013 17:01:18.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:17.166" endtime="20241013 17:01:18.124"/>
</test>
<test id="s1-s5-s8-t8" name="Test abort Multipart upload with invalid uploadId" line="250">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:18.126" level="INFO">${randStr} = 5831366369</msg>
<status status="PASS" starttime="20241013 17:01:18.125" endtime="20241013 17:01:18.126"/>
</kw>
<msg timestamp="20241013 17:01:18.126" level="INFO">${random} = ozone-test-5831366369</msg>
<status status="PASS" starttime="20241013 17:01:18.125" endtime="20241013 17:01:18.126"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:18.126" level="INFO">${PREFIX} = ozone-test-5831366369</msg>
<status status="PASS" starttime="20241013 17:01:18.126" endtime="20241013 17:01:18.126"/>
</kw>
<status status="PASS" starttime="20241013 17:01:18.125" endtime="20241013 17:01:18.126"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:18.130" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-5831366369/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:18.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:18.597" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20241013 17:01:18.128" endtime="20241013 17:01:18.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:18.598" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20241013 17:01:18.598" endtime="20241013 17:01:18.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:18.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:18.598" endtime="20241013 17:01:18.599"/>
</kw>
<msg timestamp="20241013 17:01:18.599" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20241013 17:01:18.127" endtime="20241013 17:01:18.599"/>
</kw>
<msg timestamp="20241013 17:01:18.600" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20241013 17:01:18.127" endtime="20241013 17:01:18.600"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:18.124" endtime="20241013 17:01:18.600"/>
</test>
<test id="s1-s5-s8-t9" name="Upload part with Incorrect uploadID" line="253">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:18.602" level="INFO">${randStr} = 7730469345</msg>
<status status="PASS" starttime="20241013 17:01:18.601" endtime="20241013 17:01:18.602"/>
</kw>
<msg timestamp="20241013 17:01:18.602" level="INFO">${random} = ozone-test-7730469345</msg>
<status status="PASS" starttime="20241013 17:01:18.601" endtime="20241013 17:01:18.602"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:18.602" level="INFO">${PREFIX} = ozone-test-7730469345</msg>
<status status="PASS" starttime="20241013 17:01:18.602" endtime="20241013 17:01:18.602"/>
</kw>
<status status="PASS" starttime="20241013 17:01:18.601" endtime="20241013 17:01:18.603"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:18.607" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-7730469345/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:19.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:19.076" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7730469345/multipartKey",
    "UploadId": "a44e4a03-ca6d-4ceb-9d5f-bfaed6a5b652-113301184775852316"
}</msg>
<status status="PASS" starttime="20241013 17:01:18.604" endtime="20241013 17:01:19.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:19.077" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-7730469345/multipartKey",
    "UploadId": "a44e4a03-ca6d-4ceb-9d5f-bfaed6a5b652-113301184775852316"
}</msg>
<status status="PASS" starttime="20241013 17:01:19.077" endtime="20241013 17:01:19.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:19.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:19.077" endtime="20241013 17:01:19.078"/>
</kw>
<status status="PASS" starttime="20241013 17:01:18.604" endtime="20241013 17:01:19.078"/>
</kw>
<msg timestamp="20241013 17:01:19.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:18.603" endtime="20241013 17:01:19.078"/>
</kw>
<msg timestamp="20241013 17:01:19.078" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7730469345/multipartKey",
    "UploadId": "a44e4a03-ca6d-4ceb-9d5f-bfaed6a5b652-113301184775852316"
}</msg>
<status status="PASS" starttime="20241013 17:01:18.603" endtime="20241013 17:01:19.078"/>
</kw>
<msg timestamp="20241013 17:01:19.078" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7730469345/multipartKey",
    "UploadId": "a44e4a03-ca6d-4ceb-9d5f-bfaed6a5b652-113301184775852316"
}</msg>
<status status="PASS" starttime="20241013 17:01:18.603" endtime="20241013 17:01:19.078"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:19.082" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:01:19.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:19.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:19.080" endtime="20241013 17:01:19.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:19.085" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:19.084" endtime="20241013 17:01:19.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:19.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:19.085" endtime="20241013 17:01:19.085"/>
</kw>
<status status="PASS" starttime="20241013 17:01:19.079" endtime="20241013 17:01:19.085"/>
</kw>
<msg timestamp="20241013 17:01:19.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:19.079" endtime="20241013 17:01:19.086"/>
</kw>
<status status="PASS" starttime="20241013 17:01:19.079" endtime="20241013 17:01:19.086"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:19.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-7730469345/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:19.555" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:19.555" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20241013 17:01:19.087" endtime="20241013 17:01:19.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:19.556" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20241013 17:01:19.555" endtime="20241013 17:01:19.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:19.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:19.556" endtime="20241013 17:01:19.557"/>
</kw>
<msg timestamp="20241013 17:01:19.557" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20241013 17:01:19.086" endtime="20241013 17:01:19.557"/>
</kw>
<msg timestamp="20241013 17:01:19.557" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20241013 17:01:19.086" endtime="20241013 17:01:19.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:19.557" endtime="20241013 17:01:19.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:18.600" endtime="20241013 17:01:19.557"/>
</test>
<test id="s1-s5-s8-t10" name="Test list parts" line="259">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:19.560" level="INFO">${randStr} = 9974017394</msg>
<status status="PASS" starttime="20241013 17:01:19.559" endtime="20241013 17:01:19.560"/>
</kw>
<msg timestamp="20241013 17:01:19.560" level="INFO">${random} = ozone-test-9974017394</msg>
<status status="PASS" starttime="20241013 17:01:19.559" endtime="20241013 17:01:19.560"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:19.560" level="INFO">${PREFIX} = ozone-test-9974017394</msg>
<status status="PASS" starttime="20241013 17:01:19.560" endtime="20241013 17:01:19.560"/>
</kw>
<status status="PASS" starttime="20241013 17:01:19.559" endtime="20241013 17:01:19.560"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:19.564" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9974017394/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:20.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:20.034" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9974017394/multipartKey5",
    "UploadId": "a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558"
}</msg>
<status status="PASS" starttime="20241013 17:01:19.562" endtime="20241013 17:01:20.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:20.035" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9974017394/multipartKey5",
    "UploadId": "a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558"
}</msg>
<status status="PASS" starttime="20241013 17:01:20.034" endtime="20241013 17:01:20.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:20.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:20.035" endtime="20241013 17:01:20.035"/>
</kw>
<status status="PASS" starttime="20241013 17:01:19.561" endtime="20241013 17:01:20.036"/>
</kw>
<msg timestamp="20241013 17:01:20.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:19.561" endtime="20241013 17:01:20.036"/>
</kw>
<msg timestamp="20241013 17:01:20.036" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9974017394/multipartKey5",
    "UploadId": "a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558"
}</msg>
<status status="PASS" starttime="20241013 17:01:19.561" endtime="20241013 17:01:20.036"/>
</kw>
<msg timestamp="20241013 17:01:20.036" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9974017394/multipartKey5",
    "UploadId": "a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558"
}</msg>
<status status="PASS" starttime="20241013 17:01:19.560" endtime="20241013 17:01:20.036"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:20.039" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9974017394/multipartKey5",
    "UploadId": "a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:20.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:20.044" level="INFO">${output} = a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558</msg>
<status status="PASS" starttime="20241013 17:01:20.037" endtime="20241013 17:01:20.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:20.045" level="INFO">a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558</msg>
<status status="PASS" starttime="20241013 17:01:20.045" endtime="20241013 17:01:20.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:20.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:20.045" endtime="20241013 17:01:20.046"/>
</kw>
<msg timestamp="20241013 17:01:20.046" level="INFO">${uploadID} = a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558</msg>
<status status="PASS" starttime="20241013 17:01:20.036" endtime="20241013 17:01:20.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:20.046" endtime="20241013 17:01:20.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:20.047" endtime="20241013 17:01:20.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:20.047" endtime="20241013 17:01:20.047"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:20.051" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9974017394/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:20.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:20.753" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:20.049" endtime="20241013 17:01:20.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:20.754" level="INFO">{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:20.754" endtime="20241013 17:01:20.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:20.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:20.755" endtime="20241013 17:01:20.755"/>
</kw>
<status status="PASS" starttime="20241013 17:01:20.049" endtime="20241013 17:01:20.756"/>
</kw>
<msg timestamp="20241013 17:01:20.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:20.049" endtime="20241013 17:01:20.756"/>
</kw>
<msg timestamp="20241013 17:01:20.756" level="INFO">${output} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:20.048" endtime="20241013 17:01:20.756"/>
</kw>
<msg timestamp="20241013 17:01:20.756" level="INFO">${result} = {
    "ETag": "2616367cb18232af9ef277a5228b106c"
}</msg>
<status status="PASS" starttime="20241013 17:01:20.048" endtime="20241013 17:01:20.756"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:20.761" level="INFO">Running command 'echo '{
    "ETag": "2616367cb18232af9ef277a5228b106c"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:20.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:20.767" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:20.757" endtime="20241013 17:01:20.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:20.768" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:20.767" endtime="20241013 17:01:20.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:20.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:20.768" endtime="20241013 17:01:20.769"/>
</kw>
<msg timestamp="20241013 17:01:20.769" level="INFO">${eTag1} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:20.757" endtime="20241013 17:01:20.769"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:20.769" endtime="20241013 17:01:20.769"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:20.773" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20241013 17:01:20.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:20.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:20.771" endtime="20241013 17:01:20.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:20.775" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:20.775" endtime="20241013 17:01:20.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:20.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:20.775" endtime="20241013 17:01:20.776"/>
</kw>
<status status="PASS" starttime="20241013 17:01:20.770" endtime="20241013 17:01:20.776"/>
</kw>
<msg timestamp="20241013 17:01:20.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:20.770" endtime="20241013 17:01:20.776"/>
</kw>
<status status="PASS" starttime="20241013 17:01:20.769" endtime="20241013 17:01:20.776"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:20.780" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9974017394/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:21.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:21.350" level="INFO">${output} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:01:20.778" endtime="20241013 17:01:21.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:21.351" level="INFO">{
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:01:21.350" endtime="20241013 17:01:21.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:21.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:21.351" endtime="20241013 17:01:21.352"/>
</kw>
<status status="PASS" starttime="20241013 17:01:20.778" endtime="20241013 17:01:21.352"/>
</kw>
<msg timestamp="20241013 17:01:21.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:20.777" endtime="20241013 17:01:21.352"/>
</kw>
<msg timestamp="20241013 17:01:21.352" level="INFO">${output} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:01:20.777" endtime="20241013 17:01:21.352"/>
</kw>
<msg timestamp="20241013 17:01:21.352" level="INFO">${result} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:01:20.776" endtime="20241013 17:01:21.352"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:21.355" level="INFO">Running command 'echo '{
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:21.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:21.361" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:21.353" endtime="20241013 17:01:21.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:21.362" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:21.361" endtime="20241013 17:01:21.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:21.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:21.362" endtime="20241013 17:01:21.362"/>
</kw>
<msg timestamp="20241013 17:01:21.362" level="INFO">${eTag2} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:21.352" endtime="20241013 17:01:21.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:21.363" endtime="20241013 17:01:21.363"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:21.367" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-9974017394/multipartKey5 --upload-id a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:21.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:21.846" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:01:21.365" endtime="20241013 17:01:21.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:21.847" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:01:21.299Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20241013 17:01:21.847" endtime="20241013 17:01:21.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:21.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:21.848" endtime="20241013 17:01:21.848"/>
</kw>
<status status="PASS" starttime="20241013 17:01:21.365" endtime="20241013 17:01:21.848"/>
</kw>
<msg timestamp="20241013 17:01:21.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:21.364" endtime="20241013 17:01:21.848"/>
</kw>
<msg timestamp="20241013 17:01:21.849" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:01:21.364" endtime="20241013 17:01:21.849"/>
</kw>
<msg timestamp="20241013 17:01:21.849" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:01:21.363" endtime="20241013 17:01:21.849"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:21.852" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:01:21.299Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:21.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:21.858" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:21.850" endtime="20241013 17:01:21.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:21.858" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:21.858" endtime="20241013 17:01:21.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:21.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:21.859" endtime="20241013 17:01:21.859"/>
</kw>
<msg timestamp="20241013 17:01:21.859" level="INFO">${part1} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:21.849" endtime="20241013 17:01:21.859"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:21.862" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:01:21.299Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:21.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:21.867" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:21.860" endtime="20241013 17:01:21.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:21.868" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:21.868" endtime="20241013 17:01:21.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:21.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:21.868" endtime="20241013 17:01:21.869"/>
</kw>
<msg timestamp="20241013 17:01:21.869" level="INFO">${part2} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:21.860" endtime="20241013 17:01:21.869"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:21.869" endtime="20241013 17:01:21.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:21.870" endtime="20241013 17:01:21.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:21.870" endtime="20241013 17:01:21.870"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:21.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-9974017394/multipartKey5 --upload-id a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:22.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:22.334" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:01:21.872" endtime="20241013 17:01:22.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:22.335" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20241013 17:01:22.334" endtime="20241013 17:01:22.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:22.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:22.335" endtime="20241013 17:01:22.335"/>
</kw>
<status status="PASS" starttime="20241013 17:01:21.872" endtime="20241013 17:01:22.335"/>
</kw>
<msg timestamp="20241013 17:01:22.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:21.871" endtime="20241013 17:01:22.336"/>
</kw>
<msg timestamp="20241013 17:01:22.336" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:01:21.871" endtime="20241013 17:01:22.336"/>
</kw>
<msg timestamp="20241013 17:01:22.336" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:01:21.870" endtime="20241013 17:01:22.336"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:22.339" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:22.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:22.344" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:22.337" endtime="20241013 17:01:22.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:22.345" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:22.345" endtime="20241013 17:01:22.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:22.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:22.345" endtime="20241013 17:01:22.346"/>
</kw>
<msg timestamp="20241013 17:01:22.346" level="INFO">${part1} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:22.336" endtime="20241013 17:01:22.346"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:22.349" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:01:20.663Z",
            "ETag": "2616367cb18232af9ef277a5228b106c",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:22.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:22.354" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20241013 17:01:22.347" endtime="20241013 17:01:22.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:22.355" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20241013 17:01:22.355" endtime="20241013 17:01:22.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:22.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:22.355" endtime="20241013 17:01:22.356"/>
</kw>
<msg timestamp="20241013 17:01:22.356" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20241013 17:01:22.346" endtime="20241013 17:01:22.356"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:22.356" endtime="20241013 17:01:22.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:22.357" endtime="20241013 17:01:22.357"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:22.361" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-9974017394/multipartKey5 --upload-id a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:22.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:22.827" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:01:21.299Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
...</msg>
<status status="PASS" starttime="20241013 17:01:22.359" endtime="20241013 17:01:22.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:22.828" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:01:21.299Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20241013 17:01:22.827" endtime="20241013 17:01:22.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:22.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:22.828" endtime="20241013 17:01:22.829"/>
</kw>
<status status="PASS" starttime="20241013 17:01:22.359" endtime="20241013 17:01:22.829"/>
</kw>
<msg timestamp="20241013 17:01:22.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:22.358" endtime="20241013 17:01:22.829"/>
</kw>
<msg timestamp="20241013 17:01:22.829" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:01:21.299Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
...</msg>
<status status="PASS" starttime="20241013 17:01:22.358" endtime="20241013 17:01:22.829"/>
</kw>
<msg timestamp="20241013 17:01:22.829" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:01:21.299Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
...</msg>
<status status="PASS" starttime="20241013 17:01:22.357" endtime="20241013 17:01:22.829"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:22.832" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:01:21.299Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:22.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:22.838" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:22.830" endtime="20241013 17:01:22.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:22.839" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:22.838" endtime="20241013 17:01:22.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:22.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:22.839" endtime="20241013 17:01:22.840"/>
</kw>
<msg timestamp="20241013 17:01:22.840" level="INFO">${part2} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:01:22.830" endtime="20241013 17:01:22.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:22.840" endtime="20241013 17:01:22.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:22.840" endtime="20241013 17:01:22.841"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:22.844" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-9974017394/multipartKey5 --upload-id a26308f4-e6b1-46b4-8864-838b2aefe90a-113301184839094558 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:23.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:23.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:22.842" endtime="20241013 17:01:23.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:23.306" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:23.305" endtime="20241013 17:01:23.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:23.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:23.306" endtime="20241013 17:01:23.306"/>
</kw>
<msg timestamp="20241013 17:01:23.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:22.841" endtime="20241013 17:01:23.306"/>
</kw>
<msg timestamp="20241013 17:01:23.307" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:01:22.841" endtime="20241013 17:01:23.307"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:19.558" endtime="20241013 17:01:23.307"/>
</test>
<test id="s1-s5-s8-t11" name="Test Multipart Upload with the simplified aws s3 cp API" line="300">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:23.309" level="INFO">${randStr} = 2577391175</msg>
<status status="PASS" starttime="20241013 17:01:23.309" endtime="20241013 17:01:23.309"/>
</kw>
<msg timestamp="20241013 17:01:23.309" level="INFO">${random} = ozone-test-2577391175</msg>
<status status="PASS" starttime="20241013 17:01:23.308" endtime="20241013 17:01:23.309"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:23.310" level="INFO">${PREFIX} = ozone-test-2577391175</msg>
<status status="PASS" starttime="20241013 17:01:23.309" endtime="20241013 17:01:23.310"/>
</kw>
<status status="PASS" starttime="20241013 17:01:23.308" endtime="20241013 17:01:23.310"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/22mb s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:23.314" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/22mb s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:24.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:24.538" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20241013 17:01:23.311" endtime="20241013 17:01:24.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:24.539" level="INFO">Completed 256.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (11.2 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/22.0 MiB (13.8 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (16.2 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (18.0 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (20.3 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (22.7 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (24.4 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (28.9 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (31.0 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (33.2 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (37.2 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (41.3 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (41.1 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (43.0 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (44.9 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (46.8 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (48.7 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (50.6 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (52.3 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (54.1 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (56.9 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (58.7 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (60.3 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (62.0 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (63.8 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (65.0 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (66.6 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (68.2 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (69.9 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (71.4 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (71.8 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (73.4 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (75.0 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (75.4 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (76.9 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (78.1 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (79.0 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (80.0 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (72.3 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (73.3 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (74.7 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (70.8 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (71.4 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (72.7 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (73.3 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (74.0 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (75.1 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (75.7 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (75.9 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (76.7 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (77.5 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (78.2 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (74.6 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (74.9 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (75.7 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (74.8 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (74.0 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (74.6 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (75.6 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (74.9 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (74.7 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (74.6 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (73.5 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (74.5 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (73.4 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (71.4 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (72.2 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (71.5 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (70.7 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (68.8 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (68.6 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (69.3 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (68.4 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (66.9 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (66.1 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (66.7 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (67.0 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (60.6 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (61.2 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (55.3 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining
upload: ../../tmp/22mb to s3://encrypted/mpyawscli               </msg>
<status status="PASS" starttime="20241013 17:01:24.538" endtime="20241013 17:01:24.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:24.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:24.539" endtime="20241013 17:01:24.540"/>
</kw>
<status status="PASS" starttime="20241013 17:01:23.311" endtime="20241013 17:01:24.540"/>
</kw>
<msg timestamp="20241013 17:01:24.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:23.311" endtime="20241013 17:01:24.540"/>
</kw>
<msg timestamp="20241013 17:01:24.540" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20241013 17:01:23.310" endtime="20241013 17:01:24.540"/>
</kw>
<status status="PASS" starttime="20241013 17:01:23.310" endtime="20241013 17:01:24.540"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:24.545" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://encrypted/mpyawscli /tmp/22mb.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:27.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:27.403" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20241013 17:01:24.542" endtime="20241013 17:01:27.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:27.405" level="INFO">Completed 256.0 KiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (5.6 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (7.9 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining 
Completed 14.0 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining 
Completed 14.2 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 15.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 16.0 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining 
Completed 16.2 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining 
Completed 16.5 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 16.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining 
Completed 17.0 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining 
Completed 17.2 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining 
Completed 17.5 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining 
Completed 17.8 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining 
Completed 18.0 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining 
Completed 18.2 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining 
Completed 18.5 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 18.8 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining 
Completed 19.0 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 19.2 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 19.5 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 19.8 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 20.0 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 20.2 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining 
Completed 20.5 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 20.8 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 21.0 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 21.2 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 21.5 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
Completed 21.8 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining 
Completed 22.0 MiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining 
download: s3://encrypted/mpyawscli to ../../tmp/22mb.result      </msg>
<status status="PASS" starttime="20241013 17:01:27.404" endtime="20241013 17:01:27.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:27.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:27.405" endtime="20241013 17:01:27.406"/>
</kw>
<status status="PASS" starttime="20241013 17:01:24.542" endtime="20241013 17:01:27.406"/>
</kw>
<msg timestamp="20241013 17:01:27.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:24.542" endtime="20241013 17:01:27.406"/>
</kw>
<msg timestamp="20241013 17:01:27.406" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20241013 17:01:24.541" endtime="20241013 17:01:27.406"/>
</kw>
<status status="PASS" starttime="20241013 17:01:24.541" endtime="20241013 17:01:27.406"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:27.412" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:27.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:27.954" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20241013 17:01:27.409" endtime="20241013 17:01:27.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:27.955" level="INFO">delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20241013 17:01:27.954" endtime="20241013 17:01:27.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:27.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:27.955" endtime="20241013 17:01:27.956"/>
</kw>
<status status="PASS" starttime="20241013 17:01:27.408" endtime="20241013 17:01:27.956"/>
</kw>
<msg timestamp="20241013 17:01:27.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:27.408" endtime="20241013 17:01:27.956"/>
</kw>
<msg timestamp="20241013 17:01:27.956" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20241013 17:01:27.407" endtime="20241013 17:01:27.956"/>
</kw>
<status status="PASS" starttime="20241013 17:01:27.407" endtime="20241013 17:01:27.956"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/22mb</arg>
<arg>/tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:27.961" level="INFO">Running command 'md5sum /tmp/22mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:28.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:28.016" level="INFO">${output} = 960308729977d4e28c4b4ee6302f8a85</msg>
<status status="PASS" starttime="20241013 17:01:27.958" endtime="20241013 17:01:28.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:28.018" level="INFO">960308729977d4e28c4b4ee6302f8a85</msg>
<status status="PASS" starttime="20241013 17:01:28.017" endtime="20241013 17:01:28.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:28.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:28.018" endtime="20241013 17:01:28.019"/>
</kw>
<status status="PASS" starttime="20241013 17:01:27.958" endtime="20241013 17:01:28.019"/>
</kw>
<msg timestamp="20241013 17:01:28.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:27.958" endtime="20241013 17:01:28.019"/>
</kw>
<msg timestamp="20241013 17:01:28.019" level="INFO">${checksumbefore} = 960308729977d4e28c4b4ee6302f8a85</msg>
<status status="PASS" starttime="20241013 17:01:27.957" endtime="20241013 17:01:28.019"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:28.024" level="INFO">Running command 'md5sum /tmp/22mb.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:28.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:28.069" level="INFO">${output} = 960308729977d4e28c4b4ee6302f8a85</msg>
<status status="PASS" starttime="20241013 17:01:28.021" endtime="20241013 17:01:28.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:28.070" level="INFO">960308729977d4e28c4b4ee6302f8a85</msg>
<status status="PASS" starttime="20241013 17:01:28.070" endtime="20241013 17:01:28.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:28.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:28.071" endtime="20241013 17:01:28.071"/>
</kw>
<status status="PASS" starttime="20241013 17:01:28.020" endtime="20241013 17:01:28.072"/>
</kw>
<msg timestamp="20241013 17:01:28.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:28.020" endtime="20241013 17:01:28.072"/>
</kw>
<msg timestamp="20241013 17:01:28.072" level="INFO">${checksumafter} = 960308729977d4e28c4b4ee6302f8a85</msg>
<status status="PASS" starttime="20241013 17:01:28.020" endtime="20241013 17:01:28.072"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:28.072" endtime="20241013 17:01:28.073"/>
</kw>
<status status="PASS" starttime="20241013 17:01:27.957" endtime="20241013 17:01:28.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:23.307" endtime="20241013 17:01:28.073"/>
</test>
<test id="s1-s5-s8-t12" name="Test Multipart Upload Put With Copy" line="306">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:28.077" level="INFO">${randStr} = 4676728358</msg>
<status status="PASS" starttime="20241013 17:01:28.077" endtime="20241013 17:01:28.077"/>
</kw>
<msg timestamp="20241013 17:01:28.077" level="INFO">${random} = ozone-test-4676728358</msg>
<status status="PASS" starttime="20241013 17:01:28.076" endtime="20241013 17:01:28.077"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:28.078" level="INFO">${PREFIX} = ozone-test-4676728358</msg>
<status status="PASS" starttime="20241013 17:01:28.077" endtime="20241013 17:01:28.078"/>
</kw>
<status status="PASS" starttime="20241013 17:01:28.075" endtime="20241013 17:01:28.078"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:28.083" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-4676728358/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:28.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:28.709" level="INFO">${output} = {
    "ETag": "\"2616367cb18232af9ef277a5228b106c\""
}</msg>
<status status="PASS" starttime="20241013 17:01:28.080" endtime="20241013 17:01:28.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:28.710" level="INFO">{
    "ETag": "\"2616367cb18232af9ef277a5228b106c\""
}</msg>
<status status="PASS" starttime="20241013 17:01:28.709" endtime="20241013 17:01:28.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:28.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:28.710" endtime="20241013 17:01:28.711"/>
</kw>
<status status="PASS" starttime="20241013 17:01:28.080" endtime="20241013 17:01:28.711"/>
</kw>
<msg timestamp="20241013 17:01:28.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:28.079" endtime="20241013 17:01:28.711"/>
</kw>
<msg timestamp="20241013 17:01:28.711" level="INFO">${output} = {
    "ETag": "\"2616367cb18232af9ef277a5228b106c\""
}</msg>
<status status="PASS" starttime="20241013 17:01:28.079" endtime="20241013 17:01:28.711"/>
</kw>
<msg timestamp="20241013 17:01:28.712" level="INFO">${result} = {
    "ETag": "\"2616367cb18232af9ef277a5228b106c\""
}</msg>
<status status="PASS" starttime="20241013 17:01:28.078" endtime="20241013 17:01:28.712"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:28.716" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4676728358/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:29.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:29.212" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4676728358/copytest/destination",
    "UploadId": "da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438"
}</msg>
<status status="PASS" starttime="20241013 17:01:28.714" endtime="20241013 17:01:29.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:29.213" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4676728358/copytest/destination",
    "UploadId": "da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438"
}</msg>
<status status="PASS" starttime="20241013 17:01:29.213" endtime="20241013 17:01:29.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:29.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:29.213" endtime="20241013 17:01:29.214"/>
</kw>
<status status="PASS" starttime="20241013 17:01:28.713" endtime="20241013 17:01:29.214"/>
</kw>
<msg timestamp="20241013 17:01:29.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:28.713" endtime="20241013 17:01:29.214"/>
</kw>
<msg timestamp="20241013 17:01:29.214" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4676728358/copytest/destination",
    "UploadId": "da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438"
}</msg>
<status status="PASS" starttime="20241013 17:01:28.713" endtime="20241013 17:01:29.214"/>
</kw>
<msg timestamp="20241013 17:01:29.214" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4676728358/copytest/destination",
    "UploadId": "da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438"
}</msg>
<status status="PASS" starttime="20241013 17:01:28.712" endtime="20241013 17:01:29.214"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:29.218" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4676728358/copytest/destination",
    "UploadId": "da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:29.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:29.223" level="INFO">${output} = da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438</msg>
<status status="PASS" starttime="20241013 17:01:29.215" endtime="20241013 17:01:29.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:29.224" level="INFO">da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438</msg>
<status status="PASS" starttime="20241013 17:01:29.223" endtime="20241013 17:01:29.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:29.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:29.224" endtime="20241013 17:01:29.225"/>
</kw>
<msg timestamp="20241013 17:01:29.225" level="INFO">${uploadID} = da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438</msg>
<status status="PASS" starttime="20241013 17:01:29.215" endtime="20241013 17:01:29.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:29.225" endtime="20241013 17:01:29.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:29.225" endtime="20241013 17:01:29.226"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:29.229" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-4676728358/copytest/destination --upload-id da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438 --part-number 1 --copy-source encrypted/ozone-test-4676728358/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:30.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:30.364" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "2616367cb18232af9ef277a5228b106c",
        "LastModified": "2024-10-13T17:01:30.215Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:29.227" endtime="20241013 17:01:30.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:30.366" level="INFO">{
    "CopyPartResult": {
        "ETag": "2616367cb18232af9ef277a5228b106c",
        "LastModified": "2024-10-13T17:01:30.215Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:30.365" endtime="20241013 17:01:30.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:30.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:30.366" endtime="20241013 17:01:30.367"/>
</kw>
<status status="PASS" starttime="20241013 17:01:29.227" endtime="20241013 17:01:30.367"/>
</kw>
<msg timestamp="20241013 17:01:30.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:29.227" endtime="20241013 17:01:30.367"/>
</kw>
<msg timestamp="20241013 17:01:30.367" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "2616367cb18232af9ef277a5228b106c",
        "LastModified": "2024-10-13T17:01:30.215Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:29.226" endtime="20241013 17:01:30.367"/>
</kw>
<msg timestamp="20241013 17:01:30.368" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "2616367cb18232af9ef277a5228b106c",
        "LastModified": "2024-10-13T17:01:30.215Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:29.226" endtime="20241013 17:01:30.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:30.368" endtime="20241013 17:01:30.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:30.368" endtime="20241013 17:01:30.369"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:30.375" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "2616367cb18232af9ef277a5228b106c",
        "LastModified": "2024-10-13T17:01:30.215Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:30.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:30.391" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:30.370" endtime="20241013 17:01:30.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:30.392" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:30.391" endtime="20241013 17:01:30.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:30.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:30.392" endtime="20241013 17:01:30.393"/>
</kw>
<msg timestamp="20241013 17:01:30.393" level="INFO">${eTag1} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:30.369" endtime="20241013 17:01:30.393"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:30.402" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id da02b218-f523-48e6-839a-cd2cc8fb62af-113301185440518438 --bucket encrypted --key ozone-test-4676728358/copytest/destination --multipart-upload 'Parts=[{ETag=2616367cb18232af9ef277a5228b106c,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:30.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:30.973" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4676728358/copytest/destination",
    "ETag": "\"502c6070cb273bc7f6fe92fed30a4732-1\""
}</msg>
<status status="PASS" starttime="20241013 17:01:30.396" endtime="20241013 17:01:30.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:30.974" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4676728358/copytest/destination",
    "ETag": "\"502c6070cb273bc7f6fe92fed30a4732-1\""
}</msg>
<status status="PASS" starttime="20241013 17:01:30.974" endtime="20241013 17:01:30.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:30.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:30.975" endtime="20241013 17:01:30.975"/>
</kw>
<status status="PASS" starttime="20241013 17:01:30.395" endtime="20241013 17:01:30.975"/>
</kw>
<msg timestamp="20241013 17:01:30.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:30.395" endtime="20241013 17:01:30.976"/>
</kw>
<msg timestamp="20241013 17:01:30.976" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4676728358/copytest/destination",
    "ETag": "\"502c6070cb273bc7f6fe92fed30a4732-1\""
}</msg>
<status status="PASS" starttime="20241013 17:01:30.394" endtime="20241013 17:01:30.976"/>
</kw>
<status status="PASS" starttime="20241013 17:01:30.393" endtime="20241013 17:01:30.976"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:30.981" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4676728358/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:31.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:31.843" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:30 GMT",
    "ContentLength": 5243904,
    "ETag": "\"502c6070cb273bc7f6fe92fed30a4732-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:30.978" endtime="20241013 17:01:31.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:31.845" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:30 GMT",
    "ContentLength": 5243904,
    "ETag": "\"502c6070cb273bc7f6fe92fed30a4732-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:31 GMT",
    "Metadata": {},
    "PartsCount": 1
}</msg>
<status status="PASS" starttime="20241013 17:01:31.844" endtime="20241013 17:01:31.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:31.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:31.845" endtime="20241013 17:01:31.846"/>
</kw>
<status status="PASS" starttime="20241013 17:01:30.978" endtime="20241013 17:01:31.846"/>
</kw>
<msg timestamp="20241013 17:01:31.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:30.977" endtime="20241013 17:01:31.846"/>
</kw>
<msg timestamp="20241013 17:01:31.846" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:30 GMT",
    "ContentLength": 5243904,
    "ETag": "\"502c6070cb273bc7f6fe92fed30a4732-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:01:30.977" endtime="20241013 17:01:31.846"/>
</kw>
<status status="PASS" starttime="20241013 17:01:30.976" endtime="20241013 17:01:31.847"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:31.853" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:31.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:31.869" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:31.849" endtime="20241013 17:01:31.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:31.871" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:31.870" endtime="20241013 17:01:31.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:31.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:31.871" endtime="20241013 17:01:31.872"/>
</kw>
<status status="PASS" starttime="20241013 17:01:31.848" endtime="20241013 17:01:31.873"/>
</kw>
<msg timestamp="20241013 17:01:31.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:31.848" endtime="20241013 17:01:31.873"/>
</kw>
<msg timestamp="20241013 17:01:31.873" level="INFO">${checksumbefore} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:31.847" endtime="20241013 17:01:31.873"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:31.878" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:31.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:31.896" level="INFO">${output} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:31.875" endtime="20241013 17:01:31.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:31.898" level="INFO">2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:31.897" endtime="20241013 17:01:31.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:31.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:31.898" endtime="20241013 17:01:31.899"/>
</kw>
<status status="PASS" starttime="20241013 17:01:31.874" endtime="20241013 17:01:31.899"/>
</kw>
<msg timestamp="20241013 17:01:31.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:31.874" endtime="20241013 17:01:31.899"/>
</kw>
<msg timestamp="20241013 17:01:31.899" level="INFO">${checksumafter} = 2616367cb18232af9ef277a5228b106c</msg>
<status status="PASS" starttime="20241013 17:01:31.873" endtime="20241013 17:01:31.899"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:31.900" endtime="20241013 17:01:31.900"/>
</kw>
<status status="PASS" starttime="20241013 17:01:31.847" endtime="20241013 17:01:31.900"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:28.075" endtime="20241013 17:01:31.900"/>
</test>
<test id="s1-s5-s8-t13" name="Test Multipart Upload Put With Copy and range" line="327">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:31.903" level="INFO">${randStr} = 1686725999</msg>
<status status="PASS" starttime="20241013 17:01:31.902" endtime="20241013 17:01:31.903"/>
</kw>
<msg timestamp="20241013 17:01:31.903" level="INFO">${random} = ozone-test-1686725999</msg>
<status status="PASS" starttime="20241013 17:01:31.902" endtime="20241013 17:01:31.903"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:31.903" level="INFO">${PREFIX} = ozone-test-1686725999</msg>
<status status="PASS" starttime="20241013 17:01:31.903" endtime="20241013 17:01:31.904"/>
</kw>
<status status="PASS" starttime="20241013 17:01:31.902" endtime="20241013 17:01:31.904"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:31.908" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-1686725999/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:32.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:32.588" level="INFO">${output} = {
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\""
}</msg>
<status status="PASS" starttime="20241013 17:01:31.905" endtime="20241013 17:01:32.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:32.589" level="INFO">{
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\""
}</msg>
<status status="PASS" starttime="20241013 17:01:32.589" endtime="20241013 17:01:32.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:32.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:32.590" endtime="20241013 17:01:32.590"/>
</kw>
<status status="PASS" starttime="20241013 17:01:31.905" endtime="20241013 17:01:32.590"/>
</kw>
<msg timestamp="20241013 17:01:32.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:31.904" endtime="20241013 17:01:32.590"/>
</kw>
<msg timestamp="20241013 17:01:32.591" level="INFO">${output} = {
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\""
}</msg>
<status status="PASS" starttime="20241013 17:01:31.904" endtime="20241013 17:01:32.591"/>
</kw>
<msg timestamp="20241013 17:01:32.591" level="INFO">${result} = {
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\""
}</msg>
<status status="PASS" starttime="20241013 17:01:31.904" endtime="20241013 17:01:32.591"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:32.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-1686725999/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:33.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:33.069" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1686725999/copyrange/destination",
    "UploadId": "19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721"
}</msg>
<status status="PASS" starttime="20241013 17:01:32.593" endtime="20241013 17:01:33.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:33.071" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-1686725999/copyrange/destination",
    "UploadId": "19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721"
}</msg>
<status status="PASS" starttime="20241013 17:01:33.070" endtime="20241013 17:01:33.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:33.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:33.071" endtime="20241013 17:01:33.071"/>
</kw>
<status status="PASS" starttime="20241013 17:01:32.592" endtime="20241013 17:01:33.071"/>
</kw>
<msg timestamp="20241013 17:01:33.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:32.592" endtime="20241013 17:01:33.072"/>
</kw>
<msg timestamp="20241013 17:01:33.072" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1686725999/copyrange/destination",
    "UploadId": "19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721"
}</msg>
<status status="PASS" starttime="20241013 17:01:32.592" endtime="20241013 17:01:33.072"/>
</kw>
<msg timestamp="20241013 17:01:33.072" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1686725999/copyrange/destination",
    "UploadId": "19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721"
}</msg>
<status status="PASS" starttime="20241013 17:01:32.591" endtime="20241013 17:01:33.072"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:33.075" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-1686725999/copyrange/destination",
    "UploadId": "19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:33.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:33.081" level="INFO">${output} = 19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721</msg>
<status status="PASS" starttime="20241013 17:01:33.073" endtime="20241013 17:01:33.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:33.082" level="INFO">19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721</msg>
<status status="PASS" starttime="20241013 17:01:33.081" endtime="20241013 17:01:33.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:33.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:33.083" endtime="20241013 17:01:33.083"/>
</kw>
<msg timestamp="20241013 17:01:33.083" level="INFO">${uploadID} = 19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721</msg>
<status status="PASS" starttime="20241013 17:01:33.072" endtime="20241013 17:01:33.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:33.083" endtime="20241013 17:01:33.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:33.084" endtime="20241013 17:01:33.084"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:33.088" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-1686725999/copyrange/destination --upload-id 19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721 --part-number 1 --copy-source encrypted/ozone-test-1686725999/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:34.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:34.742" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:34.578Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:33.086" endtime="20241013 17:01:34.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:34.743" level="INFO">{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:34.578Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:34.743" endtime="20241013 17:01:34.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:34.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:34.744" endtime="20241013 17:01:34.744"/>
</kw>
<status status="PASS" starttime="20241013 17:01:33.086" endtime="20241013 17:01:34.744"/>
</kw>
<msg timestamp="20241013 17:01:34.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:33.085" endtime="20241013 17:01:34.745"/>
</kw>
<msg timestamp="20241013 17:01:34.745" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:34.578Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:33.085" endtime="20241013 17:01:34.745"/>
</kw>
<msg timestamp="20241013 17:01:34.745" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:34.578Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:33.084" endtime="20241013 17:01:34.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:34.745" endtime="20241013 17:01:34.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:34.746" endtime="20241013 17:01:34.746"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:34.751" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:34.578Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:34.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:34.757" level="INFO">${output} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:34.747" endtime="20241013 17:01:34.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:34.758" level="INFO">ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:34.758" endtime="20241013 17:01:34.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:34.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:34.758" endtime="20241013 17:01:34.759"/>
</kw>
<msg timestamp="20241013 17:01:34.759" level="INFO">${eTag1} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:34.746" endtime="20241013 17:01:34.759"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:34.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-1686725999/copyrange/destination --upload-id 19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721 --part-number 2 --copy-source encrypted/ozone-test-1686725999/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:35.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:35.272" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:35.229Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:34.762" endtime="20241013 17:01:35.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:35.273" level="INFO">{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:35.229Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:35.272" endtime="20241013 17:01:35.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:35.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:35.273" endtime="20241013 17:01:35.274"/>
</kw>
<status status="PASS" starttime="20241013 17:01:34.761" endtime="20241013 17:01:35.274"/>
</kw>
<msg timestamp="20241013 17:01:35.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:34.761" endtime="20241013 17:01:35.274"/>
</kw>
<msg timestamp="20241013 17:01:35.274" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:35.229Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:34.761" endtime="20241013 17:01:35.274"/>
</kw>
<msg timestamp="20241013 17:01:35.274" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:35.229Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:34.760" endtime="20241013 17:01:35.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:35.275" endtime="20241013 17:01:35.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:35.275" endtime="20241013 17:01:35.275"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:35.278" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:35.229Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:35.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:35.284" level="INFO">${output} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:35.276" endtime="20241013 17:01:35.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:35.285" level="INFO">ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:35.284" endtime="20241013 17:01:35.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:35.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:35.285" endtime="20241013 17:01:35.285"/>
</kw>
<msg timestamp="20241013 17:01:35.285" level="INFO">${eTag2} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:35.275" endtime="20241013 17:01:35.285"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:35.290" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 19c5f7ff-381f-4d5c-adbc-a1134c16072e-113301185693159721 --bucket encrypted --key ozone-test-1686725999/copyrange/destination --multipart-upload 'Parts=[{ETag=ddabb07c2475d1cc27a2cb1a5b9e6bd4,PartNumber=1},{ETag=ddabb07c2475d1cc27a2cb1a5b9e6bd4,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:35.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:35.755" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-1686725999/copyrange/destination",
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\""
}</msg>
<status status="PASS" starttime="20241013 17:01:35.288" endtime="20241013 17:01:35.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:35.756" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-1686725999/copyrange/destination",
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\""
}</msg>
<status status="PASS" starttime="20241013 17:01:35.755" endtime="20241013 17:01:35.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:35.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:35.756" endtime="20241013 17:01:35.757"/>
</kw>
<status status="PASS" starttime="20241013 17:01:35.287" endtime="20241013 17:01:35.757"/>
</kw>
<msg timestamp="20241013 17:01:35.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:35.287" endtime="20241013 17:01:35.757"/>
</kw>
<msg timestamp="20241013 17:01:35.758" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-1686725999/copyrange/destination",
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\""
}</msg>
<status status="PASS" starttime="20241013 17:01:35.286" endtime="20241013 17:01:35.758"/>
</kw>
<status status="PASS" starttime="20241013 17:01:35.285" endtime="20241013 17:01:35.758"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:35.763" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-1686725999/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:36.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:36.993" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:35 GMT",
    "ContentLength": 10485760,
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20241013 17:01:35.760" endtime="20241013 17:01:36.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:36.994" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:35 GMT",
    "ContentLength": 10485760,
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:36 GMT",
    "Metadata": {},
    "PartsCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:01:36.993" endtime="20241013 17:01:36.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:36.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:36.994" endtime="20241013 17:01:36.995"/>
</kw>
<status status="PASS" starttime="20241013 17:01:35.759" endtime="20241013 17:01:36.995"/>
</kw>
<msg timestamp="20241013 17:01:36.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:35.759" endtime="20241013 17:01:36.995"/>
</kw>
<msg timestamp="20241013 17:01:36.995" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:35 GMT",
    "ContentLength": 10485760,
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20241013 17:01:35.759" endtime="20241013 17:01:36.995"/>
</kw>
<status status="PASS" starttime="20241013 17:01:35.758" endtime="20241013 17:01:36.995"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:37.000" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:37.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:37.023" level="INFO">${output} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:36.997" endtime="20241013 17:01:37.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:37.024" level="INFO">ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:37.024" endtime="20241013 17:01:37.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:37.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:37.025" endtime="20241013 17:01:37.025"/>
</kw>
<status status="PASS" starttime="20241013 17:01:36.997" endtime="20241013 17:01:37.025"/>
</kw>
<msg timestamp="20241013 17:01:37.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:36.997" endtime="20241013 17:01:37.025"/>
</kw>
<msg timestamp="20241013 17:01:37.026" level="INFO">${checksumbefore} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:36.996" endtime="20241013 17:01:37.026"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:37.030" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:37.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:37.052" level="INFO">${output} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:37.027" endtime="20241013 17:01:37.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:37.053" level="INFO">ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:37.053" endtime="20241013 17:01:37.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:37.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:37.053" endtime="20241013 17:01:37.054"/>
</kw>
<status status="PASS" starttime="20241013 17:01:37.027" endtime="20241013 17:01:37.054"/>
</kw>
<msg timestamp="20241013 17:01:37.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:37.026" endtime="20241013 17:01:37.054"/>
</kw>
<msg timestamp="20241013 17:01:37.055" level="INFO">${checksumafter} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:37.026" endtime="20241013 17:01:37.055"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:37.055" endtime="20241013 17:01:37.055"/>
</kw>
<status status="PASS" starttime="20241013 17:01:36.996" endtime="20241013 17:01:37.055"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:31.901" endtime="20241013 17:01:37.056"/>
</test>
<test id="s1-s5-s8-t14" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="353">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:37.059" level="INFO">${randStr} = 6953108331</msg>
<status status="PASS" starttime="20241013 17:01:37.058" endtime="20241013 17:01:37.059"/>
</kw>
<msg timestamp="20241013 17:01:37.059" level="INFO">${random} = ozone-test-6953108331</msg>
<status status="PASS" starttime="20241013 17:01:37.058" endtime="20241013 17:01:37.059"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:37.059" level="INFO">${PREFIX} = ozone-test-6953108331</msg>
<status status="PASS" starttime="20241013 17:01:37.059" endtime="20241013 17:01:37.060"/>
</kw>
<status status="PASS" starttime="20241013 17:01:37.057" endtime="20241013 17:01:37.060"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241013 17:01:37.060" level="INFO">${curDate} = 2024-10-13 17:01:37.060</msg>
<status status="PASS" starttime="20241013 17:01:37.060" endtime="20241013 17:01:37.060"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20241013 17:01:37.064" level="INFO">${beforeCreate} = 2024-10-12 17:01:37.060</msg>
<status status="PASS" starttime="20241013 17:01:37.060" endtime="20241013 17:01:37.064"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20241013 17:01:37.064" level="INFO">${tomorrow} = 2024-10-14 17:01:37.060</msg>
<status status="PASS" starttime="20241013 17:01:37.064" endtime="20241013 17:01:37.064"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:37.069" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-6953108331/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:37.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:37.710" level="INFO">${output} = {
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\""
}</msg>
<status status="PASS" starttime="20241013 17:01:37.066" endtime="20241013 17:01:37.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:37.712" level="INFO">{
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\""
}</msg>
<status status="PASS" starttime="20241013 17:01:37.711" endtime="20241013 17:01:37.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:37.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:37.712" endtime="20241013 17:01:37.712"/>
</kw>
<status status="PASS" starttime="20241013 17:01:37.066" endtime="20241013 17:01:37.712"/>
</kw>
<msg timestamp="20241013 17:01:37.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:37.065" endtime="20241013 17:01:37.712"/>
</kw>
<msg timestamp="20241013 17:01:37.713" level="INFO">${output} = {
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\""
}</msg>
<status status="PASS" starttime="20241013 17:01:37.065" endtime="20241013 17:01:37.713"/>
</kw>
<msg timestamp="20241013 17:01:37.713" level="INFO">${result} = {
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\""
}</msg>
<status status="PASS" starttime="20241013 17:01:37.064" endtime="20241013 17:01:37.713"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:37.717" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6953108331/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:38.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:38.183" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6953108331/copyrange/destination",
    "UploadId": "226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293"
}</msg>
<status status="PASS" starttime="20241013 17:01:37.715" endtime="20241013 17:01:38.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:38.185" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6953108331/copyrange/destination",
    "UploadId": "226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293"
}</msg>
<status status="PASS" starttime="20241013 17:01:38.183" endtime="20241013 17:01:38.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:38.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:38.185" endtime="20241013 17:01:38.185"/>
</kw>
<status status="PASS" starttime="20241013 17:01:37.714" endtime="20241013 17:01:38.186"/>
</kw>
<msg timestamp="20241013 17:01:38.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:37.714" endtime="20241013 17:01:38.186"/>
</kw>
<msg timestamp="20241013 17:01:38.186" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6953108331/copyrange/destination",
    "UploadId": "226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293"
}</msg>
<status status="PASS" starttime="20241013 17:01:37.714" endtime="20241013 17:01:38.186"/>
</kw>
<msg timestamp="20241013 17:01:38.186" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6953108331/copyrange/destination",
    "UploadId": "226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293"
}</msg>
<status status="PASS" starttime="20241013 17:01:37.713" endtime="20241013 17:01:38.186"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:38.190" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6953108331/copyrange/destination",
    "UploadId": "226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:38.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:38.195" level="INFO">${output} = 226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293</msg>
<status status="PASS" starttime="20241013 17:01:38.187" endtime="20241013 17:01:38.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:38.196" level="INFO">226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293</msg>
<status status="PASS" starttime="20241013 17:01:38.196" endtime="20241013 17:01:38.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:38.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:38.196" endtime="20241013 17:01:38.197"/>
</kw>
<msg timestamp="20241013 17:01:38.197" level="INFO">${uploadID} = 226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293</msg>
<status status="PASS" starttime="20241013 17:01:38.186" endtime="20241013 17:01:38.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:38.197" endtime="20241013 17:01:38.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:38.198" endtime="20241013 17:01:38.198"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:38.202" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-6953108331/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:38.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:38.660" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20241013 17:01:38.200" endtime="20241013 17:01:38.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:38.661" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:01:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:01:38.660" endtime="20241013 17:01:38.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:38.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:38.661" endtime="20241013 17:01:38.662"/>
</kw>
<status status="PASS" starttime="20241013 17:01:38.199" endtime="20241013 17:01:38.662"/>
</kw>
<msg timestamp="20241013 17:01:38.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:38.199" endtime="20241013 17:01:38.662"/>
</kw>
<msg timestamp="20241013 17:01:38.662" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20241013 17:01:38.199" endtime="20241013 17:01:38.662"/>
</kw>
<msg timestamp="20241013 17:01:38.662" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20241013 17:01:38.198" endtime="20241013 17:01:38.662"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:38.666" level="INFO">Running command 'echo '{
    "LastModified": "Sun, 13 Oct 2024 17:01:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"ddabb07c2475d1cc27a2cb1a5b9e6bd4\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:38 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:38.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:38.671" level="INFO">${output} = Sun, 13 Oct 2024 17:01:37 GMT</msg>
<status status="PASS" starttime="20241013 17:01:38.663" endtime="20241013 17:01:38.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:38.672" level="INFO">Sun, 13 Oct 2024 17:01:37 GMT</msg>
<status status="PASS" starttime="20241013 17:01:38.671" endtime="20241013 17:01:38.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:38.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:38.672" endtime="20241013 17:01:38.672"/>
</kw>
<msg timestamp="20241013 17:01:38.673" level="INFO">${lastModified} = Sun, 13 Oct 2024 17:01:37 GMT</msg>
<status status="PASS" starttime="20241013 17:01:38.663" endtime="20241013 17:01:38.673"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:38.673" endtime="20241013 17:01:38.673"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20241013 17:01:38.675" level="INFO">${lmDate} = 2024-10-13 17:01:37.000</msg>
<status status="PASS" starttime="20241013 17:01:38.673" endtime="20241013 17:01:38.675"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20241013 17:01:38.676" level="INFO">${afterCreate} = 2024-10-13 17:01:40.000</msg>
<status status="PASS" starttime="20241013 17:01:38.676" endtime="20241013 17:01:38.676"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241013 17:01:38.677" level="INFO">${latestDate} = 2024-10-13 17:01:38.677</msg>
<status status="PASS" starttime="20241013 17:01:38.677" endtime="20241013 17:01:38.677"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20241013 17:01:38.677" level="INFO">${sleepSeconds} = 1.323</msg>
<status status="PASS" starttime="20241013 17:01:38.677" endtime="20241013 17:01:38.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241013 17:01:40.001" level="INFO">Slept 1 second 323 milliseconds</msg>
<status status="PASS" starttime="20241013 17:01:38.678" endtime="20241013 17:01:40.002"/>
</kw>
<status status="PASS" starttime="20241013 17:01:38.678" endtime="20241013 17:01:40.002"/>
</kw>
<status status="PASS" starttime="20241013 17:01:38.676" endtime="20241013 17:01:40.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:40.006" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6953108331/copyrange/destination --upload-id 226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293 --part-number 1 --copy-source encrypted/ozone-test-6953108331/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2024-10-13 17:01:40.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:40.460" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:40.460" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:01:40.003" endtime="20241013 17:01:40.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:40.461" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:01:40.461" endtime="20241013 17:01:40.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:40.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:40.462" endtime="20241013 17:01:40.462"/>
</kw>
<msg timestamp="20241013 17:01:40.463" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:01:40.003" endtime="20241013 17:01:40.463"/>
</kw>
<msg timestamp="20241013 17:01:40.463" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:01:40.002" endtime="20241013 17:01:40.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:40.463" endtime="20241013 17:01:40.463"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:40.467" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6953108331/copyrange/destination --upload-id 226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293 --part-number 2 --copy-source encrypted/ozone-test-6953108331/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2024-10-12 17:01:37.060' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:40.930" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:40.930" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:01:40.465" endtime="20241013 17:01:40.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:40.931" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:01:40.931" endtime="20241013 17:01:40.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:40.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:40.932" endtime="20241013 17:01:40.932"/>
</kw>
<msg timestamp="20241013 17:01:40.932" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:01:40.464" endtime="20241013 17:01:40.932"/>
</kw>
<msg timestamp="20241013 17:01:40.933" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:01:40.463" endtime="20241013 17:01:40.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:40.933" endtime="20241013 17:01:40.933"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:40.937" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6953108331/copyrange/destination --upload-id 226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293 --part-number 1 --copy-source encrypted/ozone-test-6953108331/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2024-10-12 17:01:37.060' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:42.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:42.345" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.194Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:40.935" endtime="20241013 17:01:42.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:42.346" level="INFO">{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.194Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:42.345" endtime="20241013 17:01:42.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:42.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:42.346" endtime="20241013 17:01:42.347"/>
</kw>
<msg timestamp="20241013 17:01:42.347" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.194Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:40.934" endtime="20241013 17:01:42.347"/>
</kw>
<msg timestamp="20241013 17:01:42.347" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.194Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:40.933" endtime="20241013 17:01:42.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:42.348" endtime="20241013 17:01:42.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:42.348" endtime="20241013 17:01:42.349"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:42.354" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.194Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:42.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:42.371" level="INFO">${output} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:42.349" endtime="20241013 17:01:42.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:42.372" level="INFO">ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:42.371" endtime="20241013 17:01:42.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:42.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:42.372" endtime="20241013 17:01:42.373"/>
</kw>
<msg timestamp="20241013 17:01:42.373" level="INFO">${eTag1} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:42.349" endtime="20241013 17:01:42.373"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:42.379" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6953108331/copyrange/destination --upload-id 226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293 --part-number 2 --copy-source encrypted/ozone-test-6953108331/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2024-10-13 17:01:40.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:42.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:42.911" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.869Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:42.375" endtime="20241013 17:01:42.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:42.912" level="INFO">{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.869Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:42.912" endtime="20241013 17:01:42.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:42.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:42.913" endtime="20241013 17:01:42.913"/>
</kw>
<msg timestamp="20241013 17:01:42.913" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.869Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:42.375" endtime="20241013 17:01:42.913"/>
</kw>
<msg timestamp="20241013 17:01:42.914" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.869Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:42.373" endtime="20241013 17:01:42.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:42.914" endtime="20241013 17:01:42.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:42.914" endtime="20241013 17:01:42.915"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:42.917" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:42.869Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:42.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:42.923" level="INFO">${output} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:42.915" endtime="20241013 17:01:42.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:42.924" level="INFO">ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:42.924" endtime="20241013 17:01:42.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:42.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:42.924" endtime="20241013 17:01:42.925"/>
</kw>
<msg timestamp="20241013 17:01:42.925" level="INFO">${eTag2} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:42.915" endtime="20241013 17:01:42.925"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:42.929" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6953108331/copyrange/destination --upload-id 226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293 --part-number 1 --copy-source encrypted/ozone-test-6953108331/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2024-10-14 17:01:37.060' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:44.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:44.186" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:44.137Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:42.927" endtime="20241013 17:01:44.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:44.187" level="INFO">{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:44.137Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:44.186" endtime="20241013 17:01:44.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:44.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:44.187" endtime="20241013 17:01:44.187"/>
</kw>
<msg timestamp="20241013 17:01:44.188" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:44.137Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:42.926" endtime="20241013 17:01:44.188"/>
</kw>
<msg timestamp="20241013 17:01:44.188" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:44.137Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:42.925" endtime="20241013 17:01:44.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:44.188" endtime="20241013 17:01:44.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:44.188" endtime="20241013 17:01:44.189"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:44.192" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "ddabb07c2475d1cc27a2cb1a5b9e6bd4",
        "LastModified": "2024-10-13T17:01:44.137Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:44.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:44.198" level="INFO">${output} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:44.189" endtime="20241013 17:01:44.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:44.198" level="INFO">ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:44.198" endtime="20241013 17:01:44.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:44.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:44.199" endtime="20241013 17:01:44.199"/>
</kw>
<msg timestamp="20241013 17:01:44.199" level="INFO">${eTag1} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:44.189" endtime="20241013 17:01:44.199"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:44.203" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 226c88a3-01f8-4c6d-b2fe-7e166da44538-113301186028245293 --bucket encrypted --key ozone-test-6953108331/copyrange/destination --multipart-upload 'Parts=[{ETag=ddabb07c2475d1cc27a2cb1a5b9e6bd4,PartNumber=1},{ETag=ddabb07c2475d1cc27a2cb1a5b9e6bd4,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:44.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:44.671" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6953108331/copyrange/destination",
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\""
}</msg>
<status status="PASS" starttime="20241013 17:01:44.201" endtime="20241013 17:01:44.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:44.672" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6953108331/copyrange/destination",
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\""
}</msg>
<status status="PASS" starttime="20241013 17:01:44.671" endtime="20241013 17:01:44.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:44.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:44.672" endtime="20241013 17:01:44.672"/>
</kw>
<status status="PASS" starttime="20241013 17:01:44.201" endtime="20241013 17:01:44.673"/>
</kw>
<msg timestamp="20241013 17:01:44.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:44.201" endtime="20241013 17:01:44.673"/>
</kw>
<msg timestamp="20241013 17:01:44.673" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6953108331/copyrange/destination",
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\""
}</msg>
<status status="PASS" starttime="20241013 17:01:44.200" endtime="20241013 17:01:44.673"/>
</kw>
<status status="PASS" starttime="20241013 17:01:44.200" endtime="20241013 17:01:44.673"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:44.677" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-6953108331/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:45.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:45.750" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:44 GMT",
    "ContentLength": 10485760,
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20241013 17:01:44.675" endtime="20241013 17:01:45.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:45.751" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:44 GMT",
    "ContentLength": 10485760,
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:45 GMT",
    "Metadata": {},
    "PartsCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:01:45.750" endtime="20241013 17:01:45.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:45.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:45.751" endtime="20241013 17:01:45.752"/>
</kw>
<status status="PASS" starttime="20241013 17:01:44.675" endtime="20241013 17:01:45.752"/>
</kw>
<msg timestamp="20241013 17:01:45.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:44.674" endtime="20241013 17:01:45.752"/>
</kw>
<msg timestamp="20241013 17:01:45.752" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:44 GMT",
    "ContentLength": 10485760,
    "ETag": "\"630d67c0abeca9c33b40f6f07fa81961-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20241013 17:01:44.674" endtime="20241013 17:01:45.752"/>
</kw>
<status status="PASS" starttime="20241013 17:01:44.673" endtime="20241013 17:01:45.752"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:45.756" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:45.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:45.780" level="INFO">${output} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:45.754" endtime="20241013 17:01:45.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:45.781" level="INFO">ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:45.780" endtime="20241013 17:01:45.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:45.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:45.781" endtime="20241013 17:01:45.781"/>
</kw>
<status status="PASS" starttime="20241013 17:01:45.754" endtime="20241013 17:01:45.782"/>
</kw>
<msg timestamp="20241013 17:01:45.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:45.753" endtime="20241013 17:01:45.782"/>
</kw>
<msg timestamp="20241013 17:01:45.782" level="INFO">${checksumbefore} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:45.753" endtime="20241013 17:01:45.782"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:45.785" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:45.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:45.807" level="INFO">${output} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:45.783" endtime="20241013 17:01:45.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:45.808" level="INFO">ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:45.807" endtime="20241013 17:01:45.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:45.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:45.808" endtime="20241013 17:01:45.808"/>
</kw>
<status status="PASS" starttime="20241013 17:01:45.783" endtime="20241013 17:01:45.809"/>
</kw>
<msg timestamp="20241013 17:01:45.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:45.782" endtime="20241013 17:01:45.809"/>
</kw>
<msg timestamp="20241013 17:01:45.809" level="INFO">${checksumafter} = ddabb07c2475d1cc27a2cb1a5b9e6bd4</msg>
<status status="PASS" starttime="20241013 17:01:45.782" endtime="20241013 17:01:45.809"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:45.809" endtime="20241013 17:01:45.809"/>
</kw>
<status status="PASS" starttime="20241013 17:01:45.753" endtime="20241013 17:01:45.809"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:37.057" endtime="20241013 17:01:45.810"/>
</test>
<test id="s1-s5-s8-t15" name="Test Multipart Upload list" line="405">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:45.811" level="INFO">${randStr} = 5816640693</msg>
<status status="PASS" starttime="20241013 17:01:45.811" endtime="20241013 17:01:45.811"/>
</kw>
<msg timestamp="20241013 17:01:45.812" level="INFO">${random} = ozone-test-5816640693</msg>
<status status="PASS" starttime="20241013 17:01:45.811" endtime="20241013 17:01:45.812"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:01:45.812" level="INFO">${PREFIX} = ozone-test-5816640693</msg>
<status status="PASS" starttime="20241013 17:01:45.812" endtime="20241013 17:01:45.812"/>
</kw>
<status status="PASS" starttime="20241013 17:01:45.811" endtime="20241013 17:01:45.812"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:45.816" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-5816640693/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:46.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:46.282" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key1",
    "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433"
}</msg>
<status status="PASS" starttime="20241013 17:01:45.814" endtime="20241013 17:01:46.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:46.283" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key1",
    "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433"
}</msg>
<status status="PASS" starttime="20241013 17:01:46.282" endtime="20241013 17:01:46.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:46.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:46.283" endtime="20241013 17:01:46.284"/>
</kw>
<status status="PASS" starttime="20241013 17:01:45.813" endtime="20241013 17:01:46.284"/>
</kw>
<msg timestamp="20241013 17:01:46.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:45.813" endtime="20241013 17:01:46.284"/>
</kw>
<msg timestamp="20241013 17:01:46.284" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key1",
    "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433"
}</msg>
<status status="PASS" starttime="20241013 17:01:45.813" endtime="20241013 17:01:46.284"/>
</kw>
<msg timestamp="20241013 17:01:46.284" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key1",
    "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433"
}</msg>
<status status="PASS" starttime="20241013 17:01:45.812" endtime="20241013 17:01:46.284"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:46.287" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key1",
    "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:46.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:46.293" level="INFO">${output} = c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433</msg>
<status status="PASS" starttime="20241013 17:01:46.285" endtime="20241013 17:01:46.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:46.294" level="INFO">c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433</msg>
<status status="PASS" starttime="20241013 17:01:46.293" endtime="20241013 17:01:46.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:46.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:46.294" endtime="20241013 17:01:46.294"/>
</kw>
<msg timestamp="20241013 17:01:46.295" level="INFO">${uploadID1} = c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433</msg>
<status status="PASS" starttime="20241013 17:01:46.285" endtime="20241013 17:01:46.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:46.295" endtime="20241013 17:01:46.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:46.295" endtime="20241013 17:01:46.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:46.296" endtime="20241013 17:01:46.296"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:46.300" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-5816640693/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:46.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:46.769" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key2",
    "UploadId": "15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002"
}</msg>
<status status="PASS" starttime="20241013 17:01:46.298" endtime="20241013 17:01:46.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:46.770" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key2",
    "UploadId": "15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002"
}</msg>
<status status="PASS" starttime="20241013 17:01:46.770" endtime="20241013 17:01:46.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:46.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:46.771" endtime="20241013 17:01:46.771"/>
</kw>
<status status="PASS" starttime="20241013 17:01:46.298" endtime="20241013 17:01:46.771"/>
</kw>
<msg timestamp="20241013 17:01:46.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:46.297" endtime="20241013 17:01:46.771"/>
</kw>
<msg timestamp="20241013 17:01:46.772" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key2",
    "UploadId": "15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002"
}</msg>
<status status="PASS" starttime="20241013 17:01:46.297" endtime="20241013 17:01:46.772"/>
</kw>
<msg timestamp="20241013 17:01:46.772" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key2",
    "UploadId": "15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002"
}</msg>
<status status="PASS" starttime="20241013 17:01:46.296" endtime="20241013 17:01:46.772"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:46.775" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-5816640693/listtest/key2",
    "UploadId": "15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:46.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:46.780" level="INFO">${output} = 15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002</msg>
<status status="PASS" starttime="20241013 17:01:46.772" endtime="20241013 17:01:46.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:46.781" level="INFO">15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002</msg>
<status status="PASS" starttime="20241013 17:01:46.781" endtime="20241013 17:01:46.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:46.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:46.781" endtime="20241013 17:01:46.782"/>
</kw>
<msg timestamp="20241013 17:01:46.782" level="INFO">${uploadID2} = 15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002</msg>
<status status="PASS" starttime="20241013 17:01:46.772" endtime="20241013 17:01:46.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:46.782" endtime="20241013 17:01:46.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:46.783" endtime="20241013 17:01:46.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:46.783" endtime="20241013 17:01:46.784"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:46.787" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-5816640693/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:47.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:47.255" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433",
            "Key": "ozone-test-5816640693/listtest/key1",
            "Initiated": "2024...</msg>
<status status="PASS" starttime="20241013 17:01:46.785" endtime="20241013 17:01:47.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:47.256" level="INFO">{
    "Uploads": [
        {
            "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433",
            "Key": "ozone-test-5816640693/listtest/key1",
            "Initiated": "2024-10-13T17:01:46.237Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002",
            "Key": "ozone-test-5816640693/listtest/key2",
            "Initiated": "2024-10-13T17:01:46.725Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:01:47.255" endtime="20241013 17:01:47.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:47.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:47.256" endtime="20241013 17:01:47.257"/>
</kw>
<status status="PASS" starttime="20241013 17:01:46.785" endtime="20241013 17:01:47.257"/>
</kw>
<msg timestamp="20241013 17:01:47.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:46.785" endtime="20241013 17:01:47.257"/>
</kw>
<msg timestamp="20241013 17:01:47.257" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433",
            "Key": "ozone-test-5816640693/listtest/key1",
            "Initiated": "2024...</msg>
<status status="PASS" starttime="20241013 17:01:46.784" endtime="20241013 17:01:47.257"/>
</kw>
<msg timestamp="20241013 17:01:47.257" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433",
            "Key": "ozone-test-5816640693/listtest/key1",
            "Initiated": "2024...</msg>
<status status="PASS" starttime="20241013 17:01:46.784" endtime="20241013 17:01:47.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:47.258" endtime="20241013 17:01:47.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:47.258" endtime="20241013 17:01:47.258"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:47.262" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "c6c98bce-2b51-418e-9660-0135eb610fcb-113301186559152433",
            "Key": "ozone-test-5816640693/listtest/key1",
            "Initiated": "2024-10-13T17:01:46.237Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "15df4edd-94a3-4c5b-9c0d-13560e62797b-113301186591134002",
            "Key": "ozone-test-5816640693/listtest/key2",
            "Initiated": "2024-10-13T17:01:46.725Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:47.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:47.267" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:01:47.259" endtime="20241013 17:01:47.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:47.268" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:01:47.268" endtime="20241013 17:01:47.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:47.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:47.269" endtime="20241013 17:01:47.269"/>
</kw>
<msg timestamp="20241013 17:01:47.269" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20241013 17:01:47.259" endtime="20241013 17:01:47.269"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:47.269" endtime="20241013 17:01:47.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:45.810" endtime="20241013 17:01:47.270"/>
</test>
<kw name="Teardown Multipart Tests" type="TEARDOWN">
<kw name="Remove Files" library="OperatingSystem">
<arg>/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb</arg>
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<msg timestamp="20241013 17:01:47.272" level="INFO" html="true">File '&lt;a href="file:///tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb"&gt;/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20241013 17:01:47.272" endtime="20241013 17:01:47.272"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.271" endtime="20241013 17:01:47.272"/>
</kw>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:00:49.359" endtime="20241013 17:01:47.272"/>
</suite>
<suite id="s1-s5-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:01:47.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:47.285" endtime="20241013 17:01:47.285"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:01:47.285" endtime="20241013 17:01:47.285"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:01:47.285" endtime="20241013 17:01:47.285"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:47.285" endtime="20241013 17:01:47.285"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:47.286" endtime="20241013 17:01:47.286"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:47.286" endtime="20241013 17:01:47.286"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:47.286" endtime="20241013 17:01:47.286"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:47.286" endtime="20241013 17:01:47.286"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:01:47.286" endtime="20241013 17:01:47.286"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.284" endtime="20241013 17:01:47.286"/>
</kw>
<test id="s1-s5-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:47.288" level="INFO">${postfix} = 49621</msg>
<status status="PASS" starttime="20241013 17:01:47.288" endtime="20241013 17:01:47.288"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 17:01:47.288" level="INFO">${DESTBUCKET} = destbucket-49621</msg>
<status status="PASS" starttime="20241013 17:01:47.288" endtime="20241013 17:01:47.288"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:47.292" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-49621 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:47.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:47.765" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-49621"
}</msg>
<status status="PASS" starttime="20241013 17:01:47.290" endtime="20241013 17:01:47.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:47.766" level="INFO">{
    "Location": "http://s3g:9878/destbucket-49621"
}</msg>
<status status="PASS" starttime="20241013 17:01:47.765" endtime="20241013 17:01:47.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:47.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:47.766" endtime="20241013 17:01:47.767"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.290" endtime="20241013 17:01:47.767"/>
</kw>
<msg timestamp="20241013 17:01:47.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:47.289" endtime="20241013 17:01:47.767"/>
</kw>
<msg timestamp="20241013 17:01:47.767" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-49621"
}</msg>
<status status="PASS" starttime="20241013 17:01:47.289" endtime="20241013 17:01:47.767"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.289" endtime="20241013 17:01:47.767"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.287" endtime="20241013 17:01:47.767"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.287" endtime="20241013 17:01:47.767"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:47.771" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20241013 17:01:47.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:47.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:47.769" endtime="20241013 17:01:47.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:47.776" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:47.776" endtime="20241013 17:01:47.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:47.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:47.776" endtime="20241013 17:01:47.777"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.768" endtime="20241013 17:01:47.777"/>
</kw>
<msg timestamp="20241013 17:01:47.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:47.768" endtime="20241013 17:01:47.777"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.768" endtime="20241013 17:01:47.777"/>
</kw>
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:47.781" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:47.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:47.785" level="INFO">${output} = 15e5fe5b7f500a2edcd0694a25b6e5a8</msg>
<status status="PASS" starttime="20241013 17:01:47.779" endtime="20241013 17:01:47.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:47.786" level="INFO">15e5fe5b7f500a2edcd0694a25b6e5a8</msg>
<status status="PASS" starttime="20241013 17:01:47.786" endtime="20241013 17:01:47.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:47.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:47.786" endtime="20241013 17:01:47.787"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.778" endtime="20241013 17:01:47.787"/>
</kw>
<msg timestamp="20241013 17:01:47.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:47.778" endtime="20241013 17:01:47.787"/>
</kw>
<msg timestamp="20241013 17:01:47.787" level="INFO">${file_checksum} = 15e5fe5b7f500a2edcd0694a25b6e5a8</msg>
<status status="PASS" starttime="20241013 17:01:47.777" endtime="20241013 17:01:47.787"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:47.791" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:48.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:48.297" level="INFO">${output} = {
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\""
}</msg>
<status status="PASS" starttime="20241013 17:01:47.789" endtime="20241013 17:01:48.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:48.298" level="INFO">{
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\""
}</msg>
<status status="PASS" starttime="20241013 17:01:48.297" endtime="20241013 17:01:48.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:48.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:48.298" endtime="20241013 17:01:48.299"/>
</kw>
<status status="PASS" starttime="20241013 17:01:47.789" endtime="20241013 17:01:48.299"/>
</kw>
<msg timestamp="20241013 17:01:48.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:47.789" endtime="20241013 17:01:48.299"/>
</kw>
<msg timestamp="20241013 17:01:48.299" level="INFO">${output} = {
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\""
}</msg>
<status status="PASS" starttime="20241013 17:01:47.788" endtime="20241013 17:01:48.299"/>
</kw>
<msg timestamp="20241013 17:01:48.299" level="INFO">${result} = {
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\""
}</msg>
<status status="PASS" starttime="20241013 17:01:47.788" endtime="20241013 17:01:48.299"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:48.302" level="INFO">Running command 'echo '{
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:48.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:48.308" level="INFO">${output} = "15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:48.300" endtime="20241013 17:01:48.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:48.309" level="INFO">"15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:48.308" endtime="20241013 17:01:48.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:48.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:48.309" endtime="20241013 17:01:48.309"/>
</kw>
<msg timestamp="20241013 17:01:48.309" level="INFO">${eTag} = "15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:48.300" endtime="20241013 17:01:48.309"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:48.310" endtime="20241013 17:01:48.310"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:48.314" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:48.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:48.781" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:48.250Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:01:48.312" endtime="20241013 17:01:48.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:48.782" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:48.250Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:01:48.782" endtime="20241013 17:01:48.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:48.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:48.783" endtime="20241013 17:01:48.783"/>
</kw>
<status status="PASS" starttime="20241013 17:01:48.311" endtime="20241013 17:01:48.783"/>
</kw>
<msg timestamp="20241013 17:01:48.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:48.311" endtime="20241013 17:01:48.783"/>
</kw>
<msg timestamp="20241013 17:01:48.784" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:48.250Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:01:48.311" endtime="20241013 17:01:48.784"/>
</kw>
<msg timestamp="20241013 17:01:48.784" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:48.250Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:01:48.310" endtime="20241013 17:01:48.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:48.784" endtime="20241013 17:01:48.784"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:48.789" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 --copy-source encrypted/ozone-test-5816640693/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:49.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:49.306" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:49.239Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:48.786" endtime="20241013 17:01:49.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:49.307" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:49.239Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:49.307" endtime="20241013 17:01:49.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:49.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:49.308" endtime="20241013 17:01:49.308"/>
</kw>
<status status="PASS" starttime="20241013 17:01:48.786" endtime="20241013 17:01:49.308"/>
</kw>
<msg timestamp="20241013 17:01:49.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:48.786" endtime="20241013 17:01:49.308"/>
</kw>
<msg timestamp="20241013 17:01:49.309" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:49.239Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:48.785" endtime="20241013 17:01:49.309"/>
</kw>
<msg timestamp="20241013 17:01:49.309" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:49.239Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:48.784" endtime="20241013 17:01:49.309"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:49.312" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:49.239Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:49.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:49.318" level="INFO">${output} = "15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:49.310" endtime="20241013 17:01:49.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:49.319" level="INFO">"15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:49.318" endtime="20241013 17:01:49.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:49.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:49.319" endtime="20241013 17:01:49.320"/>
</kw>
<msg timestamp="20241013 17:01:49.320" level="INFO">${eTag} = "15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:49.309" endtime="20241013 17:01:49.320"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:49.320" endtime="20241013 17:01:49.320"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:49.325" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-49621 --prefix ozone-test-5816640693/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:49.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:49.788" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:49.239Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:01:49.322" endtime="20241013 17:01:49.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:49.790" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:49.239Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:01:49.789" endtime="20241013 17:01:49.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:49.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:49.790" endtime="20241013 17:01:49.790"/>
</kw>
<status status="PASS" starttime="20241013 17:01:49.322" endtime="20241013 17:01:49.790"/>
</kw>
<msg timestamp="20241013 17:01:49.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:49.322" endtime="20241013 17:01:49.790"/>
</kw>
<msg timestamp="20241013 17:01:49.791" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:49.239Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:01:49.321" endtime="20241013 17:01:49.791"/>
</kw>
<msg timestamp="20241013 17:01:49.791" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:49.239Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:01:49.321" endtime="20241013 17:01:49.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:49.791" endtime="20241013 17:01:49.791"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:49.795" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:50.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:50.258" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:49 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:01:49.793" endtime="20241013 17:01:50.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:50.260" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:01:49 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:50 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:50.259" endtime="20241013 17:01:50.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:50.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:50.260" endtime="20241013 17:01:50.260"/>
</kw>
<status status="PASS" starttime="20241013 17:01:49.793" endtime="20241013 17:01:50.261"/>
</kw>
<msg timestamp="20241013 17:01:50.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:49.792" endtime="20241013 17:01:50.261"/>
</kw>
<msg timestamp="20241013 17:01:50.261" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:49 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:01:49.792" endtime="20241013 17:01:50.261"/>
</kw>
<msg timestamp="20241013 17:01:50.261" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:49 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:01:49.792" endtime="20241013 17:01:50.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:50.261" endtime="20241013 17:01:50.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:50.262" endtime="20241013 17:01:50.262"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:50.262" endtime="20241013 17:01:50.263"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:50.263" endtime="20241013 17:01:50.263"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:50.268" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:50.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:50.737" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:49 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:01:50.265" endtime="20241013 17:01:50.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:50.738" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:49 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:50 GMT",
    "Metadata": {},
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:01:50.738" endtime="20241013 17:01:50.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:50.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:50.739" endtime="20241013 17:01:50.739"/>
</kw>
<status status="PASS" starttime="20241013 17:01:50.265" endtime="20241013 17:01:50.739"/>
</kw>
<msg timestamp="20241013 17:01:50.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:50.264" endtime="20241013 17:01:50.739"/>
</kw>
<msg timestamp="20241013 17:01:50.740" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:49 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:01:50.264" endtime="20241013 17:01:50.740"/>
</kw>
<msg timestamp="20241013 17:01:50.740" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:49 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:01:50.263" endtime="20241013 17:01:50.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:50.740" endtime="20241013 17:01:50.740"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:50.743" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:49 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:50 GMT",
    "Metadata": {},
    "TagCount": 2
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:50.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:50.749" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:01:50.741" endtime="20241013 17:01:50.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:50.749" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:01:50.749" endtime="20241013 17:01:50.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:50.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:50.750" endtime="20241013 17:01:50.750"/>
</kw>
<msg timestamp="20241013 17:01:50.750" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20241013 17:01:50.740" endtime="20241013 17:01:50.750"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:50.750" endtime="20241013 17:01:50.751"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:50.755" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 --copy-source encrypted/ozone-test-5816640693/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:51.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:51.276" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:51.214Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:50.753" endtime="20241013 17:01:51.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:51.277" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:51.214Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:51.277" endtime="20241013 17:01:51.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:51.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:51.277" endtime="20241013 17:01:51.278"/>
</kw>
<status status="PASS" starttime="20241013 17:01:50.752" endtime="20241013 17:01:51.278"/>
</kw>
<msg timestamp="20241013 17:01:51.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:50.752" endtime="20241013 17:01:51.278"/>
</kw>
<msg timestamp="20241013 17:01:51.279" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:51.214Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:50.751" endtime="20241013 17:01:51.279"/>
</kw>
<msg timestamp="20241013 17:01:51.279" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:51.214Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:50.751" endtime="20241013 17:01:51.279"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:51.282" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:51.214Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:51.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:51.288" level="INFO">${output} = "15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:51.280" endtime="20241013 17:01:51.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:51.289" level="INFO">"15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:51.288" endtime="20241013 17:01:51.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:51.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:51.289" endtime="20241013 17:01:51.289"/>
</kw>
<msg timestamp="20241013 17:01:51.289" level="INFO">${eTag} = "15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:51.279" endtime="20241013 17:01:51.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:51.290" endtime="20241013 17:01:51.290"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:51.294" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-49621 --prefix ozone-test-5816640693/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:51.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:51.755" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:51.214Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:01:51.292" endtime="20241013 17:01:51.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:51.756" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:51.214Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:01:51.756" endtime="20241013 17:01:51.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:51.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:51.756" endtime="20241013 17:01:51.757"/>
</kw>
<status status="PASS" starttime="20241013 17:01:51.291" endtime="20241013 17:01:51.757"/>
</kw>
<msg timestamp="20241013 17:01:51.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:51.291" endtime="20241013 17:01:51.757"/>
</kw>
<msg timestamp="20241013 17:01:51.757" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:51.214Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:01:51.291" endtime="20241013 17:01:51.757"/>
</kw>
<msg timestamp="20241013 17:01:51.757" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:01:51.214Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:01:51.290" endtime="20241013 17:01:51.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:51.758" endtime="20241013 17:01:51.758"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:51.762" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:52.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:52.223" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:51 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:01:51.760" endtime="20241013 17:01:52.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:52.224" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:01:51 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:52 GMT",
    "Metadata": {
        "custom-key3": "custom-value3",
        "custom-key4": "custom-value4"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:52.223" endtime="20241013 17:01:52.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:52.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:52.224" endtime="20241013 17:01:52.225"/>
</kw>
<status status="PASS" starttime="20241013 17:01:51.759" endtime="20241013 17:01:52.225"/>
</kw>
<msg timestamp="20241013 17:01:52.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:51.759" endtime="20241013 17:01:52.225"/>
</kw>
<msg timestamp="20241013 17:01:52.225" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:51 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:01:51.759" endtime="20241013 17:01:52.225"/>
</kw>
<msg timestamp="20241013 17:01:52.226" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:51 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:01:51.758" endtime="20241013 17:01:52.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:52.226" endtime="20241013 17:01:52.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:52.226" endtime="20241013 17:01:52.226"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:52.227" endtime="20241013 17:01:52.227"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:52.227" endtime="20241013 17:01:52.227"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:52.232" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:52.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:52.709" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:51 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:01:52.229" endtime="20241013 17:01:52.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:52.711" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:51 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:52 GMT",
    "Metadata": {},
    "TagCount": 1
}</msg>
<status status="PASS" starttime="20241013 17:01:52.710" endtime="20241013 17:01:52.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:52.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:52.711" endtime="20241013 17:01:52.711"/>
</kw>
<status status="PASS" starttime="20241013 17:01:52.229" endtime="20241013 17:01:52.711"/>
</kw>
<msg timestamp="20241013 17:01:52.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:52.229" endtime="20241013 17:01:52.712"/>
</kw>
<msg timestamp="20241013 17:01:52.712" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:51 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:01:52.228" endtime="20241013 17:01:52.712"/>
</kw>
<msg timestamp="20241013 17:01:52.712" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:51 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:01:52.227" endtime="20241013 17:01:52.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:52.712" endtime="20241013 17:01:52.713"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:52.716" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:01:51 GMT",
    "ContentLength": 29,
    "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:52 GMT",
    "Metadata": {},
    "TagCount": 1
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:52.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:52.721" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20241013 17:01:52.713" endtime="20241013 17:01:52.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:52.722" level="INFO">1</msg>
<status status="PASS" starttime="20241013 17:01:52.722" endtime="20241013 17:01:52.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:52.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:52.722" endtime="20241013 17:01:52.723"/>
</kw>
<msg timestamp="20241013 17:01:52.723" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20241013 17:01:52.713" endtime="20241013 17:01:52.723"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:52.723" endtime="20241013 17:01:52.724"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:47.286" endtime="20241013 17:01:52.724"/>
</test>
<test id="s1-s5-s9-t2" name="Copy Object Where Bucket is not available" line="90">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:52.729" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-5816640693/copyobject/key=value/f1 --copy-source encrypted/ozone-test-5816640693/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:53.202" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:53.202" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:01:52.726" endtime="20241013 17:01:53.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:53.203" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:01:53.203" endtime="20241013 17:01:53.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:53.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:53.204" endtime="20241013 17:01:53.204"/>
</kw>
<msg timestamp="20241013 17:01:53.204" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:01:52.726" endtime="20241013 17:01:53.204"/>
</kw>
<msg timestamp="20241013 17:01:53.204" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:01:52.725" endtime="20241013 17:01:53.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:53.205" endtime="20241013 17:01:53.205"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:53.209" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-5816640693/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:53.674" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:53.674" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:01:53.206" endtime="20241013 17:01:53.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:53.675" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:01:53.675" endtime="20241013 17:01:53.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:53.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:53.676" endtime="20241013 17:01:53.676"/>
</kw>
<msg timestamp="20241013 17:01:53.676" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:01:53.206" endtime="20241013 17:01:53.676"/>
</kw>
<msg timestamp="20241013 17:01:53.676" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:01:53.205" endtime="20241013 17:01:53.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:53.677" endtime="20241013 17:01:53.677"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:52.725" endtime="20241013 17:01:53.677"/>
</test>
<test id="s1-s5-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="96">
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:53.681" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:53.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:53.686" level="INFO">${output} = 15e5fe5b7f500a2edcd0694a25b6e5a8</msg>
<status status="PASS" starttime="20241013 17:01:53.679" endtime="20241013 17:01:53.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:53.687" level="INFO">15e5fe5b7f500a2edcd0694a25b6e5a8</msg>
<status status="PASS" starttime="20241013 17:01:53.687" endtime="20241013 17:01:53.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:53.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:53.687" endtime="20241013 17:01:53.688"/>
</kw>
<status status="PASS" starttime="20241013 17:01:53.679" endtime="20241013 17:01:53.688"/>
</kw>
<msg timestamp="20241013 17:01:53.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:53.679" endtime="20241013 17:01:53.688"/>
</kw>
<msg timestamp="20241013 17:01:53.688" level="INFO">${file_checksum} = 15e5fe5b7f500a2edcd0694a25b6e5a8</msg>
<status status="PASS" starttime="20241013 17:01:53.678" endtime="20241013 17:01:53.688"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:53.692" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 --copy-source destbucket-49621/ozone-test-5816640693/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:54.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:54.157" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:54.114Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:53.690" endtime="20241013 17:01:54.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:54.158" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:54.114Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:54.157" endtime="20241013 17:01:54.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:54.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:54.158" endtime="20241013 17:01:54.158"/>
</kw>
<status status="PASS" starttime="20241013 17:01:53.690" endtime="20241013 17:01:54.159"/>
</kw>
<msg timestamp="20241013 17:01:54.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:53.690" endtime="20241013 17:01:54.159"/>
</kw>
<msg timestamp="20241013 17:01:54.159" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:54.114Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:53.689" endtime="20241013 17:01:54.159"/>
</kw>
<msg timestamp="20241013 17:01:54.159" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:54.114Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:53.688" endtime="20241013 17:01:54.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:54.159" endtime="20241013 17:01:54.160"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:54.162" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"15e5fe5b7f500a2edcd0694a25b6e5a8\"",
        "LastModified": "2024-10-13T17:01:54.114Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:54.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:54.168" level="INFO">${output} = "15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:54.160" endtime="20241013 17:01:54.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:54.169" level="INFO">"15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:54.168" endtime="20241013 17:01:54.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:54.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:54.169" endtime="20241013 17:01:54.169"/>
</kw>
<msg timestamp="20241013 17:01:54.169" level="INFO">${eTag} = "15e5fe5b7f500a2edcd0694a25b6e5a8"</msg>
<status status="PASS" starttime="20241013 17:01:54.160" endtime="20241013 17:01:54.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:01:54.170" endtime="20241013 17:01:54.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:53.677" endtime="20241013 17:01:54.170"/>
</test>
<test id="s1-s5-s9-t4" name="Copy Object Where Key not available" line="103">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:54.174" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 --copy-source encrypted/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:54.641" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:54.641" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20241013 17:01:54.172" endtime="20241013 17:01:54.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:54.642" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20241013 17:01:54.641" endtime="20241013 17:01:54.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:54.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:54.642" endtime="20241013 17:01:54.642"/>
</kw>
<msg timestamp="20241013 17:01:54.643" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20241013 17:01:54.172" endtime="20241013 17:01:54.643"/>
</kw>
<msg timestamp="20241013 17:01:54.643" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20241013 17:01:54.171" endtime="20241013 17:01:54.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:54.643" endtime="20241013 17:01:54.643"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:54.170" endtime="20241013 17:01:54.644"/>
</test>
<test id="s1-s5-s9-t5" name="Copy Object using an invalid copy directive" line="107">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:54.648" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 --copy-source encrypted/ozone-test-5816640693/copyobject/key=value/f1 --metadata-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:55.105" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:55.105" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20241013 17:01:54.646" endtime="20241013 17:01:55.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:55.107" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20241013 17:01:55.106" endtime="20241013 17:01:55.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:55.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:55.107" endtime="20241013 17:01:55.107"/>
</kw>
<msg timestamp="20241013 17:01:55.108" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20241013 17:01:54.645" endtime="20241013 17:01:55.108"/>
</kw>
<msg timestamp="20241013 17:01:55.108" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20241013 17:01:54.645" endtime="20241013 17:01:55.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:55.108" endtime="20241013 17:01:55.108"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --tagging-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:55.112" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 --copy-source encrypted/ozone-test-5816640693/copyobject/key=value/f1 --tagging-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:55.576" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:55.576" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20241013 17:01:55.110" endtime="20241013 17:01:55.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:55.577" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20241013 17:01:55.576" endtime="20241013 17:01:55.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:55.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:55.577" endtime="20241013 17:01:55.577"/>
</kw>
<msg timestamp="20241013 17:01:55.578" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20241013 17:01:55.109" endtime="20241013 17:01:55.578"/>
</kw>
<msg timestamp="20241013 17:01:55.578" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20241013 17:01:55.108" endtime="20241013 17:01:55.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:55.578" endtime="20241013 17:01:55.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:54.644" endtime="20241013 17:01:55.579"/>
</test>
<test id="s1-s5-s9-t6" name="Copy Object with user defined metadata size larger than 2 KB" line="113">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:55.584" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:01:55.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:55.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:55.582" endtime="20241013 17:01:55.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:55.587" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:55.586" endtime="20241013 17:01:55.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:55.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:55.587" endtime="20241013 17:01:55.588"/>
</kw>
<status status="PASS" starttime="20241013 17:01:55.580" endtime="20241013 17:01:55.588"/>
</kw>
<msg timestamp="20241013 17:01:55.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:55.580" endtime="20241013 17:01:55.588"/>
</kw>
<status status="PASS" starttime="20241013 17:01:55.580" endtime="20241013 17:01:55.588"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:01:55.591" level="INFO">${custom_metadata_value} = Fk59WeY9L6RIggbQk5bZzyDx6oT2Kn26xXRPjwdA7QKn3gzIy27dEL4poDQN0rbndZGZvu5usnNcBOrhs6sC40K3V4oZ0eu6AI1NqaMDzvIRPT03Iqh7SDwPZ5oPsxcWhgPRgZKT8c7FoYfF1fWYUBaL9TPk3T5OmRgCpbQIsAyfYJRuaSNWd6AXYgvoSXayuaivHyS1...</msg>
<status status="PASS" starttime="20241013 17:01:55.588" endtime="20241013 17:01:55.591"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key1=${custom_metadata_value}" --metadata-directive REPLACE</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:55.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-49621 --key ozone-test-5816640693/copyobject/key=value/f1 --copy-source encrypted/ozone-test-5816640693/copyobject/key=value/f1 --metadata="custom-key1=Fk59WeY9L6RIggbQk5bZzyDx6oT2Kn26xXRPjwdA7QKn3gzIy27dEL4poDQN0rbndZGZvu5usnNcBOrhs6sC40K3V4oZ0eu6AI1NqaMDzvIRPT03Iqh7SDwPZ5oPsxcWhgPRgZKT8c7FoYfF1fWYUBaL9TPk3T5OmRgCpbQIsAyfYJRuaSNWd6AXYgvoSXayuaivHyS1MTo9AvOH5VdYLUAwKQ8GJXwHO4ZtRim1dAz154LsPwFimuGdzqkJo8Nr4h8v6hdW71ON0vzgjPwhjd5R9aG7hyHUkDXjlRIlGUZBnUsqh5D7oQQZ8ELnht9NVQuQuLro1CcoWHFA7oqrQBz1CtSTUk1fFFPqXcWgoTWSuC2nLzNqlEtQvotXexjMFT3wq8VHUJSuMIK8HbVUO1psBwF5zgWRwheAxtLQtN2EwOu7PW3Pzx2nZFLzWc4QFNSGgP1DHxsySvmU5s9HjluSRclH6fG2NTU1M1Se2C838nbvstN5JTe9s1HKKTyHRrlQpgnGIk6Pnu7E2aUnRH90t2xQcIiGVeC7EBIjtYUKY5ycbj9WJUdKUfnmamweCSy8Axi1bxp98HgGpqWzji5OZxmAIhoYtYbZDQoO7Wy0tRkf6mxFO0IbQv3hBjHeSOZ1HQ1bzPdmKCkOPmdKDmHL8ZHqSazkQm6zOOnbImoTWbuLDICaxhw4jcCaQtaRoARfNf21n710VykrmKrQq0MppLqO78pf2sdqjqFbJEVRQUWwg4FSNIgqZdpoxTOLtTVFjorKJFjwPC89atpHHt7s9StyhYpELIetQp93bShkod8LtAvCylfPyMfBQKvYUaQOUwr9T1i5IlDClmNKjIujrMQPtWRgDbdQ7CTilf0L5yLKXkqt1AHGjhAfEdXkTEP76Auz8cI9xFGs5ZGzw1OeS4zCetBRexAWlSU0yvEwFMQO3E7zjHvcdJbVT7sBupeJaXXOgF25fmUkiJUHhOcNFGsSE90HTH8tIr8IUJbTf1r7GEnMMvYFFD3ihCuWp9ZcZ0A01rHaKufzEMaNAUjM1vI9WhFMWVF85orVCmZRU9ejAk9Tsjw6bE22eu2UwYU59YwwoeyWsYQ7hyI9sOsa3K14SoNbPiBqhs6FLYWfkVVxRVpxBU92FMtEE4GbtfEiKYqf1EVQfHTuWxSjScTjbgY1AUXLZ4OAjn5LqZq7YMBSyLxnnnlNN3j3bZv9RtNHSeVzqxnmr2n1zKxm6eAt6jCz0fwXmG6gNIlxqmwxX1YkbukYkxGFyBQGY5b5ahwj6ZZK8hGe0aaIlP8ihOOulLS8ZtU4AyweOVjTlFjUFeB8TZ97O1fvE6BbceYZFcNs8lhZlmbukT9vbVlTOBQWmvsET72OCF9X4nJeNMth98PpM58UYapSO4bwGlJzTUb72mV9X8UTKDYtTUvNkAyWhWVwk0BHG763Rr67UUefBpwLLF1xWNg7jLWUOLJX8HAsNr6bnb4aejRKEqLwbLnJxP7YIFiaJtTcGrqQ4bYxI2xEeItJ9nbkXROinxH6gZFIiV4oNW4a3e6L2jSpDA5oNRo4kNPXrqcKLwnY7Atne1Pscgpdx3sYgYQmv886oQyrgtf7St4embK5djgm9w2DXAcjrfSm5bdwDSW3JFQeP7y8D1PKWTR73xZfKUVwDVjB86f2BKMSXwRoVVFd3hhrtBDazwpNGzLKuSeBrMPn7cpbWXHBovsjZRupdt4GhWf0quhkjwrEfcfSc5OMN1uiiBVmgZDrAlkwktNmwu9sajBBc3UiH89bkcr7BvFPKxptSHyP62JgYr7CSji9ZZzGbVJ9Oy8TZffr1SBRPjbCEeLGeptR0vBLIJTbmGZB53bbXq5EKQKrWSWY5SLgkz7gqNkhN4YpANjj50OI8CiU3iP4018KYzoFLrFVutSD6QNzcKqxLnsEPnf5FkywxUb0vP9KvLfUClSbYBkf9GjAk8XTxGmFJKT5A5451qhaOd0uLRguLr8vcETJQwelbG0uXGdW6YDOQCQ1tNK9lNAdXi5BcruLBO5eAUHF74n83lKK35ENqqBZInLgPbtCePzW4jjmP44dyjcYFbu6GBDlwnSIE3mBXO7Qp7rY7igcyS7KcOXPBTLR8h8qSIFmExalRQ612WzHHd8AvqpPe8iOa7qA9zmZmuUaSivyn5qlbfjONwzq0UkHRfz1M2B0sIFxezUnT3aoho80dxnQtsX8DXdfUA8Pexz0SqFLM06CKkk4UNQr5hXhgi5csrUar31cZcgXFbIIoeAGPTMlRjdoReUgvZ8ogE2IDJ69PdLyo770NGVhgQhLHVeml3wksrnzsLbI1dKyZlHp7WfbU50kZrb5qrHCqaqKfskxYi2VfYLFO2Vbh9aj6PfQIipDdyPdmRu8vSUJzphM7b7kwkfSiDrhzZWK70tXPaRAwMWabLkwSHKJjeD8SGmpppzS04vfr8oyH7MQGXWOLvXJ1PK1cPNHhdxPW4faYrjDwn7UTpzwm6B0MJEsfCzeuiGi02nNIxzyr26zVA7avyCTCPyR5TRB1xYQ3dQfyZM2bWPnfGqH0A18g6tRSRWig6LHxb9Fs6zmGLTqmyBfhm5C0uuwEZUVx7ugP8kQILUd2IwD3DFmNwXQCgzh9nsZe1IZdSnRzVQ4yGPiGELr2UFA2YXv6pFrFzlc9KhTi5fnHLNV8hor9b3Q7dgRd40PH3gipZCjiWBaE3tK53PjJahfB1zLTV7xTNAicJAOgB2x1rojQCLltEqcmnz1Gk0quzec0SwEtWZ39kiBZbXveN5UfNuvdupYH4IYkPP6Cfk5bdneLi8jIMOSVlmTB60lamIleeINKVmWC3ZZBcbZlXMLHmTJDE95Kij4cNw3yRRJtL99vjwxDLfPs51UbPiW9l8BIQTrzmIaRxPDuvDGdGsNlva3QjWijmN2xpe1lbE1NZakC7LE5anbroZf8siV7FNlE6YSdHGIGu8sEjEHHLZ6RMZPgyIJu5368Sjh" --metadata-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:56.054" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:56.054" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:01:55.593" endtime="20241013 17:01:56.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:56.055" level="INFO">
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:01:56.054" endtime="20241013 17:01:56.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:56.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:56.055" endtime="20241013 17:01:56.055"/>
</kw>
<msg timestamp="20241013 17:01:56.056" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:01:55.592" endtime="20241013 17:01:56.056"/>
</kw>
<msg timestamp="20241013 17:01:56.056" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:01:55.592" endtime="20241013 17:01:56.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:56.056" endtime="20241013 17:01:56.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:55.579" endtime="20241013 17:01:56.056"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:01:47.275" endtime="20241013 17:01:56.057"/>
</suite>
<suite id="s1-s5-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:01:56.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:56.068" endtime="20241013 17:01:56.068"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:01:56.068" endtime="20241013 17:01:56.068"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:01:56.068" endtime="20241013 17:01:56.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:56.068" endtime="20241013 17:01:56.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:56.068" endtime="20241013 17:01:56.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:56.069" endtime="20241013 17:01:56.069"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:56.069" endtime="20241013 17:01:56.069"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:01:56.069" endtime="20241013 17:01:56.069"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:01:56.069" endtime="20241013 17:01:56.069"/>
</kw>
<status status="PASS" starttime="20241013 17:01:56.067" endtime="20241013 17:01:56.069"/>
</kw>
<test id="s1-s5-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:56.073" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:01:56.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:56.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:56.071" endtime="20241013 17:01:56.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:56.076" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:56.075" endtime="20241013 17:01:56.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:56.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:56.076" endtime="20241013 17:01:56.076"/>
</kw>
<status status="PASS" starttime="20241013 17:01:56.070" endtime="20241013 17:01:56.076"/>
</kw>
<msg timestamp="20241013 17:01:56.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:56.070" endtime="20241013 17:01:56.077"/>
</kw>
<status status="PASS" starttime="20241013 17:01:56.070" endtime="20241013 17:01:56.077"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:56.080" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:56.539" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:56.539" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:56.078" endtime="20241013 17:01:56.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:56.540" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:56.539" endtime="20241013 17:01:56.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:56.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:56.540" endtime="20241013 17:01:56.540"/>
</kw>
<msg timestamp="20241013 17:01:56.541" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:56.077" endtime="20241013 17:01:56.541"/>
</kw>
<msg timestamp="20241013 17:01:56.541" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:56.077" endtime="20241013 17:01:56.541"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:56.545" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:57.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:57.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:56.543" endtime="20241013 17:01:57.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:57.015" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:57.015" endtime="20241013 17:01:57.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:57.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:57.015" endtime="20241013 17:01:57.016"/>
</kw>
<status status="PASS" starttime="20241013 17:01:56.542" endtime="20241013 17:01:57.016"/>
</kw>
<msg timestamp="20241013 17:01:57.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:56.542" endtime="20241013 17:01:57.016"/>
</kw>
<msg timestamp="20241013 17:01:57.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:56.542" endtime="20241013 17:01:57.016"/>
</kw>
<msg timestamp="20241013 17:01:57.017" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:01:56.541" endtime="20241013 17:01:57.017"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:57.017" endtime="20241013 17:01:57.017"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:57.021" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:57.500" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:57.500" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:57.018" endtime="20241013 17:01:57.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:57.501" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:57.501" endtime="20241013 17:01:57.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:57.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:57.501" endtime="20241013 17:01:57.502"/>
</kw>
<msg timestamp="20241013 17:01:57.502" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:57.018" endtime="20241013 17:01:57.502"/>
</kw>
<msg timestamp="20241013 17:01:57.502" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:57.017" endtime="20241013 17:01:57.502"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:57.507" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:57.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:57.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:57.504" endtime="20241013 17:01:57.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:57.973" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:57.972" endtime="20241013 17:01:57.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:57.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:57.973" endtime="20241013 17:01:57.974"/>
</kw>
<status status="PASS" starttime="20241013 17:01:57.504" endtime="20241013 17:01:57.974"/>
</kw>
<msg timestamp="20241013 17:01:57.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:57.504" endtime="20241013 17:01:57.974"/>
</kw>
<msg timestamp="20241013 17:01:57.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:57.503" endtime="20241013 17:01:57.974"/>
</kw>
<msg timestamp="20241013 17:01:57.975" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:01:57.503" endtime="20241013 17:01:57.975"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:57.975" endtime="20241013 17:01:57.975"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:57.980" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:58.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:58.469" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:01:57.977" endtime="20241013 17:01:58.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:58.470" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:01:58.469" endtime="20241013 17:01:58.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:58.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:58.470" endtime="20241013 17:01:58.470"/>
</kw>
<status status="PASS" starttime="20241013 17:01:57.976" endtime="20241013 17:01:58.471"/>
</kw>
<msg timestamp="20241013 17:01:58.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:57.976" endtime="20241013 17:01:58.471"/>
</kw>
<msg timestamp="20241013 17:01:58.471" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:01:57.976" endtime="20241013 17:01:58.471"/>
</kw>
<msg timestamp="20241013 17:01:58.471" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:01:57.975" endtime="20241013 17:01:58.471"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:58.475" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:58.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:58.935" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:58 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:01:58.472" endtime="20241013 17:01:58.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:58.936" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:01:58 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:01:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:01:58.935" endtime="20241013 17:01:58.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:58.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:58.936" endtime="20241013 17:01:58.936"/>
</kw>
<msg timestamp="20241013 17:01:58.937" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:01:58 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:01:58.472" endtime="20241013 17:01:58.937"/>
</kw>
<status status="PASS" starttime="20241013 17:01:58.471" endtime="20241013 17:01:58.937"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:58.940" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:59.401" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:01:59.401" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:58.938" endtime="20241013 17:01:59.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:59.402" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:59.402" endtime="20241013 17:01:59.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:59.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:59.402" endtime="20241013 17:01:59.403"/>
</kw>
<msg timestamp="20241013 17:01:59.403" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:01:58.937" endtime="20241013 17:01:59.403"/>
</kw>
<status status="PASS" starttime="20241013 17:01:58.937" endtime="20241013 17:01:59.403"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:59.407" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:01:59.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:01:59.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:59.405" endtime="20241013 17:01:59.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:01:59.869" level="INFO"/>
<status status="PASS" starttime="20241013 17:01:59.868" endtime="20241013 17:01:59.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:01:59.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:01:59.869" endtime="20241013 17:01:59.870"/>
</kw>
<status status="PASS" starttime="20241013 17:01:59.405" endtime="20241013 17:01:59.870"/>
</kw>
<msg timestamp="20241013 17:01:59.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:59.404" endtime="20241013 17:01:59.870"/>
</kw>
<msg timestamp="20241013 17:01:59.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:01:59.404" endtime="20241013 17:01:59.870"/>
</kw>
<msg timestamp="20241013 17:01:59.870" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:01:59.404" endtime="20241013 17:01:59.870"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:01:59.871" endtime="20241013 17:01:59.871"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:01:59.875" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket encrypted --key ozone-test-5816640693/word.txt --copy-source encrypted/ozone-test-5816640693/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:00.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:00.422" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2024-10-13T17:02:00.373Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:59.873" endtime="20241013 17:02:00.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:00.423" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2024-10-13T17:02:00.373Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:02:00.422" endtime="20241013 17:02:00.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:00.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:00.423" endtime="20241013 17:02:00.423"/>
</kw>
<status status="PASS" starttime="20241013 17:01:59.872" endtime="20241013 17:02:00.424"/>
</kw>
<msg timestamp="20241013 17:02:00.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:01:59.872" endtime="20241013 17:02:00.424"/>
</kw>
<msg timestamp="20241013 17:02:00.424" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2024-10-13T17:02:00.373Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:59.872" endtime="20241013 17:02:00.424"/>
</kw>
<msg timestamp="20241013 17:02:00.424" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2024-10-13T17:02:00.373Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:01:59.871" endtime="20241013 17:02:00.424"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:00.428" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:00.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:00.878" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:00 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:00.425" endtime="20241013 17:02:00.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:00.879" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:02:00 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:00 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:00.879" endtime="20241013 17:02:00.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:00.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:00.880" endtime="20241013 17:02:00.880"/>
</kw>
<msg timestamp="20241013 17:02:00.880" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:00 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:00.425" endtime="20241013 17:02:00.880"/>
</kw>
<status status="PASS" starttime="20241013 17:02:00.424" endtime="20241013 17:02:00.880"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:00.884" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-5816640693/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:01.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:01.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:00.882" endtime="20241013 17:02:01.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:01.348" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:01.347" endtime="20241013 17:02:01.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:01.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:01.351" endtime="20241013 17:02:01.352"/>
</kw>
<status status="PASS" starttime="20241013 17:02:00.882" endtime="20241013 17:02:01.352"/>
</kw>
<msg timestamp="20241013 17:02:01.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:00.881" endtime="20241013 17:02:01.352"/>
</kw>
<msg timestamp="20241013 17:02:01.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:00.881" endtime="20241013 17:02:01.352"/>
</kw>
<status status="PASS" starttime="20241013 17:02:00.881" endtime="20241013 17:02:01.353"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:01.356" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:01.835" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:01.835" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:01.354" endtime="20241013 17:02:01.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:01.836" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:01.835" endtime="20241013 17:02:01.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:01.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:01.836" endtime="20241013 17:02:01.837"/>
</kw>
<msg timestamp="20241013 17:02:01.837" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:01.353" endtime="20241013 17:02:01.837"/>
</kw>
<status status="PASS" starttime="20241013 17:02:01.353" endtime="20241013 17:02:01.837"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:01:56.069" endtime="20241013 17:02:01.837"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:01:56.059" endtime="20241013 17:02:01.838"/>
</suite>
<suite id="s1-s5-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:02:01.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:01.848" endtime="20241013 17:02:01.849"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:02:01.849" endtime="20241013 17:02:01.849"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:02:01.849" endtime="20241013 17:02:01.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:01.849" endtime="20241013 17:02:01.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:01.849" endtime="20241013 17:02:01.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:01.849" endtime="20241013 17:02:01.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:01.850" endtime="20241013 17:02:01.850"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:01.850" endtime="20241013 17:02:01.850"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:02:01.850" endtime="20241013 17:02:01.850"/>
</kw>
<status status="PASS" starttime="20241013 17:02:01.848" endtime="20241013 17:02:01.850"/>
</kw>
<test id="s1-s5-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:01.854" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:02:01.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:01.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:01.852" endtime="20241013 17:02:01.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:01.859" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:01.859" endtime="20241013 17:02:01.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:01.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:01.859" endtime="20241013 17:02:01.860"/>
</kw>
<status status="PASS" starttime="20241013 17:02:01.851" endtime="20241013 17:02:01.860"/>
</kw>
<msg timestamp="20241013 17:02:01.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:01.851" endtime="20241013 17:02:01.860"/>
</kw>
<status status="PASS" starttime="20241013 17:02:01.851" endtime="20241013 17:02:01.860"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:01.864" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:02.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:02.350" level="INFO">${output} = {
    "ETag": "\"8c2a85a194ec941cde9a23999b42798b\""
}</msg>
<status status="PASS" starttime="20241013 17:02:01.862" endtime="20241013 17:02:02.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:02.351" level="INFO">{
    "ETag": "\"8c2a85a194ec941cde9a23999b42798b\""
}</msg>
<status status="PASS" starttime="20241013 17:02:02.350" endtime="20241013 17:02:02.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:02.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:02.351" endtime="20241013 17:02:02.351"/>
</kw>
<status status="PASS" starttime="20241013 17:02:01.862" endtime="20241013 17:02:02.351"/>
</kw>
<msg timestamp="20241013 17:02:02.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:01.861" endtime="20241013 17:02:02.352"/>
</kw>
<msg timestamp="20241013 17:02:02.352" level="INFO">${output} = {
    "ETag": "\"8c2a85a194ec941cde9a23999b42798b\""
}</msg>
<status status="PASS" starttime="20241013 17:02:01.861" endtime="20241013 17:02:02.352"/>
</kw>
<msg timestamp="20241013 17:02:02.352" level="INFO">${result} = {
    "ETag": "\"8c2a85a194ec941cde9a23999b42798b\""
}</msg>
<status status="PASS" starttime="20241013 17:02:01.860" endtime="20241013 17:02:02.352"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:02.356" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:02.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:02.828" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/deletetestapi/key=value/f1",
            "LastModified": "2024-10-13T17:02:02.308Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20241013 17:02:02.354" endtime="20241013 17:02:02.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:02.829" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5816640693/deletetestapi/key=value/f1",
            "LastModified": "2024-10-13T17:02:02.308Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:02:02.828" endtime="20241013 17:02:02.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:02.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:02.829" endtime="20241013 17:02:02.829"/>
</kw>
<status status="PASS" starttime="20241013 17:02:02.353" endtime="20241013 17:02:02.830"/>
</kw>
<msg timestamp="20241013 17:02:02.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:02.353" endtime="20241013 17:02:02.830"/>
</kw>
<msg timestamp="20241013 17:02:02.830" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/deletetestapi/key=value/f1",
            "LastModified": "2024-10-13T17:02:02.308Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20241013 17:02:02.353" endtime="20241013 17:02:02.830"/>
</kw>
<msg timestamp="20241013 17:02:02.830" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/deletetestapi/key=value/f1",
            "LastModified": "2024-10-13T17:02:02.308Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20241013 17:02:02.352" endtime="20241013 17:02:02.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:02.830" endtime="20241013 17:02:02.831"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:02.835" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-5816640693/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:03.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:03.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:02.833" endtime="20241013 17:02:03.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:03.332" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:03.331" endtime="20241013 17:02:03.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:03.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:03.332" endtime="20241013 17:02:03.332"/>
</kw>
<status status="PASS" starttime="20241013 17:02:02.832" endtime="20241013 17:02:03.333"/>
</kw>
<msg timestamp="20241013 17:02:03.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:02.832" endtime="20241013 17:02:03.333"/>
</kw>
<msg timestamp="20241013 17:02:03.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:02.832" endtime="20241013 17:02:03.333"/>
</kw>
<msg timestamp="20241013 17:02:03.333" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:02:02.831" endtime="20241013 17:02:03.333"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:03.339" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:03.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:03.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:03.336" endtime="20241013 17:02:03.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:03.812" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:03.811" endtime="20241013 17:02:03.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:03.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:03.812" endtime="20241013 17:02:03.812"/>
</kw>
<status status="PASS" starttime="20241013 17:02:03.335" endtime="20241013 17:02:03.812"/>
</kw>
<msg timestamp="20241013 17:02:03.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:03.335" endtime="20241013 17:02:03.812"/>
</kw>
<msg timestamp="20241013 17:02:03.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:03.334" endtime="20241013 17:02:03.813"/>
</kw>
<msg timestamp="20241013 17:02:03.813" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:02:03.333" endtime="20241013 17:02:03.813"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:03.813" endtime="20241013 17:02:03.813"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:01.850" endtime="20241013 17:02:03.814"/>
</test>
<test id="s1-s5-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:03.818" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:04.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:04.267" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1686725999/
                           PRE ozone-test-3658149914/
             ...</msg>
<status status="PASS" starttime="20241013 17:02:03.816" endtime="20241013 17:02:04.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:04.268" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1686725999/
                           PRE ozone-test-3658149914/
                           PRE ozone-test-4676728358/
                           PRE ozone-test-5816640693/
                           PRE ozone-test-6953108331/
                           PRE ozone-test-8291753013/
                           PRE specialchars/
2024-10-13 17:00:21       4068 README1.md
2024-10-13 17:00:19       4068 README10.md
2024-10-13 17:00:26   20971522 ddgcqctoou
2024-10-13 17:00:20   10485761 multiUpload.1.gz
2024-10-13 17:00:21   10485761 multiUpload.2.gz
2024-10-13 17:00:16         29 testfile</msg>
<status status="PASS" starttime="20241013 17:02:04.268" endtime="20241013 17:02:04.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:04.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:04.269" endtime="20241013 17:02:04.269"/>
</kw>
<status status="PASS" starttime="20241013 17:02:03.816" endtime="20241013 17:02:04.269"/>
</kw>
<msg timestamp="20241013 17:02:04.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:03.816" endtime="20241013 17:02:04.270"/>
</kw>
<msg timestamp="20241013 17:02:04.270" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1686725999/
                           PRE ozone-test-3658149914/
             ...</msg>
<status status="PASS" starttime="20241013 17:02:03.815" endtime="20241013 17:02:04.270"/>
</kw>
<msg timestamp="20241013 17:02:04.270" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1686725999/
                           PRE ozone-test-3658149914/
             ...</msg>
<status status="PASS" starttime="20241013 17:02:03.815" endtime="20241013 17:02:04.270"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:04.270" endtime="20241013 17:02:04.271"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:04.276" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:04.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:04.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:04.272" endtime="20241013 17:02:04.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:04.742" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:04.742" endtime="20241013 17:02:04.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:04.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:04.743" endtime="20241013 17:02:04.743"/>
</kw>
<status status="PASS" starttime="20241013 17:02:04.272" endtime="20241013 17:02:04.743"/>
</kw>
<msg timestamp="20241013 17:02:04.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:04.272" endtime="20241013 17:02:04.743"/>
</kw>
<msg timestamp="20241013 17:02:04.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:04.271" endtime="20241013 17:02:04.744"/>
</kw>
<msg timestamp="20241013 17:02:04.744" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:02:04.271" endtime="20241013 17:02:04.744"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:04.748" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:05.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:05.234" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1686725999/
                           PRE ozone-test-3658149914/
             ...</msg>
<status status="PASS" starttime="20241013 17:02:04.745" endtime="20241013 17:02:05.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:05.235" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1686725999/
                           PRE ozone-test-3658149914/
                           PRE ozone-test-4676728358/
                           PRE ozone-test-5816640693/
                           PRE ozone-test-6953108331/
                           PRE ozone-test-8291753013/
                           PRE specialchars/
2024-10-13 17:00:21       4068 README1.md
2024-10-13 17:00:19       4068 README10.md
2024-10-13 17:00:26   20971522 ddgcqctoou
2024-10-13 17:00:20   10485761 multiUpload.1.gz
2024-10-13 17:00:21   10485761 multiUpload.2.gz
2024-10-13 17:00:16         29 testfile</msg>
<status status="PASS" starttime="20241013 17:02:05.235" endtime="20241013 17:02:05.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:05.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:05.236" endtime="20241013 17:02:05.236"/>
</kw>
<status status="PASS" starttime="20241013 17:02:04.745" endtime="20241013 17:02:05.236"/>
</kw>
<msg timestamp="20241013 17:02:05.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:04.745" endtime="20241013 17:02:05.236"/>
</kw>
<msg timestamp="20241013 17:02:05.236" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1686725999/
                           PRE ozone-test-3658149914/
             ...</msg>
<status status="PASS" starttime="20241013 17:02:04.744" endtime="20241013 17:02:05.237"/>
</kw>
<msg timestamp="20241013 17:02:05.237" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1686725999/
                           PRE ozone-test-3658149914/
             ...</msg>
<status status="PASS" starttime="20241013 17:02:04.744" endtime="20241013 17:02:05.237"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:05.237" endtime="20241013 17:02:05.237"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:03.814" endtime="20241013 17:02:05.237"/>
</test>
<test id="s1-s5-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:05.243" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:02:05.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:05.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:05.240" endtime="20241013 17:02:05.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:05.248" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:05.248" endtime="20241013 17:02:05.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:05.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:05.249" endtime="20241013 17:02:05.249"/>
</kw>
<status status="PASS" starttime="20241013 17:02:05.239" endtime="20241013 17:02:05.249"/>
</kw>
<msg timestamp="20241013 17:02:05.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:05.239" endtime="20241013 17:02:05.249"/>
</kw>
<status status="PASS" starttime="20241013 17:02:05.239" endtime="20241013 17:02:05.250"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:05.254" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-5816640693/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:05.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:05.741" level="INFO">${output} = Completed 29 Bytes/29 Bytes (573 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-5816640693/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20241013 17:02:05.251" endtime="20241013 17:02:05.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:05.742" level="INFO">Completed 29 Bytes/29 Bytes (573 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-5816640693/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20241013 17:02:05.742" endtime="20241013 17:02:05.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:05.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:05.742" endtime="20241013 17:02:05.743"/>
</kw>
<status status="PASS" starttime="20241013 17:02:05.251" endtime="20241013 17:02:05.743"/>
</kw>
<msg timestamp="20241013 17:02:05.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:05.251" endtime="20241013 17:02:05.743"/>
</kw>
<msg timestamp="20241013 17:02:05.743" level="INFO">${output} = Completed 29 Bytes/29 Bytes (573 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-5816640693/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20241013 17:02:05.250" endtime="20241013 17:02:05.743"/>
</kw>
<msg timestamp="20241013 17:02:05.744" level="INFO">${result} = Completed 29 Bytes/29 Bytes (573 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-5816640693/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20241013 17:02:05.250" endtime="20241013 17:02:05.744"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:05.748" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-5816640693/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:06.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:06.191" level="INFO">${output} = 2024-10-13 17:02:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:02:05.745" endtime="20241013 17:02:06.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:06.192" level="INFO">2024-10-13 17:02:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:02:06.191" endtime="20241013 17:02:06.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:06.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:06.192" endtime="20241013 17:02:06.193"/>
</kw>
<status status="PASS" starttime="20241013 17:02:05.745" endtime="20241013 17:02:06.193"/>
</kw>
<msg timestamp="20241013 17:02:06.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:05.745" endtime="20241013 17:02:06.193"/>
</kw>
<msg timestamp="20241013 17:02:06.193" level="INFO">${output} = 2024-10-13 17:02:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:02:05.744" endtime="20241013 17:02:06.193"/>
</kw>
<msg timestamp="20241013 17:02:06.193" level="INFO">${result} = 2024-10-13 17:02:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:02:05.744" endtime="20241013 17:02:06.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:06.193" endtime="20241013 17:02:06.194"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:06.198" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-5816640693/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:06.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:06.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:06.196" endtime="20241013 17:02:06.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:06.677" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:06.676" endtime="20241013 17:02:06.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:06.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:06.677" endtime="20241013 17:02:06.678"/>
</kw>
<status status="PASS" starttime="20241013 17:02:06.195" endtime="20241013 17:02:06.678"/>
</kw>
<msg timestamp="20241013 17:02:06.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:06.195" endtime="20241013 17:02:06.678"/>
</kw>
<msg timestamp="20241013 17:02:06.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:06.194" endtime="20241013 17:02:06.678"/>
</kw>
<msg timestamp="20241013 17:02:06.678" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:02:06.194" endtime="20241013 17:02:06.678"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:06.683" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-5816640693/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:07.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:07.131" level="INFO">${output} = 2024-10-13 17:02:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:02:06.680" endtime="20241013 17:02:07.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:07.132" level="INFO">2024-10-13 17:02:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:02:07.132" endtime="20241013 17:02:07.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:07.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:07.132" endtime="20241013 17:02:07.133"/>
</kw>
<status status="PASS" starttime="20241013 17:02:06.680" endtime="20241013 17:02:07.133"/>
</kw>
<msg timestamp="20241013 17:02:07.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:06.680" endtime="20241013 17:02:07.133"/>
</kw>
<msg timestamp="20241013 17:02:07.133" level="INFO">${output} = 2024-10-13 17:02:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:02:06.679" endtime="20241013 17:02:07.133"/>
</kw>
<msg timestamp="20241013 17:02:07.133" level="INFO">${result} = 2024-10-13 17:02:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:02:06.678" endtime="20241013 17:02:07.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:07.134" endtime="20241013 17:02:07.134"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:07.138" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-5816640693/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:07.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:07.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:07.136" endtime="20241013 17:02:07.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:07.637" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:07.637" endtime="20241013 17:02:07.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:07.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:07.638" endtime="20241013 17:02:07.638"/>
</kw>
<status status="PASS" starttime="20241013 17:02:07.135" endtime="20241013 17:02:07.638"/>
</kw>
<msg timestamp="20241013 17:02:07.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:07.135" endtime="20241013 17:02:07.638"/>
</kw>
<msg timestamp="20241013 17:02:07.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:07.135" endtime="20241013 17:02:07.639"/>
</kw>
<msg timestamp="20241013 17:02:07.639" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:02:07.134" endtime="20241013 17:02:07.639"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:05.238" endtime="20241013 17:02:07.639"/>
</test>
<test id="s1-s5-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:07.644" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:02:07.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:07.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:07.641" endtime="20241013 17:02:07.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:07.648" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:07.648" endtime="20241013 17:02:07.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:07.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:07.649" endtime="20241013 17:02:07.649"/>
</kw>
<status status="PASS" starttime="20241013 17:02:07.641" endtime="20241013 17:02:07.649"/>
</kw>
<msg timestamp="20241013 17:02:07.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:07.640" endtime="20241013 17:02:07.650"/>
</kw>
<status status="PASS" starttime="20241013 17:02:07.640" endtime="20241013 17:02:07.650"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:07.654" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-5816640693/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:08.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:08.156" level="INFO">${output} = Completed 29 Bytes/29 Bytes (772 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-5816640693/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20241013 17:02:07.652" endtime="20241013 17:02:08.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:08.157" level="INFO">Completed 29 Bytes/29 Bytes (772 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-5816640693/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20241013 17:02:08.156" endtime="20241013 17:02:08.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:08.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:08.157" endtime="20241013 17:02:08.157"/>
</kw>
<status status="PASS" starttime="20241013 17:02:07.651" endtime="20241013 17:02:08.157"/>
</kw>
<msg timestamp="20241013 17:02:08.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:07.651" endtime="20241013 17:02:08.158"/>
</kw>
<msg timestamp="20241013 17:02:08.158" level="INFO">${output} = Completed 29 Bytes/29 Bytes (772 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-5816640693/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20241013 17:02:07.650" endtime="20241013 17:02:08.158"/>
</kw>
<msg timestamp="20241013 17:02:08.158" level="INFO">${result} = Completed 29 Bytes/29 Bytes (772 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-5816640693/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20241013 17:02:07.650" endtime="20241013 17:02:08.158"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:08.162" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-5816640693/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:08.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:08.631" level="INFO">${output} = 2024-10-13 17:02:08         29 filefile</msg>
<status status="PASS" starttime="20241013 17:02:08.160" endtime="20241013 17:02:08.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:08.632" level="INFO">2024-10-13 17:02:08         29 filefile</msg>
<status status="PASS" starttime="20241013 17:02:08.632" endtime="20241013 17:02:08.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:08.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:08.632" endtime="20241013 17:02:08.633"/>
</kw>
<status status="PASS" starttime="20241013 17:02:08.160" endtime="20241013 17:02:08.633"/>
</kw>
<msg timestamp="20241013 17:02:08.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:08.159" endtime="20241013 17:02:08.633"/>
</kw>
<msg timestamp="20241013 17:02:08.633" level="INFO">${output} = 2024-10-13 17:02:08         29 filefile</msg>
<status status="PASS" starttime="20241013 17:02:08.159" endtime="20241013 17:02:08.633"/>
</kw>
<msg timestamp="20241013 17:02:08.634" level="INFO">${result} = 2024-10-13 17:02:08         29 filefile</msg>
<status status="PASS" starttime="20241013 17:02:08.158" endtime="20241013 17:02:08.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:08.634" endtime="20241013 17:02:08.634"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:08.638" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-5816640693/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:09.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:09.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:08.636" endtime="20241013 17:02:09.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:09.119" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:09.118" endtime="20241013 17:02:09.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:09.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:09.119" endtime="20241013 17:02:09.120"/>
</kw>
<status status="PASS" starttime="20241013 17:02:08.635" endtime="20241013 17:02:09.120"/>
</kw>
<msg timestamp="20241013 17:02:09.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:08.635" endtime="20241013 17:02:09.120"/>
</kw>
<msg timestamp="20241013 17:02:09.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:08.635" endtime="20241013 17:02:09.120"/>
</kw>
<msg timestamp="20241013 17:02:09.121" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:02:08.634" endtime="20241013 17:02:09.121"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:09.125" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-5816640693/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:09.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:09.572" level="INFO">${output} = 2024-10-13 17:02:08         29 filefile</msg>
<status status="PASS" starttime="20241013 17:02:09.123" endtime="20241013 17:02:09.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:09.574" level="INFO">2024-10-13 17:02:08         29 filefile</msg>
<status status="PASS" starttime="20241013 17:02:09.573" endtime="20241013 17:02:09.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:09.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:09.574" endtime="20241013 17:02:09.574"/>
</kw>
<status status="PASS" starttime="20241013 17:02:09.122" endtime="20241013 17:02:09.574"/>
</kw>
<msg timestamp="20241013 17:02:09.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:09.122" endtime="20241013 17:02:09.575"/>
</kw>
<msg timestamp="20241013 17:02:09.575" level="INFO">${output} = 2024-10-13 17:02:08         29 filefile</msg>
<status status="PASS" starttime="20241013 17:02:09.121" endtime="20241013 17:02:09.575"/>
</kw>
<msg timestamp="20241013 17:02:09.575" level="INFO">${result} = 2024-10-13 17:02:08         29 filefile</msg>
<status status="PASS" starttime="20241013 17:02:09.121" endtime="20241013 17:02:09.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:09.575" endtime="20241013 17:02:09.575"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:09.580" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-5816640693/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:10.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:10.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:09.577" endtime="20241013 17:02:10.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:10.043" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:10.043" endtime="20241013 17:02:10.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:10.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:10.044" endtime="20241013 17:02:10.044"/>
</kw>
<status status="PASS" starttime="20241013 17:02:09.577" endtime="20241013 17:02:10.044"/>
</kw>
<msg timestamp="20241013 17:02:10.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:09.577" endtime="20241013 17:02:10.044"/>
</kw>
<msg timestamp="20241013 17:02:10.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:09.576" endtime="20241013 17:02:10.045"/>
</kw>
<msg timestamp="20241013 17:02:10.045" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:02:09.576" endtime="20241013 17:02:10.045"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:07.639" endtime="20241013 17:02:10.045"/>
</test>
<test id="s1-s5-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:10.050" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:10.537" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:10.537" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:02:10.047" endtime="20241013 17:02:10.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:10.538" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:02:10.537" endtime="20241013 17:02:10.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:10.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:10.538" endtime="20241013 17:02:10.538"/>
</kw>
<msg timestamp="20241013 17:02:10.539" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:02:10.047" endtime="20241013 17:02:10.539"/>
</kw>
<msg timestamp="20241013 17:02:10.539" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:02:10.046" endtime="20241013 17:02:10.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:10.539" endtime="20241013 17:02:10.540"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:10.045" endtime="20241013 17:02:10.540"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:02:01.839" endtime="20241013 17:02:10.540"/>
</suite>
<suite id="s1-s5-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:02:10.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:10.552" endtime="20241013 17:02:10.552"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:02:10.552" endtime="20241013 17:02:10.552"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:02:10.555" endtime="20241013 17:02:10.555"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:10.555" endtime="20241013 17:02:10.555"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:10.556" endtime="20241013 17:02:10.556"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:10.556" endtime="20241013 17:02:10.556"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:10.556" endtime="20241013 17:02:10.556"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:10.556" endtime="20241013 17:02:10.556"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:02:10.556" endtime="20241013 17:02:10.556"/>
</kw>
<status status="PASS" starttime="20241013 17:02:10.551" endtime="20241013 17:02:10.556"/>
</kw>
<test id="s1-s5-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:10.561" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:02:10.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:10.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:10.558" endtime="20241013 17:02:10.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:10.564" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:10.564" endtime="20241013 17:02:10.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:10.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:10.565" endtime="20241013 17:02:10.565"/>
</kw>
<status status="PASS" starttime="20241013 17:02:10.558" endtime="20241013 17:02:10.565"/>
</kw>
<msg timestamp="20241013 17:02:10.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:10.558" endtime="20241013 17:02:10.565"/>
</kw>
<status status="PASS" starttime="20241013 17:02:10.557" endtime="20241013 17:02:10.566"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:10.569" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:11.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:11.062" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:10.567" endtime="20241013 17:02:11.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:11.063" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:11.063" endtime="20241013 17:02:11.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:11.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:11.063" endtime="20241013 17:02:11.064"/>
</kw>
<msg timestamp="20241013 17:02:11.064" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:10.566" endtime="20241013 17:02:11.064"/>
</kw>
<msg timestamp="20241013 17:02:11.064" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:10.566" endtime="20241013 17:02:11.064"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:11.068" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:11.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:11.536" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:11 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:11.066" endtime="20241013 17:02:11.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:11.537" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:02:11 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:11.536" endtime="20241013 17:02:11.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:11.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:11.537" endtime="20241013 17:02:11.537"/>
</kw>
<msg timestamp="20241013 17:02:11.538" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:11 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:11.065" endtime="20241013 17:02:11.538"/>
</kw>
<msg timestamp="20241013 17:02:11.538" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:11 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:11.065" endtime="20241013 17:02:11.538"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:11.541" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-5816640693/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:12.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:12.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:11.539" endtime="20241013 17:02:12.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:12.041" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:12.041" endtime="20241013 17:02:12.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:12.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:12.041" endtime="20241013 17:02:12.042"/>
</kw>
<msg timestamp="20241013 17:02:12.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:11.539" endtime="20241013 17:02:12.042"/>
</kw>
<msg timestamp="20241013 17:02:12.042" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:02:11.538" endtime="20241013 17:02:12.042"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:10.557" endtime="20241013 17:02:12.042"/>
</test>
<test id="s1-s5-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:12.047" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted-non-existent --key ozone-test-5816640693/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:12.505" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:12.505" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:12.045" endtime="20241013 17:02:12.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:12.507" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:12.506" endtime="20241013 17:02:12.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:12.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:12.507" endtime="20241013 17:02:12.507"/>
</kw>
<msg timestamp="20241013 17:02:12.507" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:12.044" endtime="20241013 17:02:12.507"/>
</kw>
<msg timestamp="20241013 17:02:12.508" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:12.044" endtime="20241013 17:02:12.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:12.508" endtime="20241013 17:02:12.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:12.508" endtime="20241013 17:02:12.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:12.043" endtime="20241013 17:02:12.509"/>
</test>
<test id="s1-s5-s12-t3" name="Head object where path is a directory" line="44">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:02:12.510" endtime="20241013 17:02:12.510"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:12.514" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:13.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:13.024" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:12.511" endtime="20241013 17:02:13.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:13.025" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:13.025" endtime="20241013 17:02:13.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:13.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:13.025" endtime="20241013 17:02:13.026"/>
</kw>
<msg timestamp="20241013 17:02:13.026" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:12.511" endtime="20241013 17:02:13.026"/>
</kw>
<msg timestamp="20241013 17:02:13.026" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:12.510" endtime="20241013 17:02:13.026"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:13.030" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:13.488" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:13.488" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:13.027" endtime="20241013 17:02:13.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:13.489" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:13.489" endtime="20241013 17:02:13.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:13.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:13.490" endtime="20241013 17:02:13.490"/>
</kw>
<msg timestamp="20241013 17:02:13.490" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:13.027" endtime="20241013 17:02:13.490"/>
</kw>
<msg timestamp="20241013 17:02:13.490" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:13.026" endtime="20241013 17:02:13.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:13.491" endtime="20241013 17:02:13.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:13.491" endtime="20241013 17:02:13.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:12.509" endtime="20241013 17:02:13.492"/>
</test>
<test id="s1-s5-s12-t4" name="Head directory objects" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:02:13.493" endtime="20241013 17:02:13.493"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:13.497" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:14.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:14.055" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:13.494" endtime="20241013 17:02:14.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:14.056" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:14.056" endtime="20241013 17:02:14.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:14.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:14.056" endtime="20241013 17:02:14.057"/>
</kw>
<msg timestamp="20241013 17:02:14.057" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:13.494" endtime="20241013 17:02:14.057"/>
</kw>
<msg timestamp="20241013 17:02:14.057" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:13.493" endtime="20241013 17:02:14.057"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:14.061" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:14.519" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:14.519" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:14.058" endtime="20241013 17:02:14.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:14.520" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:14.520" endtime="20241013 17:02:14.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:14.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:14.521" endtime="20241013 17:02:14.521"/>
</kw>
<msg timestamp="20241013 17:02:14.521" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:14.058" endtime="20241013 17:02:14.521"/>
</kw>
<msg timestamp="20241013 17:02:14.522" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:14.057" endtime="20241013 17:02:14.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:14.522" endtime="20241013 17:02:14.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:14.522" endtime="20241013 17:02:14.523"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:14.526" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:14.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:14.986" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:14.524" endtime="20241013 17:02:14.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:14.987" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:02:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:14 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:14.987" endtime="20241013 17:02:14.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:14.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:14.988" endtime="20241013 17:02:14.988"/>
</kw>
<msg timestamp="20241013 17:02:14.988" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:14.523" endtime="20241013 17:02:14.988"/>
</kw>
<msg timestamp="20241013 17:02:14.988" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:14.523" endtime="20241013 17:02:14.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:13.492" endtime="20241013 17:02:14.989"/>
</test>
<test id="s1-s5-s12-t5" name="Head non existing key" line="59">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:14.993" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:15.450" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:15.450" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:14.991" endtime="20241013 17:02:15.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:15.451" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:15.451" endtime="20241013 17:02:15.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:15.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:15.452" endtime="20241013 17:02:15.452"/>
</kw>
<msg timestamp="20241013 17:02:15.452" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:14.990" endtime="20241013 17:02:15.452"/>
</kw>
<msg timestamp="20241013 17:02:15.453" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:02:14.990" endtime="20241013 17:02:15.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:15.453" endtime="20241013 17:02:15.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:15.453" endtime="20241013 17:02:15.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:14.989" endtime="20241013 17:02:15.454"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:02:10.542" endtime="20241013 17:02:15.455"/>
</suite>
<suite id="s1-s5-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:02:15.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:15.466" endtime="20241013 17:02:15.466"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:02:15.466" endtime="20241013 17:02:15.466"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:02:15.466" endtime="20241013 17:02:15.466"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:15.466" endtime="20241013 17:02:15.466"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:15.466" endtime="20241013 17:02:15.466"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:15.467" endtime="20241013 17:02:15.467"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:15.467" endtime="20241013 17:02:15.467"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:15.467" endtime="20241013 17:02:15.467"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:02:15.467" endtime="20241013 17:02:15.467"/>
</kw>
<status status="PASS" starttime="20241013 17:02:15.465" endtime="20241013 17:02:15.467"/>
</kw>
<test id="s1-s5-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:15.471" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:02:15.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:15.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:15.469" endtime="20241013 17:02:15.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:15.476" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:15.476" endtime="20241013 17:02:15.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:15.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:15.476" endtime="20241013 17:02:15.477"/>
</kw>
<status status="PASS" starttime="20241013 17:02:15.468" endtime="20241013 17:02:15.477"/>
</kw>
<msg timestamp="20241013 17:02:15.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:15.468" endtime="20241013 17:02:15.477"/>
</kw>
<status status="PASS" starttime="20241013 17:02:15.468" endtime="20241013 17:02:15.477"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:15.481" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:16.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:16.010" level="INFO">${output} = {
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:15.479" endtime="20241013 17:02:16.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:16.012" level="INFO">{
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:16.011" endtime="20241013 17:02:16.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:16.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:16.012" endtime="20241013 17:02:16.013"/>
</kw>
<status status="PASS" starttime="20241013 17:02:15.479" endtime="20241013 17:02:16.013"/>
</kw>
<msg timestamp="20241013 17:02:16.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:15.478" endtime="20241013 17:02:16.013"/>
</kw>
<msg timestamp="20241013 17:02:16.013" level="INFO">${output} = {
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:15.478" endtime="20241013 17:02:16.013"/>
</kw>
<msg timestamp="20241013 17:02:16.013" level="INFO">${result} = {
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:15.477" endtime="20241013 17:02:16.014"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:16.019" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:16.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:16.530" level="INFO">${output} = {
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:16.016" endtime="20241013 17:02:16.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:16.530" level="INFO">{
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:16.530" endtime="20241013 17:02:16.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:16.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:16.531" endtime="20241013 17:02:16.531"/>
</kw>
<status status="PASS" starttime="20241013 17:02:16.016" endtime="20241013 17:02:16.531"/>
</kw>
<msg timestamp="20241013 17:02:16.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:16.015" endtime="20241013 17:02:16.531"/>
</kw>
<msg timestamp="20241013 17:02:16.532" level="INFO">${output} = {
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:16.015" endtime="20241013 17:02:16.532"/>
</kw>
<msg timestamp="20241013 17:02:16.532" level="INFO">${result} = {
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:16.014" endtime="20241013 17:02:16.532"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:16.536" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:17.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:17.027" level="INFO">${output} = {
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:16.534" endtime="20241013 17:02:17.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:17.028" level="INFO">{
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:17.027" endtime="20241013 17:02:17.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:17.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:17.028" endtime="20241013 17:02:17.029"/>
</kw>
<status status="PASS" starttime="20241013 17:02:16.533" endtime="20241013 17:02:17.029"/>
</kw>
<msg timestamp="20241013 17:02:17.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:16.533" endtime="20241013 17:02:17.029"/>
</kw>
<msg timestamp="20241013 17:02:17.029" level="INFO">${output} = {
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:16.532" endtime="20241013 17:02:17.029"/>
</kw>
<msg timestamp="20241013 17:02:17.029" level="INFO">${result} = {
    "ETag": "\"f05263d30c4412e691925797a878af75\""
}</msg>
<status status="PASS" starttime="20241013 17:02:16.532" endtime="20241013 17:02:17.029"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:17.033" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:17.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:17.504" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f1",
            "LastModified": "2024-10-13T17:02:15.958Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:02:17.031" endtime="20241013 17:02:17.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:17.505" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f1",
            "LastModified": "2024-10-13T17:02:15.958Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f2",
            "LastModified": "2024-10-13T17:02:16.478Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:02:16.982Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:02:17.505" endtime="20241013 17:02:17.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:17.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:17.505" endtime="20241013 17:02:17.506"/>
</kw>
<status status="PASS" starttime="20241013 17:02:17.031" endtime="20241013 17:02:17.506"/>
</kw>
<msg timestamp="20241013 17:02:17.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:17.030" endtime="20241013 17:02:17.506"/>
</kw>
<msg timestamp="20241013 17:02:17.506" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f1",
            "LastModified": "2024-10-13T17:02:15.958Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:02:17.030" endtime="20241013 17:02:17.506"/>
</kw>
<msg timestamp="20241013 17:02:17.507" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f1",
            "LastModified": "2024-10-13T17:02:15.958Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:02:17.029" endtime="20241013 17:02:17.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:17.507" endtime="20241013 17:02:17.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:17.507" endtime="20241013 17:02:17.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:17.508" endtime="20241013 17:02:17.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:17.508" endtime="20241013 17:02:17.509"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:17.509" endtime="20241013 17:02:17.509"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:17.513" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket encrypted --delete 'Objects=[{Key=ozone-test-5816640693/multidelete/key=value/f1},{Key=ozone-test-5816640693/multidelete/key=value/f2},{Key=ozone-test-5816640693/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:17.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:17.988" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20241013 17:02:17.511" endtime="20241013 17:02:17.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:17.989" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:02:17.988" endtime="20241013 17:02:17.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:17.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:17.989" endtime="20241013 17:02:17.990"/>
</kw>
<status status="PASS" starttime="20241013 17:02:17.511" endtime="20241013 17:02:17.990"/>
</kw>
<msg timestamp="20241013 17:02:17.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:17.510" endtime="20241013 17:02:17.990"/>
</kw>
<msg timestamp="20241013 17:02:17.990" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20241013 17:02:17.510" endtime="20241013 17:02:17.990"/>
</kw>
<msg timestamp="20241013 17:02:17.990" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20241013 17:02:17.509" endtime="20241013 17:02:17.991"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:17.991" endtime="20241013 17:02:17.991"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:17.995" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:18.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:18.467" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:02:16.982Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:02:17.993" endtime="20241013 17:02:18.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:18.468" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:02:16.982Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:02:18.467" endtime="20241013 17:02:18.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:18.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:18.468" endtime="20241013 17:02:18.469"/>
</kw>
<status status="PASS" starttime="20241013 17:02:17.992" endtime="20241013 17:02:18.469"/>
</kw>
<msg timestamp="20241013 17:02:18.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:17.992" endtime="20241013 17:02:18.469"/>
</kw>
<msg timestamp="20241013 17:02:18.469" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:02:16.982Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:02:17.992" endtime="20241013 17:02:18.469"/>
</kw>
<msg timestamp="20241013 17:02:18.470" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:02:16.982Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:02:17.991" endtime="20241013 17:02:18.470"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:18.470" endtime="20241013 17:02:18.470"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:18.470" endtime="20241013 17:02:18.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:18.471" endtime="20241013 17:02:18.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:18.471" endtime="20241013 17:02:18.472"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:18.472" endtime="20241013 17:02:18.472"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:15.467" endtime="20241013 17:02:18.472"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:02:15.456" endtime="20241013 17:02:18.473"/>
</suite>
<suite id="s1-s5-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:02:18.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:18.483" endtime="20241013 17:02:18.483"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:02:18.484" endtime="20241013 17:02:18.484"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:02:18.484" endtime="20241013 17:02:18.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:18.484" endtime="20241013 17:02:18.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:18.484" endtime="20241013 17:02:18.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:18.484" endtime="20241013 17:02:18.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:18.484" endtime="20241013 17:02:18.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:02:18.485" endtime="20241013 17:02:18.485"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:02:18.485" endtime="20241013 17:02:18.485"/>
</kw>
<status status="PASS" starttime="20241013 17:02:18.483" endtime="20241013 17:02:18.485"/>
</kw>
<test id="s1-s5-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:18.489" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:02:18.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:18.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:18.486" endtime="20241013 17:02:18.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:18.492" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:18.491" endtime="20241013 17:02:18.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:18.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:18.492" endtime="20241013 17:02:18.492"/>
</kw>
<status status="PASS" starttime="20241013 17:02:18.486" endtime="20241013 17:02:18.493"/>
</kw>
<msg timestamp="20241013 17:02:18.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:18.486" endtime="20241013 17:02:18.493"/>
</kw>
<status status="PASS" starttime="20241013 17:02:18.485" endtime="20241013 17:02:18.493"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:18.497" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:18.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:18.982" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:18.495" endtime="20241013 17:02:18.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:18.984" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:18.983" endtime="20241013 17:02:18.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:18.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:18.984" endtime="20241013 17:02:18.984"/>
</kw>
<status status="PASS" starttime="20241013 17:02:18.494" endtime="20241013 17:02:18.984"/>
</kw>
<msg timestamp="20241013 17:02:18.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:18.494" endtime="20241013 17:02:18.985"/>
</kw>
<msg timestamp="20241013 17:02:18.985" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:18.494" endtime="20241013 17:02:18.985"/>
</kw>
<msg timestamp="20241013 17:02:18.985" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:18.493" endtime="20241013 17:02:18.985"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:18.989" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:19.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:19.458" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:02:18.940Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:02:18.987" endtime="20241013 17:02:19.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:19.459" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5816640693/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:02:18.940Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:02:19.458" endtime="20241013 17:02:19.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:19.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:19.459" endtime="20241013 17:02:19.460"/>
</kw>
<status status="PASS" starttime="20241013 17:02:18.986" endtime="20241013 17:02:19.460"/>
</kw>
<msg timestamp="20241013 17:02:19.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:18.986" endtime="20241013 17:02:19.460"/>
</kw>
<msg timestamp="20241013 17:02:19.460" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:02:18.940Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:02:18.986" endtime="20241013 17:02:19.460"/>
</kw>
<msg timestamp="20241013 17:02:19.461" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:02:18.940Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:02:18.985" endtime="20241013 17:02:19.461"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:19.461" endtime="20241013 17:02:19.461"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:19.465" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:19.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:19.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:19.462" endtime="20241013 17:02:19.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:19.469" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:19.469" endtime="20241013 17:02:19.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:19.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:19.470" endtime="20241013 17:02:19.470"/>
</kw>
<status status="PASS" starttime="20241013 17:02:19.462" endtime="20241013 17:02:19.470"/>
</kw>
<msg timestamp="20241013 17:02:19.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:19.462" endtime="20241013 17:02:19.470"/>
</kw>
<status status="PASS" starttime="20241013 17:02:19.461" endtime="20241013 17:02:19.470"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:19.475" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:19.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:19.951" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20241013 17:02:19.473" endtime="20241013 17:02:19.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:19.952" level="INFO">{
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20241013 17:02:19.952" endtime="20241013 17:02:19.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:19.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:19.953" endtime="20241013 17:02:19.953"/>
</kw>
<status status="PASS" starttime="20241013 17:02:19.472" endtime="20241013 17:02:19.953"/>
</kw>
<msg timestamp="20241013 17:02:19.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:19.472" endtime="20241013 17:02:19.953"/>
</kw>
<msg timestamp="20241013 17:02:19.953" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20241013 17:02:19.471" endtime="20241013 17:02:19.953"/>
</kw>
<msg timestamp="20241013 17:02:19.954" level="INFO">${result} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20241013 17:02:19.471" endtime="20241013 17:02:19.954"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:19.958" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-5816640693/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:20.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:20.415" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:02:18.940Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:02:19.956" endtime="20241013 17:02:20.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:20.416" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-5816640693/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:02:18.940Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-5816640693/putobject/key=value/zerobyte",
            "LastModified": "2024-10-13T17:02:19.906Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:02:20.416" endtime="20241013 17:02:20.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:20.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:20.416" endtime="20241013 17:02:20.417"/>
</kw>
<status status="PASS" starttime="20241013 17:02:19.955" endtime="20241013 17:02:20.417"/>
</kw>
<msg timestamp="20241013 17:02:20.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:19.955" endtime="20241013 17:02:20.417"/>
</kw>
<msg timestamp="20241013 17:02:20.417" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:02:18.940Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:02:19.954" endtime="20241013 17:02:20.417"/>
</kw>
<msg timestamp="20241013 17:02:20.418" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-5816640693/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:02:18.940Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:02:19.954" endtime="20241013 17:02:20.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:20.418" endtime="20241013 17:02:20.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:18.485" endtime="20241013 17:02:20.418"/>
</test>
<test id="s1-s5-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:20.423" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:20.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:20.922" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:20.421" endtime="20241013 17:02:20.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:20.923" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:20 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:20.922" endtime="20241013 17:02:20.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:20.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:20.923" endtime="20241013 17:02:20.924"/>
</kw>
<status status="PASS" starttime="20241013 17:02:20.421" endtime="20241013 17:02:20.924"/>
</kw>
<msg timestamp="20241013 17:02:20.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:20.420" endtime="20241013 17:02:20.924"/>
</kw>
<msg timestamp="20241013 17:02:20.924" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:20.420" endtime="20241013 17:02:20.924"/>
</kw>
<msg timestamp="20241013 17:02:20.924" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:20.419" endtime="20241013 17:02:20.924"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:20.929" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:20.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:20.933" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:02:20.926" endtime="20241013 17:02:20.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:20.934" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:02:20.934" endtime="20241013 17:02:20.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:20.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:20.935" endtime="20241013 17:02:20.935"/>
</kw>
<status status="PASS" starttime="20241013 17:02:20.926" endtime="20241013 17:02:20.935"/>
</kw>
<msg timestamp="20241013 17:02:20.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:20.926" endtime="20241013 17:02:20.935"/>
</kw>
<msg timestamp="20241013 17:02:20.936" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:02:20.925" endtime="20241013 17:02:20.936"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:20.939" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:20.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:20.944" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:02:20.937" endtime="20241013 17:02:20.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:20.945" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:02:20.944" endtime="20241013 17:02:20.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:20.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:20.945" endtime="20241013 17:02:20.945"/>
</kw>
<status status="PASS" starttime="20241013 17:02:20.937" endtime="20241013 17:02:20.945"/>
</kw>
<msg timestamp="20241013 17:02:20.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:20.936" endtime="20241013 17:02:20.946"/>
</kw>
<msg timestamp="20241013 17:02:20.946" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:02:20.936" endtime="20241013 17:02:20.946"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:20.946" endtime="20241013 17:02:20.946"/>
</kw>
<status status="PASS" starttime="20241013 17:02:20.925" endtime="20241013 17:02:20.946"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte /tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:20.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/zerobyte /tmp/zerobyte.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:21.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:21.420" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:19 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:20.948" endtime="20241013 17:02:21.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:21.421" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:19 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:21.421" endtime="20241013 17:02:21.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:21.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:21.422" endtime="20241013 17:02:21.422"/>
</kw>
<status status="PASS" starttime="20241013 17:02:20.948" endtime="20241013 17:02:21.422"/>
</kw>
<msg timestamp="20241013 17:02:21.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:20.948" endtime="20241013 17:02:21.422"/>
</kw>
<msg timestamp="20241013 17:02:21.423" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:19 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:20.947" endtime="20241013 17:02:21.423"/>
</kw>
<msg timestamp="20241013 17:02:21.423" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:19 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:20.947" endtime="20241013 17:02:21.423"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/zerobyte</arg>
<arg>/tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:21.427" level="INFO">Running command 'md5sum /tmp/zerobyte | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:21.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:21.431" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:02:21.424" endtime="20241013 17:02:21.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:21.432" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:02:21.432" endtime="20241013 17:02:21.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:21.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:21.432" endtime="20241013 17:02:21.433"/>
</kw>
<status status="PASS" starttime="20241013 17:02:21.424" endtime="20241013 17:02:21.433"/>
</kw>
<msg timestamp="20241013 17:02:21.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:21.424" endtime="20241013 17:02:21.433"/>
</kw>
<msg timestamp="20241013 17:02:21.433" level="INFO">${checksumbefore} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:02:21.423" endtime="20241013 17:02:21.433"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:21.436" level="INFO">Running command 'md5sum /tmp/zerobyte.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:21.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:21.453" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:02:21.435" endtime="20241013 17:02:21.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:21.454" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:02:21.453" endtime="20241013 17:02:21.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:21.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:21.454" endtime="20241013 17:02:21.454"/>
</kw>
<status status="PASS" starttime="20241013 17:02:21.434" endtime="20241013 17:02:21.455"/>
</kw>
<msg timestamp="20241013 17:02:21.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:21.434" endtime="20241013 17:02:21.455"/>
</kw>
<msg timestamp="20241013 17:02:21.455" level="INFO">${checksumafter} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:02:21.433" endtime="20241013 17:02:21.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:21.455" endtime="20241013 17:02:21.455"/>
</kw>
<status status="PASS" starttime="20241013 17:02:21.423" endtime="20241013 17:02:21.456"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:20.419" endtime="20241013 17:02:21.456"/>
</test>
<test id="s1-s5-s14-t3" name="Get object with wrong signature" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:02:21.457" endtime="20241013 17:02:21.457"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:21.460" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/encrypted/ozone-test-5816640693/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:21.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:21.470" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20241013 17:02:21.458" endtime="20241013 17:02:21.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:21.471" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0   120k      0 --:--:-- --:--:-- --:--:--  120k
HTTP/1.1 403 Forbidden
Date: Sun, 13 Oct 2024 17:02:21 GMT
Cache-Control: no-cache
Expires: Sun, 13 Oct 2024 17:02:21 GMT
Pragma: no-cache
Content-Type: text/plain;charset=utf-8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: S9G6I9PyyxDy
x-amz-request-id: 0350921d-6a70-47b8-af9c-776559f4b6ea
Content-Length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20241013 17:02:21.470" endtime="20241013 17:02:21.471"/>
</kw>
<msg timestamp="20241013 17:02:21.471" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20241013 17:02:21.457" endtime="20241013 17:02:21.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:21.471" endtime="20241013 17:02:21.472"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:21.456" endtime="20241013 17:02:21.472"/>
</test>
<test id="s1-s5-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="56">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:21.477" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:21.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:21.959" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:21.475" endtime="20241013 17:02:21.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:21.960" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:21.959" endtime="20241013 17:02:21.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:21.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:21.960" endtime="20241013 17:02:21.961"/>
</kw>
<status status="PASS" starttime="20241013 17:02:21.474" endtime="20241013 17:02:21.961"/>
</kw>
<msg timestamp="20241013 17:02:21.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:21.474" endtime="20241013 17:02:21.961"/>
</kw>
<msg timestamp="20241013 17:02:21.961" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:21.473" endtime="20241013 17:02:21.961"/>
</kw>
<msg timestamp="20241013 17:02:21.961" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:21.473" endtime="20241013 17:02:21.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:21.961" endtime="20241013 17:02:21.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:21.962" endtime="20241013 17:02:21.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:21.962" endtime="20241013 17:02:21.963"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:21.966" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:02:21.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:21.970" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20241013 17:02:21.964" endtime="20241013 17:02:21.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:21.971" level="INFO">Rando</msg>
<status status="PASS" starttime="20241013 17:02:21.970" endtime="20241013 17:02:21.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:21.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:21.971" endtime="20241013 17:02:21.972"/>
</kw>
<status status="PASS" starttime="20241013 17:02:21.963" endtime="20241013 17:02:21.972"/>
</kw>
<msg timestamp="20241013 17:02:21.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:21.963" endtime="20241013 17:02:21.972"/>
</kw>
<msg timestamp="20241013 17:02:21.972" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20241013 17:02:21.963" endtime="20241013 17:02:21.972"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:21.975" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:21.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:21.979" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20241013 17:02:21.973" endtime="20241013 17:02:21.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:21.980" level="INFO">Rando</msg>
<status status="PASS" starttime="20241013 17:02:21.980" endtime="20241013 17:02:21.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:21.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:21.980" endtime="20241013 17:02:21.981"/>
</kw>
<status status="PASS" starttime="20241013 17:02:21.973" endtime="20241013 17:02:21.981"/>
</kw>
<msg timestamp="20241013 17:02:21.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:21.973" endtime="20241013 17:02:21.981"/>
</kw>
<msg timestamp="20241013 17:02:21.981" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20241013 17:02:21.972" endtime="20241013 17:02:21.981"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:21.981" endtime="20241013 17:02:21.982"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:21.986" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:22.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:22.465" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:21.984" endtime="20241013 17:02:22.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:22.466" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:22.466" endtime="20241013 17:02:22.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:22.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:22.466" endtime="20241013 17:02:22.467"/>
</kw>
<status status="PASS" starttime="20241013 17:02:21.984" endtime="20241013 17:02:22.467"/>
</kw>
<msg timestamp="20241013 17:02:22.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:21.983" endtime="20241013 17:02:22.467"/>
</kw>
<msg timestamp="20241013 17:02:22.468" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:21.982" endtime="20241013 17:02:22.468"/>
</kw>
<msg timestamp="20241013 17:02:22.468" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:21.982" endtime="20241013 17:02:22.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:22.468" endtime="20241013 17:02:22.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:22.468" endtime="20241013 17:02:22.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:22.469" endtime="20241013 17:02:22.469"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:22.473" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:02:22.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:22.477" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20241013 17:02:22.470" endtime="20241013 17:02:22.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:22.478" level="INFO">ndo</msg>
<status status="PASS" starttime="20241013 17:02:22.478" endtime="20241013 17:02:22.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:22.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:22.478" endtime="20241013 17:02:22.479"/>
</kw>
<status status="PASS" starttime="20241013 17:02:22.470" endtime="20241013 17:02:22.479"/>
</kw>
<msg timestamp="20241013 17:02:22.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:22.470" endtime="20241013 17:02:22.479"/>
</kw>
<msg timestamp="20241013 17:02:22.479" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20241013 17:02:22.469" endtime="20241013 17:02:22.479"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:22.483" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:22.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:22.486" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20241013 17:02:22.481" endtime="20241013 17:02:22.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:22.487" level="INFO">ndo</msg>
<status status="PASS" starttime="20241013 17:02:22.487" endtime="20241013 17:02:22.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:22.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:22.487" endtime="20241013 17:02:22.488"/>
</kw>
<status status="PASS" starttime="20241013 17:02:22.480" endtime="20241013 17:02:22.488"/>
</kw>
<msg timestamp="20241013 17:02:22.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:22.480" endtime="20241013 17:02:22.488"/>
</kw>
<msg timestamp="20241013 17:02:22.488" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20241013 17:02:22.479" endtime="20241013 17:02:22.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:22.489" endtime="20241013 17:02:22.489"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:22.493" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:22.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:22.976" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:22.491" endtime="20241013 17:02:22.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:22.977" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:22.977" endtime="20241013 17:02:22.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:22.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:22.977" endtime="20241013 17:02:22.978"/>
</kw>
<status status="PASS" starttime="20241013 17:02:22.490" endtime="20241013 17:02:22.978"/>
</kw>
<msg timestamp="20241013 17:02:22.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:22.490" endtime="20241013 17:02:22.978"/>
</kw>
<msg timestamp="20241013 17:02:22.978" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:22.490" endtime="20241013 17:02:22.978"/>
</kw>
<msg timestamp="20241013 17:02:22.979" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:22.489" endtime="20241013 17:02:22.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:22.979" endtime="20241013 17:02:22.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:22.979" endtime="20241013 17:02:22.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:22.980" endtime="20241013 17:02:22.980"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:22.984" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:02:22.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:22.988" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20241013 17:02:22.982" endtime="20241013 17:02:22.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:22.989" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20241013 17:02:22.988" endtime="20241013 17:02:22.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:22.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:22.989" endtime="20241013 17:02:22.990"/>
</kw>
<status status="PASS" starttime="20241013 17:02:22.981" endtime="20241013 17:02:22.990"/>
</kw>
<msg timestamp="20241013 17:02:22.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:22.980" endtime="20241013 17:02:22.990"/>
</kw>
<msg timestamp="20241013 17:02:22.990" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20241013 17:02:22.980" endtime="20241013 17:02:22.990"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:22.993" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:22.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:22.997" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20241013 17:02:22.991" endtime="20241013 17:02:22.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:22.998" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20241013 17:02:22.997" endtime="20241013 17:02:22.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:22.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:22.998" endtime="20241013 17:02:22.999"/>
</kw>
<status status="PASS" starttime="20241013 17:02:22.991" endtime="20241013 17:02:22.999"/>
</kw>
<msg timestamp="20241013 17:02:22.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:22.991" endtime="20241013 17:02:22.999"/>
</kw>
<msg timestamp="20241013 17:02:22.999" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20241013 17:02:22.990" endtime="20241013 17:02:22.999"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:22.999" endtime="20241013 17:02:22.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:21.472" endtime="20241013 17:02:23.000"/>
</test>
<test id="s1-s5-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="82">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:23.004" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:23.476" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:23.476" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:23.002" endtime="20241013 17:02:23.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:23.477" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:23.476" endtime="20241013 17:02:23.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:23.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:23.477" endtime="20241013 17:02:23.478"/>
</kw>
<msg timestamp="20241013 17:02:23.478" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:23.001" endtime="20241013 17:02:23.478"/>
</kw>
<msg timestamp="20241013 17:02:23.478" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:23.001" endtime="20241013 17:02:23.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:23.478" endtime="20241013 17:02:23.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:23.000" endtime="20241013 17:02:23.479"/>
</test>
<test id="s1-s5-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="87">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:23.485" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:23.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:23.972" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:23.483" endtime="20241013 17:02:23.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:23.974" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:23.973" endtime="20241013 17:02:23.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:23.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:23.974" endtime="20241013 17:02:23.974"/>
</kw>
<status status="PASS" starttime="20241013 17:02:23.482" endtime="20241013 17:02:23.974"/>
</kw>
<msg timestamp="20241013 17:02:23.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:23.482" endtime="20241013 17:02:23.975"/>
</kw>
<msg timestamp="20241013 17:02:23.975" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:23.481" endtime="20241013 17:02:23.975"/>
</kw>
<msg timestamp="20241013 17:02:23.975" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:23.481" endtime="20241013 17:02:23.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:23.975" endtime="20241013 17:02:23.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:23.976" endtime="20241013 17:02:23.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:23.976" endtime="20241013 17:02:23.976"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:23.980" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:23.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:23.984" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:23.978" endtime="20241013 17:02:23.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:23.985" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:23.985" endtime="20241013 17:02:23.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:23.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:23.985" endtime="20241013 17:02:23.986"/>
</kw>
<status status="PASS" starttime="20241013 17:02:23.977" endtime="20241013 17:02:23.986"/>
</kw>
<msg timestamp="20241013 17:02:23.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:23.977" endtime="20241013 17:02:23.986"/>
</kw>
<msg timestamp="20241013 17:02:23.986" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:23.976" endtime="20241013 17:02:23.986"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:23.989" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:23.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:23.993" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:23.987" endtime="20241013 17:02:23.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:23.994" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:23.993" endtime="20241013 17:02:23.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:23.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:23.994" endtime="20241013 17:02:23.995"/>
</kw>
<status status="PASS" starttime="20241013 17:02:23.987" endtime="20241013 17:02:23.995"/>
</kw>
<msg timestamp="20241013 17:02:23.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:23.987" endtime="20241013 17:02:23.995"/>
</kw>
<msg timestamp="20241013 17:02:23.995" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:23.986" endtime="20241013 17:02:23.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:23.995" endtime="20241013 17:02:23.995"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:23.480" endtime="20241013 17:02:23.996"/>
</test>
<test id="s1-s5-s14-t7" name="Get Partial object from s3 with only start offset" line="96">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:24.000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:24.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:24.475" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:23.998" endtime="20241013 17:02:24.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:24.476" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:24.475" endtime="20241013 17:02:24.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:24.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:24.476" endtime="20241013 17:02:24.477"/>
</kw>
<status status="PASS" starttime="20241013 17:02:23.998" endtime="20241013 17:02:24.477"/>
</kw>
<msg timestamp="20241013 17:02:24.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:23.998" endtime="20241013 17:02:24.477"/>
</kw>
<msg timestamp="20241013 17:02:24.477" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:23.997" endtime="20241013 17:02:24.477"/>
</kw>
<msg timestamp="20241013 17:02:24.477" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:23.997" endtime="20241013 17:02:24.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:24.478" endtime="20241013 17:02:24.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:24.478" endtime="20241013 17:02:24.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:24.478" endtime="20241013 17:02:24.479"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:24.482" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:24.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:24.486" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:24.480" endtime="20241013 17:02:24.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:24.487" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:24.487" endtime="20241013 17:02:24.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:24.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:24.487" endtime="20241013 17:02:24.488"/>
</kw>
<status status="PASS" starttime="20241013 17:02:24.479" endtime="20241013 17:02:24.488"/>
</kw>
<msg timestamp="20241013 17:02:24.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:24.479" endtime="20241013 17:02:24.488"/>
</kw>
<msg timestamp="20241013 17:02:24.488" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:24.479" endtime="20241013 17:02:24.488"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:24.492" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:24.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:24.496" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:24.490" endtime="20241013 17:02:24.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:24.496" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:24.496" endtime="20241013 17:02:24.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:24.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:24.497" endtime="20241013 17:02:24.497"/>
</kw>
<status status="PASS" starttime="20241013 17:02:24.489" endtime="20241013 17:02:24.497"/>
</kw>
<msg timestamp="20241013 17:02:24.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:24.489" endtime="20241013 17:02:24.497"/>
</kw>
<msg timestamp="20241013 17:02:24.498" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:24.488" endtime="20241013 17:02:24.498"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:24.498" endtime="20241013 17:02:24.498"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:23.996" endtime="20241013 17:02:24.498"/>
</test>
<test id="s1-s5-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="105">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:24.503" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:24.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:24.973" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:24.501" endtime="20241013 17:02:24.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:24.974" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:24.974" endtime="20241013 17:02:24.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:24.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:24.974" endtime="20241013 17:02:24.975"/>
</kw>
<status status="PASS" starttime="20241013 17:02:24.501" endtime="20241013 17:02:24.975"/>
</kw>
<msg timestamp="20241013 17:02:24.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:24.500" endtime="20241013 17:02:24.975"/>
</kw>
<msg timestamp="20241013 17:02:24.975" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:24.500" endtime="20241013 17:02:24.975"/>
</kw>
<msg timestamp="20241013 17:02:24.976" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:24.499" endtime="20241013 17:02:24.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:24.976" endtime="20241013 17:02:24.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:24.976" endtime="20241013 17:02:24.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:24.977" endtime="20241013 17:02:24.977"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:24.980" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:02:24.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:24.984" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20241013 17:02:24.978" endtime="20241013 17:02:24.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:24.985" level="INFO">R</msg>
<status status="PASS" starttime="20241013 17:02:24.985" endtime="20241013 17:02:24.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:24.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:24.985" endtime="20241013 17:02:24.986"/>
</kw>
<status status="PASS" starttime="20241013 17:02:24.978" endtime="20241013 17:02:24.986"/>
</kw>
<msg timestamp="20241013 17:02:24.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:24.977" endtime="20241013 17:02:24.986"/>
</kw>
<msg timestamp="20241013 17:02:24.986" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20241013 17:02:24.977" endtime="20241013 17:02:24.986"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:24.989" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:24.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:24.993" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20241013 17:02:24.988" endtime="20241013 17:02:24.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:24.994" level="INFO">R</msg>
<status status="PASS" starttime="20241013 17:02:24.994" endtime="20241013 17:02:24.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:24.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:24.994" endtime="20241013 17:02:24.995"/>
</kw>
<status status="PASS" starttime="20241013 17:02:24.987" endtime="20241013 17:02:24.995"/>
</kw>
<msg timestamp="20241013 17:02:24.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:24.987" endtime="20241013 17:02:24.995"/>
</kw>
<msg timestamp="20241013 17:02:24.995" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20241013 17:02:24.986" endtime="20241013 17:02:24.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:24.995" endtime="20241013 17:02:24.996"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:25.000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:25.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:25.465" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:24.998" endtime="20241013 17:02:25.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:25.466" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:25.465" endtime="20241013 17:02:25.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:25.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:25.466" endtime="20241013 17:02:25.466"/>
</kw>
<status status="PASS" starttime="20241013 17:02:24.997" endtime="20241013 17:02:25.467"/>
</kw>
<msg timestamp="20241013 17:02:25.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:24.997" endtime="20241013 17:02:25.467"/>
</kw>
<msg timestamp="20241013 17:02:25.467" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:24.997" endtime="20241013 17:02:25.467"/>
</kw>
<msg timestamp="20241013 17:02:25.467" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:24.996" endtime="20241013 17:02:25.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:25.467" endtime="20241013 17:02:25.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:25.468" endtime="20241013 17:02:25.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:25.468" endtime="20241013 17:02:25.469"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:25.472" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:02:25.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:25.476" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20241013 17:02:25.470" endtime="20241013 17:02:25.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:25.477" level="INFO">o</msg>
<status status="PASS" starttime="20241013 17:02:25.477" endtime="20241013 17:02:25.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:25.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:25.477" endtime="20241013 17:02:25.478"/>
</kw>
<status status="PASS" starttime="20241013 17:02:25.469" endtime="20241013 17:02:25.478"/>
</kw>
<msg timestamp="20241013 17:02:25.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:25.469" endtime="20241013 17:02:25.478"/>
</kw>
<msg timestamp="20241013 17:02:25.478" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20241013 17:02:25.469" endtime="20241013 17:02:25.478"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:25.482" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:25.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:25.485" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20241013 17:02:25.480" endtime="20241013 17:02:25.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:25.486" level="INFO">o</msg>
<status status="PASS" starttime="20241013 17:02:25.486" endtime="20241013 17:02:25.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:25.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:25.486" endtime="20241013 17:02:25.487"/>
</kw>
<status status="PASS" starttime="20241013 17:02:25.479" endtime="20241013 17:02:25.487"/>
</kw>
<msg timestamp="20241013 17:02:25.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:25.479" endtime="20241013 17:02:25.487"/>
</kw>
<msg timestamp="20241013 17:02:25.487" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20241013 17:02:25.478" endtime="20241013 17:02:25.487"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:25.487" endtime="20241013 17:02:25.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:24.499" endtime="20241013 17:02:25.488"/>
</test>
<test id="s1-s5-s14-t9" name="Get Partial object from s3 to get last n bytes" line="122">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:25.493" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:25.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:25.970" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:25.491" endtime="20241013 17:02:25.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:25.972" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:25.971" endtime="20241013 17:02:25.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:25.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:25.972" endtime="20241013 17:02:25.973"/>
</kw>
<status status="PASS" starttime="20241013 17:02:25.490" endtime="20241013 17:02:25.973"/>
</kw>
<msg timestamp="20241013 17:02:25.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:25.490" endtime="20241013 17:02:25.973"/>
</kw>
<msg timestamp="20241013 17:02:25.973" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:25.490" endtime="20241013 17:02:25.973"/>
</kw>
<msg timestamp="20241013 17:02:25.973" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:02:25.489" endtime="20241013 17:02:25.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:25.974" endtime="20241013 17:02:25.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:25.974" endtime="20241013 17:02:25.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:25.974" endtime="20241013 17:02:25.975"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:25.978" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:02:25.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:25.982" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20241013 17:02:25.976" endtime="20241013 17:02:25.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:25.983" level="INFO">ext</msg>
<status status="PASS" starttime="20241013 17:02:25.983" endtime="20241013 17:02:25.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:25.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:25.983" endtime="20241013 17:02:25.984"/>
</kw>
<status status="PASS" starttime="20241013 17:02:25.975" endtime="20241013 17:02:25.984"/>
</kw>
<msg timestamp="20241013 17:02:25.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:25.975" endtime="20241013 17:02:25.984"/>
</kw>
<msg timestamp="20241013 17:02:25.984" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20241013 17:02:25.975" endtime="20241013 17:02:25.984"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:25.987" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:25.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:25.991" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20241013 17:02:25.985" endtime="20241013 17:02:25.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:25.992" level="INFO">ext</msg>
<status status="PASS" starttime="20241013 17:02:25.991" endtime="20241013 17:02:25.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:25.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:25.992" endtime="20241013 17:02:25.992"/>
</kw>
<status status="PASS" starttime="20241013 17:02:25.985" endtime="20241013 17:02:25.993"/>
</kw>
<msg timestamp="20241013 17:02:25.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:25.985" endtime="20241013 17:02:25.993"/>
</kw>
<msg timestamp="20241013 17:02:25.993" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20241013 17:02:25.984" endtime="20241013 17:02:25.993"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:25.993" endtime="20241013 17:02:25.993"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:25.997" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:26.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:26.464" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:25.995" endtime="20241013 17:02:26.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:26.465" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:26.465" endtime="20241013 17:02:26.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:26.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:26.466" endtime="20241013 17:02:26.466"/>
</kw>
<status status="PASS" starttime="20241013 17:02:25.995" endtime="20241013 17:02:26.466"/>
</kw>
<msg timestamp="20241013 17:02:26.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:25.994" endtime="20241013 17:02:26.466"/>
</kw>
<msg timestamp="20241013 17:02:26.467" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:25.994" endtime="20241013 17:02:26.467"/>
</kw>
<msg timestamp="20241013 17:02:26.467" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:25.993" endtime="20241013 17:02:26.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:26.467" endtime="20241013 17:02:26.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:26.468" endtime="20241013 17:02:26.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:26.468" endtime="20241013 17:02:26.468"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:26.472" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:26.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:26.476" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.470" endtime="20241013 17:02:26.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:26.477" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.477" endtime="20241013 17:02:26.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:26.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:26.477" endtime="20241013 17:02:26.478"/>
</kw>
<status status="PASS" starttime="20241013 17:02:26.469" endtime="20241013 17:02:26.478"/>
</kw>
<msg timestamp="20241013 17:02:26.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:26.469" endtime="20241013 17:02:26.478"/>
</kw>
<msg timestamp="20241013 17:02:26.478" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.468" endtime="20241013 17:02:26.478"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:26.482" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:26.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:26.486" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.479" endtime="20241013 17:02:26.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:26.487" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.486" endtime="20241013 17:02:26.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:26.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:26.487" endtime="20241013 17:02:26.487"/>
</kw>
<status status="PASS" starttime="20241013 17:02:26.479" endtime="20241013 17:02:26.488"/>
</kw>
<msg timestamp="20241013 17:02:26.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:26.479" endtime="20241013 17:02:26.488"/>
</kw>
<msg timestamp="20241013 17:02:26.488" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.478" endtime="20241013 17:02:26.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:26.488" endtime="20241013 17:02:26.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:25.488" endtime="20241013 17:02:26.489"/>
</test>
<test id="s1-s5-s14-t10" name="Incorrect values for end and start offset" line="140">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:26.493" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:26.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:26.967" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:26.491" endtime="20241013 17:02:26.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:26.968" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:26.967" endtime="20241013 17:02:26.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:26.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:26.968" endtime="20241013 17:02:26.969"/>
</kw>
<status status="PASS" starttime="20241013 17:02:26.491" endtime="20241013 17:02:26.969"/>
</kw>
<msg timestamp="20241013 17:02:26.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:26.490" endtime="20241013 17:02:26.969"/>
</kw>
<msg timestamp="20241013 17:02:26.969" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:26.490" endtime="20241013 17:02:26.969"/>
</kw>
<msg timestamp="20241013 17:02:26.969" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:26.490" endtime="20241013 17:02:26.969"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:26.969" endtime="20241013 17:02:26.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:26.970" endtime="20241013 17:02:26.970"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:26.974" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:26.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:26.978" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.971" endtime="20241013 17:02:26.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:26.979" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.978" endtime="20241013 17:02:26.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:26.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:26.979" endtime="20241013 17:02:26.979"/>
</kw>
<status status="PASS" starttime="20241013 17:02:26.971" endtime="20241013 17:02:26.980"/>
</kw>
<msg timestamp="20241013 17:02:26.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:26.971" endtime="20241013 17:02:26.980"/>
</kw>
<msg timestamp="20241013 17:02:26.980" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.970" endtime="20241013 17:02:26.980"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:26.983" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:26.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:26.987" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.981" endtime="20241013 17:02:26.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:26.988" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.987" endtime="20241013 17:02:26.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:26.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:26.988" endtime="20241013 17:02:26.988"/>
</kw>
<status status="PASS" starttime="20241013 17:02:26.981" endtime="20241013 17:02:26.988"/>
</kw>
<msg timestamp="20241013 17:02:26.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:26.980" endtime="20241013 17:02:26.989"/>
</kw>
<msg timestamp="20241013 17:02:26.989" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:26.980" endtime="20241013 17:02:26.989"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:26.989" endtime="20241013 17:02:26.989"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:26.993" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:27.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:27.459" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:26.991" endtime="20241013 17:02:27.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:27.460" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:02:27.460" endtime="20241013 17:02:27.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:27.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:27.461" endtime="20241013 17:02:27.461"/>
</kw>
<status status="PASS" starttime="20241013 17:02:26.990" endtime="20241013 17:02:27.461"/>
</kw>
<msg timestamp="20241013 17:02:27.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:26.990" endtime="20241013 17:02:27.461"/>
</kw>
<msg timestamp="20241013 17:02:27.462" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:26.990" endtime="20241013 17:02:27.462"/>
</kw>
<msg timestamp="20241013 17:02:27.462" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:26.989" endtime="20241013 17:02:27.462"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:27.462" endtime="20241013 17:02:27.462"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:27.462" endtime="20241013 17:02:27.462"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:27.466" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:27.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:27.470" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:27.464" endtime="20241013 17:02:27.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:27.471" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:27.470" endtime="20241013 17:02:27.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:27.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:27.471" endtime="20241013 17:02:27.471"/>
</kw>
<status status="PASS" starttime="20241013 17:02:27.463" endtime="20241013 17:02:27.471"/>
</kw>
<msg timestamp="20241013 17:02:27.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:27.463" endtime="20241013 17:02:27.472"/>
</kw>
<msg timestamp="20241013 17:02:27.472" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:27.463" endtime="20241013 17:02:27.472"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:27.475" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:27.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:27.478" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:27.473" endtime="20241013 17:02:27.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:27.479" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:27.479" endtime="20241013 17:02:27.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:27.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:27.479" endtime="20241013 17:02:27.480"/>
</kw>
<status status="PASS" starttime="20241013 17:02:27.473" endtime="20241013 17:02:27.480"/>
</kw>
<msg timestamp="20241013 17:02:27.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:27.472" endtime="20241013 17:02:27.480"/>
</kw>
<msg timestamp="20241013 17:02:27.480" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:02:27.472" endtime="20241013 17:02:27.481"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:27.481" endtime="20241013 17:02:27.481"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:26.489" endtime="20241013 17:02:27.481"/>
</test>
<test id="s1-s5-s14-t11" name="Zero byte file" line="155">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:27.485" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:27.937" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:27.937" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:27.483" endtime="20241013 17:02:27.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:27.938" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:27.938" endtime="20241013 17:02:27.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:27.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:27.939" endtime="20241013 17:02:27.939"/>
</kw>
<msg timestamp="20241013 17:02:27.939" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:27.483" endtime="20241013 17:02:27.939"/>
</kw>
<msg timestamp="20241013 17:02:27.940" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:27.482" endtime="20241013 17:02:27.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:27.940" endtime="20241013 17:02:27.940"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:27.944" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:28.424" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:28.424" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:27.941" endtime="20241013 17:02:28.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:28.425" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:28.424" endtime="20241013 17:02:28.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:28.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:28.425" endtime="20241013 17:02:28.425"/>
</kw>
<msg timestamp="20241013 17:02:28.426" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:27.941" endtime="20241013 17:02:28.426"/>
</kw>
<msg timestamp="20241013 17:02:28.426" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:27.940" endtime="20241013 17:02:28.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:28.426" endtime="20241013 17:02:28.426"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:28.430" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:28.894" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:28.895" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:28.428" endtime="20241013 17:02:28.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:28.896" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:28.895" endtime="20241013 17:02:28.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:28.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:28.896" endtime="20241013 17:02:28.896"/>
</kw>
<msg timestamp="20241013 17:02:28.896" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:28.427" endtime="20241013 17:02:28.897"/>
</kw>
<msg timestamp="20241013 17:02:28.897" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:02:28.426" endtime="20241013 17:02:28.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:28.897" endtime="20241013 17:02:28.897"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:27.482" endtime="20241013 17:02:28.897"/>
</test>
<test id="s1-s5-s14-t12" name="Create file with user defined metadata and tags" line="165">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:28.902" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:02:28.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:28.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:28.900" endtime="20241013 17:02:28.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:28.905" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:28.905" endtime="20241013 17:02:28.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:28.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:28.905" endtime="20241013 17:02:28.906"/>
</kw>
<status status="PASS" starttime="20241013 17:02:28.899" endtime="20241013 17:02:28.906"/>
</kw>
<msg timestamp="20241013 17:02:28.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:28.899" endtime="20241013 17:02:28.906"/>
</kw>
<status status="PASS" starttime="20241013 17:02:28.898" endtime="20241013 17:02:28.906"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:28.910" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:29.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:29.420" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:28.908" endtime="20241013 17:02:29.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:29.422" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:29.421" endtime="20241013 17:02:29.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:29.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:29.422" endtime="20241013 17:02:29.423"/>
</kw>
<status status="PASS" starttime="20241013 17:02:28.907" endtime="20241013 17:02:29.423"/>
</kw>
<msg timestamp="20241013 17:02:29.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:28.907" endtime="20241013 17:02:29.424"/>
</kw>
<msg timestamp="20241013 17:02:29.424" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:28.907" endtime="20241013 17:02:29.424"/>
</kw>
<status status="PASS" starttime="20241013 17:02:28.906" endtime="20241013 17:02:29.424"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:29.430" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:29.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:29.880" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:29.427" endtime="20241013 17:02:29.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:29.881" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:02:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:29 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20241013 17:02:29.880" endtime="20241013 17:02:29.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:29.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:29.881" endtime="20241013 17:02:29.882"/>
</kw>
<status status="PASS" starttime="20241013 17:02:29.426" endtime="20241013 17:02:29.882"/>
</kw>
<msg timestamp="20241013 17:02:29.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:29.426" endtime="20241013 17:02:29.882"/>
</kw>
<msg timestamp="20241013 17:02:29.882" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:29.425" endtime="20241013 17:02:29.882"/>
</kw>
<msg timestamp="20241013 17:02:29.883" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:29.424" endtime="20241013 17:02:29.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:29.883" endtime="20241013 17:02:29.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:29.883" endtime="20241013 17:02:29.884"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:29.887" level="INFO">Running command 'ozone sh key info /s3v/encrypted/ozone-test-5816640693/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:33.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:33.744" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-5816640693/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2024-10-13T17:...</msg>
<status status="PASS" starttime="20241013 17:02:29.885" endtime="20241013 17:02:33.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:33.746" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-5816640693/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2024-10-13T17:02:29.337Z",
  "modificationTime" : "2024-10-13T17:02:29.371Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 113750153625604400,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 18189,
  "fileEncryptionInfo" : {
    "cipherSuite" : "AES_CTR_NOPADDING",
    "iv" : "lkk2L4joJ7w3EjyXhIdCBw==",
    "keyName" : "key1",
    "ezKeyVersionName" : "key1@0",
    "cryptoProtocolVersion" : "ENCRYPTION_ZONES",
    "encryptedDataEncryptionKey" : "HfloPuG4Tffg/qAhHfVMGQ=="
  },
  "file" : true
}</msg>
<status status="PASS" starttime="20241013 17:02:33.745" endtime="20241013 17:02:33.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:33.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:33.746" endtime="20241013 17:02:33.746"/>
</kw>
<status status="PASS" starttime="20241013 17:02:29.884" endtime="20241013 17:02:33.746"/>
</kw>
<msg timestamp="20241013 17:02:33.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:29.884" endtime="20241013 17:02:33.747"/>
</kw>
<msg timestamp="20241013 17:02:33.747" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-5816640693/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2024-10-13T17:...</msg>
<status status="PASS" starttime="20241013 17:02:29.884" endtime="20241013 17:02:33.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:33.747" endtime="20241013 17:02:33.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:33.747" endtime="20241013 17:02:33.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:33.748" endtime="20241013 17:02:33.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:33.748" endtime="20241013 17:02:33.749"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:33.753" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:34.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:34.242" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:33.750" endtime="20241013 17:02:34.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:34.243" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:34 GMT",
    "Metadata": {},
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:02:34.243" endtime="20241013 17:02:34.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:34.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:34.244" endtime="20241013 17:02:34.244"/>
</kw>
<status status="PASS" starttime="20241013 17:02:33.750" endtime="20241013 17:02:34.244"/>
</kw>
<msg timestamp="20241013 17:02:34.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:33.750" endtime="20241013 17:02:34.244"/>
</kw>
<msg timestamp="20241013 17:02:34.244" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:33.749" endtime="20241013 17:02:34.245"/>
</kw>
<msg timestamp="20241013 17:02:34.245" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:02:33.749" endtime="20241013 17:02:34.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:34.245" endtime="20241013 17:02:34.245"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:34.248" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:02:29 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:34 GMT",
    "Metadata": {},
    "TagCount": 2
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:34.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:34.254" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:02:34.246" endtime="20241013 17:02:34.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:34.255" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:02:34.254" endtime="20241013 17:02:34.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:34.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:34.255" endtime="20241013 17:02:34.255"/>
</kw>
<msg timestamp="20241013 17:02:34.256" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20241013 17:02:34.245" endtime="20241013 17:02:34.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:02:34.256" endtime="20241013 17:02:34.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:28.898" endtime="20241013 17:02:34.256"/>
</test>
<test id="s1-s5-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="184">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:34.261" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:02:34.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:34.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:34.259" endtime="20241013 17:02:34.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:34.264" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:34.263" endtime="20241013 17:02:34.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:34.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:34.264" endtime="20241013 17:02:34.265"/>
</kw>
<status status="PASS" starttime="20241013 17:02:34.258" endtime="20241013 17:02:34.265"/>
</kw>
<msg timestamp="20241013 17:02:34.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:34.258" endtime="20241013 17:02:34.265"/>
</kw>
<status status="PASS" starttime="20241013 17:02:34.258" endtime="20241013 17:02:34.265"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:34.269" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:34.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:34.806" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:34.267" endtime="20241013 17:02:34.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:34.807" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:34.806" endtime="20241013 17:02:34.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:34.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:34.807" endtime="20241013 17:02:34.808"/>
</kw>
<status status="PASS" starttime="20241013 17:02:34.266" endtime="20241013 17:02:34.808"/>
</kw>
<msg timestamp="20241013 17:02:34.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:34.266" endtime="20241013 17:02:34.808"/>
</kw>
<msg timestamp="20241013 17:02:34.808" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:02:34.266" endtime="20241013 17:02:34.808"/>
</kw>
<status status="PASS" starttime="20241013 17:02:34.265" endtime="20241013 17:02:34.808"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:34.813" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:35.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:35.296" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:34.810" endtime="20241013 17:02:35.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:35.297" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:02:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:02:35 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20241013 17:02:35.296" endtime="20241013 17:02:35.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:35.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:35.297" endtime="20241013 17:02:35.298"/>
</kw>
<status status="PASS" starttime="20241013 17:02:34.810" endtime="20241013 17:02:35.298"/>
</kw>
<msg timestamp="20241013 17:02:35.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:34.810" endtime="20241013 17:02:35.298"/>
</kw>
<msg timestamp="20241013 17:02:35.298" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:34.809" endtime="20241013 17:02:35.298"/>
</kw>
<msg timestamp="20241013 17:02:35.298" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:02:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:02:34.809" endtime="20241013 17:02:35.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:35.299" endtime="20241013 17:02:35.299"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:35.299" endtime="20241013 17:02:35.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:34.257" endtime="20241013 17:02:35.300"/>
</test>
<test id="s1-s5-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="192">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:35.304" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:02:35.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:35.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:35.302" endtime="20241013 17:02:35.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:35.307" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:35.307" endtime="20241013 17:02:35.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:35.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:35.307" endtime="20241013 17:02:35.308"/>
</kw>
<status status="PASS" starttime="20241013 17:02:35.301" endtime="20241013 17:02:35.308"/>
</kw>
<msg timestamp="20241013 17:02:35.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:35.301" endtime="20241013 17:02:35.308"/>
</kw>
<status status="PASS" starttime="20241013 17:02:35.301" endtime="20241013 17:02:35.309"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:02:35.312" level="INFO">${custom_metadata_value} = vF6xCbnad16d7bkslvpz3OZJ4nkKpgvSMdkai0mzQervKoAerGmgTCDaUb11FEwW5CeIcTqcJ4GEe912bKsjrWwRSLgIDUYJewxJy1ecv8Ka3hb5jthA4xU5izqTlMiGjAvMfvI6sBYActiw8qGdPnT0vwZHvAltwoeWv3l37NkxcgYpEJiOWtuqfJAUCju1Q1jKTkgc...</msg>
<status status="PASS" starttime="20241013 17:02:35.309" endtime="20241013 17:02:35.312"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:35.315" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vF6xCbnad16d7bkslvpz3OZJ4nkKpgvSMdkai0mzQervKoAerGmgTCDaUb11FEwW5CeIcTqcJ4GEe912bKsjrWwRSLgIDUYJewxJy1ecv8Ka3hb5jthA4xU5izqTlMiGjAvMfvI6sBYActiw8qGdPnT0vwZHvAltwoeWv3l37NkxcgYpEJiOWtuqfJAUCju1Q1jKTkgcSXKvu1xFceQNgXZ1k8jzNeoFUfIRzqADUlB7cOi27PrnFtWNswA2dbEfmGCNo5P09bJ9IxhzApRX1wtLkfhvco2OSu7uKCZGiGQrKF8psWAUsx0TibpTekeel6bAoXMvIKNYgHAptO08HHOunB90C8DLnkGnUEQGbxBEP2vIPy00iuS7IrSEtvtJzqZZOJucbNkkE4mp77H2wjYnBEQsU0E8J0X20MLr5f5IIs2m1g2kQ902pqi7Ta5jncgWNVxNsnKCN8oJje4e33rWSCiazG6WMiF65127Tl983jN24azc1C6N2HVp8HgibC0EaHsbBbzvPXwNB7iXjGsws07H8dUU57wHPT46nskk9kB3jQXIWSn0F2BxgZ7PnHUEs6ZVGnLpYFsdaMR7vync42i9PI7kaQpgeprsS05v5j7s1J4AaBNvznMRfwxO7djTCQgSpdjAG0kTJMYDJGO7GubD1FVljLD7VPxPM9aJtWxXwgc1gvWoYFTvrqK4LsfZ4QFhEnO0P8v5shsX5Re1NrAk5bsO6jzkoQX6z4AGmBG3LyHGHKnjoxQ7cbfgz2lm9RPNI1HlMmQSWDlYlnoLUbFtBQStWJxAycdBSQsx4DdfJXoBf1na7dmTwD00NfZmk7s6KGTNZcMRYOUqAweHEz8KCohcoKwVDPTpH4iC3epKAp9tVxIfMDrQMpAn3ozv8D6KlmFg81gA1q29Cpa4ceD0vEZ6X8eow5iJ75ucTvPv3iTR6xF8E8q5QviAQUu5fSIWoi8rxCsy0UnojC0rlLkqy7AxuakiRvr9cBJ7AUezyZKJ4MaGsQ2XdHfR9sb0GwDKcF1zzOBsKJFD89Byu86XXY4RhUG2KXyUm4Ot6uIbXEVoSsuWDwYbOzSafFhHqAzmvA5gxyBWq0rE326c3XhVhOuZG6Ee3AtEC1ycnlPJUGjYLjBZuAUwjPJvEoDqDTEFPx1G7uUDX7qph4cmlQUVfZjdsP5cCzXpFE0kPjx4oCd1hbVSVV6vsu5OHccykMn754WGnXNv2BwkwLgxAyixjhlgEmQhkzeSSH0fWN81MHN20vcEU843jtD2exCA7VttOR5FmNYyI995mFZiyflV1q71sZ4EBUNGIIKHN5qHGvivKvi5OKzexKAQb47NZi4rH8UuASpH9uELOzspM6JhrAARnSRTtluKEVqcstjplYQBLrJwBJZ6W0Uile9nTiJrCGtqZ7AgZVywDeo35OAJ7bhDNE49lFMVq8FGucjKdmxloIFctaVdeQSOcgFsiZpUiT4fm4xm9oWlYjBsXXvK6Oms0ATzsn1HnIJ2zY73HZzQL2hPeVNarlXsQTclx3mCanNHlwBzg05E5hFo6Mqcz2m7mSjF0e09TLBPq4EtALsMiyS2rqNH5cncDMD7KvNaLhkK6FR0FVz7X91T15muBw7kEA02xM0NvtG25hH8C1wISDfaMfEB6PHP9aWgczW5aCMzQFhBarqLrThn9fB3msPMraK5OizHWojcuSuyjMWklSt4Ptd4PdBiao30BVaukseZuT2gOg6adzboTcygcKcuoL57l2SiOCHss0p3SzmSQuIemBUwSdVQNtKOLijvPDjoKAxtchVKC4fz1G7bInQnp6lUPtl9sde1QRvtFfjH90IEim4Ps95fW2ljcADRFP07XnqqZmB6ebxlIKYSJ9JprlCReZW2OqPUfLTt29YsHNnlR4ACX4jFCWd58fVnL4fDLwHpOfgCXoEn0BH6WBXtNW8aNJh0s3vSeRbFpnuLhYGZPhLesJ5zmrZtM1LbXfzQGnyKGp7kYw8Toht5MNPY4bGeGkJn2uniIGtLZaTrlUa4TMph2ahSu13XKldXs1D7fnoY0XtY2dC78ghO4qw4xn0zsUMT08vPCQfEJyxMYAAQDUHVr3SdNH2CNwRHwj99Eui8ecJf9fc0U39TFjypT2l8hsHVNF8bORSoi14kKgZDAsPfqMtFhkaZlfGFZUO6EGhWb74MHzkyFksypyl07bBPtZDJZsEQsAF5NJiMcXCJpCkpOzFb19XjDOrdqVDuCH0helOAtjwRYciuFZ5iv3ys60iqH1rMf6iHmHLQH53pzLfOmL9STw2cH6Pc5BDaeStgajcI15YbbQ756kisbfDYBEYvMuBd5XrnZ6T4ES2GEO35Hc6zlTG5lJim568dEmvdlE9Z4TF8ZZcYp5CCD5g38ZpOrZGxdw4pkEuU0MJf2MKPmdqeGvipvIe5iti9R2xoXKbrpuGw72XJtAOc9tu51ZHdCJH5KyDZHrgorPbVjDesuzAqN79XtM9wSptkAUYfMVOP5OKjdDtA0Yu0RYPPxKg1jyN556nAGRHxfTVVPai5njIDWDahdJCuOZFHJLtBBJMOXlUx1BgvZjoEAkTVTc6PGl7L4gwhyfquSQn1ckTtjpUZ4S007SCwhfGRJqCaWIItCQuwtuXD8dwReF3RYRYnNcbRIGW19n9oegKrBXN2zQvhy1AfTMJSJiP4FDqYSOr19TJw178CriO6OXqOr0ySPOh9Yg6avnSlAOIdGmRAHRL6Vi8hrAcfcGdeqwLp4cP8jJRG3RSKP88QQT3F4eRxypYub38detinR7Zb2723THPrKRu75hWYXryYqSTRlCkVp5P6z8X7psszm1VjQiMFX89UUOmsXzuGXSsfLhw2JAHpNswU4IN83RCuKL5843OMkwyzxLTCIar29njMevtqQDzwA71MKWtTI053gP6icqrdlJyYMDfQvIVLt36WR3RADinnbj395HwmQHfuv25J3aGuebdXvmn0zuBg" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:35.796" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:35.796" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:02:35.313" endtime="20241013 17:02:35.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:35.797" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:02:35.797" endtime="20241013 17:02:35.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:35.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:35.797" endtime="20241013 17:02:35.798"/>
</kw>
<msg timestamp="20241013 17:02:35.798" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:02:35.313" endtime="20241013 17:02:35.798"/>
</kw>
<msg timestamp="20241013 17:02:35.798" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:02:35.312" endtime="20241013 17:02:35.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:35.799" endtime="20241013 17:02:35.799"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:35.799" endtime="20241013 17:02:35.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:35.300" endtime="20241013 17:02:35.800"/>
</test>
<test id="s1-s5-s14-t15" name="Create files invalid tags" line="199">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:35.805" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:36.279" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:36.279" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20241013 17:02:35.802" endtime="20241013 17:02:36.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:36.280" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20241013 17:02:36.280" endtime="20241013 17:02:36.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:36.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:36.281" endtime="20241013 17:02:36.281"/>
</kw>
<msg timestamp="20241013 17:02:36.281" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20241013 17:02:35.801" endtime="20241013 17:02:36.281"/>
</kw>
<msg timestamp="20241013 17:02:36.282" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20241013 17:02:35.801" endtime="20241013 17:02:36.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:36.282" endtime="20241013 17:02:36.282"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_key}</var>
<arg>129</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:02:36.283" level="INFO">${long_tag_key} = tCBZ9H9EhgX2rs8XX6jewpny5qrVrYQTMOn70DGJlu09fnwMG3qPI74dXkXrnuHf9yASWqHxGcV4jVyXhcNUAT5eAioClMcEL5Y4MIiReMMFQoPGuhpozasMlQw4XXv2E</msg>
<status status="PASS" starttime="20241013 17:02:36.282" endtime="20241013 17:02:36.283"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${long_tag_key}=tag-value1"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:36.286" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tCBZ9H9EhgX2rs8XX6jewpny5qrVrYQTMOn70DGJlu09fnwMG3qPI74dXkXrnuHf9yASWqHxGcV4jVyXhcNUAT5eAioClMcEL5Y4MIiReMMFQoPGuhpozasMlQw4XXv2E=tag-value1" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:36.757" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:36.757" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20241013 17:02:36.284" endtime="20241013 17:02:36.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:36.758" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20241013 17:02:36.758" endtime="20241013 17:02:36.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:36.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:36.758" endtime="20241013 17:02:36.759"/>
</kw>
<msg timestamp="20241013 17:02:36.759" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20241013 17:02:36.284" endtime="20241013 17:02:36.759"/>
</kw>
<msg timestamp="20241013 17:02:36.759" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20241013 17:02:36.283" endtime="20241013 17:02:36.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:36.760" endtime="20241013 17:02:36.760"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_value}</var>
<arg>257</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:02:36.761" level="INFO">${long_tag_value} = ztjYgSDYCIQtyqywDugOUH6RoGsGqshvyJpI7TtLcYzWa0RjGzcugNzKmtD7WJvGdM6yHe5lCpOUOoYXcfCUHl9ewSFyia8SEW548qRdcC0Caub9z8i8qPziHV5dAmv61wAfjlqMxDx5xbKE12VyzJZ4LEq28yeR2MbcSruUlm5OuyTnsnV4D3oshsoKQCAKYH1HnnKP...</msg>
<status status="PASS" starttime="20241013 17:02:36.760" endtime="20241013 17:02:36.761"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=${long_tag_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:36.764" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=ztjYgSDYCIQtyqywDugOUH6RoGsGqshvyJpI7TtLcYzWa0RjGzcugNzKmtD7WJvGdM6yHe5lCpOUOoYXcfCUHl9ewSFyia8SEW548qRdcC0Caub9z8i8qPziHV5dAmv61wAfjlqMxDx5xbKE12VyzJZ4LEq28yeR2MbcSruUlm5OuyTnsnV4D3oshsoKQCAKYH1HnnKPJsP4JSF36AVzwj2FPln7XVddpJ5aiFoFzN91vSXcxtxtPJ7510RAfEO3I" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:37.253" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:37.253" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20241013 17:02:36.762" endtime="20241013 17:02:37.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:37.254" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20241013 17:02:37.254" endtime="20241013 17:02:37.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:37.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:37.255" endtime="20241013 17:02:37.255"/>
</kw>
<msg timestamp="20241013 17:02:37.255" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20241013 17:02:36.761" endtime="20241013 17:02:37.255"/>
</kw>
<msg timestamp="20241013 17:02:37.256" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20241013 17:02:36.761" endtime="20241013 17:02:37.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:37.256" endtime="20241013 17:02:37.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:35.800" endtime="20241013 17:02:37.256"/>
</test>
<test id="s1-s5-s14-t16" name="Create files with too many tags" line="209">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:37.262" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:02:37.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:37.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:37.260" endtime="20241013 17:02:37.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:37.265" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:37.265" endtime="20241013 17:02:37.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:37.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:37.265" endtime="20241013 17:02:37.266"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.258" endtime="20241013 17:02:37.266"/>
</kw>
<msg timestamp="20241013 17:02:37.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:37.258" endtime="20241013 17:02:37.266"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.258" endtime="20241013 17:02:37.266"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20241013 17:02:37.266" level="INFO">@{tags_list} = [ ]</msg>
<status status="PASS" starttime="20241013 17:02:37.266" endtime="20241013 17:02:37.266"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>11</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.267" endtime="20241013 17:02:37.267"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.267" endtime="20241013 17:02:37.267"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.268" endtime="20241013 17:02:37.268"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.268" endtime="20241013 17:02:37.268"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.268" endtime="20241013 17:02:37.269"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.268" endtime="20241013 17:02:37.269"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.269" endtime="20241013 17:02:37.269"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.269" endtime="20241013 17:02:37.269"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.270" endtime="20241013 17:02:37.270"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.269" endtime="20241013 17:02:37.270"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.270" endtime="20241013 17:02:37.271"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.270" endtime="20241013 17:02:37.271"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.271" endtime="20241013 17:02:37.271"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.271" endtime="20241013 17:02:37.271"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.272" endtime="20241013 17:02:37.272"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.271" endtime="20241013 17:02:37.272"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.272" endtime="20241013 17:02:37.273"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.272" endtime="20241013 17:02:37.273"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.273" endtime="20241013 17:02:37.273"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.273" endtime="20241013 17:02:37.273"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:02:37.274" endtime="20241013 17:02:37.274"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.273" endtime="20241013 17:02:37.274"/>
</iter>
<status status="PASS" starttime="20241013 17:02:37.267" endtime="20241013 17:02:37.274"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${tags_over_limit}</var>
<arg>SEPARATOR=&amp;</arg>
<arg>@{tags_list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20241013 17:02:37.274" level="INFO">${tags_over_limit} = tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;ta...</msg>
<status status="PASS" starttime="20241013 17:02:37.274" endtime="20241013 17:02:37.275"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${tags_over_limit}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:37.278" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-5816640693/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;tag-key-9=tag-value-9&amp;tag-key-10=tag-value-10" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:37.748" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:37.748" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20241013 17:02:37.276" endtime="20241013 17:02:37.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:37.749" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20241013 17:02:37.748" endtime="20241013 17:02:37.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:37.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:37.749" endtime="20241013 17:02:37.749"/>
</kw>
<msg timestamp="20241013 17:02:37.750" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20241013 17:02:37.275" endtime="20241013 17:02:37.750"/>
</kw>
<msg timestamp="20241013 17:02:37.750" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20241013 17:02:37.275" endtime="20241013 17:02:37.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:37.750" endtime="20241013 17:02:37.750"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:37.257" endtime="20241013 17:02:37.751"/>
</test>
<test id="s1-s5-s14-t17" name="Create small file and expect ETag (MD5) in a reponse header" line="220">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:37.755" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20241013 17:02:37.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:37.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:37.753" endtime="20241013 17:02:37.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:37.765" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:37.764" endtime="20241013 17:02:37.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:37.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:37.765" endtime="20241013 17:02:37.765"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.752" endtime="20241013 17:02:37.766"/>
</kw>
<msg timestamp="20241013 17:02:37.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:37.752" endtime="20241013 17:02:37.766"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.752" endtime="20241013 17:02:37.766"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:37.769" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:37.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:37.775" level="INFO">${output} = a9deac4a69116c1145077246b5a4f761</msg>
<status status="PASS" starttime="20241013 17:02:37.767" endtime="20241013 17:02:37.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:37.776" level="INFO">a9deac4a69116c1145077246b5a4f761</msg>
<status status="PASS" starttime="20241013 17:02:37.775" endtime="20241013 17:02:37.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:37.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:37.776" endtime="20241013 17:02:37.776"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.767" endtime="20241013 17:02:37.777"/>
</kw>
<msg timestamp="20241013 17:02:37.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:37.766" endtime="20241013 17:02:37.777"/>
</kw>
<msg timestamp="20241013 17:02:37.777" level="INFO">${file_md5_checksum} = a9deac4a69116c1145077246b5a4f761</msg>
<status status="PASS" starttime="20241013 17:02:37.766" endtime="20241013 17:02:37.777"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:37.780" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:38.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:38.297" level="INFO">${output} = 2024-10-13 17:02:38,118 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:38,118 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:37.778" endtime="20241013 17:02:38.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:38.298" level="INFO">2024-10-13 17:02:38,118 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:38,118 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://encrypted']
2024-10-13 17:02:38,119 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f0a82a20d08&gt;
2024-10-13 17:02:38,119 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f0a8386ba60&gt;
2024-10-13 17:02:38,119 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f0a8384ae18&gt;
2024-10-13 17:02:38,120 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:02:38,124 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f0a82b51730&gt;
2024-10-13 17:02:38,124 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f0a82a2c378&gt;
2024-10-13 17:02:38,124 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,125 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f0a82a2c378&gt;
2024-10-13 17:02:38,126 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,126 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,126 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0a83819a20&gt;
2024-10-13 17:02:38,126 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,126 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0a83819a20&gt;
2024-10-13 17:02:38,127 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,127 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,127 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,127 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0a83819a20&gt;
2024-10-13 17:02:38,127 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,127 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,127 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,127 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,127 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,128 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,128 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,128 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,128 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,128 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,128 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,128 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,128 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,128 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0a83819a20&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0a83819a20&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,129 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0a83819a20&gt;
2024-10-13 17:02:38,130 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,130 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,130 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,130 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,130 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0a8ab18a58&gt;
2024-10-13 17:02:38,130 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:02:38,130 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-10-13 17:02:38,131 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:02:38,143 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:02:38,143 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0a845496a8&gt;
2024-10-13 17:02:38,145 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:02:38,154 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0a84a25620&gt;
2024-10-13 17:02:38,154 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0a84a25400&gt;
2024-10-13 17:02:38,155 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,157 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:38,158 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:02:38,158 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:38,159 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,159 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0a845496a8&gt;
2024-10-13 17:02:38,160 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0a84a25620&gt;
2024-10-13 17:02:38,160 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0a84a25400&gt;
2024-10-13 17:02:38,160 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,162 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:38,163 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:38,163 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,163 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0a845496a8&gt;
2024-10-13 17:02:38,165 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0a84a25620&gt;
2024-10-13 17:02:38,165 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0a84a25400&gt;
2024-10-13 17:02:38,165 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,167 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:38,168 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:38,168 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,169 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:02:38,169 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:38,170 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0a822e30b8&gt;}) about to wait for the following futures []
2024-10-13 17:02:38,170 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0a822e30b8&gt;}) done waiting for dependent futures
2024-10-13 17:02:38,170 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0a822e30b8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0a8238ff60&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f0a822cf0f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f0a822cf160&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f0a822cf2e8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0a822e30b8&gt;}
2024-10-13 17:02:38,171 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f0a822cf2e8&gt; for transfer request: 0.
2024-10-13 17:02:38,171 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:38,171 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:02:38,171 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:38,171 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:02:38,172 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0a8238ff60&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0a822e34a8&gt;, 'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}
2024-10-13 17:02:38,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f0a844e19d8&gt;
2024-10-13 17:02:38,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f0a8455be18&gt;
2024-10-13 17:02:38,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f0a844e42f0&gt;
2024-10-13 17:02:38,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f0a8455bd90&gt;
2024-10-13 17:02:38,172 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f0a8239a4e0&gt;&gt;
2024-10-13 17:02:38,173 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f0a8239a898&gt;&gt;
2024-10-13 17:02:38,173 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f0a8455bbf8&gt;
2024-10-13 17:02:38,173 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f0a84f03400&gt;
2024-10-13 17:02:38,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f0a844e1158&gt;
2024-10-13 17:02:38,175 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:02:38,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f0a8239a4e0&gt;&gt;
2024-10-13 17:02:38,175 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f0a8455b8c8&gt;
2024-10-13 17:02:38,176 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f0a844e4400&gt;
2024-10-13 17:02:38,176 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/encrypted/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'qd6sSmkRbBFFB3JGtaT3YQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0a822e34a8&gt;, 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f0a8239a198&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:38,176 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f0a86a84488&gt;
2024-10-13 17:02:38,176 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f0a8239a160&gt;&gt;
2024-10-13 17:02:38,176 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f0a8239a908&gt;&gt;
2024-10-13 17:02:38,176 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f0a8455bae8&gt;
2024-10-13 17:02:38,176 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f0a8239a908&gt;&gt;
2024-10-13 17:02:38,176 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:38,178 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:38,178 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/small_file

content-md5:qd6sSmkRbBFFB3JGtaT3YQ==
host:s3g:9878
x-amz-content-sha256:b7aa59731684f4b4a2e602488536752ae57687b3b7209faff52690eef5c52a8f
x-amz-date:20241013T170238Z

content-md5;host;x-amz-content-sha256;x-amz-date
b7aa59731684f4b4a2e602488536752ae57687b3b7209faff52690eef5c52a8f
2024-10-13 17:02:38,178 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170238Z
20241013/us-west-1/s3/aws4_request
e8cd92857047fa72df9ccdf912dbe820e8fef015590a80d63ead97562dab5046
2024-10-13 17:02:38,178 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
6f7b6ea60981c850715cd0c1273b453ced1185ede8f9cd7d1880ffa85646c17c
2024-10-13 17:02:38,178 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f0a86a84510&gt;
2024-10-13 17:02:38,178 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f0a844e4a60&gt;
2024-10-13 17:02:38,179 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'qd6sSmkRbBFFB3JGtaT3YQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170238Z', 'X-Amz-Content-SHA256': b'b7aa59731684f4b4a2e602488536752ae57687b3b7209faff52690eef5c52a8f', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=6f7b6ea60981c850715cd0c1273b453ced1185ede8f9cd7d1880ffa85646c17c', 'amz-sdk-invocation-id': b'e48329f0-e349-49a8-8e40-c118bedc07c9', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2024-10-13 17:02:38,179 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:38,180 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:02:38,202 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (7.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (15.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (22.7 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:38,237 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/small_file HTTP/1.1" 200 0
2024-10-13 17:02:38,237 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:38 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:38 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"a9deac4a69116c1145077246b5a4f761"', 'Server': 'Ozone', 'x-amz-id-2': '5jDYU5lFKcSFM', 'x-amz-request-id': '1991f0c3-a9bb-4ddc-972b-65cd00736aba', 'Content-Length': '0'}
2024-10-13 17:02:38,237 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:02:38,238 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f0a8239a518&gt;
2024-10-13 17:02:38,238 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:38,238 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f0a8239a4e0&gt;&gt;
2024-10-13 17:02:38,238 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f0a82a208c8&gt;
Completed 976.6 KiB/976.6 KiB (14.2 MiB/s) with 1 file(s) remaining
upload: ../../tmp/small_file to s3://encrypted/small_file          
2024-10-13 17:02:38,255 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:38,255 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:02:38.298" endtime="20241013 17:02:38.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:38.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:38.299" endtime="20241013 17:02:38.299"/>
</kw>
<status status="PASS" starttime="20241013 17:02:37.778" endtime="20241013 17:02:38.300"/>
</kw>
<msg timestamp="20241013 17:02:38.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:37.778" endtime="20241013 17:02:38.300"/>
</kw>
<msg timestamp="20241013 17:02:38.300" level="INFO">${output} = 2024-10-13 17:02:38,118 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:38,118 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:37.777" endtime="20241013 17:02:38.300"/>
</kw>
<msg timestamp="20241013 17:02:38.301" level="INFO">${result} = 2024-10-13 17:02:38,118 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:38,118 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:37.777" endtime="20241013 17:02:38.301"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 17:02:38.301" endtime="20241013 17:02:38.302"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:37.751" endtime="20241013 17:02:38.302"/>
</test>
<test id="s1-s5-s14-t18" name="Download small file end expect ETag (MD5) in a response header" line="227">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:38.306" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:38.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:38.312" level="INFO">${output} = a9deac4a69116c1145077246b5a4f761</msg>
<status status="PASS" starttime="20241013 17:02:38.304" endtime="20241013 17:02:38.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:38.313" level="INFO">a9deac4a69116c1145077246b5a4f761</msg>
<status status="PASS" starttime="20241013 17:02:38.313" endtime="20241013 17:02:38.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:38.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:38.314" endtime="20241013 17:02:38.314"/>
</kw>
<status status="PASS" starttime="20241013 17:02:38.304" endtime="20241013 17:02:38.314"/>
</kw>
<msg timestamp="20241013 17:02:38.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:38.303" endtime="20241013 17:02:38.314"/>
</kw>
<msg timestamp="20241013 17:02:38.315" level="INFO">${file_md5_checksum} = a9deac4a69116c1145077246b5a4f761</msg>
<status status="PASS" starttime="20241013 17:02:38.303" endtime="20241013 17:02:38.315"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:38.319" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:38.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:38.867" level="INFO">${output} = 2024-10-13 17:02:38,671 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:38,671 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:38.316" endtime="20241013 17:02:38.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:38.869" level="INFO">2024-10-13 17:02:38,671 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:38,671 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/small_file', '/tmp/small_file_downloaded']
2024-10-13 17:02:38,671 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f2b55f4bd08&gt;
2024-10-13 17:02:38,671 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f2b56d96a60&gt;
2024-10-13 17:02:38,672 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f2b56d75e18&gt;
2024-10-13 17:02:38,673 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:02:38,676 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f2b5607d730&gt;
2024-10-13 17:02:38,677 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f2b55f56378&gt;
2024-10-13 17:02:38,677 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,677 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f2b55f56378&gt;
2024-10-13 17:02:38,679 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,679 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,679 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2b56d44a20&gt;
2024-10-13 17:02:38,679 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,679 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2b56d44a20&gt;
2024-10-13 17:02:38,680 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,680 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,680 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,680 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2b56d44a20&gt;
2024-10-13 17:02:38,680 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,680 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,680 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,680 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,680 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,681 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,681 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,681 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,681 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,681 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,681 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,681 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,681 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2b56d44a20&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,682 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2b56d44a20&gt;
2024-10-13 17:02:38,683 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,683 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2b56d44a20&gt;
2024-10-13 17:02:38,683 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,683 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,683 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,683 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,683 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2b5e043a58&gt;
2024-10-13 17:02:38,683 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:02:38,683 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-10-13 17:02:38,684 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:02:38,696 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:02:38,696 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f2b57a746a8&gt;
2024-10-13 17:02:38,697 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:02:38,707 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2b57f50620&gt;
2024-10-13 17:02:38,707 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2b57f50400&gt;
2024-10-13 17:02:38,708 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,710 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:38,711 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:02:38,711 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:38,712 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,712 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f2b57a746a8&gt;
2024-10-13 17:02:38,713 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2b57f50620&gt;
2024-10-13 17:02:38,713 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2b57f50400&gt;
2024-10-13 17:02:38,713 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,715 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:38,716 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:38,716 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,717 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f2b57a746a8&gt;
2024-10-13 17:02:38,718 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2b57f50620&gt;
2024-10-13 17:02:38,718 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2b57f50400&gt;
2024-10-13 17:02:38,718 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,720 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:38,721 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:38,722 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:38,722 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:02:38,723 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f2b57a85e18&gt;
2024-10-13 17:02:38,723 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f2b57a85d90&gt;
2024-10-13 17:02:38,723 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f2b55829a58&gt;&gt;
2024-10-13 17:02:38,723 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f2b55829e10&gt;&gt;
2024-10-13 17:02:38,723 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f2b57a85bf8&gt;
2024-10-13 17:02:38,723 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f2b57a0c158&gt;
2024-10-13 17:02:38,723 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f2b55829a58&gt;&gt;
2024-10-13 17:02:38,724 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f2b57a858c8&gt;
2024-10-13 17:02:38,724 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f2b57a0f400&gt;
2024-10-13 17:02:38,724 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/encrypted/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f2b55829710&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:38,724 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f2b558296d8&gt;&gt;
2024-10-13 17:02:38,724 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f2b55829e80&gt;&gt;
2024-10-13 17:02:38,724 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f2b57a85ae8&gt;
2024-10-13 17:02:38,724 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f2b55829e80&gt;&gt;
2024-10-13 17:02:38,724 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:38,725 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:38,725 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170238Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:02:38,725 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170238Z
20241013/us-west-1/s3/aws4_request
14ed5f85585843e58de795f74da670d56681215ff541b9884d22b7b90dbf1742
2024-10-13 17:02:38,725 - MainThread - botocore.auth - DEBUG - Signature:
f4a5968e908e1acb75b09102845524e01851fcbac2f4b145b64847b539de79f8
2024-10-13 17:02:38,725 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f2b57a0fa60&gt;
2024-10-13 17:02:38,725 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170238Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=f4a5968e908e1acb75b09102845524e01851fcbac2f4b145b64847b539de79f8', 'amz-sdk-invocation-id': b'9331d14c-732a-4b53-abd2-49c1144b8954', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:02:38,726 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:38,731 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/small_file HTTP/1.1" 200 0
2024-10-13 17:02:38,732 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:38 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:38 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"a9deac4a69116c1145077246b5a4f761"', 'Last-Modified': 'Sun, 13 Oct 2024 17:02:38 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'rlxLY3vsWx0ch9', 'x-amz-request-id': 'f057deec-95fe-4018-af4e-a45c7b7b141a', 'Content-Length': '1000000'}
2024-10-13 17:02:38,732 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:02:38,732 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f2b55829a90&gt;
2024-10-13 17:02:38,733 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:38,733 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f2b55829a58&gt;&gt;
2024-10-13 17:02:38,733 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f2b55f4b8c8&gt;
2024-10-13 17:02:38,733 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:38,734 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f2b54692208&gt;}) about to wait for the following futures []
2024-10-13 17:02:38,734 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f2b54692208&gt;}) done waiting for dependent futures
2024-10-13 17:02:38,735 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f2b54692208&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f2b558baf60&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f2b557fa0f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f2b557fa160&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f2b557fa2e8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f2b54692208&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f2b557fa6d8&gt;}
2024-10-13 17:02:38,735 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f2b557fa2e8&gt; for transfer request: 0.
2024-10-13 17:02:38,735 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:38,735 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:02:38,735 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:38,735 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:02:38,736 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f2b558baf60&gt;, 'bucket': 'encrypted', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2b5580df98&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f2b5580de80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f2b54692208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f2b5580deb8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f2b54692208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f2b5580d0f0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f2b54692208&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f2b5580dba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f2b54692208&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f2b5580dc50&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-10-13 17:02:38,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f2b57a85e18&gt;
2024-10-13 17:02:38,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f2b57a85d90&gt;
2024-10-13 17:02:38,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f2b558c54e0&gt;&gt;
2024-10-13 17:02:38,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f2b558c5898&gt;&gt;
2024-10-13 17:02:38,736 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f2b57a85bf8&gt;
2024-10-13 17:02:38,737 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f2b57a0c158&gt;
2024-10-13 17:02:38,737 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f2b558c54e0&gt;&gt;
2024-10-13 17:02:38,737 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f2b57a858c8&gt;
2024-10-13 17:02:38,737 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f2b57a0f400&gt;
2024-10-13 17:02:38,737 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/encrypted/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f2b558c5198&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:38,737 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f2b59faf488&gt;
2024-10-13 17:02:38,737 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f2b558c5160&gt;&gt;
2024-10-13 17:02:38,737 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f2b558c5908&gt;&gt;
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f2b57a85ae8&gt;
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f2b558c5908&gt;&gt;
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170238Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170238Z
20241013/us-west-1/s3/aws4_request
66ba9ba85bf4fe7b1fdac4808bacf9532a5657e1ae406ce7bfba3ac55973d322
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
0b7b8364bcbba145d9d5e84a46ab55ecf9346ec5c1c93205b6715933e1a186ae
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f2b59faf510&gt;
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f2b57a0fa60&gt;
2024-10-13 17:02:38,738 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170238Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=0b7b8364bcbba145d9d5e84a46ab55ecf9346ec5c1c93205b6715933e1a186ae', 'amz-sdk-invocation-id': b'50aaca17-acc6-4bb3-af38-148c914ba5f9', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:02:38,739 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:38,760 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/small_file HTTP/1.1" 200 1000000
2024-10-13 17:02:38,760 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:38 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:38 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"a9deac4a69116c1145077246b5a4f761"', 'Last-Modified': 'Sun, 13 Oct 2024 17:02:38 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'gsb76vo6XuerT', 'x-amz-request-id': '0b3f3232-064c-4fba-bd06-106d8acb0255', 'Content-Length': '1000000'}
2024-10-13 17:02:38,760 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f2b54442630&gt;
2024-10-13 17:02:38,761 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f2b558c5518&gt;
2024-10-13 17:02:38,761 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:38,761 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f2b558c54e0&gt;&gt;
2024-10-13 17:02:38,762 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f2b55f4b8c8&gt;
2024-10-13 17:02:38,769 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (7.4 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:38,769 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2024-10-13 17:02:38,770 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2b5580df98&gt;, 'offset': 0}
2024-10-13 17:02:38,778 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (11.7 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:38,778 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2024-10-13 17:02:38,778 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2b5580df98&gt;, 'offset': 262144}
2024-10-13 17:02:38,788 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
Completed 768.0 KiB/976.6 KiB (14.1 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:38,789 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2024-10-13 17:02:38,789 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2b5580df98&gt;, 'offset': 524288}
2024-10-13 17:02:38,802 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 976.6 KiB/976.6 KiB (14.2 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:38,802 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2024-10-13 17:02:38,802 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2b5580df98&gt;, 'offset': 786432}
2024-10-13 17:02:38,803 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2024-10-13 17:02:38,803 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2024-10-13 17:02:38,804 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f2b5580df98&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f2b557fa160&gt;}
2024-10-13 17:02:38,804 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/small_file to ../../tmp/small_file_downloaded
2024-10-13 17:02:38,805 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:02:38.868" endtime="20241013 17:02:38.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:38.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:38.870" endtime="20241013 17:02:38.870"/>
</kw>
<status status="PASS" starttime="20241013 17:02:38.316" endtime="20241013 17:02:38.871"/>
</kw>
<msg timestamp="20241013 17:02:38.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:38.316" endtime="20241013 17:02:38.871"/>
</kw>
<msg timestamp="20241013 17:02:38.872" level="INFO">${output} = 2024-10-13 17:02:38,671 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:38,671 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:38.315" endtime="20241013 17:02:38.872"/>
</kw>
<msg timestamp="20241013 17:02:38.873" level="INFO">${result} = 2024-10-13 17:02:38,671 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:38,671 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:38.315" endtime="20241013 17:02:38.873"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 17:02:38.873" endtime="20241013 17:02:38.874"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 17:02:38.874" endtime="20241013 17:02:38.876"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:38.882" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:39.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:39.355" level="INFO">${output} = delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20241013 17:02:38.878" endtime="20241013 17:02:39.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:39.356" level="INFO">delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20241013 17:02:39.355" endtime="20241013 17:02:39.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:39.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:39.356" endtime="20241013 17:02:39.357"/>
</kw>
<status status="PASS" starttime="20241013 17:02:38.878" endtime="20241013 17:02:39.357"/>
</kw>
<msg timestamp="20241013 17:02:39.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:38.877" endtime="20241013 17:02:39.357"/>
</kw>
<msg timestamp="20241013 17:02:39.357" level="INFO">${output} = delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20241013 17:02:38.876" endtime="20241013 17:02:39.357"/>
</kw>
<status status="PASS" starttime="20241013 17:02:38.876" endtime="20241013 17:02:39.357"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:39.361" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:39.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:39.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:39.359" endtime="20241013 17:02:39.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:39.366" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:39.366" endtime="20241013 17:02:39.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:39.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:39.366" endtime="20241013 17:02:39.367"/>
</kw>
<status status="PASS" starttime="20241013 17:02:39.358" endtime="20241013 17:02:39.367"/>
</kw>
<msg timestamp="20241013 17:02:39.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:39.358" endtime="20241013 17:02:39.367"/>
</kw>
<status status="PASS" starttime="20241013 17:02:39.358" endtime="20241013 17:02:39.367"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:38.302" endtime="20241013 17:02:39.367"/>
</test>
<test id="s1-s5-s14-t19" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="236">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:39.372" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:39.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:39.378" level="INFO">${output} = a9deac4a69116c1145077246b5a4f761</msg>
<status status="PASS" starttime="20241013 17:02:39.370" endtime="20241013 17:02:39.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:39.378" level="INFO">a9deac4a69116c1145077246b5a4f761</msg>
<status status="PASS" starttime="20241013 17:02:39.378" endtime="20241013 17:02:39.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:39.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:39.379" endtime="20241013 17:02:39.379"/>
</kw>
<status status="PASS" starttime="20241013 17:02:39.369" endtime="20241013 17:02:39.379"/>
</kw>
<msg timestamp="20241013 17:02:39.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:39.369" endtime="20241013 17:02:39.380"/>
</kw>
<msg timestamp="20241013 17:02:39.380" level="INFO">${file_md5_checksum} = a9deac4a69116c1145077246b5a4f761</msg>
<status status="PASS" starttime="20241013 17:02:39.369" endtime="20241013 17:02:39.380"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:39.383" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://encrypted/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:39.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:39.915" level="INFO">${output} = 2024-10-13 17:02:39,740 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:39,741 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:39.381" endtime="20241013 17:02:39.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:39.916" level="INFO">2024-10-13 17:02:39,740 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:39,741 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://encrypted/test_file']
2024-10-13 17:02:39,741 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fdc114d4d08&gt;
2024-10-13 17:02:39,741 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fdc1231fa60&gt;
2024-10-13 17:02:39,741 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fdc122fee18&gt;
2024-10-13 17:02:39,743 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:02:39,746 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fdc11606730&gt;
2024-10-13 17:02:39,746 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fdc114df378&gt;
2024-10-13 17:02:39,747 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,747 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fdc114df378&gt;
2024-10-13 17:02:39,748 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,749 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,749 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdc122cd9b0&gt;
2024-10-13 17:02:39,749 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,749 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdc122cd9b0&gt;
2024-10-13 17:02:39,749 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,749 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,749 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,749 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdc122cd9b0&gt;
2024-10-13 17:02:39,750 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,750 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,750 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,750 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,750 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,750 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,750 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,750 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,750 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdc122cd9b0&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdc122cd9b0&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdc122cd9b0&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,752 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdc122cd9b0&gt;
2024-10-13 17:02:39,752 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2024-10-13 17:02:39,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdc113b6f98&gt;
2024-10-13 17:02:39,753 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:02:39,753 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-10-13 17:02:39,754 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:02:39,766 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:02:39,766 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fdc12ffe6a8&gt;
2024-10-13 17:02:39,767 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:02:39,778 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fdc134d9620&gt;
2024-10-13 17:02:39,778 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fdc134d9400&gt;
2024-10-13 17:02:39,778 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:39,780 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:39,781 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:02:39,781 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:39,782 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:39,782 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fdc12ffe6a8&gt;
2024-10-13 17:02:39,783 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fdc134d9620&gt;
2024-10-13 17:02:39,783 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fdc134d9400&gt;
2024-10-13 17:02:39,783 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:39,786 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:39,786 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:39,787 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:39,787 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fdc12ffe6a8&gt;
2024-10-13 17:02:39,788 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fdc134d9620&gt;
2024-10-13 17:02:39,788 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fdc134d9400&gt;
2024-10-13 17:02:39,788 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:39,790 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:39,791 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:39,792 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:39,792 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:02:39,793 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:39,793 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdc10d980b8&gt;}) about to wait for the following futures []
2024-10-13 17:02:39,793 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdc10d980b8&gt;}) done waiting for dependent futures
2024-10-13 17:02:39,794 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdc10d980b8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fdc10e46f60&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fdc10d850f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fdc10d85160&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fdc10d852e8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdc10d980b8&gt;}
2024-10-13 17:02:39,794 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fdc10d852e8&gt; for transfer request: 0.
2024-10-13 17:02:39,795 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:39,795 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2024-10-13 17:02:39,795 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2024-10-13 17:02:39,795 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fdc10e46f60&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fdc10d984a8&gt;, 'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2024-10-13 17:02:39,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fdc12f959d8&gt;
2024-10-13 17:02:39,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fdc1300fe18&gt;
2024-10-13 17:02:39,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fdc12f982f0&gt;
2024-10-13 17:02:39,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fdc1300fd90&gt;
2024-10-13 17:02:39,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fdc10e514e0&gt;&gt;
2024-10-13 17:02:39,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fdc10e51898&gt;&gt;
2024-10-13 17:02:39,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fdc1300fbf8&gt;
2024-10-13 17:02:39,796 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7fdc139b7400&gt;
2024-10-13 17:02:39,797 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:39,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fdc12f95158&gt;
2024-10-13 17:02:39,799 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:02:39,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fdc10e514e0&gt;&gt;
2024-10-13 17:02:39,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fdc1300f8c8&gt;
2024-10-13 17:02:39,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fdc12f98400&gt;
2024-10-13 17:02:39,799 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/encrypted/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'qd6sSmkRbBFFB3JGtaT3YQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fdc10d984a8&gt;, 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fdc10e51198&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:39,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fdc15538488&gt;
2024-10-13 17:02:39,800 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fdc10e51160&gt;&gt;
2024-10-13 17:02:39,800 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fdc10e51908&gt;&gt;
2024-10-13 17:02:39,800 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fdc1300fae8&gt;
2024-10-13 17:02:39,800 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fdc10e51908&gt;&gt;
2024-10-13 17:02:39,800 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:39,801 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:39,802 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_file

content-md5:qd6sSmkRbBFFB3JGtaT3YQ==
host:s3g:9878
x-amz-content-sha256:b7aa59731684f4b4a2e602488536752ae57687b3b7209faff52690eef5c52a8f
x-amz-date:20241013T170239Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
b7aa59731684f4b4a2e602488536752ae57687b3b7209faff52690eef5c52a8f
2024-10-13 17:02:39,802 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170239Z
20241013/us-west-1/s3/aws4_request
55477e2eae6f5d7668ab5d8df4b9737196e935c627f38a853d68e4d90fbd4434
2024-10-13 17:02:39,802 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
2831bb6dbe6be1d3d497eef1646910ee51946fec598acbc61df89b72a6e88f77
2024-10-13 17:02:39,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fdc15538510&gt;
2024-10-13 17:02:39,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fdc12f98a60&gt;
2024-10-13 17:02:39,802 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'qd6sSmkRbBFFB3JGtaT3YQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170239Z', 'X-Amz-Content-SHA256': b'b7aa59731684f4b4a2e602488536752ae57687b3b7209faff52690eef5c52a8f', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=2831bb6dbe6be1d3d497eef1646910ee51946fec598acbc61df89b72a6e88f77', 'amz-sdk-invocation-id': b'ae00866a-3c9d-4cca-b51f-6d6577ee65e8', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2024-10-13 17:02:39,803 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:39,804 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:02:39,827 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (7.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (14.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (21.4 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:39,860 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_file HTTP/1.1" 200 0
2024-10-13 17:02:39,861 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:39 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:39 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"a9deac4a69116c1145077246b5a4f761"', 'Server': 'Ozone', 'x-amz-id-2': '5wUanHSHIF', 'x-amz-request-id': '68a96a97-1bd1-41f0-a691-bb3601edbcfc', 'Content-Length': '0'}
2024-10-13 17:02:39,861 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:02:39,862 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fdc10e51518&gt;
2024-10-13 17:02:39,862 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:39,862 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fdc10e514e0&gt;&gt;
2024-10-13 17:02:39,862 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fdc114d48c8&gt;
Completed 976.6 KiB/976.6 KiB (14.1 MiB/s) with 1 file(s) remaining
upload: ../../tmp/small_file to s3://encrypted/test_file           
2024-10-13 17:02:39,863 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:39,864 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:02:39.916" endtime="20241013 17:02:39.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:39.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:39.917" endtime="20241013 17:02:39.917"/>
</kw>
<status status="PASS" starttime="20241013 17:02:39.381" endtime="20241013 17:02:39.918"/>
</kw>
<msg timestamp="20241013 17:02:39.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:39.381" endtime="20241013 17:02:39.918"/>
</kw>
<msg timestamp="20241013 17:02:39.919" level="INFO">${output} = 2024-10-13 17:02:39,740 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:39,741 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:39.380" endtime="20241013 17:02:39.919"/>
</kw>
<status status="PASS" starttime="20241013 17:02:39.380" endtime="20241013 17:02:39.919"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:39.924" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:40.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:40.445" level="INFO">${output} = 2024-10-13 17:02:40,288 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:40,289 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:39.921" endtime="20241013 17:02:40.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:40.447" level="INFO">2024-10-13 17:02:40,288 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:40,289 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/test_file', '/tmp/test_file_downloaded']
2024-10-13 17:02:40,289 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fa9b1a0bd08&gt;
2024-10-13 17:02:40,289 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fa9b2856a60&gt;
2024-10-13 17:02:40,289 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fa9b2835e18&gt;
2024-10-13 17:02:40,291 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:02:40,294 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fa9b1b3d730&gt;
2024-10-13 17:02:40,294 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fa9b1a17378&gt;
2024-10-13 17:02:40,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,295 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fa9b1a17378&gt;
2024-10-13 17:02:40,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,297 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa9b2804a20&gt;
2024-10-13 17:02:40,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,297 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa9b2804a20&gt;
2024-10-13 17:02:40,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,297 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa9b2804a20&gt;
2024-10-13 17:02:40,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,298 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,298 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,298 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,298 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,298 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,298 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,298 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,298 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,299 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,299 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,299 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,299 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,299 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,299 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,299 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,299 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa9b2804a20&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa9b2804a20&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa9b2804a20&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,300 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,301 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,301 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,301 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa9b9b03a58&gt;
2024-10-13 17:02:40,301 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:02:40,301 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-10-13 17:02:40,302 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:02:40,314 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:02:40,314 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa9b35346a8&gt;
2024-10-13 17:02:40,316 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:02:40,326 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa9b3a10620&gt;
2024-10-13 17:02:40,326 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa9b3a10400&gt;
2024-10-13 17:02:40,326 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:40,329 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:40,330 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:02:40,330 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:40,331 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:40,331 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa9b35346a8&gt;
2024-10-13 17:02:40,332 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa9b3a10620&gt;
2024-10-13 17:02:40,332 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa9b3a10400&gt;
2024-10-13 17:02:40,332 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:40,334 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:40,335 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:40,335 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:40,335 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa9b35346a8&gt;
2024-10-13 17:02:40,337 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa9b3a10620&gt;
2024-10-13 17:02:40,337 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa9b3a10400&gt;
2024-10-13 17:02:40,337 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:40,339 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:40,340 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:40,340 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:40,341 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:02:40,341 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fa9b3545e18&gt;
2024-10-13 17:02:40,341 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fa9b3545d90&gt;
2024-10-13 17:02:40,341 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa9b12eaa58&gt;&gt;
2024-10-13 17:02:40,341 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa9b12eae10&gt;&gt;
2024-10-13 17:02:40,342 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa9b3545bf8&gt;
2024-10-13 17:02:40,342 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fa9b34cc158&gt;
2024-10-13 17:02:40,342 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa9b12eaa58&gt;&gt;
2024-10-13 17:02:40,342 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fa9b35458c8&gt;
2024-10-13 17:02:40,342 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa9b34cf400&gt;
2024-10-13 17:02:40,342 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/encrypted/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa9b12ea710&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:40,343 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa9b12ea6d8&gt;&gt;
2024-10-13 17:02:40,343 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa9b12eae80&gt;&gt;
2024-10-13 17:02:40,343 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fa9b3545ae8&gt;
2024-10-13 17:02:40,343 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa9b12eae80&gt;&gt;
2024-10-13 17:02:40,343 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:40,343 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:40,343 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170240Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:02:40,343 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170240Z
20241013/us-west-1/s3/aws4_request
f57355603844ec057fcc814ef7bd5dd2f26da0041eb2e0e433f6c1cc25c45a5f
2024-10-13 17:02:40,344 - MainThread - botocore.auth - DEBUG - Signature:
3327a7b05237e5514afdf36064ba4208269047dc06d83804221848efeb75eea4
2024-10-13 17:02:40,344 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fa9b34cfa60&gt;
2024-10-13 17:02:40,344 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170240Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=3327a7b05237e5514afdf36064ba4208269047dc06d83804221848efeb75eea4', 'amz-sdk-invocation-id': b'fff37703-5b80-4e51-8ae1-ebf230d749c3', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:02:40,345 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:40,351 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/test_file HTTP/1.1" 200 0
2024-10-13 17:02:40,351 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:40 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:40 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"a9deac4a69116c1145077246b5a4f761"', 'Last-Modified': 'Sun, 13 Oct 2024 17:02:39 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': 'gHVz4eyy', 'x-amz-request-id': 'b2052f3f-6de8-475c-b714-074cdd603282', 'Content-Length': '1000000'}
2024-10-13 17:02:40,351 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:02:40,352 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa9b12eaa90&gt;
2024-10-13 17:02:40,352 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:40,352 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa9b12eaa58&gt;&gt;
2024-10-13 17:02:40,352 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fa9b1a0b8c8&gt;
2024-10-13 17:02:40,353 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:40,354 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa9b0152208&gt;}) about to wait for the following futures []
2024-10-13 17:02:40,354 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa9b0152208&gt;}) done waiting for dependent futures
2024-10-13 17:02:40,354 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa9b0152208&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa9b137af60&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fa9b12ba0f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa9b12ba160&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa9b12ba2e8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa9b0152208&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa9b12ba6d8&gt;}
2024-10-13 17:02:40,354 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa9b12ba2e8&gt; for transfer request: 0.
2024-10-13 17:02:40,355 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:40,355 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:02:40,355 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:02:40,355 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa9b137af60&gt;, 'bucket': 'encrypted', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa9b12cec50&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fa9b12cee80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa9b0152208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fa9b12ceeb8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa9b0152208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fa9b12ce0f0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa9b0152208&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fa9b12ceba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa9b0152208&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fa9b12cef98&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-10-13 17:02:40,355 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fa9b3545e18&gt;
2024-10-13 17:02:40,356 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fa9b3545d90&gt;
2024-10-13 17:02:40,356 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa9b13854e0&gt;&gt;
2024-10-13 17:02:40,356 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa9b1385898&gt;&gt;
2024-10-13 17:02:40,356 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa9b3545bf8&gt;
2024-10-13 17:02:40,356 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fa9b34cc158&gt;
2024-10-13 17:02:40,356 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa9b13854e0&gt;&gt;
2024-10-13 17:02:40,355 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:40,356 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fa9b35458c8&gt;
2024-10-13 17:02:40,357 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa9b34cf400&gt;
2024-10-13 17:02:40,357 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/encrypted/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa9b1385198&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:40,357 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fa9b5a6f488&gt;
2024-10-13 17:02:40,357 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa9b1385160&gt;&gt;
2024-10-13 17:02:40,357 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa9b1385908&gt;&gt;
2024-10-13 17:02:40,357 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fa9b3545ae8&gt;
2024-10-13 17:02:40,358 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa9b1385908&gt;&gt;
2024-10-13 17:02:40,358 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:40,358 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:40,358 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170240Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:02:40,358 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170240Z
20241013/us-west-1/s3/aws4_request
37a0cdaef6897b67bdcc0837d60d64530d3aafba1a224a46357833209b31390b
2024-10-13 17:02:40,358 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
ee44f977b47da959bdf20729c5af05d21d5fd226c117393ffe1d47f564879728
2024-10-13 17:02:40,358 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fa9b5a6f510&gt;
2024-10-13 17:02:40,358 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fa9b34cfa60&gt;
2024-10-13 17:02:40,358 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170240Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=ee44f977b47da959bdf20729c5af05d21d5fd226c117393ffe1d47f564879728', 'amz-sdk-invocation-id': b'7cc0504a-c16e-46bc-86bc-ba404fb73bd8', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:02:40,359 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:40,371 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/test_file HTTP/1.1" 200 1000000
2024-10-13 17:02:40,371 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:40 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:40 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"a9deac4a69116c1145077246b5a4f761"', 'Last-Modified': 'Sun, 13 Oct 2024 17:02:39 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'pkxQzjoEU', 'x-amz-request-id': '82cb95d3-ca7b-487c-85e5-af03350d15d9', 'Content-Length': '1000000'}
2024-10-13 17:02:40,371 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fa9b0115668&gt;
2024-10-13 17:02:40,372 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa9b1385518&gt;
2024-10-13 17:02:40,372 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:40,373 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa9b13854e0&gt;&gt;
2024-10-13 17:02:40,373 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fa9b1a0b8c8&gt;
2024-10-13 17:02:40,379 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (10.2 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:40,379 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2024-10-13 17:02:40,380 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa9b12cec50&gt;, 'offset': 0}
2024-10-13 17:02:40,388 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (14.7 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:40,389 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2024-10-13 17:02:40,389 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa9b12cec50&gt;, 'offset': 262144}
2024-10-13 17:02:40,397 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2024-10-13 17:02:40,398 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2024-10-13 17:02:40,398 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa9b12cec50&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (17.4 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:40,405 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 976.6 KiB/976.6 KiB (18.7 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:40,406 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2024-10-13 17:02:40,406 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa9b12cec50&gt;, 'offset': 786432}
2024-10-13 17:02:40,406 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2024-10-13 17:02:40,406 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2024-10-13 17:02:40,407 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa9b12cec50&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa9b12ba160&gt;}
2024-10-13 17:02:40,407 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/test_file to ../../tmp/test_file_downloaded
2024-10-13 17:02:40,407 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:02:40.446" endtime="20241013 17:02:40.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:40.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:40.447" endtime="20241013 17:02:40.448"/>
</kw>
<status status="PASS" starttime="20241013 17:02:39.920" endtime="20241013 17:02:40.448"/>
</kw>
<msg timestamp="20241013 17:02:40.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:39.920" endtime="20241013 17:02:40.448"/>
</kw>
<msg timestamp="20241013 17:02:40.449" level="INFO">${output} = 2024-10-13 17:02:40,288 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:40,289 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:39.920" endtime="20241013 17:02:40.449"/>
</kw>
<msg timestamp="20241013 17:02:40.449" level="INFO">${result} = 2024-10-13 17:02:40,288 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:40,289 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:39.919" endtime="20241013 17:02:40.449"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:02:40.450" level="INFO">${match} = HEAD /encrypted/test_file HTTP/1.1" 200 0
2024-10-13 17:02:40,351 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:40 GMT', 'Cache-Control': 'no-cache', 'Ex...</msg>
<msg timestamp="20241013 17:02:40.451" level="INFO">${ETag} = a9deac4a69116c1145077246b5a4f761</msg>
<msg timestamp="20241013 17:02:40.451" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20241013 17:02:40.449" endtime="20241013 17:02:40.451"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:02:40.451" endtime="20241013 17:02:40.451"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:02:40.451" endtime="20241013 17:02:40.452"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:02:40.452" endtime="20241013 17:02:40.452"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:40.456" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:40.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:40.891" level="INFO">${output} = delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20241013 17:02:40.454" endtime="20241013 17:02:40.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:40.893" level="INFO">delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20241013 17:02:40.892" endtime="20241013 17:02:40.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:40.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:40.893" endtime="20241013 17:02:40.893"/>
</kw>
<status status="PASS" starttime="20241013 17:02:40.453" endtime="20241013 17:02:40.893"/>
</kw>
<msg timestamp="20241013 17:02:40.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:40.453" endtime="20241013 17:02:40.894"/>
</kw>
<msg timestamp="20241013 17:02:40.894" level="INFO">${output} = delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20241013 17:02:40.453" endtime="20241013 17:02:40.894"/>
</kw>
<status status="PASS" starttime="20241013 17:02:40.452" endtime="20241013 17:02:40.894"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:40.897" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:40.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:40.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:40.895" endtime="20241013 17:02:40.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:40.902" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:40.902" endtime="20241013 17:02:40.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:40.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:40.903" endtime="20241013 17:02:40.903"/>
</kw>
<status status="PASS" starttime="20241013 17:02:40.895" endtime="20241013 17:02:40.903"/>
</kw>
<msg timestamp="20241013 17:02:40.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:40.894" endtime="20241013 17:02:40.903"/>
</kw>
<status status="PASS" starttime="20241013 17:02:40.894" endtime="20241013 17:02:40.903"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:40.907" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:40.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:40.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:40.905" endtime="20241013 17:02:40.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:40.912" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:40.911" endtime="20241013 17:02:40.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:40.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:40.912" endtime="20241013 17:02:40.912"/>
</kw>
<status status="PASS" starttime="20241013 17:02:40.904" endtime="20241013 17:02:40.912"/>
</kw>
<msg timestamp="20241013 17:02:40.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:40.904" endtime="20241013 17:02:40.913"/>
</kw>
<status status="PASS" starttime="20241013 17:02:40.904" endtime="20241013 17:02:40.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:39.368" endtime="20241013 17:02:40.913"/>
</test>
<test id="s1-s5-s14-t20" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="249">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:40.917" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20241013 17:02:40.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:40.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:40.915" endtime="20241013 17:02:40.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:40.969" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:40.969" endtime="20241013 17:02:40.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:40.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:40.969" endtime="20241013 17:02:40.970"/>
</kw>
<status status="PASS" starttime="20241013 17:02:40.915" endtime="20241013 17:02:40.970"/>
</kw>
<msg timestamp="20241013 17:02:40.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:40.914" endtime="20241013 17:02:40.970"/>
</kw>
<status status="PASS" starttime="20241013 17:02:40.914" endtime="20241013 17:02:40.970"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:40.974" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:41.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:41.784" level="INFO">${output} = 2024-10-13 17:02:41,315 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:41,316 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:40.972" endtime="20241013 17:02:41.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:41.785" level="INFO">2024-10-13 17:02:41,315 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:41,316 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://encrypted/']
2024-10-13 17:02:41,316 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f94a9ddcd08&gt;
2024-10-13 17:02:41,316 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f94aac27a60&gt;
2024-10-13 17:02:41,316 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f94aac06e18&gt;
2024-10-13 17:02:41,318 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:02:41,322 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f94a9f0e730&gt;
2024-10-13 17:02:41,323 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f94a9de8378&gt;
2024-10-13 17:02:41,323 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,323 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f94a9de8378&gt;
2024-10-13 17:02:41,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,325 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f94aabd59b0&gt;
2024-10-13 17:02:41,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,326 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f94aabd59b0&gt;
2024-10-13 17:02:41,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,326 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f94aabd59b0&gt;
2024-10-13 17:02:41,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,328 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,329 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f94aabd59b0&gt;
2024-10-13 17:02:41,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,329 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f94aabd59b0&gt;
2024-10-13 17:02:41,329 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,329 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f94aabd59b0&gt;
2024-10-13 17:02:41,330 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,330 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,330 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,330 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,330 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f94a9cbdfd0&gt;
2024-10-13 17:02:41,330 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:02:41,330 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-10-13 17:02:41,331 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:02:41,345 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:02:41,345 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f94ab9066a8&gt;
2024-10-13 17:02:41,346 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:02:41,356 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f94abde1620&gt;
2024-10-13 17:02:41,356 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f94abde1400&gt;
2024-10-13 17:02:41,357 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:41,359 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:41,360 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:02:41,360 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:41,361 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:41,361 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f94ab9066a8&gt;
2024-10-13 17:02:41,362 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f94abde1620&gt;
2024-10-13 17:02:41,362 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f94abde1400&gt;
2024-10-13 17:02:41,362 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:41,364 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:41,365 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:41,366 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:41,366 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f94ab9066a8&gt;
2024-10-13 17:02:41,367 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f94abde1620&gt;
2024-10-13 17:02:41,367 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f94abde1400&gt;
2024-10-13 17:02:41,367 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:41,369 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:41,370 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:41,371 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:41,371 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:02:41,372 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:41,373 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f94a969f048&gt;}) about to wait for the following futures []
2024-10-13 17:02:41,373 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f94a969f048&gt;}) done waiting for dependent futures
2024-10-13 17:02:41,373 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f94a969f048&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f94a974bef0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f94a968b080&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f94a968b0f0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f94a968b278&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f94a969f048&gt;}
2024-10-13 17:02:41,374 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f94a968b278&gt; for transfer request: 0.
2024-10-13 17:02:41,374 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:41,374 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:02:41,374 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f94a968b278&gt; for transfer request: 0.
2024-10-13 17:02:41,374 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:02:41,375 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:41,375 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f94a974bef0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}
2024-10-13 17:02:41,375 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f94ab89d9d8&gt;
2024-10-13 17:02:41,375 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f94ab917e18&gt;
2024-10-13 17:02:41,375 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f94ab917d90&gt;
2024-10-13 17:02:41,375 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,375 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f94a9756828&gt;&gt;
2024-10-13 17:02:41,376 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f94ab917bf8&gt;
2024-10-13 17:02:41,376 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f94ab89d158&gt;
2024-10-13 17:02:41,376 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,376 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f94ab9178c8&gt;
2024-10-13 17:02:41,376 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f94ab8a0400&gt;
2024-10-13 17:02:41,376 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/encrypted/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f94a9756128&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:41,377 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f94a969f6a0&gt;]
2024-10-13 17:02:41,377 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f94ade40488&gt;
2024-10-13 17:02:41,377 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f94a968b278&gt; for transfer request: 0.
2024-10-13 17:02:41,377 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:41,377 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f94a97560f0&gt;&gt;
2024-10-13 17:02:41,378 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f94a9756898&gt;&gt;
2024-10-13 17:02:41,377 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f94a969f6a0&gt;
2024-10-13 17:02:41,378 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f94ab917ae8&gt;
2024-10-13 17:02:41,378 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f94a969f6a0&gt;]
2024-10-13 17:02:41,378 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f94a9756898&gt;&gt;
2024-10-13 17:02:41,378 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:41,379 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:41,378 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f94a968b278&gt; for transfer request: 0.
2024-10-13 17:02:41,379 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170241Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:02:41,379 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170241Z
20241013/us-west-1/s3/aws4_request
441a8dee710b69b7cd77e8abadc12ff4bf2cb20d0568603874368fc9fc6c343c
2024-10-13 17:02:41,379 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
6f247bb2d1ea0dd64d92b120727ff49264008ec3b1dbaac66d44d8029ed8e36c
2024-10-13 17:02:41,378 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f94a969f6a0&gt;
2024-10-13 17:02:41,379 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f94ade40510&gt;
2024-10-13 17:02:41,379 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:41,380 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f94ab8a0a60&gt;
2024-10-13 17:02:41,380 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploads, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170241Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=6f247bb2d1ea0dd64d92b120727ff49264008ec3b1dbaac66d44d8029ed8e36c', 'amz-sdk-invocation-id': b'b5751cb7-39b9-4a4d-9278-ee8601263406', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2024-10-13 17:02:41,380 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f94a969f6a0&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f94a85236d8&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f94a85231d0&gt;]
2024-10-13 17:02:41,381 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:41,381 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:41,381 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f94a969f6a0&gt;
2024-10-13 17:02:41,393 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploads HTTP/1.1" 200 287
2024-10-13 17:02:41,393 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'b3KcV0p3TRPCm', 'x-amz-request-id': '6dbbe71f-28ac-4005-b23d-3c7f749cc65c', 'Content-Length': '287'}
2024-10-13 17:02:41,393 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2024-10-13 17:02:41,394 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f94a97564a8&gt;
2024-10-13 17:02:41,394 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:41,394 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,394 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f94a9ddc8c8&gt;
2024-10-13 17:02:41,394 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:41,394 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:02:41,395 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:02:41,395 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f94a974bef0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f94a85237f0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855'}
2024-10-13 17:02:41,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f94ab917e18&gt;
2024-10-13 17:02:41,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f94ab8a02f0&gt;
2024-10-13 17:02:41,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f94ab917d90&gt;
2024-10-13 17:02:41,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,396 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f94a9756828&gt;&gt;
2024-10-13 17:02:41,396 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f94ab917bf8&gt;
2024-10-13 17:02:41,396 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f94ac2bf400&gt;
2024-10-13 17:02:41,395 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f94a974bef0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f94a969f7f0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855'}
2024-10-13 17:02:41,398 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f94ab917e18&gt;
2024-10-13 17:02:41,399 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f94ab8a02f0&gt;
2024-10-13 17:02:41,399 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f94ab917d90&gt;
2024-10-13 17:02:41,399 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,399 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f94a9756828&gt;&gt;
2024-10-13 17:02:41,399 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f94ab917bf8&gt;
2024-10-13 17:02:41,399 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f94ac2bf400&gt;
2024-10-13 17:02:41,400 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f94ab89d158&gt;
2024-10-13 17:02:41,400 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:02:41,400 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,400 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f94ab9178c8&gt;
2024-10-13 17:02:41,400 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f94ab8a0400&gt;
2024-10-13 17:02:41,400 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/encrypted/big_file', 'query_string': {'uploadId': '682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'aRRbwSfAdXKSP0cI27BerA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f94a85237f0&gt;, 'url': 'http://s3g:9878/encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f94a9756128&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:41,401 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f94ade40488&gt;
2024-10-13 17:02:41,401 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f94a97560f0&gt;&gt;
2024-10-13 17:02:41,401 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f94a9756898&gt;&gt;
2024-10-13 17:02:41,401 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f94ab917ae8&gt;
2024-10-13 17:02:41,401 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f94a9756898&gt;&gt;
2024-10-13 17:02:41,404 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:41,404 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=2&amp;uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855
content-md5:aRRbwSfAdXKSP0cI27BerA==
host:s3g:9878
x-amz-content-sha256:56e638a686e01fa5f08a646f6d7e228b6dca969dcc5f242690dd08fbd185dc52
x-amz-date:20241013T170241Z

content-md5;host;x-amz-content-sha256;x-amz-date
56e638a686e01fa5f08a646f6d7e228b6dca969dcc5f242690dd08fbd185dc52
2024-10-13 17:02:41,404 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170241Z
20241013/us-west-1/s3/aws4_request
e00f386494b00178fd8f92e6ba8adec11f2cb1a68e2701a6c4bc47b36026a0fd
2024-10-13 17:02:41,404 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
86fda61f69ba943178ccbea709c9730bd67d79e2519bea13b814e73d06ca3c10
2024-10-13 17:02:41,404 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f94ade40510&gt;
2024-10-13 17:02:41,404 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f94ab8a0a60&gt;
2024-10-13 17:02:41,404 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'aRRbwSfAdXKSP0cI27BerA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170241Z', 'X-Amz-Content-SHA256': b'56e638a686e01fa5f08a646f6d7e228b6dca969dcc5f242690dd08fbd185dc52', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=86fda61f69ba943178ccbea709c9730bd67d79e2519bea13b814e73d06ca3c10', 'amz-sdk-invocation-id': b'5368fd18-1c45-4d06-a609-d29110e080ce', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2024-10-13 17:02:41,395 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f94a85236d8&gt;
2024-10-13 17:02:41,408 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:02:41,420 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f94ab89d158&gt;
2024-10-13 17:02:41,420 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:02:41,420 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,420 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f94ab9178c8&gt;
2024-10-13 17:02:41,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f94ab8a0400&gt;
2024-10-13 17:02:41,421 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/encrypted/big_file', 'query_string': {'uploadId': '682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': '3JbG81dcZjFXJLqAry/wZA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f94a969f7f0&gt;, 'url': 'http://s3g:9878/encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f94a9756128&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:41,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f94ade40488&gt;
2024-10-13 17:02:41,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f94a97560f0&gt;&gt;
2024-10-13 17:02:41,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f94a9756898&gt;&gt;
2024-10-13 17:02:41,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f94ab917ae8&gt;
2024-10-13 17:02:41,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f94a9756898&gt;&gt;
2024-10-13 17:02:41,422 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (5.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (10.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (14.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (19.5 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (24.1 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (28.4 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:41,440 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:41,441 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=1&amp;uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855
content-md5:3JbG81dcZjFXJLqAry/wZA==
host:s3g:9878
x-amz-content-sha256:4d7d7749e43fc1c31057a1be38e4b43e72633f2a98ef21eb3e046528b021613b
x-amz-date:20241013T170241Z

content-md5;host;x-amz-content-sha256;x-amz-date
4d7d7749e43fc1c31057a1be38e4b43e72633f2a98ef21eb3e046528b021613b
2024-10-13 17:02:41,441 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170241Z
20241013/us-west-1/s3/aws4_request
1e5497a0ae4f629e958d316b5a4bf63b65dd12781eb0fbc90fe00073e1cfce82
2024-10-13 17:02:41,441 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
50c3009e40c081c50743b6e3840322a0f91fb40526b5bf389b3195a400ca430f
2024-10-13 17:02:41,441 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f94ade40510&gt;
2024-10-13 17:02:41,441 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f94ab8a0a60&gt;
2024-10-13 17:02:41,442 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'3JbG81dcZjFXJLqAry/wZA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170241Z', 'X-Amz-Content-SHA256': b'4d7d7749e43fc1c31057a1be38e4b43e72633f2a98ef21eb3e046528b021613b', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=50c3009e40c081c50743b6e3840322a0f91fb40526b5bf389b3195a400ca430f', 'amz-sdk-invocation-id': b'0457da1f-8eea-4a76-9010-bac8352dd1a7', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2024-10-13 17:02:41,442 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2024-10-13 17:02:41,443 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:02:41,481 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (16.2 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (18.4 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (20.6 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (22.5 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (24.6 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (26.6 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (24.6 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (26.3 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (27.8 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (29.5 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (30.1 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (31.7 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (33.3 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (34.8 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (36.4 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (37.9 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (39.5 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (41.0 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (42.0 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (43.5 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (44.9 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (46.4 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (47.5 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (49.0 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (50.4 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (51.8 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (53.2 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (54.5 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (55.9 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:41,531 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855&amp;partNumber=2 HTTP/1.1" 200 0
2024-10-13 17:02:41,532 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '69145bc127c07572923f4708dbb05eac', 'Server': 'Ozone', 'x-amz-id-2': 'FBKhNcXMEQY', 'x-amz-request-id': 'b80a1078-00f6-4bf6-a46e-61252ba8279b', 'Content-Length': '0'}
2024-10-13 17:02:41,532 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:02:41,533 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f94a97564a8&gt;
2024-10-13 17:02:41,533 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:41,533 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,533 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f94a9ddc8c8&gt;
2024-10-13 17:02:41,535 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.8 MiB/9.5 MiB (55.2 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (52.6 MiB/s) with 1 file(s) remaining  
Completed 9.3 MiB/9.5 MiB (53.8 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (54.8 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:41,693 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855&amp;partNumber=1 HTTP/1.1" 200 0
2024-10-13 17:02:41,693 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'dc96c6f3575c66315724ba80af2ff064', 'Server': 'Ozone', 'x-amz-id-2': 'tOlHV6HXdda', 'x-amz-request-id': '29684051-08d2-4681-8a11-840a0b366c4f', 'Content-Length': '0'}
2024-10-13 17:02:41,693 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:02:41,694 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f94a97564a8&gt;
2024-10-13 17:02:41,694 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:41,694 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,694 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f94a9ddc8c8&gt;
2024-10-13 17:02:41,694 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:41,694 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f94a85231d0&gt;
2024-10-13 17:02:41,694 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:02:41,695 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f94a974bef0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}, 'upload_id': '682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855', 'parts': [{'ETag': 'dc96c6f3575c66315724ba80af2ff064', 'PartNumber': 1}, {'ETag': '69145bc127c07572923f4708dbb05eac', 'PartNumber': 2}]}
2024-10-13 17:02:41,695 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f94ab917d90&gt;
2024-10-13 17:02:41,695 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,695 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f94a9756828&gt;&gt;
2024-10-13 17:02:41,695 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f94ab917bf8&gt;
2024-10-13 17:02:41,696 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f94ab89d158&gt;
2024-10-13 17:02:41,696 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,696 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f94ab9178c8&gt;
2024-10-13 17:02:41,696 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f94ab8a0400&gt;
2024-10-13 17:02:41,696 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/encrypted/big_file', 'query_string': {'uploadId': '682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;dc96c6f3575c66315724ba80af2ff064&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;69145bc127c07572923f4708dbb05eac&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f94a9756128&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:41,697 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f94ade40488&gt;
2024-10-13 17:02:41,697 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f94a97560f0&gt;&gt;
2024-10-13 17:02:41,697 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f94a9756898&gt;&gt;
2024-10-13 17:02:41,697 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f94ab917ae8&gt;
2024-10-13 17:02:41,697 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f94a9756898&gt;&gt;
2024-10-13 17:02:41,698 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:41,698 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855
host:s3g:9878
x-amz-content-sha256:ef24190efb1e6030af14db435d97fcbeb03fb757f7eab450f91c7b2502b4a0dd
x-amz-date:20241013T170241Z

host;x-amz-content-sha256;x-amz-date
ef24190efb1e6030af14db435d97fcbeb03fb757f7eab450f91c7b2502b4a0dd
2024-10-13 17:02:41,698 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170241Z
20241013/us-west-1/s3/aws4_request
1e8983d075f449a25ea13ebec3ab153f285106f840230713793d3b9b6f039db5
2024-10-13 17:02:41,698 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
d7030b2de6f456cef8e71f43652a47770b738a1dd321acdff9bfad328fbcfc99
2024-10-13 17:02:41,698 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f94ade40510&gt;
2024-10-13 17:02:41,698 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f94ab8a0a60&gt;
2024-10-13 17:02:41,698 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170241Z', 'X-Amz-Content-SHA256': b'ef24190efb1e6030af14db435d97fcbeb03fb757f7eab450f91c7b2502b4a0dd', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=d7030b2de6f456cef8e71f43652a47770b738a1dd321acdff9bfad328fbcfc99', 'amz-sdk-invocation-id': b'b0e8f27c-b119-4022-a550-d8414ac6567f', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2024-10-13 17:02:41,717 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855 HTTP/1.1" 200 290
2024-10-13 17:02:41,717 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'csUpwRPlY', 'x-amz-request-id': '00224628-7cd4-49c3-9855-0d18d4cf2b13', 'Content-Length': '290'}
2024-10-13 17:02:41,717 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;encrypted&lt;/Location&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"b88b44dc673c3fbf5c3a8a4c62e75163-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2024-10-13 17:02:41,719 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function check_for_200_error at 0x7f94ab9179d8&gt;
2024-10-13 17:02:41,719 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f94a97564a8&gt;
2024-10-13 17:02:41,719 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:41,719 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f94a9756470&gt;&gt;
2024-10-13 17:02:41,719 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f94a9ddc8c8&gt;
2024-10-13 17:02:41,720 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://encrypted/big_file            
2024-10-13 17:02:41,721 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:02:41.784" endtime="20241013 17:02:41.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:41.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:41.786" endtime="20241013 17:02:41.786"/>
</kw>
<status status="PASS" starttime="20241013 17:02:40.971" endtime="20241013 17:02:41.786"/>
</kw>
<msg timestamp="20241013 17:02:41.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:40.971" endtime="20241013 17:02:41.787"/>
</kw>
<msg timestamp="20241013 17:02:41.788" level="INFO">${output} = 2024-10-13 17:02:41,315 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:41,316 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:40.971" endtime="20241013 17:02:41.788"/>
</kw>
<msg timestamp="20241013 17:02:41.788" level="INFO">${result} = 2024-10-13 17:02:41,315 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:41,316 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:40.970" endtime="20241013 17:02:41.788"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:02:41.790" level="INFO">${match} = POST /encrypted/big_file?uploadId=682ab924-d960-4481-b4ab-23a70d3411dc-113301190173462855 HTTP/1.1" 200 290
2024-10-13 17:02:41,717 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response heade...</msg>
<msg timestamp="20241013 17:02:41.790" level="INFO">${etag1} = b88b44dc673c3fbf5c3a8a4c62e75163-2</msg>
<status status="PASS" starttime="20241013 17:02:41.789" endtime="20241013 17:02:41.790"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:41.794" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:43.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:43.176" level="INFO">${output} = 2024-10-13 17:02:42,141 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:42,142 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:41.791" endtime="20241013 17:02:43.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:43.177" level="INFO">2024-10-13 17:02:42,141 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:42,142 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/big_file', '/tmp/big_file_downloaded']
2024-10-13 17:02:42,142 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f120523dd08&gt;
2024-10-13 17:02:42,142 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f1206088a60&gt;
2024-10-13 17:02:42,142 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f1206067e18&gt;
2024-10-13 17:02:42,143 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:02:42,147 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f120536f730&gt;
2024-10-13 17:02:42,147 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f1205249378&gt;
2024-10-13 17:02:42,148 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,148 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f1205249378&gt;
2024-10-13 17:02:42,149 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,149 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,149 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1206036a20&gt;
2024-10-13 17:02:42,149 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,150 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1206036a20&gt;
2024-10-13 17:02:42,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,150 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1206036a20&gt;
2024-10-13 17:02:42,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,150 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,151 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,151 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,151 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,151 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,151 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,151 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,151 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,151 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,151 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1206036a20&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,152 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1206036a20&gt;
2024-10-13 17:02:42,153 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,153 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1206036a20&gt;
2024-10-13 17:02:42,153 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,153 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,153 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,153 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,153 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f120d335a58&gt;
2024-10-13 17:02:42,153 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:02:42,153 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-10-13 17:02:42,154 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:02:42,166 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:02:42,166 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1206d666a8&gt;
2024-10-13 17:02:42,167 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:02:42,177 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1207242620&gt;
2024-10-13 17:02:42,177 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1207242400&gt;
2024-10-13 17:02:42,177 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:42,180 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:42,180 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:02:42,181 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:42,182 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:42,182 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1206d666a8&gt;
2024-10-13 17:02:42,183 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1207242620&gt;
2024-10-13 17:02:42,183 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1207242400&gt;
2024-10-13 17:02:42,183 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:42,185 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:42,186 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:42,186 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:42,187 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1206d666a8&gt;
2024-10-13 17:02:42,188 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1207242620&gt;
2024-10-13 17:02:42,188 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1207242400&gt;
2024-10-13 17:02:42,188 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:42,190 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:42,191 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:42,191 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:42,192 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:02:42,192 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f1206d78e18&gt;
2024-10-13 17:02:42,192 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f1206d78d90&gt;
2024-10-13 17:02:42,192 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f1204b1ca58&gt;&gt;
2024-10-13 17:02:42,192 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f1204b1ce10&gt;&gt;
2024-10-13 17:02:42,193 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f1206d78bf8&gt;
2024-10-13 17:02:42,193 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f1206cfe158&gt;
2024-10-13 17:02:42,193 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f1204b1ca58&gt;&gt;
2024-10-13 17:02:42,193 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f1206d788c8&gt;
2024-10-13 17:02:42,193 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1206d01400&gt;
2024-10-13 17:02:42,193 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/encrypted/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1204b1c710&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:42,194 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1204b1c6d8&gt;&gt;
2024-10-13 17:02:42,194 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f1204b1ce80&gt;&gt;
2024-10-13 17:02:42,194 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f1206d78ae8&gt;
2024-10-13 17:02:42,194 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f1204b1ce80&gt;&gt;
2024-10-13 17:02:42,194 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:42,194 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:42,194 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170242Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:02:42,194 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170242Z
20241013/us-west-1/s3/aws4_request
3351aedf9beae403b98614377a5a8afefbe2b0f51167dd370fcad05f86f10ad7
2024-10-13 17:02:42,195 - MainThread - botocore.auth - DEBUG - Signature:
323f68e6aaa337343a8852703ad9c58e8e18f05f196849e209a511886614d9fa
2024-10-13 17:02:42,195 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f1206d01a60&gt;
2024-10-13 17:02:42,195 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/big_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170242Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=323f68e6aaa337343a8852703ad9c58e8e18f05f196849e209a511886614d9fa', 'amz-sdk-invocation-id': b'1f7ce054-2f21-432a-a922-ded9ca558cbb', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:02:42,196 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:42,201 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/big_file HTTP/1.1" 200 0
2024-10-13 17:02:42,202 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:42 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:42 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"b88b44dc673c3fbf5c3a8a4c62e75163-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'x8ApQw4NlE', 'x-amz-request-id': '29ff4514-d2d1-497b-82c3-842073787d8e', 'Content-Length': '10000000'}
2024-10-13 17:02:42,202 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:02:42,203 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1204b1ca90&gt;
2024-10-13 17:02:42,203 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:42,203 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f1204b1ca58&gt;&gt;
2024-10-13 17:02:42,203 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f120523d8c8&gt;
2024-10-13 17:02:42,204 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,204 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;}) about to wait for the following futures []
2024-10-13 17:02:42,204 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;}) done waiting for dependent futures
2024-10-13 17:02:42,205 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1204bacf60&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f1204aed0f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f1204aed160&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed2e8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt;}
2024-10-13 17:02:42,205 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed2e8&gt; for transfer request: 0.
2024-10-13 17:02:42,205 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,205 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2024-10-13 17:02:42,205 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed2e8&gt; for transfer request: 0.
2024-10-13 17:02:42,205 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2024-10-13 17:02:42,206 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,206 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1204bacf60&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f1204b00e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f1204b00eb8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f1204b000f0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f1204b00ba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f1204b00c50&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-10-13 17:02:42,206 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f1206d78e18&gt;
2024-10-13 17:02:42,206 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f1206d78d90&gt;
2024-10-13 17:02:42,206 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f1204bb74e0&gt;&gt;
2024-10-13 17:02:42,206 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f1204bb7898&gt;&gt;
2024-10-13 17:02:42,207 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2024-10-13 17:02:42,207 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f1206d78bf8&gt;
2024-10-13 17:02:42,207 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,207 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f1206cfe158&gt;
2024-10-13 17:02:42,207 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2024-10-13 17:02:42,208 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f1204bb74e0&gt;&gt;
2024-10-13 17:02:42,208 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1204bacf60&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f1204b00e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f1204b00eb8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f1204b000f0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f1204b00ba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1203984208&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f1204b00c50&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-10-13 17:02:42,208 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f1206d788c8&gt;
2024-10-13 17:02:42,208 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f1206d78e18&gt;
2024-10-13 17:02:42,208 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1206d01400&gt;
2024-10-13 17:02:42,208 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f1206d78d90&gt;
2024-10-13 17:02:42,208 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/encrypted/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1204bb7198&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:42,208 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f1204bb74e0&gt;&gt;
2024-10-13 17:02:42,209 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f12092a1488&gt;
2024-10-13 17:02:42,209 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f1204bb7898&gt;&gt;
2024-10-13 17:02:42,209 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1204bb7160&gt;&gt;
2024-10-13 17:02:42,209 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f1206d78bf8&gt;
2024-10-13 17:02:42,209 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f1204bb7908&gt;&gt;
2024-10-13 17:02:42,209 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f1206cfe158&gt;
2024-10-13 17:02:42,209 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f1206d78ae8&gt;
2024-10-13 17:02:42,210 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f1204bb74e0&gt;&gt;
2024-10-13 17:02:42,210 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f1204bb7908&gt;&gt;
2024-10-13 17:02:42,210 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f1206d788c8&gt;
2024-10-13 17:02:42,210 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:42,210 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1206d01400&gt;
2024-10-13 17:02:42,210 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:42,210 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170242Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:02:42,210 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170242Z
20241013/us-west-1/s3/aws4_request
aed1eb3a94ff0dcab7205a77f0b7087b59132abb1048725a442897bd5990725e
2024-10-13 17:02:42,211 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
56aee2173eda331a36284697c1d3938df51b9e60b89037d8eefa01b87e30529f
2024-10-13 17:02:42,211 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f12092a1510&gt;
2024-10-13 17:02:42,211 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f1206d01a60&gt;
2024-10-13 17:02:42,210 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/encrypted/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1204bb7198&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:42,211 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170242Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=56aee2173eda331a36284697c1d3938df51b9e60b89037d8eefa01b87e30529f', 'amz-sdk-invocation-id': b'3cf931c2-9514-4739-a029-9b026d23658b', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:02:42,211 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:42,211 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f12092a1488&gt;
2024-10-13 17:02:42,212 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1204bb7160&gt;&gt;
2024-10-13 17:02:42,212 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f1204bb7908&gt;&gt;
2024-10-13 17:02:42,212 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f1206d78ae8&gt;
2024-10-13 17:02:42,212 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f1204bb7908&gt;&gt;
2024-10-13 17:02:42,212 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:42,212 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170242Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:02:42,213 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170242Z
20241013/us-west-1/s3/aws4_request
e1f7646a5017cc0d1f432785c448ed026c1c7ec4d40438b88fa0ba227f7105fb
2024-10-13 17:02:42,213 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
dcd688d7ff3a628d7dd54c886e48a2425b7ba038a5f553167d0446e743d10589
2024-10-13 17:02:42,213 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f12092a1510&gt;
2024-10-13 17:02:42,213 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f1206d01a60&gt;
2024-10-13 17:02:42,213 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170242Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=dcd688d7ff3a628d7dd54c886e48a2425b7ba038a5f553167d0446e743d10589', 'amz-sdk-invocation-id': b'b2efa77e-c666-477c-a88e-056ef04ffbdb', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:02:42,213 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2024-10-13 17:02:42,245 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/big_file HTTP/1.1" 206 1611392
2024-10-13 17:02:42,246 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:42 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:42 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"b88b44dc673c3fbf5c3a8a4c62e75163-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'R5vrIiZ5ztQZWTr', 'x-amz-request-id': '5facc5a2-c1f2-4cef-9e5d-d744885ab4cd', 'Content-Length': '1611392'}
2024-10-13 17:02:42,246 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f120073b160&gt;
2024-10-13 17:02:42,247 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1204bb7518&gt;
2024-10-13 17:02:42,248 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:42,248 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f1204bb74e0&gt;&gt;
2024-10-13 17:02:42,248 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f120523d8c8&gt;
2024-10-13 17:02:42,248 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/big_file HTTP/1.1" 206 8388608
2024-10-13 17:02:42,248 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:42 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:42 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"b88b44dc673c3fbf5c3a8a4c62e75163-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Sun, 13 Oct 2024 17:02:41 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'HPdjlrhJcvQF', 'x-amz-request-id': '9b0b7c37-ce85-47e8-941d-4ced1e391183', 'Content-Length': '8388608'}
2024-10-13 17:02:42,249 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f120073b0b8&gt;
2024-10-13 17:02:42,249 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1204bb7518&gt;
2024-10-13 17:02:42,249 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:42,249 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f1204bb74e0&gt;&gt;
2024-10-13 17:02:42,249 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f120523d8c8&gt;
2024-10-13 17:02:42,281 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
Completed 256.0 KiB/9.5 MiB (3.3 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:42,282 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,282 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2024-10-13 17:02:42,283 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2024-10-13 17:02:42,283 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 8388608}
2024-10-13 17:02:42,284 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,284 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
Completed 512.0 KiB/9.5 MiB (6.3 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:42,285 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,285 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2024-10-13 17:02:42,285 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2024-10-13 17:02:42,285 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 0}
2024-10-13 17:02:42,286 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,308 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,308 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 768.0 KiB/9.5 MiB (7.3 MiB/s) with 1 file(s) remaining
2024-10-13 17:02:42,308 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2024-10-13 17:02:42,308 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2024-10-13 17:02:42,309 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 8650752}
2024-10-13 17:02:42,309 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,312 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,312 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.0 MiB/9.5 MiB (9.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,313 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2024-10-13 17:02:42,313 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2024-10-13 17:02:42,313 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 262144}
2024-10-13 17:02:42,313 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,363 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,363 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.2 MiB/9.5 MiB (7.9 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,364 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2024-10-13 17:02:42,364 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2024-10-13 17:02:42,364 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 8912896}
2024-10-13 17:02:42,365 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,367 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,367 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.5 MiB/9.5 MiB (9.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,367 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2024-10-13 17:02:42,367 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2024-10-13 17:02:42,368 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 524288}
2024-10-13 17:02:42,368 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,409 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,409 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,410 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2024-10-13 17:02:42,410 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2024-10-13 17:02:42,410 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 9175040}
2024-10-13 17:02:42,410 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,411 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.8 MiB/9.5 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (9.7 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,411 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,411 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2024-10-13 17:02:42,411 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2024-10-13 17:02:42,411 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 786432}
2024-10-13 17:02:42,412 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,435 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,435 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.2 MiB/9.5 MiB (9.8 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,436 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2024-10-13 17:02:42,436 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2024-10-13 17:02:42,436 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 9437184}
2024-10-13 17:02:42,436 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,437 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,437 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (10.8 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,437 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2024-10-13 17:02:42,437 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2024-10-13 17:02:42,437 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 1048576}
2024-10-13 17:02:42,438 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,471 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,471 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.8 MiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,473 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2024-10-13 17:02:42,473 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2024-10-13 17:02:42,473 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 9699328}
2024-10-13 17:02:42,473 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,478 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,478 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,478 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.8 MiB/9.5 MiB (10.2 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,478 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2024-10-13 17:02:42,478 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2024-10-13 17:02:42,478 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 9961472}
2024-10-13 17:02:42,478 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,488 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
Completed 3.0 MiB/9.5 MiB (10.8 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,488 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,488 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2024-10-13 17:02:42,488 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2024-10-13 17:02:42,488 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 1310720}
2024-10-13 17:02:42,489 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,516 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,516 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.3 MiB/9.5 MiB (10.6 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,516 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2024-10-13 17:02:42,516 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2024-10-13 17:02:42,516 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 1572864}
2024-10-13 17:02:42,517 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,537 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,537 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,538 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2024-10-13 17:02:42,538 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2024-10-13 17:02:42,538 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 1835008}
Completed 3.5 MiB/9.5 MiB (10.7 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,538 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,575 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,575 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,575 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2024-10-13 17:02:42,575 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2024-10-13 17:02:42,576 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 2097152}
Completed 3.8 MiB/9.5 MiB (10.2 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,576 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,602 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,602 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,602 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2024-10-13 17:02:42,602 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2024-10-13 17:02:42,602 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 2359296}
2024-10-13 17:02:42,603 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 4.0 MiB/9.5 MiB (10.2 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,621 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,621 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.3 MiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,621 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2024-10-13 17:02:42,621 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2024-10-13 17:02:42,621 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 2621440}
2024-10-13 17:02:42,622 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,640 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,640 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.5 MiB/9.5 MiB (10.4 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,640 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2024-10-13 17:02:42,640 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2024-10-13 17:02:42,640 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 2883584}
2024-10-13 17:02:42,640 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,658 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,658 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,658 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
Completed 4.8 MiB/9.5 MiB (10.6 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,659 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2024-10-13 17:02:42,659 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 3145728}
2024-10-13 17:02:42,659 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,675 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,675 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.0 MiB/9.5 MiB (10.7 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,676 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2024-10-13 17:02:42,676 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2024-10-13 17:02:42,676 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 3407872}
2024-10-13 17:02:42,676 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,700 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,700 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,700 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2024-10-13 17:02:42,701 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2024-10-13 17:02:42,701 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 3670016}
Completed 5.3 MiB/9.5 MiB (10.7 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,702 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,719 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,720 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.5 MiB/9.5 MiB (10.8 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,720 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2024-10-13 17:02:42,720 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2024-10-13 17:02:42,720 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 3932160}
2024-10-13 17:02:42,720 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,740 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,740 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.8 MiB/9.5 MiB (10.8 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,740 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2024-10-13 17:02:42,740 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2024-10-13 17:02:42,741 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 4194304}
2024-10-13 17:02:42,741 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,769 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
Completed 6.0 MiB/9.5 MiB (10.7 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,769 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,769 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2024-10-13 17:02:42,769 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2024-10-13 17:02:42,769 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 4456448}
2024-10-13 17:02:42,770 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,817 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,817 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,818 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2024-10-13 17:02:42,818 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2024-10-13 17:02:42,818 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 4718592}
2024-10-13 17:02:42,818 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 6.3 MiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,871 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,871 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,871 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2024-10-13 17:02:42,871 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2024-10-13 17:02:42,871 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 4980736}
2024-10-13 17:02:42,872 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 6.5 MiB/9.5 MiB (9.8 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,892 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,892 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.8 MiB/9.5 MiB (9.9 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,892 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
2024-10-13 17:02:42,892 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2024-10-13 17:02:42,892 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 5242880}
2024-10-13 17:02:42,893 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,910 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,910 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,910 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2024-10-13 17:02:42,910 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2024-10-13 17:02:42,910 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 5505024}
Completed 7.0 MiB/9.5 MiB (10.0 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:42,911 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,958 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,958 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:42,958 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2024-10-13 17:02:42,958 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2024-10-13 17:02:42,958 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 5767168}
Completed 7.3 MiB/9.5 MiB (9.7 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,959 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,975 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,975 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.5 MiB/9.5 MiB (9.8 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,975 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2024-10-13 17:02:42,975 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2024-10-13 17:02:42,975 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 6029312}
2024-10-13 17:02:42,975 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:42,992 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:42,992 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.8 MiB/9.5 MiB (9.9 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:42,992 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2024-10-13 17:02:42,992 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2024-10-13 17:02:42,992 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 6291456}
2024-10-13 17:02:42,993 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:43,008 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:43,009 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.0 MiB/9.5 MiB (10.0 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:43,009 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2024-10-13 17:02:43,009 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2024-10-13 17:02:43,009 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 6553600}
2024-10-13 17:02:43,009 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:43,028 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:43,028 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.3 MiB/9.5 MiB (10.1 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:43,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2024-10-13 17:02:43,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2024-10-13 17:02:43,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 6815744}
2024-10-13 17:02:43,029 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:43,044 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:43,045 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.5 MiB/9.5 MiB (10.2 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:43,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2024-10-13 17:02:43,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2024-10-13 17:02:43,045 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 7077888}
2024-10-13 17:02:43,046 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:43,062 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:43,063 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.8 MiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:43,063 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2024-10-13 17:02:43,063 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2024-10-13 17:02:43,063 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 7340032}
2024-10-13 17:02:43,064 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:43,098 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:43,098 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.0 MiB/9.5 MiB (10.1 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:43,098 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2024-10-13 17:02:43,098 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2024-10-13 17:02:43,098 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 7602176}
2024-10-13 17:02:43,099 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:43,114 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:43,114 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.3 MiB/9.5 MiB (10.2 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:43,114 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2024-10-13 17:02:43,114 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2024-10-13 17:02:43,114 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 7864320}
2024-10-13 17:02:43,115 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:43,134 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:43,134 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:43,134 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1204aed6d8&gt; for transfer request: 0.
2024-10-13 17:02:43,135 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:43,135 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:43,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2024-10-13 17:02:43,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2024-10-13 17:02:43,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'offset': 8126464}
Completed 9.5 MiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining 
2024-10-13 17:02:43,135 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:43,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2024-10-13 17:02:43,135 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2024-10-13 17:02:43,136 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1204b00f98&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f1204aed160&gt;}
2024-10-13 17:02:43,136 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/big_file to ../../tmp/big_file_downloaded
2024-10-13 17:02:43,136 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:02:43.176" endtime="20241013 17:02:43.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:43.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:43.178" endtime="20241013 17:02:43.179"/>
</kw>
<status status="PASS" starttime="20241013 17:02:41.791" endtime="20241013 17:02:43.179"/>
</kw>
<msg timestamp="20241013 17:02:43.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:41.791" endtime="20241013 17:02:43.179"/>
</kw>
<msg timestamp="20241013 17:02:43.181" level="INFO">${output} = 2024-10-13 17:02:42,141 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:42,142 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:41.790" endtime="20241013 17:02:43.181"/>
</kw>
<msg timestamp="20241013 17:02:43.181" level="INFO">${file_download_result} = 2024-10-13 17:02:42,141 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:42,142 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:41.790" endtime="20241013 17:02:43.181"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:02:43.183" level="INFO">${match} = GET /encrypted/big_file HTTP/1.1" 206 1611392
2024-10-13 17:02:42,246 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:42 GMT', 'Cache-Control':...</msg>
<msg timestamp="20241013 17:02:43.183" level="INFO">${etag2} = b88b44dc673c3fbf5c3a8a4c62e75163-2</msg>
<status status="PASS" starttime="20241013 17:02:43.182" endtime="20241013 17:02:43.183"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:02:43.183" endtime="20241013 17:02:43.183"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:43.187" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:43.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:43.669" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20241013 17:02:43.185" endtime="20241013 17:02:43.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:43.670" level="INFO">delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20241013 17:02:43.669" endtime="20241013 17:02:43.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:43.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:43.670" endtime="20241013 17:02:43.671"/>
</kw>
<status status="PASS" starttime="20241013 17:02:43.185" endtime="20241013 17:02:43.671"/>
</kw>
<msg timestamp="20241013 17:02:43.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:43.184" endtime="20241013 17:02:43.671"/>
</kw>
<msg timestamp="20241013 17:02:43.671" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20241013 17:02:43.184" endtime="20241013 17:02:43.671"/>
</kw>
<status status="PASS" starttime="20241013 17:02:43.183" endtime="20241013 17:02:43.671"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:43.675" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:43.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:43.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:43.673" endtime="20241013 17:02:43.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:43.682" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:43.682" endtime="20241013 17:02:43.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:43.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:43.683" endtime="20241013 17:02:43.683"/>
</kw>
<status status="PASS" starttime="20241013 17:02:43.672" endtime="20241013 17:02:43.683"/>
</kw>
<msg timestamp="20241013 17:02:43.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:43.672" endtime="20241013 17:02:43.683"/>
</kw>
<status status="PASS" starttime="20241013 17:02:43.672" endtime="20241013 17:02:43.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:40.913" endtime="20241013 17:02:43.684"/>
</test>
<test id="s1-s5-s14-t21" name="Create key twice with different content and expect different ETags" line="260">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:43.688" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20241013 17:02:43.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:43.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:43.686" endtime="20241013 17:02:43.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:43.697" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:43.697" endtime="20241013 17:02:43.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:43.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:43.697" endtime="20241013 17:02:43.698"/>
</kw>
<status status="PASS" starttime="20241013 17:02:43.685" endtime="20241013 17:02:43.698"/>
</kw>
<msg timestamp="20241013 17:02:43.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:43.685" endtime="20241013 17:02:43.698"/>
</kw>
<status status="PASS" starttime="20241013 17:02:43.685" endtime="20241013 17:02:43.698"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:43.701" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20241013 17:02:43.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:43.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:43.700" endtime="20241013 17:02:43.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:43.711" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:43.710" endtime="20241013 17:02:43.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:43.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:43.711" endtime="20241013 17:02:43.712"/>
</kw>
<status status="PASS" starttime="20241013 17:02:43.699" endtime="20241013 17:02:43.712"/>
</kw>
<msg timestamp="20241013 17:02:43.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:43.699" endtime="20241013 17:02:43.712"/>
</kw>
<status status="PASS" starttime="20241013 17:02:43.698" endtime="20241013 17:02:43.712"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:43.716" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:44.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:44.258" level="INFO">${output} = 2024-10-13 17:02:44,068 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:44,068 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:43.714" endtime="20241013 17:02:44.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:44.259" level="INFO">2024-10-13 17:02:44,068 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:44,068 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://encrypted/test_key_to_check_etag_differences']
2024-10-13 17:02:44,068 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f2bf09d9d08&gt;
2024-10-13 17:02:44,069 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f2bf1824a60&gt;
2024-10-13 17:02:44,069 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f2bf1803e18&gt;
2024-10-13 17:02:44,070 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:02:44,073 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f2bf0b0b730&gt;
2024-10-13 17:02:44,074 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f2bf09e5378&gt;
2024-10-13 17:02:44,074 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,074 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f2bf09e5378&gt;
2024-10-13 17:02:44,076 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,076 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,076 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2bf17d2a20&gt;
2024-10-13 17:02:44,076 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,076 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2bf17d2a20&gt;
2024-10-13 17:02:44,076 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2bf17d2a20&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,078 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,078 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,078 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,078 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,078 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,078 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,078 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,079 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,079 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,079 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,079 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,079 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2bf17d2a20&gt;
2024-10-13 17:02:44,079 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,079 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,079 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,079 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2bf17d2a20&gt;
2024-10-13 17:02:44,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,080 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2bf17d2a20&gt;
2024-10-13 17:02:44,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f2bf8ad1a58&gt;
2024-10-13 17:02:44,081 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:02:44,081 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-10-13 17:02:44,081 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:02:44,093 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:02:44,093 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f2bf25026a8&gt;
2024-10-13 17:02:44,095 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:02:44,105 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2bf29de620&gt;
2024-10-13 17:02:44,105 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2bf29de400&gt;
2024-10-13 17:02:44,105 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,108 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:44,108 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:02:44,109 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:44,109 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,110 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f2bf25026a8&gt;
2024-10-13 17:02:44,110 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2bf29de620&gt;
2024-10-13 17:02:44,111 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2bf29de400&gt;
2024-10-13 17:02:44,111 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,113 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:44,114 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:44,114 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,114 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f2bf25026a8&gt;
2024-10-13 17:02:44,116 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2bf29de620&gt;
2024-10-13 17:02:44,116 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2bf29de400&gt;
2024-10-13 17:02:44,116 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,118 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:44,119 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:44,119 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,120 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:02:44,121 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:44,121 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f2bf029c128&gt;}) about to wait for the following futures []
2024-10-13 17:02:44,121 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f2bf029c128&gt;}) done waiting for dependent futures
2024-10-13 17:02:44,122 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f2bf029c128&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f2bf0348f60&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f2bf0288128&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f2bf0288198&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f2bf0288320&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f2bf029c128&gt;}
2024-10-13 17:02:44,122 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f2bf0288320&gt; for transfer request: 0.
2024-10-13 17:02:44,122 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:44,123 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:02:44,123 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:44,123 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:02:44,123 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f2bf0348f60&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f2bf029c4a8&gt;, 'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2024-10-13 17:02:44,124 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f2bf249a9d8&gt;
2024-10-13 17:02:44,124 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f2bf2514e18&gt;
2024-10-13 17:02:44,124 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f2bf249d2f0&gt;
2024-10-13 17:02:44,124 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f2bf2514d90&gt;
2024-10-13 17:02:44,124 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f2bf03534e0&gt;&gt;
2024-10-13 17:02:44,124 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f2bf0353898&gt;&gt;
2024-10-13 17:02:44,124 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f2bf2514bf8&gt;
2024-10-13 17:02:44,124 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f2bf2ebc400&gt;
2024-10-13 17:02:44,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f2bf249a158&gt;
2024-10-13 17:02:44,127 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:02:44,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f2bf03534e0&gt;&gt;
2024-10-13 17:02:44,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f2bf25148c8&gt;
2024-10-13 17:02:44,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f2bf249d400&gt;
2024-10-13 17:02:44,127 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/encrypted/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'OHI8aRTncWdOH6+nzg4RqQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f2bf029c4a8&gt;, 'url': 'http://s3g:9878/encrypted/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f2bf0353198&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:44,128 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f2bf4a3d488&gt;
2024-10-13 17:02:44,128 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f2bf0353160&gt;&gt;
2024-10-13 17:02:44,128 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f2bf0353908&gt;&gt;
2024-10-13 17:02:44,128 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f2bf2514ae8&gt;
2024-10-13 17:02:44,128 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f2bf0353908&gt;&gt;
2024-10-13 17:02:44,128 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:44,130 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:44,130 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_key_to_check_etag_differences

content-md5:OHI8aRTncWdOH6+nzg4RqQ==
host:s3g:9878
x-amz-content-sha256:523c7748bd3a8d6972e446265843ab1fb6c15a8cee599d9cc84a714a654ce1c9
x-amz-date:20241013T170244Z

content-md5;host;x-amz-content-sha256;x-amz-date
523c7748bd3a8d6972e446265843ab1fb6c15a8cee599d9cc84a714a654ce1c9
2024-10-13 17:02:44,130 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170244Z
20241013/us-west-1/s3/aws4_request
6e45d1708b0ea941bd6cd011cf560a08d4b7e080f80b597e1840e2e0c735d9f8
2024-10-13 17:02:44,130 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
5770cafff18d2366e5dfc5829283fc15c84b5edda25c710e60740c2fc42af488
2024-10-13 17:02:44,130 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f2bf4a3d510&gt;
2024-10-13 17:02:44,130 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f2bf249da60&gt;
2024-10-13 17:02:44,130 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'OHI8aRTncWdOH6+nzg4RqQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170244Z', 'X-Amz-Content-SHA256': b'523c7748bd3a8d6972e446265843ab1fb6c15a8cee599d9cc84a714a654ce1c9', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=5770cafff18d2366e5dfc5829283fc15c84b5edda25c710e60740c2fc42af488', 'amz-sdk-invocation-id': b'e996689a-a63e-435c-a914-2190306bb5d7', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2024-10-13 17:02:44,131 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:44,132 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:02:44,151 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (8.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (16.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (23.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (30.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:44,188 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-10-13 17:02:44,189 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:44 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:44 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"38723c6914e771674e1fafa7ce0e11a9"', 'Server': 'Ozone', 'x-amz-id-2': 'Q1PQIRaxnDNs', 'x-amz-request-id': '3e990c21-6c3b-4ed9-a19c-77601be9abbb', 'Content-Length': '0'}
2024-10-13 17:02:44,189 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:02:44,190 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f2bf0353518&gt;
2024-10-13 17:02:44,190 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:44,190 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f2bf03534e0&gt;&gt;
2024-10-13 17:02:44,190 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f2bf09d98c8&gt;
2024-10-13 17:02:44,191 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://encrypted/test_key_to_check_etag_differences
2024-10-13 17:02:44,191 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:02:44.258" endtime="20241013 17:02:44.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:44.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:44.259" endtime="20241013 17:02:44.260"/>
</kw>
<status status="PASS" starttime="20241013 17:02:43.713" endtime="20241013 17:02:44.260"/>
</kw>
<msg timestamp="20241013 17:02:44.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:43.713" endtime="20241013 17:02:44.260"/>
</kw>
<msg timestamp="20241013 17:02:44.261" level="INFO">${output} = 2024-10-13 17:02:44,068 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:44,068 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:43.713" endtime="20241013 17:02:44.261"/>
</kw>
<msg timestamp="20241013 17:02:44.261" level="INFO">${file1UploadResult} = 2024-10-13 17:02:44,068 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:44,068 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:43.712" endtime="20241013 17:02:44.261"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:02:44.263" level="INFO">${match} = PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-10-13 17:02:44,189 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:44 GM...</msg>
<msg timestamp="20241013 17:02:44.263" level="INFO">${etag1} = 38723c6914e771674e1fafa7ce0e11a9</msg>
<status status="PASS" starttime="20241013 17:02:44.262" endtime="20241013 17:02:44.263"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:44.267" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:44.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:44.822" level="INFO">${output} = 2024-10-13 17:02:44,651 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:44,651 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:44.265" endtime="20241013 17:02:44.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:44.823" level="INFO">2024-10-13 17:02:44,651 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:44,651 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://encrypted/test_key_to_check_etag_differences']
2024-10-13 17:02:44,651 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f4215eb7d08&gt;
2024-10-13 17:02:44,651 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f4216d02a60&gt;
2024-10-13 17:02:44,652 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f4216ce1e18&gt;
2024-10-13 17:02:44,653 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:02:44,658 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f4215fe9730&gt;
2024-10-13 17:02:44,658 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f4215ec2378&gt;
2024-10-13 17:02:44,659 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,659 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f4215ec2378&gt;
2024-10-13 17:02:44,661 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,661 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,661 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4216cb09b0&gt;
2024-10-13 17:02:44,661 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,661 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4216cb09b0&gt;
2024-10-13 17:02:44,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,662 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4216cb09b0&gt;
2024-10-13 17:02:44,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,662 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,663 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,663 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,663 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,663 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,663 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,663 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,664 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,664 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,664 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,664 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,664 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,664 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,665 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,665 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,665 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4216cb09b0&gt;
2024-10-13 17:02:44,665 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,665 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,665 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,665 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4216cb09b0&gt;
2024-10-13 17:02:44,665 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,665 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f4216cb09b0&gt;
2024-10-13 17:02:44,666 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,666 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,666 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,666 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,666 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f4215d99fd0&gt;
2024-10-13 17:02:44,666 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:02:44,666 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2024-10-13 17:02:44,667 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:02:44,678 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:02:44,679 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f42179e16a8&gt;
2024-10-13 17:02:44,680 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:02:44,690 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f4217ebc620&gt;
2024-10-13 17:02:44,690 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f4217ebc400&gt;
2024-10-13 17:02:44,690 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,693 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:44,693 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:02:44,694 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:44,694 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,695 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f42179e16a8&gt;
2024-10-13 17:02:44,696 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f4217ebc620&gt;
2024-10-13 17:02:44,696 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f4217ebc400&gt;
2024-10-13 17:02:44,696 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,698 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:44,699 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:44,699 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,699 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f42179e16a8&gt;
2024-10-13 17:02:44,701 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f4217ebc620&gt;
2024-10-13 17:02:44,701 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f4217ebc400&gt;
2024-10-13 17:02:44,701 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,703 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:02:44,703 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:02:44,704 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:02:44,705 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:02:44,705 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:44,706 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f421577b0b8&gt;}) about to wait for the following futures []
2024-10-13 17:02:44,706 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f421577b0b8&gt;}) done waiting for dependent futures
2024-10-13 17:02:44,706 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f421577b0b8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f4215826ef0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f42157660b8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f4215766128&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f42157662b0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f421577b0b8&gt;}
2024-10-13 17:02:44,707 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f42157662b0&gt; for transfer request: 0.
2024-10-13 17:02:44,707 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:02:44,708 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:02:44,708 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:44,708 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:02:44,708 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f4215826ef0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f421577b588&gt;, 'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2024-10-13 17:02:44,709 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f42179789d8&gt;
2024-10-13 17:02:44,709 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f42179f2e18&gt;
2024-10-13 17:02:44,709 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f421797b2f0&gt;
2024-10-13 17:02:44,709 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f42179f2d90&gt;
2024-10-13 17:02:44,709 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f4215831470&gt;&gt;
2024-10-13 17:02:44,709 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f4215831828&gt;&gt;
2024-10-13 17:02:44,709 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f42179f2bf8&gt;
2024-10-13 17:02:44,709 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f421839a400&gt;
2024-10-13 17:02:44,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f4217978158&gt;
2024-10-13 17:02:44,712 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:02:44,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f4215831470&gt;&gt;
2024-10-13 17:02:44,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f42179f28c8&gt;
2024-10-13 17:02:44,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f421797b400&gt;
2024-10-13 17:02:44,712 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/encrypted/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'xpfaJAnkQmnvjPiuvlktWw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f421577b588&gt;, 'url': 'http://s3g:9878/encrypted/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f4215831128&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'encrypted'}}}
2024-10-13 17:02:44,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f4219f1b488&gt;
2024-10-13 17:02:44,712 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f42158310f0&gt;&gt;
2024-10-13 17:02:44,713 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f4215831898&gt;&gt;
2024-10-13 17:02:44,713 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f42179f2ae8&gt;
2024-10-13 17:02:44,713 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f4215831898&gt;&gt;
2024-10-13 17:02:44,713 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:02:44,714 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:02:44,714 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_key_to_check_etag_differences

content-md5:xpfaJAnkQmnvjPiuvlktWw==
host:s3g:9878
x-amz-content-sha256:a8f51443bb687a0ad8bdd2c60b4d31af1036eff1ca23d015b0d7dd0ae73c7390
x-amz-date:20241013T170244Z

content-md5;host;x-amz-content-sha256;x-amz-date
a8f51443bb687a0ad8bdd2c60b4d31af1036eff1ca23d015b0d7dd0ae73c7390
2024-10-13 17:02:44,714 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170244Z
20241013/us-west-1/s3/aws4_request
298b2d6b685673acea06a368e348d0dc709d3b6cf27f59221be4e22f929fb569
2024-10-13 17:02:44,715 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
b799370b4a507ac347a25c964fe7b0bd6a8f07de2e7da95c7729808a877f20b5
2024-10-13 17:02:44,715 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f4219f1b510&gt;
2024-10-13 17:02:44,715 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f421797ba60&gt;
2024-10-13 17:02:44,715 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'xpfaJAnkQmnvjPiuvlktWw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170244Z', 'X-Amz-Content-SHA256': b'a8f51443bb687a0ad8bdd2c60b4d31af1036eff1ca23d015b0d7dd0ae73c7390', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=b799370b4a507ac347a25c964fe7b0bd6a8f07de2e7da95c7729808a877f20b5', 'amz-sdk-invocation-id': b'e3c63470-82cf-4a2c-a370-138d9186ab67', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2024-10-13 17:02:44,716 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:02:44,716 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:02:44,736 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (8.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (16.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (24.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (32.1 MiB/s) with 1 file(s) remaining  
2024-10-13 17:02:44,775 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-10-13 17:02:44,776 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:44 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:02:44 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"c697da2409e44269ef8cf8aebe592d5b"', 'Server': 'Ozone', 'x-amz-id-2': 'TCsgRLsMTL', 'x-amz-request-id': 'ba894f22-cb0d-41e6-bedd-fc7c017879f4', 'Content-Length': '0'}
2024-10-13 17:02:44,776 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:02:44,777 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f42158314a8&gt;
2024-10-13 17:02:44,777 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:02:44,777 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f4215831470&gt;&gt;
2024-10-13 17:02:44,778 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f4215eb78c8&gt;
upload: ../../tmp/file2 to s3://encrypted/test_key_to_check_etag_differences
2024-10-13 17:02:44,778 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:02:44,778 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:02:44.822" endtime="20241013 17:02:44.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:44.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:44.824" endtime="20241013 17:02:44.824"/>
</kw>
<status status="PASS" starttime="20241013 17:02:44.264" endtime="20241013 17:02:44.825"/>
</kw>
<msg timestamp="20241013 17:02:44.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:44.264" endtime="20241013 17:02:44.825"/>
</kw>
<msg timestamp="20241013 17:02:44.826" level="INFO">${output} = 2024-10-13 17:02:44,651 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:44,651 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:44.263" endtime="20241013 17:02:44.826"/>
</kw>
<msg timestamp="20241013 17:02:44.826" level="INFO">${file2UploadResult} = 2024-10-13 17:02:44,651 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:02:44,651 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:02:44.263" endtime="20241013 17:02:44.826"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:02:44.827" level="INFO">${match} = PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-10-13 17:02:44,776 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:02:44 GM...</msg>
<msg timestamp="20241013 17:02:44.827" level="INFO">${etag2} = c697da2409e44269ef8cf8aebe592d5b</msg>
<status status="PASS" starttime="20241013 17:02:44.826" endtime="20241013 17:02:44.827"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:02:44.827" endtime="20241013 17:02:44.827"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:44.832" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:45.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:45.272" level="INFO">${output} = delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20241013 17:02:44.829" endtime="20241013 17:02:45.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:45.273" level="INFO">delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20241013 17:02:45.272" endtime="20241013 17:02:45.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:45.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:45.273" endtime="20241013 17:02:45.273"/>
</kw>
<status status="PASS" starttime="20241013 17:02:44.829" endtime="20241013 17:02:45.274"/>
</kw>
<msg timestamp="20241013 17:02:45.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:44.829" endtime="20241013 17:02:45.274"/>
</kw>
<msg timestamp="20241013 17:02:45.274" level="INFO">${output} = delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20241013 17:02:44.828" endtime="20241013 17:02:45.274"/>
</kw>
<status status="PASS" starttime="20241013 17:02:44.828" endtime="20241013 17:02:45.274"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:45.278" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:45.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:45.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:45.275" endtime="20241013 17:02:45.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:45.283" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:45.282" endtime="20241013 17:02:45.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:45.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:45.283" endtime="20241013 17:02:45.283"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.275" endtime="20241013 17:02:45.284"/>
</kw>
<msg timestamp="20241013 17:02:45.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:45.275" endtime="20241013 17:02:45.284"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.274" endtime="20241013 17:02:45.284"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:45.287" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:45.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:45.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:45.285" endtime="20241013 17:02:45.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:45.292" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:45.291" endtime="20241013 17:02:45.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:45.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:45.292" endtime="20241013 17:02:45.292"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.285" endtime="20241013 17:02:45.293"/>
</kw>
<msg timestamp="20241013 17:02:45.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:45.284" endtime="20241013 17:02:45.293"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.284" endtime="20241013 17:02:45.293"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:02:43.684" endtime="20241013 17:02:45.293"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:02:18.474" endtime="20241013 17:02:45.295"/>
</suite>
<suite id="s1-s5-s15" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:02:45.304" endtime="20241013 17:02:45.304"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:45.307" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:45.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:45.310" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 17:02:45.305" endtime="20241013 17:02:45.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:45.311" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 17:02:45.311" endtime="20241013 17:02:45.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:45.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:45.311" endtime="20241013 17:02:45.312"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.305" endtime="20241013 17:02:45.312"/>
</kw>
<msg timestamp="20241013 17:02:45.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:45.304" endtime="20241013 17:02:45.312"/>
</kw>
<msg timestamp="20241013 17:02:45.312" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 17:02:45.304" endtime="20241013 17:02:45.312"/>
</kw>
<msg timestamp="20241013 17:02:45.312" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:02:45.304" endtime="20241013 17:02:45.312"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 17:02:45.313" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:02:45.312" endtime="20241013 17:02:45.313"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:45.316" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:45.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:45.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:02:45.314" endtime="20241013 17:02:45.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:45.600" level="INFO"/>
<status status="PASS" starttime="20241013 17:02:45.600" endtime="20241013 17:02:45.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:45.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:45.601" endtime="20241013 17:02:45.601"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.314" endtime="20241013 17:02:45.601"/>
</kw>
<msg timestamp="20241013 17:02:45.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:45.314" endtime="20241013 17:02:45.601"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.313" endtime="20241013 17:02:45.601"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.313" endtime="20241013 17:02:45.601"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.303" endtime="20241013 17:02:45.602"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.303" endtime="20241013 17:02:45.602"/>
</kw>
<test id="s1-s5-s15-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:02:45.602" endtime="20241013 17:02:45.603"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:45.606" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:48.895" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:48.895" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:02:45.604" endtime="20241013 17:02:48.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:48.896" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:02:48.895" endtime="20241013 17:02:48.896"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.603" endtime="20241013 17:02:48.896"/>
</kw>
<status status="PASS" starttime="20241013 17:02:45.603" endtime="20241013 17:02:48.896"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:48.900" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:52.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:52.111" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=11bc69c5b405e703c07673834730ba4a7fbe8306543ff6364e2c45c66d064992</msg>
<status status="PASS" starttime="20241013 17:02:48.898" endtime="20241013 17:02:52.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:52.112" level="INFO">awsAccessKey=testuser2
awsSecret=11bc69c5b405e703c07673834730ba4a7fbe8306543ff6364e2c45c66d064992</msg>
<status status="PASS" starttime="20241013 17:02:52.111" endtime="20241013 17:02:52.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:02:52.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:02:52.112" endtime="20241013 17:02:52.113"/>
</kw>
<status status="PASS" starttime="20241013 17:02:48.897" endtime="20241013 17:02:52.113"/>
</kw>
<msg timestamp="20241013 17:02:52.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:48.897" endtime="20241013 17:02:52.113"/>
</kw>
<msg timestamp="20241013 17:02:52.113" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=11bc69c5b405e703c07673834730ba4a7fbe8306543ff6364e2c45c66d064992</msg>
<status status="PASS" starttime="20241013 17:02:48.896" endtime="20241013 17:02:52.113"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:52.114" endtime="20241013 17:02:52.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:02:52.114" endtime="20241013 17:02:52.114"/>
</kw>
<status status="PASS" starttime="20241013 17:02:52.113" endtime="20241013 17:02:52.115"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:52.118" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:55.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:02:55.080" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:02:52.115" endtime="20241013 17:02:55.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:55.081" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:02:55.080" endtime="20241013 17:02:55.081"/>
</kw>
<status status="PASS" starttime="20241013 17:02:52.115" endtime="20241013 17:02:55.081"/>
</kw>
<status status="PASS" starttime="20241013 17:02:52.115" endtime="20241013 17:02:55.081"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241013 17:02:45.602" endtime="20241013 17:02:55.081"/>
</test>
<test id="s1-s5-s15-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:02:55.083" endtime="20241013 17:02:55.083"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:02:55.083" endtime="20241013 17:02:55.084"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:55.087" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:02:58.372" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:02:58.372" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:02:55.084" endtime="20241013 17:02:58.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:02:58.373" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:02:58.372" endtime="20241013 17:02:58.373"/>
</kw>
<status status="PASS" starttime="20241013 17:02:55.084" endtime="20241013 17:02:58.373"/>
</kw>
<status status="PASS" starttime="20241013 17:02:55.084" endtime="20241013 17:02:58.373"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:02:58.377" level="INFO">Running command 'ozone s3 getsecret -u testuser2 --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:01.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:01.867" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=98ac6dff46c34085236d65d3487e164df61a5f21cfeaea296f452f1e845d99b8</msg>
<status status="PASS" starttime="20241013 17:02:58.375" endtime="20241013 17:03:01.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:01.869" level="INFO">awsAccessKey=testuser2
awsSecret=98ac6dff46c34085236d65d3487e164df61a5f21cfeaea296f452f1e845d99b8</msg>
<status status="PASS" starttime="20241013 17:03:01.868" endtime="20241013 17:03:01.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:01.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:01.869" endtime="20241013 17:03:01.869"/>
</kw>
<status status="PASS" starttime="20241013 17:02:58.374" endtime="20241013 17:03:01.870"/>
</kw>
<msg timestamp="20241013 17:03:01.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:02:58.374" endtime="20241013 17:03:01.870"/>
</kw>
<msg timestamp="20241013 17:03:01.870" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=98ac6dff46c34085236d65d3487e164df61a5f21cfeaea296f452f1e845d99b8</msg>
<status status="PASS" starttime="20241013 17:02:58.373" endtime="20241013 17:03:01.870"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:03:01.871" endtime="20241013 17:03:01.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:03:01.871" endtime="20241013 17:03:01.871"/>
</kw>
<status status="PASS" starttime="20241013 17:03:01.870" endtime="20241013 17:03:01.871"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:01.875" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:05.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:05.190" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:03:01.872" endtime="20241013 17:03:05.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:05.192" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:03:05.191" endtime="20241013 17:03:05.192"/>
</kw>
<status status="PASS" starttime="20241013 17:03:01.872" endtime="20241013 17:03:05.192"/>
</kw>
<status status="PASS" starttime="20241013 17:03:01.871" endtime="20241013 17:03:05.192"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241013 17:02:55.082" endtime="20241013 17:03:05.192"/>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20241013 17:02:45.298" endtime="20241013 17:03:05.193"/>
</suite>
<suite id="s1-s5-s16" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<test id="s1-s5-s16-t1" name="S3 Gateway Generate Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:03:05.205" endtime="20241013 17:03:05.206"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:05.210" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:05.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:05.214" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 17:03:05.207" endtime="20241013 17:03:05.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:05.215" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 17:03:05.214" endtime="20241013 17:03:05.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:05.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:05.215" endtime="20241013 17:03:05.216"/>
</kw>
<status status="PASS" starttime="20241013 17:03:05.207" endtime="20241013 17:03:05.216"/>
</kw>
<msg timestamp="20241013 17:03:05.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:03:05.206" endtime="20241013 17:03:05.216"/>
</kw>
<msg timestamp="20241013 17:03:05.216" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 17:03:05.206" endtime="20241013 17:03:05.216"/>
</kw>
<msg timestamp="20241013 17:03:05.216" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:03:05.206" endtime="20241013 17:03:05.216"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 17:03:05.217" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:03:05.216" endtime="20241013 17:03:05.217"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:05.221" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:05.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:05.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:03:05.218" endtime="20241013 17:03:05.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:05.506" level="INFO"/>
<status status="PASS" starttime="20241013 17:03:05.505" endtime="20241013 17:03:05.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:05.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:05.506" endtime="20241013 17:03:05.507"/>
</kw>
<status status="PASS" starttime="20241013 17:03:05.218" endtime="20241013 17:03:05.507"/>
</kw>
<msg timestamp="20241013 17:03:05.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:03:05.218" endtime="20241013 17:03:05.507"/>
</kw>
<status status="PASS" starttime="20241013 17:03:05.217" endtime="20241013 17:03:05.507"/>
</kw>
<status status="PASS" starttime="20241013 17:03:05.217" endtime="20241013 17:03:05.507"/>
</kw>
<status status="PASS" starttime="20241013 17:03:05.205" endtime="20241013 17:03:05.507"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:05.511" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:08.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:08.750" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:03:05.508" endtime="20241013 17:03:08.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:08.752" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:03:08.751" endtime="20241013 17:03:08.752"/>
</kw>
<status status="PASS" starttime="20241013 17:03:05.508" endtime="20241013 17:03:08.752"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:08.755" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:12.198" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:12.198" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:08.752" endtime="20241013 17:03:12.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:12.199" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:12.198" endtime="20241013 17:03:12.199"/>
</kw>
<status status="PASS" starttime="20241013 17:03:08.752" endtime="20241013 17:03:12.199"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:12.202" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:15.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:15.340" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:12.200" endtime="20241013 17:03:15.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:15.341" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:15.341" endtime="20241013 17:03:15.341"/>
</kw>
<status status="PASS" starttime="20241013 17:03:12.199" endtime="20241013 17:03:15.342"/>
</kw>
<status status="PASS" starttime="20241013 17:03:05.508" endtime="20241013 17:03:15.342"/>
</kw>
<status status="PASS" starttime="20241013 17:03:05.205" endtime="20241013 17:03:15.342"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:03:15.342" endtime="20241013 17:03:15.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:15.346" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:15.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:15.675" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20241013 17:03:15.344" endtime="20241013 17:03:15.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:15.677" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.25.0.114...
* TCP_NODELAY set
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:9878
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret'
* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
* Found bundle for host s3g: 0x559053e1f870 [can pipeline]
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:9878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGQ70+/8LjpArnj80WdSv/2cSj49p7zl+MXtG/Xk7zn5UiLgtzg3iXu97/nMkhfRI04qnioQLYykWIJcRcoUzvMZeQyQOCr8pKxthSfWd1HYYBMbl4ilqqvogngV84j10zdj5jZX2V0g9tzmBObIrTHgrH+8LMawiAvNWQ20t9TUC9Zd+AtXckZ8TjXRCRElic/Ld6td2yX8/3WsTM4zqEi4LFhep3JSYP3YNpix3WFQbrtKK+jfWwejBXue3Lj6XHjHnLmsWH+diZq3vbe3+8GcY5TwuA9gHITiO5m48Kxf9XjbZ6aDMF6YB7EowJbvpbYRMvlOFT4V14t5uQJTB1xlcZS6lIB3WVLf+sUwxgZD35VhOc1b0DgpCpIHWMIHToAMCARKigcsEgcjU4OubplvvJftbn/A9lNF/e1oqtq6BPBz+7qFBG6gc/kS98xBrxyJpRD+fXvY0dClmZm6D+nBvZVd3LZtX+KQigsqQpNfdxp2Bl6dtFWk4Kn/mOx89AKXKSjnRQHza6KIOC7mZ9Kb/qkwLFXpNoo+9+zUNp9gQsUVY9LlTIiBttSJqUr0jv8jqwhX5aQWJRlqb911pdGvNT9/y5sT4V8hr9f4eozrwan624mIgDzkh6NxiEgYxlteZVuqiotE0Vyr5Z9JgJojc0g==
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 13 Oct 2024 17:03:15 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 13 Oct 2024 17:03:15 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQhzFi8dV6dU6dqQhMApYBFQoO/fq4ECZ5yu1Gx1xZZ+uu/0Nzc92nyqvqM7jpVcWG6FveXDr3ZDpde7uZ+tFmBPZEg==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1728874995644&amp;s=b/9rS8Vdh5uzFFQbQvMjF0kqQ+VpxbCNUKF/nG7PrYs="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: jxgRm7yHMPhB
&lt; x-amz-request-id: 9fca90e6-e6f7-4420-85e4-6b7ed5d454ef
&lt; Content-Length: 216
&lt; 
{ [216 bytes data]

100   216  100   216    0     0    670      0 --:--:-- --:--:-- --:--:--   670
* Closing connection 0
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser/s3g@EXAMPLE.COM&lt;/awsAccessKey&gt;&lt;awsSecret&gt;e53e57f3dcd13dbe1e8516cdee5162d6be00e98793ad94d1b4a9380a33682cba&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20241013 17:03:15.676" endtime="20241013 17:03:15.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:15.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:15.677" endtime="20241013 17:03:15.677"/>
</kw>
<status status="PASS" starttime="20241013 17:03:15.343" endtime="20241013 17:03:15.678"/>
</kw>
<msg timestamp="20241013 17:03:15.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:03:15.343" endtime="20241013 17:03:15.678"/>
</kw>
<msg timestamp="20241013 17:03:15.678" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20241013 17:03:15.342" endtime="20241013 17:03:15.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:03:15.678" endtime="20241013 17:03:15.679"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 17:03:15.679" endtime="20241013 17:03:15.679"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:15.685" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:19.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:19.072" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:03:15.682" endtime="20241013 17:03:19.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:19.073" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:03:19.072" endtime="20241013 17:03:19.073"/>
</kw>
<status status="PASS" starttime="20241013 17:03:15.680" endtime="20241013 17:03:19.073"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:19.076" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:22.213" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:22.213" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:19.074" endtime="20241013 17:03:22.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:22.214" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:22.213" endtime="20241013 17:03:22.214"/>
</kw>
<status status="PASS" starttime="20241013 17:03:19.073" endtime="20241013 17:03:22.214"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:22.217" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:25.395" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:25.395" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:22.215" endtime="20241013 17:03:25.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:25.396" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:25.396" endtime="20241013 17:03:25.396"/>
</kw>
<status status="PASS" starttime="20241013 17:03:22.214" endtime="20241013 17:03:25.396"/>
</kw>
<status status="PASS" starttime="20241013 17:03:15.680" endtime="20241013 17:03:25.396"/>
</kw>
<status status="PASS" starttime="20241013 17:03:15.680" endtime="20241013 17:03:25.397"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:03:05.204" endtime="20241013 17:03:25.397"/>
</test>
<test id="s1-s5-s16-t2" name="S3 Gateway Secret Already Exists" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:03:25.399" endtime="20241013 17:03:25.399"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:25.403" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:25.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:25.407" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 17:03:25.401" endtime="20241013 17:03:25.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:25.408" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 17:03:25.408" endtime="20241013 17:03:25.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:25.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:25.409" endtime="20241013 17:03:25.409"/>
</kw>
<status status="PASS" starttime="20241013 17:03:25.400" endtime="20241013 17:03:25.409"/>
</kw>
<msg timestamp="20241013 17:03:25.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:03:25.400" endtime="20241013 17:03:25.409"/>
</kw>
<msg timestamp="20241013 17:03:25.410" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 17:03:25.400" endtime="20241013 17:03:25.410"/>
</kw>
<msg timestamp="20241013 17:03:25.410" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:03:25.399" endtime="20241013 17:03:25.410"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 17:03:25.410" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:03:25.410" endtime="20241013 17:03:25.410"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:25.414" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:25.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:25.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:03:25.412" endtime="20241013 17:03:25.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:25.697" level="INFO"/>
<status status="PASS" starttime="20241013 17:03:25.696" endtime="20241013 17:03:25.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:25.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:25.697" endtime="20241013 17:03:25.698"/>
</kw>
<status status="PASS" starttime="20241013 17:03:25.411" endtime="20241013 17:03:25.698"/>
</kw>
<msg timestamp="20241013 17:03:25.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:03:25.411" endtime="20241013 17:03:25.698"/>
</kw>
<status status="PASS" starttime="20241013 17:03:25.411" endtime="20241013 17:03:25.698"/>
</kw>
<status status="PASS" starttime="20241013 17:03:25.410" endtime="20241013 17:03:25.698"/>
</kw>
<status status="PASS" starttime="20241013 17:03:25.399" endtime="20241013 17:03:25.698"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:25.702" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:28.910" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:28.910" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:25.699" endtime="20241013 17:03:28.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:28.911" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:28.911" endtime="20241013 17:03:28.911"/>
</kw>
<status status="PASS" starttime="20241013 17:03:25.699" endtime="20241013 17:03:28.911"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:28.914" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:32.241" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:32.241" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:28.912" endtime="20241013 17:03:32.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:32.243" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:32.242" endtime="20241013 17:03:32.243"/>
</kw>
<status status="PASS" starttime="20241013 17:03:28.912" endtime="20241013 17:03:32.243"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:32.246" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:35.684" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:35.685" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:32.243" endtime="20241013 17:03:35.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:35.686" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:35.685" endtime="20241013 17:03:35.686"/>
</kw>
<status status="PASS" starttime="20241013 17:03:32.243" endtime="20241013 17:03:35.686"/>
</kw>
<status status="PASS" starttime="20241013 17:03:25.698" endtime="20241013 17:03:35.686"/>
</kw>
<status status="PASS" starttime="20241013 17:03:25.398" endtime="20241013 17:03:35.686"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:03:35.686" endtime="20241013 17:03:35.687"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:35.691" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:39.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:39.165" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=05db3a54c7914d866d9caa04bed8612dcfadb0d888bec95d67af0b72fe401b61</msg>
<status status="PASS" starttime="20241013 17:03:35.688" endtime="20241013 17:03:39.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:39.166" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=05db3a54c7914d866d9caa04bed8612dcfadb0d888bec95d67af0b72fe401b61</msg>
<status status="PASS" starttime="20241013 17:03:39.165" endtime="20241013 17:03:39.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:39.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:39.166" endtime="20241013 17:03:39.167"/>
</kw>
<status status="PASS" starttime="20241013 17:03:35.688" endtime="20241013 17:03:39.167"/>
</kw>
<msg timestamp="20241013 17:03:39.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:03:35.687" endtime="20241013 17:03:39.167"/>
</kw>
<status status="PASS" starttime="20241013 17:03:35.687" endtime="20241013 17:03:39.167"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:39.171" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:39.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:39.482" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20241013 17:03:39.169" endtime="20241013 17:03:39.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:39.483" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.25.0.114...
* TCP_NODELAY set
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:9878
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret'
* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
* Found bundle for host s3g: 0x55d0815f5870 [can pipeline]
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Host: s3g:9878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGfZU/t24jILtWPXvzgtesQV8wHPlyb6+54d9RwOak35V5bnKzPU9SCdNowC4W+SEb/rb/zdzTq4wEhf5KPoRJFjyBo1yzeasUnWmS3bMScEy0gbMic9uwtjMEkrFW7vYtZHYCp93ClTJutTPAVfvDPcBvwi5cqZUXzUCpbSai/Mdl/Dtkd2oAgo2XIPBi7Cl5L0D3BB7xjcFTrmUoM275gZNImyxyRernpZOpjTZHLR0ZtamoqLP3vskbBv8UEbfrTfOZG75IZ8CodaFu7wMgeeYKzCckNf1Y+Jq36+5/NwwlSDvGIeW9p6mGdWyaxeardM+Xc2KMFe4T95Dxz/50Sn8VED+OREN457745qb/DFe7d+XB8x9YfXgpIHWMIHToAMCARKigcsEgchDWICH4GrwJWc529LKRx77QwlwA3MBPCrM+oigzXETNUfK6Ah+zUugl1ZHbyaXU+vrmhIsdmXw405D2MBsoYTZSAqGG+FmAcJna9340M1HAzYPVdAu4eRN4BjS/rzvKoIvDgVIRLKlNqbPdECmK4HROIyrFAh4iHSs3+yL6vRMVmJvzeX4EaQoWevwumkO8oMWonLoOKYMLuQlo0/4k2iMM39mUCgwUcPnLIAuRB6Dp2hy+0tZRiJm9pHQ4MnkWIuuHAcxH04nAg==
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQoxjIRgF7JlCZgIp3h4ijfhorJhXbYEXAMGvPTsf0xZwbENq/zLLgFGgyciItawr12SbMg5UPXjD14mrsh95XuAQcw==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1728875019459&amp;s=bgOjSTkyvaNY+U9fzelfdbxGfdzYXPfz6c+nvmSPyek="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: BWr6qGaslJ9GO
&lt; x-amz-request-id: 22d4a3de-20d4-4ce2-b4c7-a1f06dd8c629
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0</msg>
<status status="PASS" starttime="20241013 17:03:39.483" endtime="20241013 17:03:39.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:39.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:39.484" endtime="20241013 17:03:39.485"/>
</kw>
<status status="PASS" starttime="20241013 17:03:39.168" endtime="20241013 17:03:39.485"/>
</kw>
<msg timestamp="20241013 17:03:39.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:03:39.168" endtime="20241013 17:03:39.485"/>
</kw>
<msg timestamp="20241013 17:03:39.485" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20241013 17:03:39.167" endtime="20241013 17:03:39.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:03:39.485" endtime="20241013 17:03:39.486"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:39.490" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:42.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:42.787" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:03:39.487" endtime="20241013 17:03:42.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:42.788" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:03:42.787" endtime="20241013 17:03:42.788"/>
</kw>
<status status="PASS" starttime="20241013 17:03:39.487" endtime="20241013 17:03:42.788"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:42.791" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:46.223" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:46.223" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:42.789" endtime="20241013 17:03:46.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:46.224" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:46.223" endtime="20241013 17:03:46.224"/>
</kw>
<status status="PASS" starttime="20241013 17:03:42.788" endtime="20241013 17:03:46.224"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:46.227" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:49.636" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:49.636" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:46.225" endtime="20241013 17:03:49.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:49.637" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:49.637" endtime="20241013 17:03:49.637"/>
</kw>
<status status="PASS" starttime="20241013 17:03:46.224" endtime="20241013 17:03:49.638"/>
</kw>
<status status="PASS" starttime="20241013 17:03:39.486" endtime="20241013 17:03:49.638"/>
</kw>
<status status="PASS" starttime="20241013 17:03:39.486" endtime="20241013 17:03:49.638"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:03:25.398" endtime="20241013 17:03:49.638"/>
</test>
<test id="s1-s5-s16-t3" name="S3 Gateway Generate Secret By Username" line="47">
<tag>robot:skip</tag>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20241013 17:03:49.638" endtime="20241013 17:03:49.639">Test skipped using 'robot:skip' tag.</status>
</test>
<test id="s1-s5-s16-t4" name="S3 Gateway Generate Secret By Username For Other User" line="54">
<tag>robot:skip</tag>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20241013 17:03:49.640" endtime="20241013 17:03:49.640">Test skipped using 'robot:skip' tag.</status>
</test>
<doc>S3 Secret Generate test</doc>
<status status="PASS" starttime="20241013 17:03:05.195" endtime="20241013 17:03:49.641"/>
</suite>
<suite id="s1-s5-s17" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<test id="s1-s5-s17-t1" name="S3 Gateway Revoke Secret" line="34">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:03:49.652" endtime="20241013 17:03:49.652"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:49.656" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:49.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:49.660" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 17:03:49.654" endtime="20241013 17:03:49.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:49.661" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 17:03:49.661" endtime="20241013 17:03:49.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:49.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:49.661" endtime="20241013 17:03:49.662"/>
</kw>
<status status="PASS" starttime="20241013 17:03:49.653" endtime="20241013 17:03:49.662"/>
</kw>
<msg timestamp="20241013 17:03:49.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:03:49.653" endtime="20241013 17:03:49.662"/>
</kw>
<msg timestamp="20241013 17:03:49.662" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 17:03:49.653" endtime="20241013 17:03:49.662"/>
</kw>
<msg timestamp="20241013 17:03:49.663" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:03:49.652" endtime="20241013 17:03:49.663"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 17:03:49.663" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:03:49.663" endtime="20241013 17:03:49.663"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:49.667" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:49.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:03:49.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:03:49.665" endtime="20241013 17:03:49.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:49.816" level="INFO"/>
<status status="PASS" starttime="20241013 17:03:49.816" endtime="20241013 17:03:49.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:03:49.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:03:49.817" endtime="20241013 17:03:49.817"/>
</kw>
<status status="PASS" starttime="20241013 17:03:49.664" endtime="20241013 17:03:49.817"/>
</kw>
<msg timestamp="20241013 17:03:49.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:03:49.664" endtime="20241013 17:03:49.817"/>
</kw>
<status status="PASS" starttime="20241013 17:03:49.664" endtime="20241013 17:03:49.817"/>
</kw>
<status status="PASS" starttime="20241013 17:03:49.663" endtime="20241013 17:03:49.817"/>
</kw>
<status status="PASS" starttime="20241013 17:03:49.652" endtime="20241013 17:03:49.818"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:49.821" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:53.243" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:53.243" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:49.818" endtime="20241013 17:03:53.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:53.244" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:53.243" endtime="20241013 17:03:53.244"/>
</kw>
<status status="PASS" starttime="20241013 17:03:49.818" endtime="20241013 17:03:53.244"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:53.247" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:03:56.468" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:03:56.468" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:53.245" endtime="20241013 17:03:56.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:03:56.469" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:56.468" endtime="20241013 17:03:56.469"/>
</kw>
<status status="PASS" starttime="20241013 17:03:53.244" endtime="20241013 17:03:56.469"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:03:56.473" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:00.024" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:04:00.024" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:03:56.470" endtime="20241013 17:04:00.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:00.026" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:04:00.025" endtime="20241013 17:04:00.026"/>
</kw>
<status status="PASS" starttime="20241013 17:03:56.470" endtime="20241013 17:04:00.026"/>
</kw>
<status status="PASS" starttime="20241013 17:03:49.818" endtime="20241013 17:04:00.026"/>
</kw>
<status status="PASS" starttime="20241013 17:03:49.652" endtime="20241013 17:04:00.026"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:04:00.026" endtime="20241013 17:04:00.027"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:00.031" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:03.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:03.405" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=516bb1f3c455ab21c90f6754c0b845f016bc5f1fcbfd4a985b1b10ce325d8401</msg>
<status status="PASS" starttime="20241013 17:04:00.028" endtime="20241013 17:04:03.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:03.406" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=516bb1f3c455ab21c90f6754c0b845f016bc5f1fcbfd4a985b1b10ce325d8401</msg>
<status status="PASS" starttime="20241013 17:04:03.406" endtime="20241013 17:04:03.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:03.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:03.407" endtime="20241013 17:04:03.407"/>
</kw>
<status status="PASS" starttime="20241013 17:04:00.028" endtime="20241013 17:04:03.407"/>
</kw>
<msg timestamp="20241013 17:04:03.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:00.027" endtime="20241013 17:04:03.408"/>
</kw>
<status status="PASS" starttime="20241013 17:04:00.027" endtime="20241013 17:04:03.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:03.412" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:03.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:03.520" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20241013 17:04:03.409" endtime="20241013 17:04:03.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:03.521" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.25.0.114...
* TCP_NODELAY set
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; DELETE /secret HTTP/1.1
&gt; Host: s3g:9878
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret'
* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
* Found bundle for host s3g: 0x55af26d89870 [can pipeline]
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using Negotiate with user ''
&gt; DELETE /secret HTTP/1.1
&gt; Host: s3g:9878
&gt; Authorization: Negotiate YIIClwYGKwYBBQUCoIICizCCAoegDTALBgkqhkiG9xIBAgKiggJ0BIICcGCCAmwGCSqGSIb3EgECAgEAboICWzCCAlegAwIBBaEDAgEOogcDBQAgAAAAo4IBZ2GCAWMwggFfoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEvMIIBK6ADAgESoQMCAQGiggEdBIIBGRcWGwVG7AB5KCc/bHfNUKQ9d8K68MdYshKKtUgoFsPlRR4HntfsacyXEeWHD6WbDshKaQ9oa4iCYXd/EbnG/XyJvAFXRNfVn5ivj80XHuEnFEx9ujRcgLLChZOILkxu8SEyFTEyGJ89Wkt1yIoudxkRF7zXElP9evP/OfNewa1acTxkWS9eCXVFVpSizUjgmphKEE5PSXBCXD5Y7hk1QH+kEkMYOO22yK+dZXsji8ei4lgRMN9y/Fd2qUOXaH449QtbuHSfadSj4upXFO7FpIo6CS5adpVzCgpCzeEn8WvzB64TyhqStz1TiOKDle/nZphjjGuyU9BPIE0D/BE23u3fHO0t4uB0V9hNsg9TqxOXCcZefN58PMrHpIHWMIHToAMCARKigcsEgchf60rSekuC0Mg49ZozduT/jPdl9f2oP9IhpJkNNE4zar/rNUuN6+qis8Y3PRjEp0gsKbwabD4jOm/MQwdLGQnF8SFEg+ggN43iC3RK9MoWp5OLPg+eC+/ePEP1QrTyRs+LJYnsfNBJCSmblMUBo8fbsZbi+bti7GvdTebvstlawknCnjdDSjbP4Xi17RTG9HxbmQHYPGt0mCWN82cY+0MiberBsDZkGK/6zfh5iagNir5RfdXxbB3QoIqN3UbGYZW2zP4wZ8c1Eg==
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 13 Oct 2024 17:04:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 13 Oct 2024 17:04:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQjwvIB9T53uYaEDn+g8jaNpYg4q+5ApmfOvGDznNgk4mBEQRP1dgFv32Sp8ZiAjnSNUPCROUeaNfQfOTslP8CiVC3g==
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1728875043503&amp;s=fleFyOhq+sxlYhX4Gka864cEbMoITI/Z2TN1+EbE9Jc="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: 7ivmUw5t3BS
&lt; x-amz-request-id: 62fd17c4-8d3b-4eb6-96d4-f6338f1b04c7
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0</msg>
<status status="PASS" starttime="20241013 17:04:03.520" endtime="20241013 17:04:03.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:03.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:03.521" endtime="20241013 17:04:03.522"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.409" endtime="20241013 17:04:03.522"/>
</kw>
<msg timestamp="20241013 17:04:03.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:03.408" endtime="20241013 17:04:03.522"/>
</kw>
<msg timestamp="20241013 17:04:03.522" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20241013 17:04:03.408" endtime="20241013 17:04:03.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:03.523" endtime="20241013 17:04:03.523"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:03:49.651" endtime="20241013 17:04:03.523"/>
</test>
<test id="s1-s5-s17-t2" name="S3 Gateway Revoke Secret By Username" line="40">
<tag>robot:skip</tag>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20241013 17:04:03.524" endtime="20241013 17:04:03.524">Test skipped using 'robot:skip' tag.</status>
</test>
<test id="s1-s5-s17-t3" name="S3 Gateway Revoke Secret By Username For Other User" line="47">
<tag>robot:skip</tag>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20241013 17:04:03.525" endtime="20241013 17:04:03.525">Test skipped using 'robot:skip' tag.</status>
</test>
<doc>S3 Secret Revoke test</doc>
<status status="PASS" starttime="20241013 17:03:49.642" endtime="20241013 17:04:03.526"/>
</suite>
<suite id="s1-s5-s18" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:04:03.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:03.536" endtime="20241013 17:04:03.537"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:03.537" endtime="20241013 17:04:03.537"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:03.537" endtime="20241013 17:04:03.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:03.537" endtime="20241013 17:04:03.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:03.537" endtime="20241013 17:04:03.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:03.537" endtime="20241013 17:04:03.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:03.538" endtime="20241013 17:04:03.538"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:03.538" endtime="20241013 17:04:03.538"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:04:03.538" endtime="20241013 17:04:03.538"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.536" endtime="20241013 17:04:03.538"/>
</kw>
<test id="s1-s5-s18-t1" name="S3 Gateway Web UI" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:04:03.539" endtime="20241013 17:04:03.540"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:03.544" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:03.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:03.548" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 17:04:03.541" endtime="20241013 17:04:03.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:03.549" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 17:04:03.549" endtime="20241013 17:04:03.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:03.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:03.550" endtime="20241013 17:04:03.550"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.541" endtime="20241013 17:04:03.550"/>
</kw>
<msg timestamp="20241013 17:04:03.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:03.540" endtime="20241013 17:04:03.551"/>
</kw>
<msg timestamp="20241013 17:04:03.551" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 17:04:03.540" endtime="20241013 17:04:03.551"/>
</kw>
<msg timestamp="20241013 17:04:03.551" level="INFO">${principal} = HTTP/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:04:03.540" endtime="20241013 17:04:03.551"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:03.556" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:03.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:03.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:03.553" endtime="20241013 17:04:03.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:03.649" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:03.649" endtime="20241013 17:04:03.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:03.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:03.650" endtime="20241013 17:04:03.650"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.553" endtime="20241013 17:04:03.650"/>
</kw>
<msg timestamp="20241013 17:04:03.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:03.552" endtime="20241013 17:04:03.650"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.552" endtime="20241013 17:04:03.651"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.551" endtime="20241013 17:04:03.651"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.539" endtime="20241013 17:04:03.651"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.539" endtime="20241013 17:04:03.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:03.655" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:03.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:03.663" level="INFO">${output} = * Rebuilt URL to: http://s3g:9878/
* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
    ...</msg>
<status status="PASS" starttime="20241013 17:04:03.652" endtime="20241013 17:04:03.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:03.664" level="INFO">* Rebuilt URL to: http://s3g:9878/
* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.25.0.114...
* TCP_NODELAY set
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; Host: s3g:9878
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Sun, 13 Oct 2024 17:04:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 13 Oct 2024 17:04:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20241013 17:04:03.664" endtime="20241013 17:04:03.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:03.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:03.665" endtime="20241013 17:04:03.665"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.652" endtime="20241013 17:04:03.665"/>
</kw>
<msg timestamp="20241013 17:04:03.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:03.651" endtime="20241013 17:04:03.666"/>
</kw>
<msg timestamp="20241013 17:04:03.666" level="INFO">${result} = * Rebuilt URL to: http://s3g:9878/
* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
    ...</msg>
<status status="PASS" starttime="20241013 17:04:03.651" endtime="20241013 17:04:03.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location:</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:03.666" endtime="20241013 17:04:03.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:03.667" endtime="20241013 17:04:03.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:03.671" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:03.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:03.836" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20241013 17:04:03.668" endtime="20241013 17:04:03.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:03.837" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.25.0.114...
* TCP_NODELAY set
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; Host: s3g:9878
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 464
&lt; 
* Ignoring the response-body
{ [464 bytes data]

100   464  100   464    0     0   3156      0 --:--:-- --:--:-- --:--:--  3156
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/static/index.html'
* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
* Found bundle for host s3g: 0x55ad2fedd870 [can pipeline]
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using Negotiate with user ''
&gt; GET /static/index.html HTTP/1.1
&gt; Host: s3g:9878
&gt; Authorization: Negotiate YIICfAYGKwYBBQUCoIICcDCCAmygDTALBgkqhkiG9xIBAgKiggJZBIICVWCCAlEGCSqGSIb3EgECAgEAboICQDCCAjygAwIBBaEDAgEOogcDBQAgAAAAo4IBUGGCAUwwggFIoAMCAQWhDRsLRVhBTVBMRS5DT02iFjAUoAMCAQOhDTALGwRIVFRQGwNzM2ejggEYMIIBFKADAgESoQMCAQGiggEGBIIBAk/LOw5EXwbKLZoFzqjpgHWOHCltGROxGN7LqESzdw3vmffUVZ6O1w3YjgPYfE4BjvcqDZQBvzJOTEK9V7UMO6aIGd6MUoWlY809Aw0FmBxjhuPct9IxP9etAuqvmEcP59IxXh+SMG+lmdJ0t60r8k1huFDQ1UydrTkaiYmeZ/dN/TmIhrIshJt0PExD9WCQPXbi2VxXiZ/JfYeFsU3d//2ilQM/fJMhp2OFsjdOBQNP7eJ7a0B6hiCeS6zlZaUp5CcPlMdHpyc0iTkKhT0aXt7Q+BTV5UVJIK6pplIEEILugYvzqdSQQhiTsUvvJ+kvHpjV/8SGHV0enGqR4+bpCJl9+6SB0jCBz6ADAgESooHHBIHE1s/XIu3KiAD1dS5EaDp9H17iySS//71QXROQLzJPBV0oT3OdMHL1mz4GWLsY3xBdHbHvTKAGcmFSMdPi9Cp8QRLwt1/8T4V08AFh4uiUV+m4zINmiq0sh/P5BkwggxU6JpmECcDQ61GjpT06AJ2k/NMkDKme2Q8s1pZGAnP9+gwkIFi0QBfg32vL6jOCFZv7KoI42mi5q9qSib5Ueb51fpDKNxcmfEG5ql3i+l7AQJ6coI6WAHDE73C1s54/GZ6nVWKdwQ==
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 13 Oct 2024 17:04:03 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQlbM31bIZOA4XAlG4i47eU/tHXOYJwAv0IboXu5Tfc0HzhMh5WQvKO50aMLyOM/etQxoumbEhH4eyyNxCFsgWEa9gQ==
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1728875043827&amp;s=ubbQBTQH4fkio27nCVtJv85/M/C+jkNM0kEHFT5VBlM="; Path=/; HttpOnly
&lt; Last-Modified: Sun, 13 Oct 2024 16:27:08 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [3106 bytes data]

100  3106  100  3106    0     0  19783      0 --:--:-- --:--:-- --:--:-- 19783
* Closing connection 0
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20241013 17:04:03.836" endtime="20241013 17:04:03.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:03.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:03.837" endtime="20241013 17:04:03.838"/>
</kw>
<status status="PASS" starttime="20241013 17:04:03.668" endtime="20241013 17:04:03.838"/>
</kw>
<msg timestamp="20241013 17:04:03.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:03.668" endtime="20241013 17:04:03.838"/>
</kw>
<msg timestamp="20241013 17:04:03.838" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20241013 17:04:03.667" endtime="20241013 17:04:03.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:03.838" endtime="20241013 17:04:03.839"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:03.538" endtime="20241013 17:04:03.839"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20241013 17:04:03.527" endtime="20241013 17:04:03.839"/>
</suite>
<status status="PASS" starttime="20241013 16:59:59.805" endtime="20241013 17:04:03.844"/>
</suite>
<suite id="s1-s6" name="s3-link" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:04:04.696" endtime="20241013 17:04:04.696"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:04:04.697" level="INFO">${randStr} = 0033536567</msg>
<status status="PASS" starttime="20241013 17:04:04.697" endtime="20241013 17:04:04.697"/>
</kw>
<msg timestamp="20241013 17:04:04.697" level="INFO">${random} = ozone-test-0033536567</msg>
<status status="PASS" starttime="20241013 17:04:04.697" endtime="20241013 17:04:04.697"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:04:04.699" level="INFO">${PREFIX} = ozone-test-0033536567</msg>
<status status="PASS" starttime="20241013 17:04:04.698" endtime="20241013 17:04:04.699"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.696" endtime="20241013 17:04:04.699"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.696" endtime="20241013 17:04:04.699"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:04.712" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:04.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:04.715" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20241013 17:04:04.699" endtime="20241013 17:04:04.715"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:04:04.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:04.716" endtime="20241013 17:04:04.716"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20241013 17:04:04.716" endtime="20241013 17:04:04.716"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:04.717" endtime="20241013 17:04:04.717"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20241013 17:04:04.717" endtime="20241013 17:04:04.717"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:04.717" endtime="20241013 17:04:04.717"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.699" endtime="20241013 17:04:04.717"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.699" endtime="20241013 17:04:04.717"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:04:04.719" endtime="20241013 17:04:04.719"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:04.722" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:04.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:04.726" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 17:04:04.720" endtime="20241013 17:04:04.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:04.726" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 17:04:04.726" endtime="20241013 17:04:04.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:04.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:04.727" endtime="20241013 17:04:04.727"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.720" endtime="20241013 17:04:04.727"/>
</kw>
<msg timestamp="20241013 17:04:04.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:04.720" endtime="20241013 17:04:04.727"/>
</kw>
<msg timestamp="20241013 17:04:04.727" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 17:04:04.719" endtime="20241013 17:04:04.727"/>
</kw>
<msg timestamp="20241013 17:04:04.728" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:04:04.719" endtime="20241013 17:04:04.728"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 17:04:04.728" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:04:04.728" endtime="20241013 17:04:04.728"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:04.732" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:04.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:04.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:04.730" endtime="20241013 17:04:04.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:04.819" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:04.819" endtime="20241013 17:04:04.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:04.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:04.820" endtime="20241013 17:04:04.820"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.730" endtime="20241013 17:04:04.820"/>
</kw>
<msg timestamp="20241013 17:04:04.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:04.729" endtime="20241013 17:04:04.820"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.729" endtime="20241013 17:04:04.820"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.728" endtime="20241013 17:04:04.821"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.718" endtime="20241013 17:04:04.821"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.718" endtime="20241013 17:04:04.821"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:04.825" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:08.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:08.133" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=70fdc28d5d5a9fdf4b65b744c4ae0fd611a8103f22cf7ca49d2fd08dd6e0dd9b</msg>
<status status="PASS" starttime="20241013 17:04:04.822" endtime="20241013 17:04:08.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:08.134" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=70fdc28d5d5a9fdf4b65b744c4ae0fd611a8103f22cf7ca49d2fd08dd6e0dd9b</msg>
<status status="PASS" starttime="20241013 17:04:08.133" endtime="20241013 17:04:08.134"/>
</kw>
<msg timestamp="20241013 17:04:08.134" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=70fdc28d5d5a9fdf4b65b744c4ae0fd611a8103f22cf7ca49d2fd08dd6e0dd9b</msg>
<status status="PASS" starttime="20241013 17:04:04.822" endtime="20241013 17:04:08.134"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20241013 17:04:08.135" level="FAIL">'awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=70fdc28d5d5a9fdf4b65b744c4ae0fd611a8103f22cf7ca49d2fd08dd6e0dd9b' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20241013 17:04:08.135" endtime="20241013 17:04:08.135"/>
</kw>
<msg timestamp="20241013 17:04:08.135" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20241013 17:04:08.134" endtime="20241013 17:04:08.135"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20241013 17:04:08.136" endtime="20241013 17:04:08.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20241013 17:04:08.136" endtime="20241013 17:04:08.136"/>
</kw>
<status status="NOT RUN" starttime="20241013 17:04:08.136" endtime="20241013 17:04:08.136"/>
</branch>
<status status="PASS" starttime="20241013 17:04:08.136" endtime="20241013 17:04:08.136"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241013 17:04:08.137" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241013 17:04:08.136" endtime="20241013 17:04:08.137"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241013 17:04:08.137" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20241013 17:04:08.137" endtime="20241013 17:04:08.137"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20241013 17:04:08.138" level="INFO">${secret} = ['70fdc28d5d5a9fdf4b65b744c4ae0fd611a8103f22cf7ca49d2fd08dd6e0dd9b']</msg>
<status status="PASS" starttime="20241013 17:04:08.137" endtime="20241013 17:04:08.138"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 17:04:08.139" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:04:08.138" endtime="20241013 17:04:08.139"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241013 17:04:08.140" level="INFO">${secret} = 70fdc28d5d5a9fdf4b65b744c4ae0fd611a8103f22cf7ca49d2fd08dd6e0dd9b</msg>
<status status="PASS" starttime="20241013 17:04:08.139" endtime="20241013 17:04:08.140"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:08.143" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:08.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:08.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:08.141" endtime="20241013 17:04:08.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:08.549" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:08.548" endtime="20241013 17:04:08.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:08.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:08.549" endtime="20241013 17:04:08.549"/>
</kw>
<status status="PASS" starttime="20241013 17:04:08.140" endtime="20241013 17:04:08.550"/>
</kw>
<msg timestamp="20241013 17:04:08.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:08.140" endtime="20241013 17:04:08.550"/>
</kw>
<status status="PASS" starttime="20241013 17:04:08.140" endtime="20241013 17:04:08.550"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:08.553" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:08.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:08.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:08.551" endtime="20241013 17:04:08.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:08.962" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:08.962" endtime="20241013 17:04:08.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:08.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:08.962" endtime="20241013 17:04:08.963"/>
</kw>
<status status="PASS" starttime="20241013 17:04:08.551" endtime="20241013 17:04:08.963"/>
</kw>
<msg timestamp="20241013 17:04:08.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:08.550" endtime="20241013 17:04:08.963"/>
</kw>
<status status="PASS" starttime="20241013 17:04:08.550" endtime="20241013 17:04:08.963"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:08.967" level="INFO">Running command 'aws configure set aws_secret_access_key 70fdc28d5d5a9fdf4b65b744c4ae0fd611a8103f22cf7ca49d2fd08dd6e0dd9b 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:09.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:09.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:08.965" endtime="20241013 17:04:09.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:09.364" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:09.363" endtime="20241013 17:04:09.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:09.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:09.364" endtime="20241013 17:04:09.364"/>
</kw>
<status status="PASS" starttime="20241013 17:04:08.964" endtime="20241013 17:04:09.364"/>
</kw>
<msg timestamp="20241013 17:04:09.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:08.964" endtime="20241013 17:04:09.365"/>
</kw>
<status status="PASS" starttime="20241013 17:04:08.964" endtime="20241013 17:04:09.365"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:09.368" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:09.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:09.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:09.366" endtime="20241013 17:04:09.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:09.771" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:09.770" endtime="20241013 17:04:09.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:09.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:09.771" endtime="20241013 17:04:09.772"/>
</kw>
<status status="PASS" starttime="20241013 17:04:09.365" endtime="20241013 17:04:09.772"/>
</kw>
<msg timestamp="20241013 17:04:09.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:09.365" endtime="20241013 17:04:09.772"/>
</kw>
<status status="PASS" starttime="20241013 17:04:09.365" endtime="20241013 17:04:09.772"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:09.776" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:10.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:10.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:09.773" endtime="20241013 17:04:10.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:10.176" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:10.176" endtime="20241013 17:04:10.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:10.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:10.176" endtime="20241013 17:04:10.177"/>
</kw>
<status status="PASS" starttime="20241013 17:04:09.773" endtime="20241013 17:04:10.177"/>
</kw>
<msg timestamp="20241013 17:04:10.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:09.773" endtime="20241013 17:04:10.177"/>
</kw>
<status status="PASS" starttime="20241013 17:04:09.772" endtime="20241013 17:04:10.177"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.821" endtime="20241013 17:04:10.177"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.821" endtime="20241013 17:04:10.177"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:04:10.177" endtime="20241013 17:04:10.178"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.718" endtime="20241013 17:04:10.178"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.717" endtime="20241013 17:04:10.178"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:04:10.178" endtime="20241013 17:04:10.178"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:10.182" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://omservice/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:14.197" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:04:14.197" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20241013 17:04:10.179" endtime="20241013 17:04:14.197"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:04:14.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:14.198" endtime="20241013 17:04:14.198"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:14.199" endtime="20241013 17:04:14.199"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:14.199" endtime="20241013 17:04:14.199"/>
</kw>
<msg timestamp="20241013 17:04:14.199" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20241013 17:04:10.179" endtime="20241013 17:04:14.199"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:04:14.199" endtime="20241013 17:04:14.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:14.203" level="INFO">Running command 'ozone sh volume create o3://omservice/legacy 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:17.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:17.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:14.201" endtime="20241013 17:04:17.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:17.873" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:17.872" endtime="20241013 17:04:17.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:17.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:17.873" endtime="20241013 17:04:17.873"/>
</kw>
<status status="PASS" starttime="20241013 17:04:14.200" endtime="20241013 17:04:17.873"/>
</kw>
<msg timestamp="20241013 17:04:17.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:14.200" endtime="20241013 17:04:17.874"/>
</kw>
<status status="PASS" starttime="20241013 17:04:14.200" endtime="20241013 17:04:17.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --layout ${BUCKET_LAYOUT} o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:17.878" level="INFO">Running command 'ozone sh bucket create --layout OBJECT_STORE o3://omservice/legacy/source-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:21.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:21.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:17.875" endtime="20241013 17:04:21.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:21.816" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:21.815" endtime="20241013 17:04:21.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:21.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:21.816" endtime="20241013 17:04:21.817"/>
</kw>
<status status="PASS" starttime="20241013 17:04:17.875" endtime="20241013 17:04:21.817"/>
</kw>
<msg timestamp="20241013 17:04:21.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:17.874" endtime="20241013 17:04:21.817"/>
</kw>
<status status="PASS" starttime="20241013 17:04:17.874" endtime="20241013 17:04:21.817"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:21.821" level="INFO">Running command 'ozone sh bucket link o3://omservice/legacy/source-bucket o3://omservice/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:25.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:25.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:21.818" endtime="20241013 17:04:25.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:25.856" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:25.855" endtime="20241013 17:04:25.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:25.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:25.856" endtime="20241013 17:04:25.856"/>
</kw>
<status status="PASS" starttime="20241013 17:04:21.818" endtime="20241013 17:04:25.857"/>
</kw>
<msg timestamp="20241013 17:04:25.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:21.818" endtime="20241013 17:04:25.857"/>
</kw>
<status status="PASS" starttime="20241013 17:04:21.818" endtime="20241013 17:04:25.857"/>
</kw>
<status status="PASS" starttime="20241013 17:04:21.817" endtime="20241013 17:04:25.857"/>
</kw>
<status status="PASS" starttime="20241013 17:04:10.179" endtime="20241013 17:04:25.857"/>
</kw>
<status status="PASS" starttime="20241013 17:04:10.178" endtime="20241013 17:04:25.857"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:04:25.857" endtime="20241013 17:04:25.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241013 17:04:25.858" endtime="20241013 17:04:25.858"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:04:25.858" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20241013 17:04:25.858" endtime="20241013 17:04:25.858"/>
</kw>
<status status="PASS" starttime="20241013 17:04:04.695" endtime="20241013 17:04:25.858"/>
</kw>
<suite id="s1-s6-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:04:25.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:25.867" endtime="20241013 17:04:25.868"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:25.868" endtime="20241013 17:04:25.868"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:25.868" endtime="20241013 17:04:25.868"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:25.868" endtime="20241013 17:04:25.868"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:25.868" endtime="20241013 17:04:25.868"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:25.868" endtime="20241013 17:04:25.868"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:25.868" endtime="20241013 17:04:25.868"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:25.869" endtime="20241013 17:04:25.869"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:04:25.869" endtime="20241013 17:04:25.869"/>
</kw>
<status status="PASS" starttime="20241013 17:04:25.867" endtime="20241013 17:04:25.869"/>
</kw>
<test id="s1-s6-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:25.873" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:04:25.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:25.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:25.870" endtime="20241013 17:04:25.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:25.877" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:25.877" endtime="20241013 17:04:25.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:25.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:25.878" endtime="20241013 17:04:25.878"/>
</kw>
<status status="PASS" starttime="20241013 17:04:25.870" endtime="20241013 17:04:25.878"/>
</kw>
<msg timestamp="20241013 17:04:25.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:25.870" endtime="20241013 17:04:25.878"/>
</kw>
<status status="PASS" starttime="20241013 17:04:25.869" endtime="20241013 17:04:25.878"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:25.882" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:26.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:26.403" level="INFO">${output} = Completed 29 Bytes/29 Bytes (420 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                  </msg>
<status status="PASS" starttime="20241013 17:04:25.880" endtime="20241013 17:04:26.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:26.405" level="INFO">Completed 29 Bytes/29 Bytes (420 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                  </msg>
<status status="PASS" starttime="20241013 17:04:26.404" endtime="20241013 17:04:26.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:26.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:26.405" endtime="20241013 17:04:26.406"/>
</kw>
<status status="PASS" starttime="20241013 17:04:25.880" endtime="20241013 17:04:26.406"/>
</kw>
<msg timestamp="20241013 17:04:26.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:25.879" endtime="20241013 17:04:26.406"/>
</kw>
<msg timestamp="20241013 17:04:26.406" level="INFO">${output} = Completed 29 Bytes/29 Bytes (420 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                  </msg>
<status status="PASS" starttime="20241013 17:04:25.879" endtime="20241013 17:04:26.406"/>
</kw>
<msg timestamp="20241013 17:04:26.406" level="INFO">${result} = Completed 29 Bytes/29 Bytes (420 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                  </msg>
<status status="PASS" starttime="20241013 17:04:25.879" endtime="20241013 17:04:26.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:26.406" endtime="20241013 17:04:26.407"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:26.413" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:26.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:26.899" level="INFO">${output} = Completed 29 Bytes/29 Bytes (968 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20241013 17:04:26.410" endtime="20241013 17:04:26.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:26.900" level="INFO">Completed 29 Bytes/29 Bytes (968 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20241013 17:04:26.899" endtime="20241013 17:04:26.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:26.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:26.900" endtime="20241013 17:04:26.901"/>
</kw>
<status status="PASS" starttime="20241013 17:04:26.409" endtime="20241013 17:04:26.901"/>
</kw>
<msg timestamp="20241013 17:04:26.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:26.409" endtime="20241013 17:04:26.901"/>
</kw>
<msg timestamp="20241013 17:04:26.901" level="INFO">${output} = Completed 29 Bytes/29 Bytes (968 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20241013 17:04:26.408" endtime="20241013 17:04:26.901"/>
</kw>
<msg timestamp="20241013 17:04:26.901" level="INFO">${result} = Completed 29 Bytes/29 Bytes (968 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20241013 17:04:26.407" endtime="20241013 17:04:26.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:26.901" endtime="20241013 17:04:26.902"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:26.905" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:27.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:27.392" level="INFO">${output} =                            PRE dir1/
2024-10-13 17:04:26         29 testfile</msg>
<status status="PASS" starttime="20241013 17:04:26.903" endtime="20241013 17:04:27.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:27.393" level="INFO">                           PRE dir1/
2024-10-13 17:04:26         29 testfile</msg>
<status status="PASS" starttime="20241013 17:04:27.393" endtime="20241013 17:04:27.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:27.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:27.394" endtime="20241013 17:04:27.394"/>
</kw>
<status status="PASS" starttime="20241013 17:04:26.903" endtime="20241013 17:04:27.394"/>
</kw>
<msg timestamp="20241013 17:04:27.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:26.903" endtime="20241013 17:04:27.394"/>
</kw>
<msg timestamp="20241013 17:04:27.394" level="INFO">${output} =                            PRE dir1/
2024-10-13 17:04:26         29 testfile</msg>
<status status="PASS" starttime="20241013 17:04:26.902" endtime="20241013 17:04:27.394"/>
</kw>
<msg timestamp="20241013 17:04:27.395" level="INFO">${result} =                            PRE dir1/
2024-10-13 17:04:26         29 testfile</msg>
<status status="PASS" starttime="20241013 17:04:26.902" endtime="20241013 17:04:27.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:27.395" endtime="20241013 17:04:27.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:27.395" endtime="20241013 17:04:27.395"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:27.395" endtime="20241013 17:04:27.396"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:27.399" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:27.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:27.869" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20241013 17:04:27.397" endtime="20241013 17:04:27.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:27.870" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20241013 17:04:27.869" endtime="20241013 17:04:27.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:27.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:27.870" endtime="20241013 17:04:27.870"/>
</kw>
<status status="PASS" starttime="20241013 17:04:27.397" endtime="20241013 17:04:27.871"/>
</kw>
<msg timestamp="20241013 17:04:27.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:27.397" endtime="20241013 17:04:27.871"/>
</kw>
<msg timestamp="20241013 17:04:27.871" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20241013 17:04:27.396" endtime="20241013 17:04:27.871"/>
</kw>
<msg timestamp="20241013 17:04:27.871" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20241013 17:04:27.396" endtime="20241013 17:04:27.871"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:27.871" endtime="20241013 17:04:27.872"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:27.872" endtime="20241013 17:04:27.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:27.872" endtime="20241013 17:04:27.872"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:27.876" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:28.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:28.335" level="INFO">${output} = 2024-10-13 17:04:26         29 file</msg>
<status status="PASS" starttime="20241013 17:04:27.874" endtime="20241013 17:04:28.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:28.336" level="INFO">2024-10-13 17:04:26         29 file</msg>
<status status="PASS" starttime="20241013 17:04:28.336" endtime="20241013 17:04:28.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:28.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:28.337" endtime="20241013 17:04:28.337"/>
</kw>
<status status="PASS" starttime="20241013 17:04:27.874" endtime="20241013 17:04:28.337"/>
</kw>
<msg timestamp="20241013 17:04:28.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:27.873" endtime="20241013 17:04:28.337"/>
</kw>
<msg timestamp="20241013 17:04:28.338" level="INFO">${output} = 2024-10-13 17:04:26         29 file</msg>
<status status="PASS" starttime="20241013 17:04:27.873" endtime="20241013 17:04:28.338"/>
</kw>
<msg timestamp="20241013 17:04:28.338" level="INFO">${result} = 2024-10-13 17:04:26         29 file</msg>
<status status="PASS" starttime="20241013 17:04:27.872" endtime="20241013 17:04:28.338"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:28.338" endtime="20241013 17:04:28.338"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:28.339" endtime="20241013 17:04:28.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:28.339" endtime="20241013 17:04:28.339"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:25.869" endtime="20241013 17:04:28.340"/>
</test>
<test id="s1-s6-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:28.344" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:04:28.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:28.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:28.342" endtime="20241013 17:04:28.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:28.349" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:28.349" endtime="20241013 17:04:28.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:28.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:28.350" endtime="20241013 17:04:28.350"/>
</kw>
<status status="PASS" starttime="20241013 17:04:28.341" endtime="20241013 17:04:28.350"/>
</kw>
<msg timestamp="20241013 17:04:28.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:28.341" endtime="20241013 17:04:28.350"/>
</kw>
<status status="PASS" starttime="20241013 17:04:28.341" endtime="20241013 17:04:28.350"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:28.355" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:28.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:28.853" level="INFO">${output} = Completed 29 Bytes/29 Bytes (794 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20241013 17:04:28.352" endtime="20241013 17:04:28.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:28.855" level="INFO">Completed 29 Bytes/29 Bytes (794 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20241013 17:04:28.854" endtime="20241013 17:04:28.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:28.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:28.855" endtime="20241013 17:04:28.855"/>
</kw>
<status status="PASS" starttime="20241013 17:04:28.352" endtime="20241013 17:04:28.856"/>
</kw>
<msg timestamp="20241013 17:04:28.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:28.351" endtime="20241013 17:04:28.856"/>
</kw>
<msg timestamp="20241013 17:04:28.856" level="INFO">${output} = Completed 29 Bytes/29 Bytes (794 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20241013 17:04:28.351" endtime="20241013 17:04:28.856"/>
</kw>
<msg timestamp="20241013 17:04:28.856" level="INFO">${result} = Completed 29 Bytes/29 Bytes (794 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b          </msg>
<status status="PASS" starttime="20241013 17:04:28.351" endtime="20241013 17:04:28.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:28.856" endtime="20241013 17:04:28.857"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:28.861" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:29.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:29.340" level="INFO">${output} = 2024-10-13 17:04:28         29 a+b</msg>
<status status="PASS" starttime="20241013 17:04:28.859" endtime="20241013 17:04:29.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:29.341" level="INFO">2024-10-13 17:04:28         29 a+b</msg>
<status status="PASS" starttime="20241013 17:04:29.340" endtime="20241013 17:04:29.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:29.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:29.341" endtime="20241013 17:04:29.342"/>
</kw>
<status status="PASS" starttime="20241013 17:04:28.858" endtime="20241013 17:04:29.342"/>
</kw>
<msg timestamp="20241013 17:04:29.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:28.858" endtime="20241013 17:04:29.342"/>
</kw>
<msg timestamp="20241013 17:04:29.342" level="INFO">${output} = 2024-10-13 17:04:28         29 a+b</msg>
<status status="PASS" starttime="20241013 17:04:28.857" endtime="20241013 17:04:29.342"/>
</kw>
<msg timestamp="20241013 17:04:29.342" level="INFO">${result} = 2024-10-13 17:04:28         29 a+b</msg>
<status status="PASS" starttime="20241013 17:04:28.857" endtime="20241013 17:04:29.342"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:29.342" endtime="20241013 17:04:29.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:29.343" endtime="20241013 17:04:29.343"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:28.340" endtime="20241013 17:04:29.343"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:04:25.859" endtime="20241013 17:04:29.344"/>
</suite>
<suite id="s1-s6-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:04:29.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:29.358" endtime="20241013 17:04:29.358"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:29.359" endtime="20241013 17:04:29.359"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:29.359" endtime="20241013 17:04:29.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:29.359" endtime="20241013 17:04:29.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:29.359" endtime="20241013 17:04:29.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:29.359" endtime="20241013 17:04:29.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:29.359" endtime="20241013 17:04:29.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:29.359" endtime="20241013 17:04:29.359"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:04:29.360" endtime="20241013 17:04:29.360"/>
</kw>
<status status="PASS" starttime="20241013 17:04:29.358" endtime="20241013 17:04:29.360"/>
</kw>
<test id="s1-s6-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:29.364" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:31.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:31.761" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20241013 17:04:29.361" endtime="20241013 17:04:31.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:31.762" level="INFO">test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To continue receiving service updates, bug fixes, and security updates please upgrade to Python 3.7 or later. More information can be found here: https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/
  warnings.warn(warning, PythonDeprecationWarning)
ok
test_list_bucket (__main__.TestBotoClient) ... {'ResponseMetadata': {'RequestId': 'ec466ed6-a300-42cb-aead-a0816e9dd145', 'HostId': 'f3L7KTomvupHf0', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:29 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:29 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-izxptqsudp', 'server': 'Ozone', 'x-amz-id-2': 'f3L7KTomvupHf0', 'x-amz-request-id': 'ec466ed6-a300-42cb-aead-a0816e9dd145', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-izxptqsudp'}
None
None
None
{'ResponseMetadata': {'RequestId': '75f06d09-ddce-4b92-a947-5187b67bcfe4', 'HostId': 'ImqNpdvZ', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:30 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:30 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-mjeqqbfjca', 'server': 'Ozone', 'x-amz-id-2': 'ImqNpdvZ', 'x-amz-request-id': '75f06d09-ddce-4b92-a947-5187b67bcfe4', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-mjeqqbfjca'}
{'ResponseMetadata': {'RequestId': '0046ee0b-c6cb-4fa8-a4f2-642d061eec5b', 'HostId': 'Sl3ZITox', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:30 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:30 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Sl3ZITox', 'x-amz-request-id': '0046ee0b-c6cb-4fa8-a4f2-642d061eec5b', 'transfer-encoding': 'chunked'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-mjeqqbfjca', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 4, 30, 427000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-0018347170', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 29, 138000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-0911889721', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 27, 137000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-7514566194', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 27, 615000, tzinfo=tzlocal())}, {'Name': 'bucket-qkfdwykoah', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 21, 600000, tzinfo=tzlocal())}, {'Name': 'destbucket-49621', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 1, 47, 712000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 12, 304000, tzinfo=tzlocal())}, {'Name': 'link', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 4, 25, 758000, tzinfo=tzlocal())}, {'Name': 'ozone-test-izxptqsudp', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 4, 29, 704000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted0', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 70000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted1', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 66000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted10', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 127000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted11', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 139000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted12', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 171000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted13', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 171000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted14', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 147000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted15', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 148000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted16', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 208000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted17', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 216000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted18', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 211000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted19', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 250000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted2', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 90000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted20', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 208000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted21', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 239000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted22', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 251000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted23', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 209000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted24', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 242000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted25', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 242000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted26', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 250000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted27', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 240000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted28', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 244000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted29', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 240000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted3', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 115000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted30', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 251000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted31', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 302000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted32', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 320000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted33', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 342000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted34', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 342000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted35', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 314000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted36', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 293000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted37', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 306000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted38', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 416000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted39', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 314000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted4', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 90000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted40', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 341000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted41', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 341000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted42', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 333000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted43', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 374000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted44', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 371000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted45', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 358000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted46', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 358000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted47', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 365000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted48', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 365000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted49', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 415000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted5', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 146000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted50', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 371000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted51', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 432000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted52', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 392000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted53', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 462000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted54', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 399000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted55', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 403000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted56', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 399000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted57', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 450000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted58', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 405000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted59', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 474000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted6', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 103000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted60', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 437000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted61', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 486000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted62', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 437000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted63', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 476000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted64', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 457000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted65', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 529000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted66', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 506000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted67', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 523000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted68', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 516000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted69', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 475000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted7', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 172000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted70', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 523000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted71', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 494000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted72', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 524000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted73', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 515000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted74', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 576000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted75', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 571000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted76', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 570000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted77', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 680000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted78', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 603000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted79', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 543000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted8', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 67000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted80', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 571000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted81', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 705000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted82', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 617000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted83', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 662000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted84', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 662000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted85', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 591000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted86', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 705000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted87', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 662000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted88', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 611000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted89', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 755000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted9', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 160000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted90', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 700000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted91', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 693000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted92', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 710000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted93', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 827000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted94', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 761000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted95', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 816000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted96', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 813000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted97', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 750000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted98', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 816000, tzinfo=tzlocal())}, {'Name': 's3bg-encrypted99', 'CreationDate': datetime.datetime(2024, 10, 13, 17, 0, 48, 820000, tzinfo=tzlocal())}]}ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 2.160s

OK

{'ResponseMetadata': {'RequestId': 'c5942f5c-d643-4930-b995-6b2c3908e634', 'HostId': 'kxUDCM3JSvPwPwZ', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:30 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:30 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'kxUDCM3JSvPwPwZ', 'x-amz-request-id': 'c5942f5c-d643-4930-b995-6b2c3908e634', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '6e58c701-44c9-4dc7-8b2d-b0a8215aed37', 'HostId': 'mvZlALZb', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:30 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:30 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'mvZlALZb', 'x-amz-request-id': '6e58c701-44c9-4dc7-8b2d-b0a8215aed37'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '1ebcc8fe-b903-4550-8fae-f430ff80f7fb', 'HostId': 'bZpmICoS', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:30 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:30 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Sun, 13 Oct 2024 17:04:30 GMT', 'server': 'Ozone', 'x-amz-id-2': 'bZpmICoS', 'x-amz-request-id': '1ebcc8fe-b903-4550-8fae-f430ff80f7fb', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2024, 10, 13, 17, 4, 30, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2024, 10, 13, 17, 4, 30, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'fb95be12-cfd7-4923-b235-e0ccbcf43b6d', 'HostId': 'V2hGfeFInzaBe', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:30 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:30 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'V2hGfeFInzaBe', 'x-amz-request-id': 'fb95be12-cfd7-4923-b235-e0ccbcf43b6d', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': 'eb8d8782-e389-4880-ad0e-23272f528e68', 'HostId': 'tZvkWASvRClY', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:30 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:30 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Sun, 13 Oct 2024 17:04:29 GMT', 'server': 'Ozone', 'x-amz-id-2': 'tZvkWASvRClY', 'x-amz-request-id': 'eb8d8782-e389-4880-ad0e-23272f528e68', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2024, 10, 13, 17, 4, 29, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2024, 10, 13, 17, 4, 30, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '461d1699-584f-4aa0-8c1c-ed8eb73c9afd', 'HostId': 'mLh7pdrIBLd', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:30 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:30 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'mLh7pdrIBLd', 'x-amz-request-id': '461d1699-584f-4aa0-8c1c-ed8eb73c9afd', 'content-length': '284'}, 'RetryAttempts': 0}, 'Bucket': 'link', 'Key': 'fvmyoucrta', 'UploadId': '3acbf2d8-7bbc-4136-8fae-877263cb42a6-113301197331632473'}
{'ResponseMetadata': {'RequestId': '482e8163-95c9-4c15-8cf2-f79a3afda951', 'HostId': 'uNlmmyrxVH4q', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 13 Oct 2024 17:04:31 GMT', 'cache-control': 'no-cache', 'expires': 'Sun, 13 Oct 2024 17:04:31 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'uNlmmyrxVH4q', 'x-amz-request-id': '482e8163-95c9-4c15-8cf2-f79a3afda951', 'content-length': '282'}, 'RetryAttempts': 0}, 'Location': 'link', 'Bucket': 'link', 'Key': 'fvmyoucrta', 'ETag': '"27474247826a4d3ef022a25bece0ad53-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20241013 17:04:31.761" endtime="20241013 17:04:31.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:31.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:31.762" endtime="20241013 17:04:31.763"/>
</kw>
<status status="PASS" starttime="20241013 17:04:29.361" endtime="20241013 17:04:31.763"/>
</kw>
<msg timestamp="20241013 17:04:31.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:29.361" endtime="20241013 17:04:31.763"/>
</kw>
<msg timestamp="20241013 17:04:31.764" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20241013 17:04:29.360" endtime="20241013 17:04:31.764"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20241013 17:04:29.360" endtime="20241013 17:04:31.764"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20241013 17:04:29.346" endtime="20241013 17:04:31.765"/>
</suite>
<suite id="s1-s6-s3" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:04:31.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:31.775" endtime="20241013 17:04:31.775"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:31.775" endtime="20241013 17:04:31.776"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:31.776" endtime="20241013 17:04:31.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:31.776" endtime="20241013 17:04:31.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:31.776" endtime="20241013 17:04:31.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:31.776" endtime="20241013 17:04:31.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:31.776" endtime="20241013 17:04:31.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:31.776" endtime="20241013 17:04:31.777"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:04:31.777" endtime="20241013 17:04:31.777"/>
</kw>
<status status="PASS" starttime="20241013 17:04:31.775" endtime="20241013 17:04:31.777"/>
</kw>
<test id="s1-s6-s3-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create link" library="commonawslib">
<arg>to-be-deleted</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:31.783" level="INFO">Running command 'ozone sh bucket link o3://omservice/legacy/source-bucket o3://omservice/s3v/to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:35.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:35.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:31.780" endtime="20241013 17:04:35.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:35.454" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:35.453" endtime="20241013 17:04:35.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:35.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:35.454" endtime="20241013 17:04:35.454"/>
</kw>
<status status="PASS" starttime="20241013 17:04:31.780" endtime="20241013 17:04:35.454"/>
</kw>
<msg timestamp="20241013 17:04:35.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:31.780" endtime="20241013 17:04:35.455"/>
</kw>
<status status="PASS" starttime="20241013 17:04:31.779" endtime="20241013 17:04:35.455"/>
</kw>
<status status="PASS" starttime="20241013 17:04:31.779" endtime="20241013 17:04:35.455"/>
</kw>
<msg timestamp="20241013 17:04:35.455" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20241013 17:04:31.778" endtime="20241013 17:04:35.455"/>
</kw>
<msg timestamp="20241013 17:04:35.455" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20241013 17:04:31.778" endtime="20241013 17:04:35.455"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:35.460" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:35.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:35.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:35.457" endtime="20241013 17:04:35.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:35.929" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:35.929" endtime="20241013 17:04:35.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:35.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:35.930" endtime="20241013 17:04:35.930"/>
</kw>
<status status="PASS" starttime="20241013 17:04:35.457" endtime="20241013 17:04:35.930"/>
</kw>
<msg timestamp="20241013 17:04:35.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:35.456" endtime="20241013 17:04:35.930"/>
</kw>
<msg timestamp="20241013 17:04:35.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:35.456" endtime="20241013 17:04:35.930"/>
</kw>
<status status="PASS" starttime="20241013 17:04:35.455" endtime="20241013 17:04:35.931"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:31.777" endtime="20241013 17:04:35.931"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:04:31.766" endtime="20241013 17:04:35.932"/>
</suite>
<suite id="s1-s6-s4" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:04:35.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:35.942" endtime="20241013 17:04:35.942"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:35.942" endtime="20241013 17:04:35.942"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:35.942" endtime="20241013 17:04:35.942"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:35.942" endtime="20241013 17:04:35.943"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:35.943" endtime="20241013 17:04:35.943"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:35.943" endtime="20241013 17:04:35.943"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:35.943" endtime="20241013 17:04:35.943"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:35.943" endtime="20241013 17:04:35.943"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:04:35.943" endtime="20241013 17:04:35.943"/>
</kw>
<status status="PASS" starttime="20241013 17:04:35.941" endtime="20241013 17:04:35.943"/>
</kw>
<test id="s1-s6-s4-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:35.948" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:36.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:36.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:35.945" endtime="20241013 17:04:36.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:36.413" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:36.412" endtime="20241013 17:04:36.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:36.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:36.413" endtime="20241013 17:04:36.413"/>
</kw>
<status status="PASS" starttime="20241013 17:04:35.945" endtime="20241013 17:04:36.414"/>
</kw>
<msg timestamp="20241013 17:04:36.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:35.945" endtime="20241013 17:04:36.414"/>
</kw>
<msg timestamp="20241013 17:04:36.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:35.944" endtime="20241013 17:04:36.414"/>
</kw>
<msg timestamp="20241013 17:04:36.414" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:04:35.944" endtime="20241013 17:04:36.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:35.944" endtime="20241013 17:04:36.414"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:04:35.933" endtime="20241013 17:04:36.415"/>
</suite>
<suite id="s1-s6-s5" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:04:36.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:36.425" endtime="20241013 17:04:36.426"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:36.426" endtime="20241013 17:04:36.426"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:36.426" endtime="20241013 17:04:36.426"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:36.426" endtime="20241013 17:04:36.426"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:36.426" endtime="20241013 17:04:36.426"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:36.426" endtime="20241013 17:04:36.426"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:36.427" endtime="20241013 17:04:36.427"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:36.427" endtime="20241013 17:04:36.427"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:04:36.427" endtime="20241013 17:04:36.427"/>
</kw>
<status status="PASS" starttime="20241013 17:04:36.425" endtime="20241013 17:04:36.427"/>
</kw>
<test id="s1-s6-s5-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:36.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:36.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:36.910" level="INFO">${output} = bucket-mjeqqbfjca
bucket-ozone-test-0018347170
bucket-ozone-test-0911889721
bucket-ozone-test-7514566194
bucket-qkfdwykoah
destbucket-49621
encrypted
link
s3bg-encrypted0
s3bg-encrypted1
s3bg-encrypte...</msg>
<status status="PASS" starttime="20241013 17:04:36.429" endtime="20241013 17:04:36.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:36.912" level="INFO">bucket-mjeqqbfjca
bucket-ozone-test-0018347170
bucket-ozone-test-0911889721
bucket-ozone-test-7514566194
bucket-qkfdwykoah
destbucket-49621
encrypted
link
s3bg-encrypted0
s3bg-encrypted1
s3bg-encrypted10
s3bg-encrypted11
s3bg-encrypted12
s3bg-encrypted13
s3bg-encrypted14
s3bg-encrypted15
s3bg-encrypted16
s3bg-encrypted17
s3bg-encrypted18
s3bg-encrypted19
s3bg-encrypted2
s3bg-encrypted20
s3bg-encrypted21
s3bg-encrypted22
s3bg-encrypted23
s3bg-encrypted24
s3bg-encrypted25
s3bg-encrypted26
s3bg-encrypted27
s3bg-encrypted28
s3bg-encrypted29
s3bg-encrypted3
s3bg-encrypted30
s3bg-encrypted31
s3bg-encrypted32
s3bg-encrypted33
s3bg-encrypted34
s3bg-encrypted35
s3bg-encrypted36
s3bg-encrypted37
s3bg-encrypted38
s3bg-encrypted39
s3bg-encrypted4
s3bg-encrypted40
s3bg-encrypted41
s3bg-encrypted42
s3bg-encrypted43
s3bg-encrypted44
s3bg-encrypted45
s3bg-encrypted46
s3bg-encrypted47
s3bg-encrypted48
s3bg-encrypted49
s3bg-encrypted5
s3bg-encrypted50
s3bg-encrypted51
s3bg-encrypted52
s3bg-encrypted53
s3bg-encrypted54
s3bg-encrypted55
s3bg-encrypted56
s3bg-encrypted57
s3bg-encrypted58
s3bg-encrypted59
s3bg-encrypted6
s3bg-encrypted60
s3bg-encrypted61
s3bg-encrypted62
s3bg-encrypted63
s3bg-encrypted64
s3bg-encrypted65
s3bg-encrypted66
s3bg-encrypted67
s3bg-encrypted68
s3bg-encrypted69
s3bg-encrypted7
s3bg-encrypted70
s3bg-encrypted71
s3bg-encrypted72
s3bg-encrypted73
s3bg-encrypted74
s3bg-encrypted75
s3bg-encrypted76
s3bg-encrypted77
s3bg-encrypted78
s3bg-encrypted79
s3bg-encrypted8
s3bg-encrypted80
s3bg-encrypted81
s3bg-encrypted82
s3bg-encrypted83
s3bg-encrypted84
s3bg-encrypted85
s3bg-encrypted86
s3bg-encrypted87
s3bg-encrypted88
s3bg-encrypted89
s3bg-encrypted9
s3bg-encrypted90
s3bg-encrypted91
s3bg-encrypted92
s3bg-encrypted93
s3bg-encrypted94
s3bg-encrypted95
s3bg-encrypted96
s3bg-encrypted97
s3bg-encrypted98
s3bg-encrypted99</msg>
<status status="PASS" starttime="20241013 17:04:36.911" endtime="20241013 17:04:36.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:36.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:36.912" endtime="20241013 17:04:36.912"/>
</kw>
<status status="PASS" starttime="20241013 17:04:36.429" endtime="20241013 17:04:36.912"/>
</kw>
<msg timestamp="20241013 17:04:36.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:36.428" endtime="20241013 17:04:36.913"/>
</kw>
<msg timestamp="20241013 17:04:36.913" level="INFO">${output} = bucket-mjeqqbfjca
bucket-ozone-test-0018347170
bucket-ozone-test-0911889721
bucket-ozone-test-7514566194
bucket-qkfdwykoah
destbucket-49621
encrypted
link
s3bg-encrypted0
s3bg-encrypted1
s3bg-encrypte...</msg>
<status status="PASS" starttime="20241013 17:04:36.428" endtime="20241013 17:04:36.913"/>
</kw>
<msg timestamp="20241013 17:04:36.913" level="INFO">${result} = bucket-mjeqqbfjca
bucket-ozone-test-0018347170
bucket-ozone-test-0911889721
bucket-ozone-test-7514566194
bucket-qkfdwykoah
destbucket-49621
encrypted
link
s3bg-encrypted0
s3bg-encrypted1
s3bg-encrypte...</msg>
<status status="PASS" starttime="20241013 17:04:36.428" endtime="20241013 17:04:36.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:36.913" endtime="20241013 17:04:36.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:36.427" endtime="20241013 17:04:36.914"/>
</test>
<test id="s1-s6-s5-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:04:36.915" endtime="20241013 17:04:36.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:36.919" level="INFO">Running command 'ozone sh bucket info /s3v/link | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:40.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:40.979" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20241013 17:04:36.916" endtime="20241013 17:04:40.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:40.981" level="INFO">testuser</msg>
<status status="PASS" starttime="20241013 17:04:40.980" endtime="20241013 17:04:40.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:40.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:40.981" endtime="20241013 17:04:40.981"/>
</kw>
<status status="PASS" starttime="20241013 17:04:36.916" endtime="20241013 17:04:40.981"/>
</kw>
<msg timestamp="20241013 17:04:40.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:36.916" endtime="20241013 17:04:40.982"/>
</kw>
<msg timestamp="20241013 17:04:40.982" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20241013 17:04:36.915" endtime="20241013 17:04:40.982"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:40.982" endtime="20241013 17:04:40.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:36.914" endtime="20241013 17:04:40.983"/>
</test>
<test id="s1-s6-s5-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:40.988" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:41.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:41.386" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:04:40.985" endtime="20241013 17:04:41.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:41.387" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:04:41.387" endtime="20241013 17:04:41.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:41.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:41.388" endtime="20241013 17:04:41.388"/>
</kw>
<status status="PASS" starttime="20241013 17:04:40.985" endtime="20241013 17:04:41.388"/>
</kw>
<msg timestamp="20241013 17:04:41.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:40.984" endtime="20241013 17:04:41.389"/>
</kw>
<msg timestamp="20241013 17:04:41.389" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:04:40.984" endtime="20241013 17:04:41.389"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20241013 17:04:41.389" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:04:41.389" endtime="20241013 17:04:41.389"/>
</kw>
<status status="PASS" starttime="20241013 17:04:40.984" endtime="20241013 17:04:41.389"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:41.393" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:41.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:41.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:41.391" endtime="20241013 17:04:41.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:41.794" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:41.793" endtime="20241013 17:04:41.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:41.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:41.794" endtime="20241013 17:04:41.795"/>
</kw>
<status status="PASS" starttime="20241013 17:04:41.390" endtime="20241013 17:04:41.795"/>
</kw>
<msg timestamp="20241013 17:04:41.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:41.390" endtime="20241013 17:04:41.795"/>
</kw>
<status status="PASS" starttime="20241013 17:04:41.390" endtime="20241013 17:04:41.795"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:41.799" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:42.275" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:04:42.275" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20241013 17:04:41.796" endtime="20241013 17:04:42.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:42.276" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20241013 17:04:42.275" endtime="20241013 17:04:42.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:42.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:42.276" endtime="20241013 17:04:42.277"/>
</kw>
<msg timestamp="20241013 17:04:42.277" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20241013 17:04:41.796" endtime="20241013 17:04:42.277"/>
</kw>
<msg timestamp="20241013 17:04:42.277" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20241013 17:04:41.795" endtime="20241013 17:04:42.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:42.277" endtime="20241013 17:04:42.278"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:42.282" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:42.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:42.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:42.280" endtime="20241013 17:04:42.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:42.687" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:42.686" endtime="20241013 17:04:42.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:42.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:42.687" endtime="20241013 17:04:42.687"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.279" endtime="20241013 17:04:42.687"/>
</kw>
<msg timestamp="20241013 17:04:42.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:42.279" endtime="20241013 17:04:42.688"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.278" endtime="20241013 17:04:42.688"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.278" endtime="20241013 17:04:42.688"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:40.983" endtime="20241013 17:04:42.688"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:04:36.416" endtime="20241013 17:04:42.689"/>
</suite>
<suite id="s1-s6-s6" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:04:42.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:42.701" endtime="20241013 17:04:42.702"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:42.702" endtime="20241013 17:04:42.702"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:04:42.702" endtime="20241013 17:04:42.702"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:42.702" endtime="20241013 17:04:42.702"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:42.702" endtime="20241013 17:04:42.702"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:42.703" endtime="20241013 17:04:42.703"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:42.703" endtime="20241013 17:04:42.703"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:04:42.703" endtime="20241013 17:04:42.703"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:04:42.703" endtime="20241013 17:04:42.703"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.701" endtime="20241013 17:04:42.703"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>5121</arg>
<arg>/tmp/part1</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:04:42.705" endtime="20241013 17:04:42.705"/>
</kw>
<msg timestamp="20241013 17:04:42.705" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20241013 17:04:42.704" endtime="20241013 17:04:42.705"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:42.709" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:42.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:42.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:42.706" endtime="20241013 17:04:42.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:42.756" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:42.756" endtime="20241013 17:04:42.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:42.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:42.756" endtime="20241013 17:04:42.757"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.706" endtime="20241013 17:04:42.757"/>
</kw>
<msg timestamp="20241013 17:04:42.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:42.706" endtime="20241013 17:04:42.757"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.705" endtime="20241013 17:04:42.757"/>
</kw>
<msg timestamp="20241013 17:04:42.757" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20241013 17:04:42.704" endtime="20241013 17:04:42.757"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.703" endtime="20241013 17:04:42.758"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>1023</arg>
<arg>/tmp/part2</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:04:42.760" endtime="20241013 17:04:42.760"/>
</kw>
<msg timestamp="20241013 17:04:42.760" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20241013 17:04:42.759" endtime="20241013 17:04:42.760"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:42.763" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:42.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:42.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:42.761" endtime="20241013 17:04:42.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:42.776" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:42.776" endtime="20241013 17:04:42.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:42.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:42.776" endtime="20241013 17:04:42.777"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.761" endtime="20241013 17:04:42.777"/>
</kw>
<msg timestamp="20241013 17:04:42.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:42.761" endtime="20241013 17:04:42.777"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.760" endtime="20241013 17:04:42.777"/>
</kw>
<msg timestamp="20241013 17:04:42.777" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20241013 17:04:42.758" endtime="20241013 17:04:42.777"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.758" endtime="20241013 17:04:42.777"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>10</arg>
<arg>/tmp/10mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:04:42.779" endtime="20241013 17:04:42.779"/>
</kw>
<msg timestamp="20241013 17:04:42.779" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20241013 17:04:42.778" endtime="20241013 17:04:42.779"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:42.783" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10mb bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:42.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:42.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:42.781" endtime="20241013 17:04:42.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:42.837" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:42.837" endtime="20241013 17:04:42.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:42.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:42.837" endtime="20241013 17:04:42.837"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.780" endtime="20241013 17:04:42.838"/>
</kw>
<msg timestamp="20241013 17:04:42.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:42.780" endtime="20241013 17:04:42.838"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.780" endtime="20241013 17:04:42.838"/>
</kw>
<msg timestamp="20241013 17:04:42.838" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20241013 17:04:42.778" endtime="20241013 17:04:42.838"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.778" endtime="20241013 17:04:42.838"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>22</arg>
<arg>/tmp/22mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:04:42.840" endtime="20241013 17:04:42.840"/>
</kw>
<msg timestamp="20241013 17:04:42.841" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20241013 17:04:42.839" endtime="20241013 17:04:42.841"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:42.844" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/22mb bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:42.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:42.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:42.842" endtime="20241013 17:04:42.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:42.960" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:42.959" endtime="20241013 17:04:42.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:42.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:42.960" endtime="20241013 17:04:42.960"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.841" endtime="20241013 17:04:42.961"/>
</kw>
<msg timestamp="20241013 17:04:42.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:42.841" endtime="20241013 17:04:42.961"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.841" endtime="20241013 17:04:42.961"/>
</kw>
<msg timestamp="20241013 17:04:42.961" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20241013 17:04:42.839" endtime="20241013 17:04:42.961"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.838" endtime="20241013 17:04:42.961"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>10</arg>
<arg>/tmp/10kb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241013 17:04:42.963" endtime="20241013 17:04:42.963"/>
</kw>
<msg timestamp="20241013 17:04:42.964" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20241013 17:04:42.962" endtime="20241013 17:04:42.964"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:42.967" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10kb bs=1024 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:42.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:42.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:42.965" endtime="20241013 17:04:42.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:42.973" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:42.973" endtime="20241013 17:04:42.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:42.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:42.973" endtime="20241013 17:04:42.974"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.964" endtime="20241013 17:04:42.974"/>
</kw>
<msg timestamp="20241013 17:04:42.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:42.964" endtime="20241013 17:04:42.974"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.964" endtime="20241013 17:04:42.974"/>
</kw>
<msg timestamp="20241013 17:04:42.974" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20241013 17:04:42.962" endtime="20241013 17:04:42.974"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.961" endtime="20241013 17:04:42.975"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.701" endtime="20241013 17:04:42.975"/>
</kw>
<test id="s1-s6-s6-t1" name="Test Multipart Upload With Adjusted Length" line="59">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:04:42.977" level="INFO">${randStr} = 7558057648</msg>
<status status="PASS" starttime="20241013 17:04:42.976" endtime="20241013 17:04:42.977"/>
</kw>
<msg timestamp="20241013 17:04:42.977" level="INFO">${random} = ozone-test-7558057648</msg>
<status status="PASS" starttime="20241013 17:04:42.976" endtime="20241013 17:04:42.977"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:04:42.977" level="INFO">${PREFIX} = ozone-test-7558057648</msg>
<status status="PASS" starttime="20241013 17:04:42.977" endtime="20241013 17:04:42.977"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.976" endtime="20241013 17:04:42.977"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:42.982" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key multipart/adjusted_length_ozone-test-7558057648 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:43.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:43.471" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-7558057648",
    "UploadId": "4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420"
}</msg>
<status status="PASS" starttime="20241013 17:04:42.980" endtime="20241013 17:04:43.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:43.472" level="INFO">{
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-7558057648",
    "UploadId": "4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420"
}</msg>
<status status="PASS" starttime="20241013 17:04:43.471" endtime="20241013 17:04:43.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:43.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:43.472" endtime="20241013 17:04:43.472"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.979" endtime="20241013 17:04:43.473"/>
</kw>
<msg timestamp="20241013 17:04:43.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:42.979" endtime="20241013 17:04:43.473"/>
</kw>
<msg timestamp="20241013 17:04:43.473" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-7558057648",
    "UploadId": "4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420"
}</msg>
<status status="PASS" starttime="20241013 17:04:42.978" endtime="20241013 17:04:43.473"/>
</kw>
<msg timestamp="20241013 17:04:43.473" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-7558057648",
    "UploadId": "4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420"
}</msg>
<status status="PASS" starttime="20241013 17:04:42.978" endtime="20241013 17:04:43.473"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:43.476" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-7558057648",
    "UploadId": "4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:43.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:43.482" level="INFO">${output} = 4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420</msg>
<status status="PASS" starttime="20241013 17:04:43.474" endtime="20241013 17:04:43.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:43.482" level="INFO">4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420</msg>
<status status="PASS" starttime="20241013 17:04:43.482" endtime="20241013 17:04:43.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:43.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:43.483" endtime="20241013 17:04:43.483"/>
</kw>
<msg timestamp="20241013 17:04:43.483" level="INFO">${upload_id} = 4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420</msg>
<status status="PASS" starttime="20241013 17:04:43.473" endtime="20241013 17:04:43.483"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20241013 17:04:43.484" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20241013 17:04:43.483" endtime="20241013 17:04:43.484"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241013 17:04:43.485" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20241013 17:04:43.484" endtime="20241013 17:04:43.485"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:43.488" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key multipart/adjusted_length_ozone-test-7558057648 --part-number 1 --body /tmp/part1 --upload-id 4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:44.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:44.132" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:43.486" endtime="20241013 17:04:44.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:44.133" level="INFO">{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:44.132" endtime="20241013 17:04:44.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:44.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:44.133" endtime="20241013 17:04:44.134"/>
</kw>
<status status="PASS" starttime="20241013 17:04:43.486" endtime="20241013 17:04:44.134"/>
</kw>
<msg timestamp="20241013 17:04:44.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:43.486" endtime="20241013 17:04:44.134"/>
</kw>
<msg timestamp="20241013 17:04:44.134" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:43.485" endtime="20241013 17:04:44.134"/>
</kw>
<msg timestamp="20241013 17:04:44.135" level="INFO">${result} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:43.485" endtime="20241013 17:04:44.135"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:44.139" level="INFO">Running command 'echo '{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:44.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:44.146" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:44.136" endtime="20241013 17:04:44.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:44.147" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:44.146" endtime="20241013 17:04:44.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:44.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:44.147" endtime="20241013 17:04:44.147"/>
</kw>
<status status="PASS" starttime="20241013 17:04:44.136" endtime="20241013 17:04:44.148"/>
</kw>
<msg timestamp="20241013 17:04:44.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:44.136" endtime="20241013 17:04:44.148"/>
</kw>
<msg timestamp="20241013 17:04:44.148" level="INFO">${etag} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:44.135" endtime="20241013 17:04:44.148"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:04:44.148" endtime="20241013 17:04:44.149"/>
</kw>
<status status="PASS" starttime="20241013 17:04:43.484" endtime="20241013 17:04:44.149"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241013 17:04:44.150" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20241013 17:04:44.149" endtime="20241013 17:04:44.150"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:44.154" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key multipart/adjusted_length_ozone-test-7558057648 --part-number 2 --body /tmp/part2 --upload-id 4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:44.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:44.720" level="INFO">${output} = {
    "ETag": "15ec51f1a06d08f0ef46fc8a1937f8cd"
}</msg>
<status status="PASS" starttime="20241013 17:04:44.152" endtime="20241013 17:04:44.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:44.721" level="INFO">{
    "ETag": "15ec51f1a06d08f0ef46fc8a1937f8cd"
}</msg>
<status status="PASS" starttime="20241013 17:04:44.721" endtime="20241013 17:04:44.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:44.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:44.722" endtime="20241013 17:04:44.722"/>
</kw>
<status status="PASS" starttime="20241013 17:04:44.151" endtime="20241013 17:04:44.723"/>
</kw>
<msg timestamp="20241013 17:04:44.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:44.151" endtime="20241013 17:04:44.723"/>
</kw>
<msg timestamp="20241013 17:04:44.723" level="INFO">${output} = {
    "ETag": "15ec51f1a06d08f0ef46fc8a1937f8cd"
}</msg>
<status status="PASS" starttime="20241013 17:04:44.150" endtime="20241013 17:04:44.723"/>
</kw>
<msg timestamp="20241013 17:04:44.723" level="INFO">${result} = {
    "ETag": "15ec51f1a06d08f0ef46fc8a1937f8cd"
}</msg>
<status status="PASS" starttime="20241013 17:04:44.150" endtime="20241013 17:04:44.723"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:44.728" level="INFO">Running command 'echo '{
    "ETag": "15ec51f1a06d08f0ef46fc8a1937f8cd"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:44.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:44.735" level="INFO">${output} = 15ec51f1a06d08f0ef46fc8a1937f8cd</msg>
<status status="PASS" starttime="20241013 17:04:44.725" endtime="20241013 17:04:44.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:44.736" level="INFO">15ec51f1a06d08f0ef46fc8a1937f8cd</msg>
<status status="PASS" starttime="20241013 17:04:44.735" endtime="20241013 17:04:44.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:44.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:44.736" endtime="20241013 17:04:44.737"/>
</kw>
<status status="PASS" starttime="20241013 17:04:44.725" endtime="20241013 17:04:44.737"/>
</kw>
<msg timestamp="20241013 17:04:44.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:44.724" endtime="20241013 17:04:44.737"/>
</kw>
<msg timestamp="20241013 17:04:44.737" level="INFO">${etag} = 15ec51f1a06d08f0ef46fc8a1937f8cd</msg>
<status status="PASS" starttime="20241013 17:04:44.724" endtime="20241013 17:04:44.737"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:04:44.738" endtime="20241013 17:04:44.738"/>
</kw>
<status status="PASS" starttime="20241013 17:04:44.149" endtime="20241013 17:04:44.738"/>
</iter>
<status status="PASS" starttime="20241013 17:04:43.484" endtime="20241013 17:04:44.738"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20241013 17:04:44.739" level="INFO">${parts} = {ETag=3083430ab1b1506ea36ca328eb7c1fc4,PartNumber=1},{ETag=15ec51f1a06d08f0ef46fc8a1937f8cd,PartNumber=2}</msg>
<status status="PASS" starttime="20241013 17:04:44.739" endtime="20241013 17:04:44.739"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:44.744" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket link --key multipart/adjusted_length_ozone-test-7558057648 --upload-id 4fbae907-d72f-4289-9f38-20728d7eefd5-113301198170755420 --multipart-upload 'Parts=[{ETag=3083430ab1b1506ea36ca328eb7c1fc4,PartNumber=1},{ETag=15ec51f1a06d08f0ef46fc8a1937f8cd,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:45.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:45.238" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-7558057648",
    "ETag": "\"7f6d57a8169f81a30c847f01966a7c75-2\""
}</msg>
<status status="PASS" starttime="20241013 17:04:44.742" endtime="20241013 17:04:45.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:45.239" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-7558057648",
    "ETag": "\"7f6d57a8169f81a30c847f01966a7c75-2\""
}</msg>
<status status="PASS" starttime="20241013 17:04:45.239" endtime="20241013 17:04:45.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:45.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:45.239" endtime="20241013 17:04:45.240"/>
</kw>
<status status="PASS" starttime="20241013 17:04:44.741" endtime="20241013 17:04:45.240"/>
</kw>
<msg timestamp="20241013 17:04:45.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:44.741" endtime="20241013 17:04:45.240"/>
</kw>
<msg timestamp="20241013 17:04:45.240" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-7558057648",
    "ETag": "\"7f6d57a8169f81a30c847f01966a7c75-2\""
}</msg>
<status status="PASS" starttime="20241013 17:04:44.740" endtime="20241013 17:04:45.240"/>
</kw>
<status status="PASS" starttime="20241013 17:04:44.739" endtime="20241013 17:04:45.240"/>
</kw>
<status status="PASS" starttime="20241013 17:04:42.977" endtime="20241013 17:04:45.241"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:04:45.242" level="INFO">${randStr} = 2854143482</msg>
<status status="PASS" starttime="20241013 17:04:45.242" endtime="20241013 17:04:45.242"/>
</kw>
<msg timestamp="20241013 17:04:45.242" level="INFO">${random} = ozone-test-2854143482</msg>
<status status="PASS" starttime="20241013 17:04:45.241" endtime="20241013 17:04:45.242"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:45.246" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key multipart/adjusted_length_ozone-test-7558057648 /tmp/verifyozone-test-2854143482 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:46.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:46.107" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"7f6d57a8169f81a30c847f01966a7c75-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:04:45.244" endtime="20241013 17:04:46.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:46.108" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"7f6d57a8169f81a30c847f01966a7c75-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:45 GMT",
    "Metadata": {},
    "PartsCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:04:46.107" endtime="20241013 17:04:46.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:46.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:46.108" endtime="20241013 17:04:46.109"/>
</kw>
<status status="PASS" starttime="20241013 17:04:45.244" endtime="20241013 17:04:46.109"/>
</kw>
<msg timestamp="20241013 17:04:46.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:45.243" endtime="20241013 17:04:46.109"/>
</kw>
<msg timestamp="20241013 17:04:46.109" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:45 GMT",
    "ContentLength": 6291456,
    "ETag": "\"7f6d57a8169f81a30c847f01966a7c75-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:04:45.243" endtime="20241013 17:04:46.109"/>
</kw>
<status status="PASS" starttime="20241013 17:04:45.242" endtime="20241013 17:04:46.109"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20241013 17:04:46.110" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20241013 17:04:46.109" endtime="20241013 17:04:46.110"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:46.113" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-2854143482'.</msg>
<msg timestamp="20241013 17:04:46.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:46.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:46.111" endtime="20241013 17:04:46.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:46.126" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:46.126" endtime="20241013 17:04:46.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:46.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:46.126" endtime="20241013 17:04:46.127"/>
</kw>
<status status="PASS" starttime="20241013 17:04:46.111" endtime="20241013 17:04:46.127"/>
</kw>
<msg timestamp="20241013 17:04:46.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:46.111" endtime="20241013 17:04:46.127"/>
</kw>
<status status="PASS" starttime="20241013 17:04:46.110" endtime="20241013 17:04:46.127"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:46.131" level="INFO">Running command 'md5sum /tmp/originalozone-test-2854143482 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:46.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:46.147" level="INFO">${output} = cd213a6ed822dda0e7533655bb82c29b</msg>
<status status="PASS" starttime="20241013 17:04:46.129" endtime="20241013 17:04:46.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:46.148" level="INFO">cd213a6ed822dda0e7533655bb82c29b</msg>
<status status="PASS" starttime="20241013 17:04:46.147" endtime="20241013 17:04:46.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:46.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:46.148" endtime="20241013 17:04:46.148"/>
</kw>
<status status="PASS" starttime="20241013 17:04:46.129" endtime="20241013 17:04:46.149"/>
</kw>
<msg timestamp="20241013 17:04:46.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:46.128" endtime="20241013 17:04:46.149"/>
</kw>
<msg timestamp="20241013 17:04:46.149" level="INFO">${checksumbefore} = cd213a6ed822dda0e7533655bb82c29b</msg>
<status status="PASS" starttime="20241013 17:04:46.128" endtime="20241013 17:04:46.149"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:46.153" level="INFO">Running command 'md5sum /tmp/verifyozone-test-2854143482 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:46.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:46.168" level="INFO">${output} = cd213a6ed822dda0e7533655bb82c29b</msg>
<status status="PASS" starttime="20241013 17:04:46.150" endtime="20241013 17:04:46.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:46.169" level="INFO">cd213a6ed822dda0e7533655bb82c29b</msg>
<status status="PASS" starttime="20241013 17:04:46.168" endtime="20241013 17:04:46.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:46.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:46.169" endtime="20241013 17:04:46.170"/>
</kw>
<status status="PASS" starttime="20241013 17:04:46.150" endtime="20241013 17:04:46.170"/>
</kw>
<msg timestamp="20241013 17:04:46.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:46.150" endtime="20241013 17:04:46.170"/>
</kw>
<msg timestamp="20241013 17:04:46.170" level="INFO">${checksumafter} = cd213a6ed822dda0e7533655bb82c29b</msg>
<status status="PASS" starttime="20241013 17:04:46.149" endtime="20241013 17:04:46.170"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:46.170" endtime="20241013 17:04:46.171"/>
</kw>
<status status="PASS" starttime="20241013 17:04:46.128" endtime="20241013 17:04:46.171"/>
</kw>
<status status="PASS" starttime="20241013 17:04:45.241" endtime="20241013 17:04:46.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:42.975" endtime="20241013 17:04:46.171"/>
</test>
<test id="s1-s6-s6-t2" name="Test Multipart Upload" line="63">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:04:46.174" level="INFO">${randStr} = 6841714699</msg>
<status status="PASS" starttime="20241013 17:04:46.173" endtime="20241013 17:04:46.174"/>
</kw>
<msg timestamp="20241013 17:04:46.174" level="INFO">${random} = ozone-test-6841714699</msg>
<status status="PASS" starttime="20241013 17:04:46.172" endtime="20241013 17:04:46.174"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:04:46.175" level="INFO">${PREFIX} = ozone-test-6841714699</msg>
<status status="PASS" starttime="20241013 17:04:46.175" endtime="20241013 17:04:46.175"/>
</kw>
<status status="PASS" starttime="20241013 17:04:46.172" endtime="20241013 17:04:46.175"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:46.179" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-6841714699/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:46.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:46.691" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "bb2a19e6-5645-4202-9754-2d48dd2d2a71-113301198381125983"
}</msg>
<status status="PASS" starttime="20241013 17:04:46.177" endtime="20241013 17:04:46.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:46.692" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "bb2a19e6-5645-4202-9754-2d48dd2d2a71-113301198381125983"
}</msg>
<status status="PASS" starttime="20241013 17:04:46.691" endtime="20241013 17:04:46.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:46.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:46.692" endtime="20241013 17:04:46.693"/>
</kw>
<status status="PASS" starttime="20241013 17:04:46.176" endtime="20241013 17:04:46.693"/>
</kw>
<msg timestamp="20241013 17:04:46.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:46.176" endtime="20241013 17:04:46.693"/>
</kw>
<msg timestamp="20241013 17:04:46.693" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "bb2a19e6-5645-4202-9754-2d48dd2d2a71-113301198381125983"
}</msg>
<status status="PASS" starttime="20241013 17:04:46.176" endtime="20241013 17:04:46.693"/>
</kw>
<msg timestamp="20241013 17:04:46.693" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "bb2a19e6-5645-4202-9754-2d48dd2d2a71-113301198381125983"
}</msg>
<status status="PASS" starttime="20241013 17:04:46.175" endtime="20241013 17:04:46.693"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:46.697" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "bb2a19e6-5645-4202-9754-2d48dd2d2a71-113301198381125983"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:46.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:46.704" level="INFO">${output} = bb2a19e6-5645-4202-9754-2d48dd2d2a71-113301198381125983</msg>
<status status="PASS" starttime="20241013 17:04:46.694" endtime="20241013 17:04:46.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:46.705" level="INFO">bb2a19e6-5645-4202-9754-2d48dd2d2a71-113301198381125983</msg>
<status status="PASS" starttime="20241013 17:04:46.704" endtime="20241013 17:04:46.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:46.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:46.705" endtime="20241013 17:04:46.706"/>
</kw>
<msg timestamp="20241013 17:04:46.706" level="INFO">${uploadID} = bb2a19e6-5645-4202-9754-2d48dd2d2a71-113301198381125983</msg>
<status status="PASS" starttime="20241013 17:04:46.693" endtime="20241013 17:04:46.706"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:46.706" endtime="20241013 17:04:46.706"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:46.707" endtime="20241013 17:04:46.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:46.707" endtime="20241013 17:04:46.707"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:46.713" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-6841714699/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:47.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:47.203" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "a08c07e5-f384-430a-93b2-69878247608f-113301198415401312"
}</msg>
<status status="PASS" starttime="20241013 17:04:46.710" endtime="20241013 17:04:47.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:47.204" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "a08c07e5-f384-430a-93b2-69878247608f-113301198415401312"
}</msg>
<status status="PASS" starttime="20241013 17:04:47.204" endtime="20241013 17:04:47.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:47.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:47.205" endtime="20241013 17:04:47.205"/>
</kw>
<status status="PASS" starttime="20241013 17:04:46.709" endtime="20241013 17:04:47.205"/>
</kw>
<msg timestamp="20241013 17:04:47.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:46.709" endtime="20241013 17:04:47.205"/>
</kw>
<msg timestamp="20241013 17:04:47.206" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "a08c07e5-f384-430a-93b2-69878247608f-113301198415401312"
}</msg>
<status status="PASS" starttime="20241013 17:04:46.708" endtime="20241013 17:04:47.206"/>
</kw>
<msg timestamp="20241013 17:04:47.206" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "a08c07e5-f384-430a-93b2-69878247608f-113301198415401312"
}</msg>
<status status="PASS" starttime="20241013 17:04:46.708" endtime="20241013 17:04:47.206"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:47.209" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-6841714699/multipartKey",
    "UploadId": "a08c07e5-f384-430a-93b2-69878247608f-113301198415401312"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:47.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:47.214" level="INFO">${output} = a08c07e5-f384-430a-93b2-69878247608f-113301198415401312</msg>
<status status="PASS" starttime="20241013 17:04:47.206" endtime="20241013 17:04:47.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:47.215" level="INFO">a08c07e5-f384-430a-93b2-69878247608f-113301198415401312</msg>
<status status="PASS" starttime="20241013 17:04:47.214" endtime="20241013 17:04:47.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:47.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:47.215" endtime="20241013 17:04:47.215"/>
</kw>
<msg timestamp="20241013 17:04:47.216" level="INFO">${nextUploadID} = a08c07e5-f384-430a-93b2-69878247608f-113301198415401312</msg>
<status status="PASS" starttime="20241013 17:04:47.206" endtime="20241013 17:04:47.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:47.216" endtime="20241013 17:04:47.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:47.216" endtime="20241013 17:04:47.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:47.217" endtime="20241013 17:04:47.217"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20241013 17:04:47.217" endtime="20241013 17:04:47.217"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:47.221" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-6841714699/multipartKey --part-number 1 --body /tmp/part1 --upload-id a08c07e5-f384-430a-93b2-69878247608f-113301198415401312 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:47.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:47.913" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:47.219" endtime="20241013 17:04:47.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:47.915" level="INFO">{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:47.914" endtime="20241013 17:04:47.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:47.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:47.915" endtime="20241013 17:04:47.915"/>
</kw>
<status status="PASS" starttime="20241013 17:04:47.219" endtime="20241013 17:04:47.916"/>
</kw>
<msg timestamp="20241013 17:04:47.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:47.219" endtime="20241013 17:04:47.916"/>
</kw>
<msg timestamp="20241013 17:04:47.916" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:47.218" endtime="20241013 17:04:47.916"/>
</kw>
<msg timestamp="20241013 17:04:47.916" level="INFO">${result} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:47.218" endtime="20241013 17:04:47.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:47.916" endtime="20241013 17:04:47.917"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:47.922" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-6841714699/multipartKey --part-number 1 --body /tmp/part1 --upload-id a08c07e5-f384-430a-93b2-69878247608f-113301198415401312 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:48.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:48.586" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:47.919" endtime="20241013 17:04:48.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:48.587" level="INFO">{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:48.586" endtime="20241013 17:04:48.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:48.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:48.587" endtime="20241013 17:04:48.588"/>
</kw>
<status status="PASS" starttime="20241013 17:04:47.918" endtime="20241013 17:04:48.588"/>
</kw>
<msg timestamp="20241013 17:04:48.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:47.918" endtime="20241013 17:04:48.588"/>
</kw>
<msg timestamp="20241013 17:04:48.588" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:47.918" endtime="20241013 17:04:48.588"/>
</kw>
<msg timestamp="20241013 17:04:48.589" level="INFO">${result} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:47.917" endtime="20241013 17:04:48.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:48.589" endtime="20241013 17:04:48.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:46.171" endtime="20241013 17:04:48.589"/>
</test>
<test id="s1-s6-s6-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:04:48.592" level="INFO">${randStr} = 5437239636</msg>
<status status="PASS" starttime="20241013 17:04:48.591" endtime="20241013 17:04:48.592"/>
</kw>
<msg timestamp="20241013 17:04:48.592" level="INFO">${random} = ozone-test-5437239636</msg>
<status status="PASS" starttime="20241013 17:04:48.591" endtime="20241013 17:04:48.592"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:04:48.593" level="INFO">${PREFIX} = ozone-test-5437239636</msg>
<status status="PASS" starttime="20241013 17:04:48.592" endtime="20241013 17:04:48.593"/>
</kw>
<status status="PASS" starttime="20241013 17:04:48.591" endtime="20241013 17:04:48.593"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:48.598" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-5437239636/multipartKey1 --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:49.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:49.119" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "UploadId": "0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003"
}</msg>
<status status="PASS" starttime="20241013 17:04:48.595" endtime="20241013 17:04:49.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:49.120" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "UploadId": "0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003"
}</msg>
<status status="PASS" starttime="20241013 17:04:49.119" endtime="20241013 17:04:49.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:49.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:49.120" endtime="20241013 17:04:49.120"/>
</kw>
<status status="PASS" starttime="20241013 17:04:48.594" endtime="20241013 17:04:49.121"/>
</kw>
<msg timestamp="20241013 17:04:49.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:48.594" endtime="20241013 17:04:49.121"/>
</kw>
<msg timestamp="20241013 17:04:49.121" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "UploadId": "0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003"
}</msg>
<status status="PASS" starttime="20241013 17:04:48.594" endtime="20241013 17:04:49.121"/>
</kw>
<msg timestamp="20241013 17:04:49.121" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "UploadId": "0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003"
}</msg>
<status status="PASS" starttime="20241013 17:04:48.593" endtime="20241013 17:04:49.121"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:49.124" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "UploadId": "0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:49.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:49.130" level="INFO">${output} = 0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003</msg>
<status status="PASS" starttime="20241013 17:04:49.122" endtime="20241013 17:04:49.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:49.131" level="INFO">0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003</msg>
<status status="PASS" starttime="20241013 17:04:49.130" endtime="20241013 17:04:49.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:49.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:49.131" endtime="20241013 17:04:49.131"/>
</kw>
<msg timestamp="20241013 17:04:49.132" level="INFO">${uploadID} = 0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003</msg>
<status status="PASS" starttime="20241013 17:04:49.121" endtime="20241013 17:04:49.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:49.132" endtime="20241013 17:04:49.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:49.132" endtime="20241013 17:04:49.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:49.133" endtime="20241013 17:04:49.133"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:49.137" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-5437239636/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:49.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:49.742" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:49.135" endtime="20241013 17:04:49.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:49.743" level="INFO">{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:49.742" endtime="20241013 17:04:49.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:49.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:49.743" endtime="20241013 17:04:49.744"/>
</kw>
<status status="PASS" starttime="20241013 17:04:49.135" endtime="20241013 17:04:49.744"/>
</kw>
<msg timestamp="20241013 17:04:49.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:49.134" endtime="20241013 17:04:49.744"/>
</kw>
<msg timestamp="20241013 17:04:49.744" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:49.134" endtime="20241013 17:04:49.744"/>
</kw>
<msg timestamp="20241013 17:04:49.744" level="INFO">${result} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:04:49.133" endtime="20241013 17:04:49.744"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:49.748" level="INFO">Running command 'echo '{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:49.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:49.753" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:49.745" endtime="20241013 17:04:49.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:49.755" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:49.754" endtime="20241013 17:04:49.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:49.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:49.755" endtime="20241013 17:04:49.755"/>
</kw>
<msg timestamp="20241013 17:04:49.756" level="INFO">${eTag1} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:49.745" endtime="20241013 17:04:49.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:49.756" endtime="20241013 17:04:49.756"/>
</kw>
<kw name="Execute" library="os">
<var>${part1Md5Sum}</var>
<arg>md5sum /tmp/part1 | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:49.760" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:49.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:49.774" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:49.757" endtime="20241013 17:04:49.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:49.775" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:49.774" endtime="20241013 17:04:49.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:49.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:49.775" endtime="20241013 17:04:49.775"/>
</kw>
<status status="PASS" starttime="20241013 17:04:49.757" endtime="20241013 17:04:49.776"/>
</kw>
<msg timestamp="20241013 17:04:49.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:49.757" endtime="20241013 17:04:49.776"/>
</kw>
<msg timestamp="20241013 17:04:49.776" level="INFO">${part1Md5Sum} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:49.756" endtime="20241013 17:04:49.776"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${eTag1}</arg>
<arg>${part1Md5Sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:04:49.776" endtime="20241013 17:04:49.777"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:49.780" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20241013 17:04:49.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:49.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:49.778" endtime="20241013 17:04:49.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:49.784" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:49.783" endtime="20241013 17:04:49.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:49.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:49.784" endtime="20241013 17:04:49.784"/>
</kw>
<status status="PASS" starttime="20241013 17:04:49.777" endtime="20241013 17:04:49.784"/>
</kw>
<msg timestamp="20241013 17:04:49.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:49.777" endtime="20241013 17:04:49.784"/>
</kw>
<status status="PASS" starttime="20241013 17:04:49.777" endtime="20241013 17:04:49.785"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:49.789" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-5437239636/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:50.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:50.343" level="INFO">${output} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:04:49.786" endtime="20241013 17:04:50.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:50.344" level="INFO">{
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:04:50.343" endtime="20241013 17:04:50.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:50.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:50.344" endtime="20241013 17:04:50.345"/>
</kw>
<status status="PASS" starttime="20241013 17:04:49.786" endtime="20241013 17:04:50.345"/>
</kw>
<msg timestamp="20241013 17:04:50.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:49.786" endtime="20241013 17:04:50.345"/>
</kw>
<msg timestamp="20241013 17:04:50.345" level="INFO">${output} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:04:49.785" endtime="20241013 17:04:50.345"/>
</kw>
<msg timestamp="20241013 17:04:50.345" level="INFO">${result} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:04:49.785" endtime="20241013 17:04:50.345"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:50.349" level="INFO">Running command 'echo '{
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:50.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:50.355" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:50.346" endtime="20241013 17:04:50.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:50.356" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:50.356" endtime="20241013 17:04:50.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:50.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:50.357" endtime="20241013 17:04:50.357"/>
</kw>
<msg timestamp="20241013 17:04:50.357" level="INFO">${eTag2} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:50.346" endtime="20241013 17:04:50.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:50.358" endtime="20241013 17:04:50.358"/>
</kw>
<kw name="Execute" library="os">
<var>${part2Md5Sum}</var>
<arg>md5sum /tmp/part2 | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:50.362" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:50.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:50.367" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:50.359" endtime="20241013 17:04:50.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:50.369" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:50.368" endtime="20241013 17:04:50.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:50.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:50.369" endtime="20241013 17:04:50.369"/>
</kw>
<status status="PASS" starttime="20241013 17:04:50.359" endtime="20241013 17:04:50.370"/>
</kw>
<msg timestamp="20241013 17:04:50.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:50.358" endtime="20241013 17:04:50.370"/>
</kw>
<msg timestamp="20241013 17:04:50.370" level="INFO">${part2Md5Sum} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:50.358" endtime="20241013 17:04:50.370"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${eTag2}</arg>
<arg>${part2Md5Sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:04:50.370" endtime="20241013 17:04:50.371"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:50.374" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003 --bucket link --key ozone-test-5437239636/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:50.856" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:04:50.857" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20241013 17:04:50.372" endtime="20241013 17:04:50.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:50.858" level="INFO">
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20241013 17:04:50.857" endtime="20241013 17:04:50.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:50.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:50.858" endtime="20241013 17:04:50.858"/>
</kw>
<msg timestamp="20241013 17:04:50.859" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20241013 17:04:50.371" endtime="20241013 17:04:50.859"/>
</kw>
<msg timestamp="20241013 17:04:50.859" level="INFO">${result} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20241013 17:04:50.371" endtime="20241013 17:04:50.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRequest</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:50.859" endtime="20241013 17:04:50.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>must specify at least one part</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:50.859" endtime="20241013 17:04:50.860"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:50.864" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 0c6f0c9b-1985-4318-a46d-ad171c60a42b-113301198540444003 --bucket link --key ozone-test-5437239636/multipartKey1 --multipart-upload 'Parts=[{ETag=3083430ab1b1506ea36ca328eb7c1fc4,PartNumber=1},{ETag=9e6cc3c0311e8eb9548e860d8caf6734,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:51.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:51.365" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\""
}</msg>
<status status="PASS" starttime="20241013 17:04:50.862" endtime="20241013 17:04:51.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:51.366" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\""
}</msg>
<status status="PASS" starttime="20241013 17:04:51.365" endtime="20241013 17:04:51.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:51.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:51.366" endtime="20241013 17:04:51.367"/>
</kw>
<status status="PASS" starttime="20241013 17:04:50.861" endtime="20241013 17:04:51.367"/>
</kw>
<msg timestamp="20241013 17:04:51.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:50.861" endtime="20241013 17:04:51.367"/>
</kw>
<msg timestamp="20241013 17:04:51.367" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\""
}</msg>
<status status="PASS" starttime="20241013 17:04:50.861" endtime="20241013 17:04:51.367"/>
</kw>
<msg timestamp="20241013 17:04:51.367" level="INFO">${result} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\""
}</msg>
<status status="PASS" starttime="20241013 17:04:50.860" endtime="20241013 17:04:51.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:51.368" endtime="20241013 17:04:51.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:51.368" endtime="20241013 17:04:51.368"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${resultETag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:51.372" level="INFO">Running command 'echo '{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5437239636/multipartKey1",
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:51.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:51.378" level="INFO">${output} = "eb9f2c31f5aa9b15c99540415543c7ac-2"</msg>
<status status="PASS" starttime="20241013 17:04:51.369" endtime="20241013 17:04:51.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:51.378" level="INFO">"eb9f2c31f5aa9b15c99540415543c7ac-2"</msg>
<status status="PASS" starttime="20241013 17:04:51.378" endtime="20241013 17:04:51.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:51.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:51.379" endtime="20241013 17:04:51.379"/>
</kw>
<msg timestamp="20241013 17:04:51.379" level="INFO">${resultETag} = "eb9f2c31f5aa9b15c99540415543c7ac-2"</msg>
<status status="PASS" starttime="20241013 17:04:51.368" endtime="20241013 17:04:51.379"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedResultETag}</var>
<arg>echo -n ${eTag1}${eTag2} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:51.383" level="INFO">Running command 'echo -n 3083430ab1b1506ea36ca328eb7c1fc49e6cc3c0311e8eb9548e860d8caf6734 | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:51.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:51.388" level="INFO">${output} = eb9f2c31f5aa9b15c99540415543c7ac</msg>
<status status="PASS" starttime="20241013 17:04:51.381" endtime="20241013 17:04:51.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:51.389" level="INFO">eb9f2c31f5aa9b15c99540415543c7ac</msg>
<status status="PASS" starttime="20241013 17:04:51.388" endtime="20241013 17:04:51.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:51.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:51.389" endtime="20241013 17:04:51.389"/>
</kw>
<status status="PASS" starttime="20241013 17:04:51.380" endtime="20241013 17:04:51.389"/>
</kw>
<msg timestamp="20241013 17:04:51.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:51.380" endtime="20241013 17:04:51.390"/>
</kw>
<msg timestamp="20241013 17:04:51.390" level="INFO">${expectedResultETag} = eb9f2c31f5aa9b15c99540415543c7ac</msg>
<status status="PASS" starttime="20241013 17:04:51.379" endtime="20241013 17:04:51.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:51.390" endtime="20241013 17:04:51.390"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resultETag}</arg>
<arg>"${expectedResultETag}-2"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:04:51.390" endtime="20241013 17:04:51.391"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:51.395" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5437239636/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:51.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:51.878" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20241013 17:04:51.392" endtime="20241013 17:04:51.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:51.879" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:51 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:04:51.879" endtime="20241013 17:04:51.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:51.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:51.879" endtime="20241013 17:04:51.880"/>
</kw>
<status status="PASS" starttime="20241013 17:04:51.392" endtime="20241013 17:04:51.880"/>
</kw>
<msg timestamp="20241013 17:04:51.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:51.392" endtime="20241013 17:04:51.880"/>
</kw>
<msg timestamp="20241013 17:04:51.880" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20241013 17:04:51.391" endtime="20241013 17:04:51.880"/>
</kw>
<msg timestamp="20241013 17:04:51.880" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20241013 17:04:51.391" endtime="20241013 17:04:51.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:51.881" endtime="20241013 17:04:51.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:51.881" endtime="20241013 17:04:51.881"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:51.885" level="INFO">Running command 'echo '{
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:51 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:51.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:51.890" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:04:51.882" endtime="20241013 17:04:51.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:51.891" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:04:51.891" endtime="20241013 17:04:51.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:51.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:51.891" endtime="20241013 17:04:51.892"/>
</kw>
<msg timestamp="20241013 17:04:51.892" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20241013 17:04:51.881" endtime="20241013 17:04:51.892"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:51.892" endtime="20241013 17:04:51.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:51.896" level="INFO">Running command 'ozone sh key info /s3v/link/ozone-test-5437239636/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:56.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:56.078" level="INFO">${output} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-5437239636/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 5243910,
  "creationTime" : "2024-10-13T17:04:51...</msg>
<status status="PASS" starttime="20241013 17:04:51.894" endtime="20241013 17:04:56.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:56.079" level="INFO">{
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-5437239636/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 5243910,
  "creationTime" : "2024-10-13T17:04:51.310Z",
  "modificationTime" : "2024-10-13T17:04:51.310Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "eb9f2c31f5aa9b15c99540415543c7ac-2",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 113750153625604425,
    "length" : 5243904,
    "offset" : 0,
    "keyOffset" : 0
  }, {
    "containerID" : 3,
    "localID" : 113750153625604426,
    "length" : 6,
    "offset" : 0,
    "keyOffset" : 5243904
  } ],
  "generation" : 18433,
  "file" : true
}</msg>
<status status="PASS" starttime="20241013 17:04:56.078" endtime="20241013 17:04:56.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:56.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:56.079" endtime="20241013 17:04:56.080"/>
</kw>
<status status="PASS" starttime="20241013 17:04:51.893" endtime="20241013 17:04:56.080"/>
</kw>
<msg timestamp="20241013 17:04:56.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:51.893" endtime="20241013 17:04:56.080"/>
</kw>
<msg timestamp="20241013 17:04:56.080" level="INFO">${result} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-5437239636/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 5243910,
  "creationTime" : "2024-10-13T17:04:51...</msg>
<status status="PASS" starttime="20241013 17:04:51.893" endtime="20241013 17:04:56.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:56.080" endtime="20241013 17:04:56.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:56.081" endtime="20241013 17:04:56.081"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:56.081" endtime="20241013 17:04:56.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:56.082" endtime="20241013 17:04:56.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:56.082" endtime="20241013 17:04:56.083"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:56.086" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5437239636/multipartKey1 /tmp/ozone-test-5437239636-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:56.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:56.824" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:04:56.084" endtime="20241013 17:04:56.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:56.825" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:56 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:04:56.824" endtime="20241013 17:04:56.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:56.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:56.825" endtime="20241013 17:04:56.825"/>
</kw>
<status status="PASS" starttime="20241013 17:04:56.084" endtime="20241013 17:04:56.826"/>
</kw>
<msg timestamp="20241013 17:04:56.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:56.084" endtime="20241013 17:04:56.826"/>
</kw>
<msg timestamp="20241013 17:04:56.826" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:04:56.083" endtime="20241013 17:04:56.826"/>
</kw>
<msg timestamp="20241013 17:04:56.826" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:04:56.083" endtime="20241013 17:04:56.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:56.826" endtime="20241013 17:04:56.827"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:56.830" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:56 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:56.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:56.835" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:04:56.827" endtime="20241013 17:04:56.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:56.836" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:04:56.836" endtime="20241013 17:04:56.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:56.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:56.836" endtime="20241013 17:04:56.837"/>
</kw>
<msg timestamp="20241013 17:04:56.837" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20241013 17:04:56.827" endtime="20241013 17:04:56.837"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:56.837" endtime="20241013 17:04:56.838"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:56.841" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243910,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:56 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:56.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:56.846" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:04:56.838" endtime="20241013 17:04:56.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:56.847" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:04:56.846" endtime="20241013 17:04:56.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:56.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:56.847" endtime="20241013 17:04:56.847"/>
</kw>
<msg timestamp="20241013 17:04:56.848" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20241013 17:04:56.838" endtime="20241013 17:04:56.848"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:56.848" endtime="20241013 17:04:56.848"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:56.851" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-5437239636-multipartKey1'.</msg>
<msg timestamp="20241013 17:04:56.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:56.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:04:56.849" endtime="20241013 17:04:56.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:56.864" level="INFO"/>
<status status="PASS" starttime="20241013 17:04:56.863" endtime="20241013 17:04:56.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:56.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:56.864" endtime="20241013 17:04:56.864"/>
</kw>
<status status="PASS" starttime="20241013 17:04:56.849" endtime="20241013 17:04:56.865"/>
</kw>
<msg timestamp="20241013 17:04:56.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:56.849" endtime="20241013 17:04:56.865"/>
</kw>
<status status="PASS" starttime="20241013 17:04:56.848" endtime="20241013 17:04:56.865"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:56.869" level="INFO">Running command 'md5sum /tmp/ozone-test-5437239636-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:56.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:56.883" level="INFO">${output} = 9badf67227f11ff02be58422bc9a3eb4</msg>
<status status="PASS" starttime="20241013 17:04:56.867" endtime="20241013 17:04:56.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:56.884" level="INFO">9badf67227f11ff02be58422bc9a3eb4</msg>
<status status="PASS" starttime="20241013 17:04:56.883" endtime="20241013 17:04:56.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:56.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:56.884" endtime="20241013 17:04:56.884"/>
</kw>
<status status="PASS" starttime="20241013 17:04:56.866" endtime="20241013 17:04:56.884"/>
</kw>
<msg timestamp="20241013 17:04:56.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:56.866" endtime="20241013 17:04:56.885"/>
</kw>
<msg timestamp="20241013 17:04:56.885" level="INFO">${checksumbefore} = 9badf67227f11ff02be58422bc9a3eb4</msg>
<status status="PASS" starttime="20241013 17:04:56.866" endtime="20241013 17:04:56.885"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:56.888" level="INFO">Running command 'md5sum /tmp/ozone-test-5437239636-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:56.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:56.901" level="INFO">${output} = 9badf67227f11ff02be58422bc9a3eb4</msg>
<status status="PASS" starttime="20241013 17:04:56.886" endtime="20241013 17:04:56.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:56.903" level="INFO">9badf67227f11ff02be58422bc9a3eb4</msg>
<status status="PASS" starttime="20241013 17:04:56.902" endtime="20241013 17:04:56.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:56.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:56.903" endtime="20241013 17:04:56.903"/>
</kw>
<status status="PASS" starttime="20241013 17:04:56.886" endtime="20241013 17:04:56.903"/>
</kw>
<msg timestamp="20241013 17:04:56.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:56.885" endtime="20241013 17:04:56.904"/>
</kw>
<msg timestamp="20241013 17:04:56.904" level="INFO">${checksumafter} = 9badf67227f11ff02be58422bc9a3eb4</msg>
<status status="PASS" starttime="20241013 17:04:56.885" endtime="20241013 17:04:56.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:56.904" endtime="20241013 17:04:56.904"/>
</kw>
<status status="PASS" starttime="20241013 17:04:56.865" endtime="20241013 17:04:56.904"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:56.908" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5437239636/multipartKey1 --part-number 1 /tmp/ozone-test-5437239636-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:57.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:57.627" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:04:56.906" endtime="20241013 17:04:57.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:57.628" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:57 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:04:57.628" endtime="20241013 17:04:57.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:57.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:57.629" endtime="20241013 17:04:57.629"/>
</kw>
<status status="PASS" starttime="20241013 17:04:56.906" endtime="20241013 17:04:57.629"/>
</kw>
<msg timestamp="20241013 17:04:57.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:56.905" endtime="20241013 17:04:57.629"/>
</kw>
<msg timestamp="20241013 17:04:57.630" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:04:56.905" endtime="20241013 17:04:57.630"/>
</kw>
<msg timestamp="20241013 17:04:57.630" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:04:56.904" endtime="20241013 17:04:57.630"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:57.634" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:57.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:57.648" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:57.632" endtime="20241013 17:04:57.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:57.649" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:57.648" endtime="20241013 17:04:57.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:57.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:57.649" endtime="20241013 17:04:57.649"/>
</kw>
<status status="PASS" starttime="20241013 17:04:57.631" endtime="20241013 17:04:57.649"/>
</kw>
<msg timestamp="20241013 17:04:57.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:57.631" endtime="20241013 17:04:57.650"/>
</kw>
<msg timestamp="20241013 17:04:57.650" level="INFO">${checksumbefore} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:57.631" endtime="20241013 17:04:57.650"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:57.654" level="INFO">Running command 'md5sum /tmp/ozone-test-5437239636-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:57.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:57.667" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:57.651" endtime="20241013 17:04:57.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:57.668" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:57.668" endtime="20241013 17:04:57.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:57.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:57.668" endtime="20241013 17:04:57.669"/>
</kw>
<status status="PASS" starttime="20241013 17:04:57.651" endtime="20241013 17:04:57.669"/>
</kw>
<msg timestamp="20241013 17:04:57.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:57.650" endtime="20241013 17:04:57.669"/>
</kw>
<msg timestamp="20241013 17:04:57.669" level="INFO">${checksumafter} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:04:57.650" endtime="20241013 17:04:57.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:57.669" endtime="20241013 17:04:57.670"/>
</kw>
<status status="PASS" starttime="20241013 17:04:57.630" endtime="20241013 17:04:57.670"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:57.672" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:57 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:57.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:57.678" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:04:57.670" endtime="20241013 17:04:57.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:57.679" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:04:57.678" endtime="20241013 17:04:57.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:57.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:57.679" endtime="20241013 17:04:57.679"/>
</kw>
<msg timestamp="20241013 17:04:57.680" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20241013 17:04:57.670" endtime="20241013 17:04:57.680"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:57.680" endtime="20241013 17:04:57.680"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:57.683" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 5243904,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:57 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:57.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:57.688" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:04:57.681" endtime="20241013 17:04:57.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:57.689" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:04:57.688" endtime="20241013 17:04:57.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:57.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:57.689" endtime="20241013 17:04:57.689"/>
</kw>
<msg timestamp="20241013 17:04:57.690" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20241013 17:04:57.680" endtime="20241013 17:04:57.690"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:57.690" endtime="20241013 17:04:57.690"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:57.694" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5437239636/multipartKey1 --part-number 2 /tmp/ozone-test-5437239636-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:58.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:58.173" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 6,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:04:57.692" endtime="20241013 17:04:58.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:58.174" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 6,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:04:58 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:04:58.173" endtime="20241013 17:04:58.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:58.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:58.174" endtime="20241013 17:04:58.175"/>
</kw>
<status status="PASS" starttime="20241013 17:04:57.691" endtime="20241013 17:04:58.175"/>
</kw>
<msg timestamp="20241013 17:04:58.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:57.691" endtime="20241013 17:04:58.175"/>
</kw>
<msg timestamp="20241013 17:04:58.175" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 6,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:04:57.691" endtime="20241013 17:04:58.175"/>
</kw>
<msg timestamp="20241013 17:04:58.176" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:04:51 GMT",
    "ContentLength": 6,
    "ETag": "\"eb9f2c31f5aa9b15c99540415543c7ac-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:04:57.690" endtime="20241013 17:04:58.176"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:58.180" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:58.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:58.184" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:58.177" endtime="20241013 17:04:58.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:58.185" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:58.185" endtime="20241013 17:04:58.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:58.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:58.185" endtime="20241013 17:04:58.186"/>
</kw>
<status status="PASS" starttime="20241013 17:04:58.177" endtime="20241013 17:04:58.186"/>
</kw>
<msg timestamp="20241013 17:04:58.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:58.177" endtime="20241013 17:04:58.186"/>
</kw>
<msg timestamp="20241013 17:04:58.186" level="INFO">${checksumbefore} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:58.176" endtime="20241013 17:04:58.186"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:58.191" level="INFO">Running command 'md5sum /tmp/ozone-test-5437239636-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:58.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:58.200" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:58.188" endtime="20241013 17:04:58.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:58.202" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:58.201" endtime="20241013 17:04:58.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:58.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:58.202" endtime="20241013 17:04:58.202"/>
</kw>
<status status="PASS" starttime="20241013 17:04:58.187" endtime="20241013 17:04:58.202"/>
</kw>
<msg timestamp="20241013 17:04:58.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:58.187" endtime="20241013 17:04:58.203"/>
</kw>
<msg timestamp="20241013 17:04:58.203" level="INFO">${checksumafter} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:04:58.187" endtime="20241013 17:04:58.203"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:04:58.203" endtime="20241013 17:04:58.203"/>
</kw>
<status status="PASS" starttime="20241013 17:04:58.176" endtime="20241013 17:04:58.203"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:48.590" endtime="20241013 17:04:58.204"/>
</test>
<test id="s1-s6-s6-t4" name="Test Multipart Upload with user defined metadata size larger than 2 KB" line="164">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:04:58.206" level="INFO">${randStr} = 5516304967</msg>
<status status="PASS" starttime="20241013 17:04:58.205" endtime="20241013 17:04:58.206"/>
</kw>
<msg timestamp="20241013 17:04:58.206" level="INFO">${random} = ozone-test-5516304967</msg>
<status status="PASS" starttime="20241013 17:04:58.205" endtime="20241013 17:04:58.206"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:04:58.207" level="INFO">${PREFIX} = ozone-test-5516304967</msg>
<status status="PASS" starttime="20241013 17:04:58.206" endtime="20241013 17:04:58.207"/>
</kw>
<status status="PASS" starttime="20241013 17:04:58.205" endtime="20241013 17:04:58.207"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:04:58.210" level="INFO">${custom_metadata_value} = 4kReVYPnfWtznBXqKAEWVGj6yIRdDz5PxaPdGQtXuPvzoyWhvz0SNe51SuPBJAuJSDHwnRe88bZYxGFKfLocA5acDWNNgff5uIvOCIpLKxLElxmDA5sjrKAQ6B2abgNn2aZ0mvVuPOB42xSgtdmFTAdbwZUbSyNDMGNkk2ngCL33CYZ6tIA84DoiO17i5nsewlKKg3o1...</msg>
<status status="PASS" starttime="20241013 17:04:58.207" endtime="20241013 17:04:58.210"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/mpuWithLargeMetadata --metadata="custom-key1=${custom_metadata_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:58.214" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-5516304967/mpuWithLargeMetadata --metadata="custom-key1=4kReVYPnfWtznBXqKAEWVGj6yIRdDz5PxaPdGQtXuPvzoyWhvz0SNe51SuPBJAuJSDHwnRe88bZYxGFKfLocA5acDWNNgff5uIvOCIpLKxLElxmDA5sjrKAQ6B2abgNn2aZ0mvVuPOB42xSgtdmFTAdbwZUbSyNDMGNkk2ngCL33CYZ6tIA84DoiO17i5nsewlKKg3o1S5XqaMTAmlMccZf0ARFt5DMYpMe2qMS4wtWMCfUnv5ZOCRGKdcosesky9xGSPeqbQLCTsgpGh2kRBLodGclwfjNjlIbUzfl32TKKMALCtbm1cApwoMRXYM3ijqomUWJCAodycWAAZWuuqV3KxELZ6kPfV59WE7aoPtZHF1IMsEozmqGGFk6aMlDQUqSSrXscqmt8Vm0ISdiDWt3QIM85k5in57fC1xigdlq2sTM0OYbHPmRW5CMrVv4GtA3PZU2ucFKJiU5wvsknUnjREBxk0NOwSivbu5wIfGLk9cQhvQQRzDYoQGzIYAYdDKL3crja3Kdowshg1Si7grizVtVlhR2hbDlfibt6KMguzPXBQ0HY4qi18oz01wIYlV6ivbdcEc4G2LRg50hvGzFvW3wPlINEinNBNp77Z8GH1IC4w9jfgGNwJrralDHXUQ9UAdSiLrWHuqEwYtEPAk77jMekte8IU0ZQIms0wPYFlLVk0fz0nmWTIjzSAL4YiCl1SHS9UYn0B8CadtDtYxAN6AM50Tsdi65BR2KrVGOaVmQJ9DP1T24oSMBxbn8hZOr0ZXk8aPiWEZZrIfKE2t5vthdiRA3bXg4GDfRhDbnBpYmYDUJiOguyLXTtqUo9qJUMXmWUrztA7NDwzYYexHbqIQCwFwsSXu8lGhFPyWwbBATvADsWbiCxc8z8JgF7YBoNjP1pkSRq6G6labk6iMzGoOrD7AzSn4ozD7Ws6GxKBCUh75P2aZtlmyB2kDuEeeceJDc0qCv5fMYxp6ffWk17DmhUi6QXquAXu8i9AagE9vrw0qTdqBe27O5B6LtMNz9vHsjNHRYd4BsCLyK7zdcrNHmamAoX2QfrtSUnA4tzbB23aJieGvH7LI86578oSSghMKeLDuMrRxkKql6YyrK4u01IlxH91kIacoJjgeYC3x7CqZ76iwTetuO3CRf2K1CxDOM3oO8LWE73t5SycRYqh6MUTvZGxpm019AinFNs3toHfAeDelwwxw2LPZZPnQebNqFq8scLBrvPtp523JtgCUQfUH92ekAoqUPpUuK1DigQRoVdPHgX3XBXaXgc5Xj6IY4FOugnHLkx97n8k4l6jbDw0bwcjE0uSb5aX53vmhuSNZpVJmYwaegEsiDpDXswdgZYRnCeMdpypTr9NUUDWQmphR4AB4FkblhNFYyorShjEDO123IB7pWKhxRT7xs1tk1rqerPZuZq7nXmCYrAo9Q2gNVqvZ4ZiQzcmGzqNoTPaZ7o5jrKL7gM4cKXVovTKNjijQGbEm5tY9ZfOojlkytzX6awUvE2dDbuRalyuDvEuKw1Yc6BcOzHJYn4IbegooL3OkZGztFiVH28sZ2qQZ1hx8JNHplGixUp7lHHQpJtmuUdrZCKvi3l4sH0nj0zXRUIaGNsu6TP74BYdfFcnJAFwJluKIcBTD3zqJ9rvK7xU7wpJMMpCbi2gsjaTX9vm9RY2Aqm8oCNy47tq4yISphGuoII6bfHQRJCkgw6lqn2DbaDNePcUUkbmYRXJOlSK8aZczORpEDRUZf68Vmsie356WtgIY0IkT4uWEMXCXTGpYK70g8DoyD53gAazpdyK2OfbX1fGyCzARgb1q346WtphA1DwuvGYMrRyK8I3poftmLiSTMjQcSO1Zw3z0Lp3ApfSoO5hrIGV5hfMZBmBQi2uLMoH6pXmVfeuAlhNGf1oh3Nkd7R0o0THsMZyQJ5zLQ6ZJ36oVZcLdw35HeU6nVBQFiorfVJzXMDfEjYkrBcyrBOWJlFl2aYo990boCibCw7YFj1jTE9SFnM8A7NGbjJHUVJjn3YmWJYsZDQvdiB4GpQNfISJ1E7zlrbH3z3U8oIHggmTMIoxFbbx6VK3XhgRimDp8vYm6TFdpRzDyq57p3l4EQ9bPUZ5fWmqHxwZ0xM4DfpBDxcK5g43Nt557SQgCBSVo4bkR0cruD2YHmdjpC5jVqc9xbeTakIRB6dUCqsni1MxLdUg4N2YVvWWzwf6B92xdbzFoZnu8h5YVjtbvINeTVTXJP8eAwiWj1Hi6UQd7uRKbEPz8jXeO5FkLqXq9Ebyrms1luSENVXiMAw4tQs6g6wyIxcRCu8jEDKjjanySnHWxfBlV3lmlQeH83MOr0xJ57FvzFmChjKA6oc5jRchbwupAwbRZACyhcBfk21OhkTlmfZ90PVIcHS1FznX2AkDUF52jhCscL9bMIQqoFmOZflfo7vl45Kyjl0dgdGSgSL3c3GWOXOEPser76thPtM4dchoSx7Ry2qxVBYaIwgmUSWRsJqeXxjBUCPondo6YZq4T7HkkHZyyzJCFtvl4WdE71UfXOXhyXgas3z1LBKuC77du2nbgpsXYQsue9YMSW8qDpQEvcVh4R2t0GhkDAJb0m8hVBbjdK8ZFwycEqywPyRqExEDZY1QOV6Vdasw31M9gS6vZjoliImUQzXvEMHCdgTcgRy5FGaskfYtztwCVeLM7YRJ9QUssBJJqO3GnxBUFXlEm3Sfyu3o3kc5hzBF68aShiKsB2IHHoUUr0pXRlfG0YnaMmSxlGmXU5AFA6UExJ94D9qa7AI9GqDiPzATgeVTzsTM6oWmgyFifuI8MAUL1377uiPEVCObRu5uiAcUDxdT947UJhlYc2VSUTNJR0N5IcXtdYGxKqFwbibb5B4zOPa6q7p3tPsu0evHkc8MyCBpn8AMwZh6jp7tm2Jm87T5xgpXzY7agG2O0zb2x1pSYb0Vay2Pdka3vhENdphzsS5CkSn6JF0RyHRhxosP1vxf04uBe6DSRmDW8mWHae8" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:58.697" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:04:58.697" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:04:58.211" endtime="20241013 17:04:58.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:58.698" level="INFO">
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:04:58.697" endtime="20241013 17:04:58.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:58.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:58.698" endtime="20241013 17:04:58.699"/>
</kw>
<msg timestamp="20241013 17:04:58.699" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:04:58.211" endtime="20241013 17:04:58.699"/>
</kw>
<msg timestamp="20241013 17:04:58.699" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:04:58.210" endtime="20241013 17:04:58.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:58.699" endtime="20241013 17:04:58.700"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:58.700" endtime="20241013 17:04:58.700"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:58.204" endtime="20241013 17:04:58.700"/>
</test>
<test id="s1-s6-s6-t5" name="Test Multipart Upload Complete Entity too small" line="170">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:04:58.702" level="INFO">${randStr} = 8122983109</msg>
<status status="PASS" starttime="20241013 17:04:58.702" endtime="20241013 17:04:58.702"/>
</kw>
<msg timestamp="20241013 17:04:58.702" level="INFO">${random} = ozone-test-8122983109</msg>
<status status="PASS" starttime="20241013 17:04:58.702" endtime="20241013 17:04:58.702"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:04:58.703" level="INFO">${PREFIX} = ozone-test-8122983109</msg>
<status status="PASS" starttime="20241013 17:04:58.703" endtime="20241013 17:04:58.703"/>
</kw>
<status status="PASS" starttime="20241013 17:04:58.701" endtime="20241013 17:04:58.703"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:58.707" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-8122983109/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:59.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:59.194" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-8122983109/multipartKey2",
    "UploadId": "e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174"
}</msg>
<status status="PASS" starttime="20241013 17:04:58.705" endtime="20241013 17:04:59.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:59.195" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-8122983109/multipartKey2",
    "UploadId": "e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174"
}</msg>
<status status="PASS" starttime="20241013 17:04:59.195" endtime="20241013 17:04:59.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:59.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:59.196" endtime="20241013 17:04:59.196"/>
</kw>
<status status="PASS" starttime="20241013 17:04:58.704" endtime="20241013 17:04:59.196"/>
</kw>
<msg timestamp="20241013 17:04:59.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:58.704" endtime="20241013 17:04:59.196"/>
</kw>
<msg timestamp="20241013 17:04:59.197" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-8122983109/multipartKey2",
    "UploadId": "e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174"
}</msg>
<status status="PASS" starttime="20241013 17:04:58.704" endtime="20241013 17:04:59.197"/>
</kw>
<msg timestamp="20241013 17:04:59.197" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-8122983109/multipartKey2",
    "UploadId": "e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174"
}</msg>
<status status="PASS" starttime="20241013 17:04:58.703" endtime="20241013 17:04:59.197"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:59.200" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-8122983109/multipartKey2",
    "UploadId": "e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:59.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:59.205" level="INFO">${output} = e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174</msg>
<status status="PASS" starttime="20241013 17:04:59.197" endtime="20241013 17:04:59.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:59.206" level="INFO">e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174</msg>
<status status="PASS" starttime="20241013 17:04:59.206" endtime="20241013 17:04:59.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:59.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:59.206" endtime="20241013 17:04:59.207"/>
</kw>
<msg timestamp="20241013 17:04:59.207" level="INFO">${uploadID} = e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174</msg>
<status status="PASS" starttime="20241013 17:04:59.197" endtime="20241013 17:04:59.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:59.207" endtime="20241013 17:04:59.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:59.208" endtime="20241013 17:04:59.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:59.208" endtime="20241013 17:04:59.208"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/10kb --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:59.212" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-8122983109/multipartKey2 --part-number 1 --body /tmp/10kb --upload-id e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:59.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:59.757" level="INFO">${output} = {
    "ETag": "826992919249482c6c06f5b002c3bde9"
}</msg>
<status status="PASS" starttime="20241013 17:04:59.210" endtime="20241013 17:04:59.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:59.758" level="INFO">{
    "ETag": "826992919249482c6c06f5b002c3bde9"
}</msg>
<status status="PASS" starttime="20241013 17:04:59.758" endtime="20241013 17:04:59.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:59.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:59.758" endtime="20241013 17:04:59.759"/>
</kw>
<status status="PASS" starttime="20241013 17:04:59.210" endtime="20241013 17:04:59.759"/>
</kw>
<msg timestamp="20241013 17:04:59.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:59.210" endtime="20241013 17:04:59.759"/>
</kw>
<msg timestamp="20241013 17:04:59.759" level="INFO">${output} = {
    "ETag": "826992919249482c6c06f5b002c3bde9"
}</msg>
<status status="PASS" starttime="20241013 17:04:59.209" endtime="20241013 17:04:59.759"/>
</kw>
<msg timestamp="20241013 17:04:59.760" level="INFO">${result} = {
    "ETag": "826992919249482c6c06f5b002c3bde9"
}</msg>
<status status="PASS" starttime="20241013 17:04:59.208" endtime="20241013 17:04:59.760"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:59.763" level="INFO">Running command 'echo '{
    "ETag": "826992919249482c6c06f5b002c3bde9"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:04:59.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:04:59.768" level="INFO">${output} = 826992919249482c6c06f5b002c3bde9</msg>
<status status="PASS" starttime="20241013 17:04:59.760" endtime="20241013 17:04:59.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:04:59.769" level="INFO">826992919249482c6c06f5b002c3bde9</msg>
<status status="PASS" starttime="20241013 17:04:59.768" endtime="20241013 17:04:59.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:04:59.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:04:59.769" endtime="20241013 17:04:59.770"/>
</kw>
<msg timestamp="20241013 17:04:59.770" level="INFO">${eTag1} = 826992919249482c6c06f5b002c3bde9</msg>
<status status="PASS" starttime="20241013 17:04:59.760" endtime="20241013 17:04:59.770"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:04:59.770" endtime="20241013 17:04:59.770"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/10kb --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:04:59.774" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-8122983109/multipartKey2 --part-number 2 --body /tmp/10kb --upload-id e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:00.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:00.318" level="INFO">${output} = {
    "ETag": "826992919249482c6c06f5b002c3bde9"
}</msg>
<status status="PASS" starttime="20241013 17:04:59.772" endtime="20241013 17:05:00.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:00.320" level="INFO">{
    "ETag": "826992919249482c6c06f5b002c3bde9"
}</msg>
<status status="PASS" starttime="20241013 17:05:00.319" endtime="20241013 17:05:00.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:00.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:00.320" endtime="20241013 17:05:00.320"/>
</kw>
<status status="PASS" starttime="20241013 17:04:59.772" endtime="20241013 17:05:00.320"/>
</kw>
<msg timestamp="20241013 17:05:00.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:04:59.772" endtime="20241013 17:05:00.321"/>
</kw>
<msg timestamp="20241013 17:05:00.321" level="INFO">${output} = {
    "ETag": "826992919249482c6c06f5b002c3bde9"
}</msg>
<status status="PASS" starttime="20241013 17:04:59.771" endtime="20241013 17:05:00.321"/>
</kw>
<msg timestamp="20241013 17:05:00.321" level="INFO">${result} = {
    "ETag": "826992919249482c6c06f5b002c3bde9"
}</msg>
<status status="PASS" starttime="20241013 17:04:59.770" endtime="20241013 17:05:00.321"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:00.324" level="INFO">Running command 'echo '{
    "ETag": "826992919249482c6c06f5b002c3bde9"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:00.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:00.330" level="INFO">${output} = 826992919249482c6c06f5b002c3bde9</msg>
<status status="PASS" starttime="20241013 17:05:00.322" endtime="20241013 17:05:00.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:00.330" level="INFO">826992919249482c6c06f5b002c3bde9</msg>
<status status="PASS" starttime="20241013 17:05:00.330" endtime="20241013 17:05:00.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:00.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:00.331" endtime="20241013 17:05:00.331"/>
</kw>
<msg timestamp="20241013 17:05:00.331" level="INFO">${eTag2} = 826992919249482c6c06f5b002c3bde9</msg>
<status status="PASS" starttime="20241013 17:05:00.321" endtime="20241013 17:05:00.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:00.332" endtime="20241013 17:05:00.332"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:00.335" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id e1b65bab-c52a-4ccd-88ea-0ce2e1c78015-113301199201571174 --bucket link --key ozone-test-8122983109/multipartKey2 --multipart-upload 'Parts=[{ETag=826992919249482c6c06f5b002c3bde9,PartNumber=1},{ETag=826992919249482c6c06f5b002c3bde9,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:00.808" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:00.808" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20241013 17:05:00.333" endtime="20241013 17:05:00.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:00.809" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20241013 17:05:00.808" endtime="20241013 17:05:00.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:00.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:00.809" endtime="20241013 17:05:00.810"/>
</kw>
<msg timestamp="20241013 17:05:00.810" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20241013 17:05:00.333" endtime="20241013 17:05:00.810"/>
</kw>
<msg timestamp="20241013 17:05:00.810" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20241013 17:05:00.332" endtime="20241013 17:05:00.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:00.810" endtime="20241013 17:05:00.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:04:58.701" endtime="20241013 17:05:00.811"/>
</test>
<test id="s1-s6-s6-t6" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="191">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:00.813" level="INFO">${randStr} = 1823792141</msg>
<status status="PASS" starttime="20241013 17:05:00.812" endtime="20241013 17:05:00.813"/>
</kw>
<msg timestamp="20241013 17:05:00.813" level="INFO">${random} = ozone-test-1823792141</msg>
<status status="PASS" starttime="20241013 17:05:00.812" endtime="20241013 17:05:00.813"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:00.813" level="INFO">${PREFIX} = ozone-test-1823792141</msg>
<status status="PASS" starttime="20241013 17:05:00.813" endtime="20241013 17:05:00.814"/>
</kw>
<status status="PASS" starttime="20241013 17:05:00.812" endtime="20241013 17:05:00.814"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:00.817" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-1823792141/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:01.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:01.305" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1823792141/multipartKey3",
    "UploadId": "fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673"
}</msg>
<status status="PASS" starttime="20241013 17:05:00.815" endtime="20241013 17:05:01.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:01.307" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-1823792141/multipartKey3",
    "UploadId": "fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673"
}</msg>
<status status="PASS" starttime="20241013 17:05:01.306" endtime="20241013 17:05:01.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:01.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:01.307" endtime="20241013 17:05:01.307"/>
</kw>
<status status="PASS" starttime="20241013 17:05:00.815" endtime="20241013 17:05:01.307"/>
</kw>
<msg timestamp="20241013 17:05:01.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:00.814" endtime="20241013 17:05:01.308"/>
</kw>
<msg timestamp="20241013 17:05:01.308" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1823792141/multipartKey3",
    "UploadId": "fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673"
}</msg>
<status status="PASS" starttime="20241013 17:05:00.814" endtime="20241013 17:05:01.308"/>
</kw>
<msg timestamp="20241013 17:05:01.308" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-1823792141/multipartKey3",
    "UploadId": "fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673"
}</msg>
<status status="PASS" starttime="20241013 17:05:00.814" endtime="20241013 17:05:01.308"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:01.311" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-1823792141/multipartKey3",
    "UploadId": "fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:01.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:01.316" level="INFO">${output} = fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673</msg>
<status status="PASS" starttime="20241013 17:05:01.309" endtime="20241013 17:05:01.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:01.317" level="INFO">fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673</msg>
<status status="PASS" starttime="20241013 17:05:01.317" endtime="20241013 17:05:01.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:01.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:01.317" endtime="20241013 17:05:01.319"/>
</kw>
<msg timestamp="20241013 17:05:01.319" level="INFO">${uploadID} = fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673</msg>
<status status="PASS" starttime="20241013 17:05:01.308" endtime="20241013 17:05:01.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:01.320" endtime="20241013 17:05:01.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:01.320" endtime="20241013 17:05:01.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:01.321" endtime="20241013 17:05:01.321"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:01.325" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673 --bucket link --key ozone-test-1823792141/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:01.806" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:01.806" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:01.323" endtime="20241013 17:05:01.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:01.808" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20241013 17:05:01.807" endtime="20241013 17:05:01.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:01.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:01.808" endtime="20241013 17:05:01.808"/>
</kw>
<msg timestamp="20241013 17:05:01.808" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:01.322" endtime="20241013 17:05:01.808"/>
</kw>
<msg timestamp="20241013 17:05:01.809" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:01.321" endtime="20241013 17:05:01.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:01.809" endtime="20241013 17:05:01.809"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:01.813" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673 --bucket link --key ozone-test-1823792141/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:02.304" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:02.304" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:01.810" endtime="20241013 17:05:02.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:02.305" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20241013 17:05:02.305" endtime="20241013 17:05:02.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:02.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:02.305" endtime="20241013 17:05:02.306"/>
</kw>
<msg timestamp="20241013 17:05:02.306" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:01.810" endtime="20241013 17:05:02.306"/>
</kw>
<msg timestamp="20241013 17:05:02.306" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:01.809" endtime="20241013 17:05:02.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:02.306" endtime="20241013 17:05:02.307"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:02.311" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1823792141/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:02.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:02.896" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:02.309" endtime="20241013 17:05:02.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:02.897" level="INFO">{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:02.897" endtime="20241013 17:05:02.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:02.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:02.898" endtime="20241013 17:05:02.898"/>
</kw>
<status status="PASS" starttime="20241013 17:05:02.308" endtime="20241013 17:05:02.898"/>
</kw>
<msg timestamp="20241013 17:05:02.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:02.308" endtime="20241013 17:05:02.898"/>
</kw>
<msg timestamp="20241013 17:05:02.898" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:02.307" endtime="20241013 17:05:02.898"/>
</kw>
<msg timestamp="20241013 17:05:02.899" level="INFO">${result} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:02.307" endtime="20241013 17:05:02.899"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:02.902" level="INFO">Running command 'echo '{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:02.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:02.907" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:02.899" endtime="20241013 17:05:02.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:02.908" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:02.907" endtime="20241013 17:05:02.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:02.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:02.908" endtime="20241013 17:05:02.908"/>
</kw>
<msg timestamp="20241013 17:05:02.909" level="INFO">${eTag1} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:02.899" endtime="20241013 17:05:02.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:02.909" endtime="20241013 17:05:02.909"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:02.913" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1823792141/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:03.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:03.492" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:02.911" endtime="20241013 17:05:03.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:03.493" level="INFO">{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:03.493" endtime="20241013 17:05:03.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:03.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:03.494" endtime="20241013 17:05:03.494"/>
</kw>
<status status="PASS" starttime="20241013 17:05:02.910" endtime="20241013 17:05:03.494"/>
</kw>
<msg timestamp="20241013 17:05:03.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:02.910" endtime="20241013 17:05:03.494"/>
</kw>
<msg timestamp="20241013 17:05:03.495" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:02.910" endtime="20241013 17:05:03.495"/>
</kw>
<msg timestamp="20241013 17:05:03.495" level="INFO">${result} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:02.909" endtime="20241013 17:05:03.495"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:03.498" level="INFO">Running command 'echo '{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:03.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:03.504" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:03.496" endtime="20241013 17:05:03.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:03.505" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:03.504" endtime="20241013 17:05:03.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:03.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:03.505" endtime="20241013 17:05:03.505"/>
</kw>
<msg timestamp="20241013 17:05:03.506" level="INFO">${eTag2} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:03.495" endtime="20241013 17:05:03.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:03.506" endtime="20241013 17:05:03.506"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:03.510" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20241013 17:05:03.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:03.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:03.507" endtime="20241013 17:05:03.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:03.513" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:03.513" endtime="20241013 17:05:03.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:03.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:03.514" endtime="20241013 17:05:03.514"/>
</kw>
<status status="PASS" starttime="20241013 17:05:03.507" endtime="20241013 17:05:03.514"/>
</kw>
<msg timestamp="20241013 17:05:03.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:03.507" endtime="20241013 17:05:03.515"/>
</kw>
<status status="PASS" starttime="20241013 17:05:03.506" endtime="20241013 17:05:03.515"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:03.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1823792141/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:04.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:04.026" level="INFO">${output} = {
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}</msg>
<status status="PASS" starttime="20241013 17:05:03.517" endtime="20241013 17:05:04.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:04.027" level="INFO">{
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}</msg>
<status status="PASS" starttime="20241013 17:05:04.026" endtime="20241013 17:05:04.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:04.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:04.027" endtime="20241013 17:05:04.028"/>
</kw>
<status status="PASS" starttime="20241013 17:05:03.516" endtime="20241013 17:05:04.028"/>
</kw>
<msg timestamp="20241013 17:05:04.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:03.516" endtime="20241013 17:05:04.028"/>
</kw>
<msg timestamp="20241013 17:05:04.029" level="INFO">${output} = {
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}</msg>
<status status="PASS" starttime="20241013 17:05:03.515" endtime="20241013 17:05:04.029"/>
</kw>
<msg timestamp="20241013 17:05:04.029" level="INFO">${result} = {
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}</msg>
<status status="PASS" starttime="20241013 17:05:03.515" endtime="20241013 17:05:04.029"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:04.033" level="INFO">Running command 'echo '{
    "ETag": "804f368834f04e8d39a8a7c76ba870e3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:04.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:04.039" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:05:04.030" endtime="20241013 17:05:04.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:04.040" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:05:04.040" endtime="20241013 17:05:04.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:04.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:04.040" endtime="20241013 17:05:04.041"/>
</kw>
<msg timestamp="20241013 17:05:04.041" level="INFO">${eTag3} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:05:04.029" endtime="20241013 17:05:04.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:04.041" endtime="20241013 17:05:04.042"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:04.045" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673 --bucket link --key ozone-test-1823792141/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:04.534" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:04.534" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:04.043" endtime="20241013 17:05:04.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:04.535" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20241013 17:05:04.534" endtime="20241013 17:05:04.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:04.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:04.535" endtime="20241013 17:05:04.535"/>
</kw>
<msg timestamp="20241013 17:05:04.536" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:04.042" endtime="20241013 17:05:04.536"/>
</kw>
<msg timestamp="20241013 17:05:04.536" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:04.042" endtime="20241013 17:05:04.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:04.536" endtime="20241013 17:05:04.536"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:04.540" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673 --bucket link --key ozone-test-1823792141/multipartKey3 --multipart-upload 'Parts=[{ETag=3083430ab1b1506ea36ca328eb7c1fc4,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:05.016" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:05.016" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:04.538" endtime="20241013 17:05:05.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:05.017" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20241013 17:05:05.016" endtime="20241013 17:05:05.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:05.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:05.017" endtime="20241013 17:05:05.018"/>
</kw>
<msg timestamp="20241013 17:05:05.018" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:04.537" endtime="20241013 17:05:05.018"/>
</kw>
<msg timestamp="20241013 17:05:05.018" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20241013 17:05:04.537" endtime="20241013 17:05:05.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:05.018" endtime="20241013 17:05:05.019"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:05.022" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673 --bucket link --key ozone-test-1823792141/multipartKey3 --multipart-upload 'Parts=[{ETag=3083430ab1b1506ea36ca328eb7c1fc4,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:05.495" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:05.495" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20241013 17:05:05.020" endtime="20241013 17:05:05.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:05.496" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20241013 17:05:05.495" endtime="20241013 17:05:05.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:05.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:05.496" endtime="20241013 17:05:05.496"/>
</kw>
<msg timestamp="20241013 17:05:05.497" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20241013 17:05:05.020" endtime="20241013 17:05:05.497"/>
</kw>
<msg timestamp="20241013 17:05:05.497" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20241013 17:05:05.019" endtime="20241013 17:05:05.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:05.497" endtime="20241013 17:05:05.497"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:05.502" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id fdea0ba2-a223-4d54-a00b-0df7f1e8a723-113301199339917673 --bucket link --key ozone-test-1823792141/multipartKey3 --multipart-upload 'Parts=[{ETag=3083430ab1b1506ea36ca328eb7c1fc4,PartNumber=1},{ETag=804f368834f04e8d39a8a7c76ba870e3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:06.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:06.003" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1823792141/multipartKey3",
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\""
}</msg>
<status status="PASS" starttime="20241013 17:05:05.499" endtime="20241013 17:05:06.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:06.005" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1823792141/multipartKey3",
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\""
}</msg>
<status status="PASS" starttime="20241013 17:05:06.004" endtime="20241013 17:05:06.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:06.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:06.005" endtime="20241013 17:05:06.005"/>
</kw>
<status status="PASS" starttime="20241013 17:05:05.499" endtime="20241013 17:05:06.005"/>
</kw>
<msg timestamp="20241013 17:05:06.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:05.499" endtime="20241013 17:05:06.006"/>
</kw>
<msg timestamp="20241013 17:05:06.006" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1823792141/multipartKey3",
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\""
}</msg>
<status status="PASS" starttime="20241013 17:05:05.498" endtime="20241013 17:05:06.006"/>
</kw>
<msg timestamp="20241013 17:05:06.006" level="INFO">${result} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1823792141/multipartKey3",
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\""
}</msg>
<status status="PASS" starttime="20241013 17:05:05.497" endtime="20241013 17:05:06.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:06.006" endtime="20241013 17:05:06.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:06.007" endtime="20241013 17:05:06.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:06.007" endtime="20241013 17:05:06.007"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:06.011" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-1823792141/multipartKey3 /tmp/ozone-test-1823792141-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:06.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:06.736" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 5243910,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:05:06.009" endtime="20241013 17:05:06.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:06.737" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 5243910,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:06 GMT",
    "Metadata": {},
    "PartsCount": 3
}</msg>
<status status="PASS" starttime="20241013 17:05:06.737" endtime="20241013 17:05:06.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:06.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:06.738" endtime="20241013 17:05:06.738"/>
</kw>
<status status="PASS" starttime="20241013 17:05:06.009" endtime="20241013 17:05:06.738"/>
</kw>
<msg timestamp="20241013 17:05:06.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:06.009" endtime="20241013 17:05:06.738"/>
</kw>
<msg timestamp="20241013 17:05:06.739" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 5243910,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:05:06.008" endtime="20241013 17:05:06.739"/>
</kw>
<msg timestamp="20241013 17:05:06.739" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 5243910,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:05:06.007" endtime="20241013 17:05:06.739"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:06.743" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-1823792141-multipartKey3'.</msg>
<msg timestamp="20241013 17:05:06.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:06.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:06.740" endtime="20241013 17:05:06.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:06.754" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:06.754" endtime="20241013 17:05:06.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:06.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:06.754" endtime="20241013 17:05:06.755"/>
</kw>
<status status="PASS" starttime="20241013 17:05:06.740" endtime="20241013 17:05:06.755"/>
</kw>
<msg timestamp="20241013 17:05:06.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:06.739" endtime="20241013 17:05:06.755"/>
</kw>
<status status="PASS" starttime="20241013 17:05:06.739" endtime="20241013 17:05:06.755"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:06.759" level="INFO">Running command 'md5sum /tmp/ozone-test-1823792141-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:06.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:06.773" level="INFO">${output} = 52a655135ae06d89dc68f66ebd6b77d3</msg>
<status status="PASS" starttime="20241013 17:05:06.757" endtime="20241013 17:05:06.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:06.774" level="INFO">52a655135ae06d89dc68f66ebd6b77d3</msg>
<status status="PASS" starttime="20241013 17:05:06.773" endtime="20241013 17:05:06.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:06.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:06.774" endtime="20241013 17:05:06.774"/>
</kw>
<status status="PASS" starttime="20241013 17:05:06.757" endtime="20241013 17:05:06.774"/>
</kw>
<msg timestamp="20241013 17:05:06.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:06.756" endtime="20241013 17:05:06.775"/>
</kw>
<msg timestamp="20241013 17:05:06.775" level="INFO">${checksumbefore} = 52a655135ae06d89dc68f66ebd6b77d3</msg>
<status status="PASS" starttime="20241013 17:05:06.756" endtime="20241013 17:05:06.775"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:06.778" level="INFO">Running command 'md5sum /tmp/ozone-test-1823792141-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:06.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:06.792" level="INFO">${output} = 52a655135ae06d89dc68f66ebd6b77d3</msg>
<status status="PASS" starttime="20241013 17:05:06.776" endtime="20241013 17:05:06.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:06.793" level="INFO">52a655135ae06d89dc68f66ebd6b77d3</msg>
<status status="PASS" starttime="20241013 17:05:06.793" endtime="20241013 17:05:06.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:06.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:06.793" endtime="20241013 17:05:06.794"/>
</kw>
<status status="PASS" starttime="20241013 17:05:06.776" endtime="20241013 17:05:06.794"/>
</kw>
<msg timestamp="20241013 17:05:06.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:06.775" endtime="20241013 17:05:06.794"/>
</kw>
<msg timestamp="20241013 17:05:06.794" level="INFO">${checksumafter} = 52a655135ae06d89dc68f66ebd6b77d3</msg>
<status status="PASS" starttime="20241013 17:05:06.775" endtime="20241013 17:05:06.794"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:06.795" endtime="20241013 17:05:06.795"/>
</kw>
<status status="PASS" starttime="20241013 17:05:06.756" endtime="20241013 17:05:06.795"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:06.799" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-1823792141/multipartKey3 --part-number 1 /tmp/ozone-test-1823792141-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:07.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:07.492" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 5243904,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:05:06.797" endtime="20241013 17:05:07.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:07.493" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 5243904,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:07 GMT",
    "Metadata": {},
    "PartsCount": 3
}</msg>
<status status="PASS" starttime="20241013 17:05:07.492" endtime="20241013 17:05:07.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:07.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:07.493" endtime="20241013 17:05:07.494"/>
</kw>
<status status="PASS" starttime="20241013 17:05:06.797" endtime="20241013 17:05:07.494"/>
</kw>
<msg timestamp="20241013 17:05:07.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:06.796" endtime="20241013 17:05:07.494"/>
</kw>
<msg timestamp="20241013 17:05:07.494" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 5243904,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:05:06.796" endtime="20241013 17:05:07.494"/>
</kw>
<msg timestamp="20241013 17:05:07.494" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 5243904,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:05:06.795" endtime="20241013 17:05:07.494"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:07.498" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:07.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:07.512" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:07.496" endtime="20241013 17:05:07.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:07.513" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:07.512" endtime="20241013 17:05:07.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:07.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:07.513" endtime="20241013 17:05:07.514"/>
</kw>
<status status="PASS" starttime="20241013 17:05:07.496" endtime="20241013 17:05:07.514"/>
</kw>
<msg timestamp="20241013 17:05:07.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:07.495" endtime="20241013 17:05:07.514"/>
</kw>
<msg timestamp="20241013 17:05:07.514" level="INFO">${checksumbefore} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:07.495" endtime="20241013 17:05:07.514"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:07.518" level="INFO">Running command 'md5sum /tmp/ozone-test-1823792141-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:07.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:07.531" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:07.516" endtime="20241013 17:05:07.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:07.532" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:07.532" endtime="20241013 17:05:07.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:07.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:07.532" endtime="20241013 17:05:07.533"/>
</kw>
<status status="PASS" starttime="20241013 17:05:07.515" endtime="20241013 17:05:07.533"/>
</kw>
<msg timestamp="20241013 17:05:07.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:07.515" endtime="20241013 17:05:07.533"/>
</kw>
<msg timestamp="20241013 17:05:07.533" level="INFO">${checksumafter} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:07.514" endtime="20241013 17:05:07.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:07.533" endtime="20241013 17:05:07.534"/>
</kw>
<status status="PASS" starttime="20241013 17:05:07.495" endtime="20241013 17:05:07.534"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:07.538" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-1823792141/multipartKey3 --part-number 3 /tmp/ozone-test-1823792141-multipartKey3-part3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:07.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:07.999" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 6,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:05:07.536" endtime="20241013 17:05:07.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:08.000" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 6,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:07 GMT",
    "Metadata": {},
    "PartsCount": 3
}</msg>
<status status="PASS" starttime="20241013 17:05:07.999" endtime="20241013 17:05:08.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:08.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:08.000" endtime="20241013 17:05:08.000"/>
</kw>
<status status="PASS" starttime="20241013 17:05:07.535" endtime="20241013 17:05:08.001"/>
</kw>
<msg timestamp="20241013 17:05:08.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:07.535" endtime="20241013 17:05:08.001"/>
</kw>
<msg timestamp="20241013 17:05:08.001" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 6,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:05:07.534" endtime="20241013 17:05:08.001"/>
</kw>
<msg timestamp="20241013 17:05:08.001" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:05 GMT",
    "ContentLength": 6,
    "ETag": "\"a5990e9c24ddde1cf0768cc8e6c4ef0f-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20241013 17:05:07.534" endtime="20241013 17:05:08.001"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part3</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:08.005" level="INFO">Running command 'md5sum /tmp/part3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:08.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:08.010" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:05:08.003" endtime="20241013 17:05:08.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:08.011" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:05:08.010" endtime="20241013 17:05:08.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:08.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:08.011" endtime="20241013 17:05:08.011"/>
</kw>
<status status="PASS" starttime="20241013 17:05:08.003" endtime="20241013 17:05:08.012"/>
</kw>
<msg timestamp="20241013 17:05:08.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:08.002" endtime="20241013 17:05:08.012"/>
</kw>
<msg timestamp="20241013 17:05:08.012" level="INFO">${checksumbefore} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:05:08.002" endtime="20241013 17:05:08.012"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:08.015" level="INFO">Running command 'md5sum /tmp/ozone-test-1823792141-multipartKey3-part3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:08.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:08.019" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:05:08.013" endtime="20241013 17:05:08.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:08.020" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:05:08.019" endtime="20241013 17:05:08.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:08.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:08.020" endtime="20241013 17:05:08.021"/>
</kw>
<status status="PASS" starttime="20241013 17:05:08.013" endtime="20241013 17:05:08.021"/>
</kw>
<msg timestamp="20241013 17:05:08.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:08.013" endtime="20241013 17:05:08.021"/>
</kw>
<msg timestamp="20241013 17:05:08.021" level="INFO">${checksumafter} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20241013 17:05:08.012" endtime="20241013 17:05:08.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:08.021" endtime="20241013 17:05:08.021"/>
</kw>
<status status="PASS" starttime="20241013 17:05:08.001" endtime="20241013 17:05:08.021"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:00.811" endtime="20241013 17:05:08.022"/>
</test>
<test id="s1-s6-s6-t7" name="Test abort Multipart upload" line="241">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:08.024" level="INFO">${randStr} = 1522277137</msg>
<status status="PASS" starttime="20241013 17:05:08.023" endtime="20241013 17:05:08.024"/>
</kw>
<msg timestamp="20241013 17:05:08.024" level="INFO">${random} = ozone-test-1522277137</msg>
<status status="PASS" starttime="20241013 17:05:08.023" endtime="20241013 17:05:08.024"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:08.024" level="INFO">${PREFIX} = ozone-test-1522277137</msg>
<status status="PASS" starttime="20241013 17:05:08.024" endtime="20241013 17:05:08.024"/>
</kw>
<status status="PASS" starttime="20241013 17:05:08.023" endtime="20241013 17:05:08.025"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:08.028" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-1522277137/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:08.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:08.514" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1522277137/multipartKey4",
    "UploadId": "152aff82-ed7d-415f-aa2a-a77102177c5f-113301199812563309"
}</msg>
<status status="PASS" starttime="20241013 17:05:08.026" endtime="20241013 17:05:08.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:08.515" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-1522277137/multipartKey4",
    "UploadId": "152aff82-ed7d-415f-aa2a-a77102177c5f-113301199812563309"
}</msg>
<status status="PASS" starttime="20241013 17:05:08.514" endtime="20241013 17:05:08.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:08.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:08.515" endtime="20241013 17:05:08.516"/>
</kw>
<status status="PASS" starttime="20241013 17:05:08.026" endtime="20241013 17:05:08.516"/>
</kw>
<msg timestamp="20241013 17:05:08.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:08.025" endtime="20241013 17:05:08.516"/>
</kw>
<msg timestamp="20241013 17:05:08.516" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1522277137/multipartKey4",
    "UploadId": "152aff82-ed7d-415f-aa2a-a77102177c5f-113301199812563309"
}</msg>
<status status="PASS" starttime="20241013 17:05:08.025" endtime="20241013 17:05:08.516"/>
</kw>
<msg timestamp="20241013 17:05:08.516" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-1522277137/multipartKey4",
    "UploadId": "152aff82-ed7d-415f-aa2a-a77102177c5f-113301199812563309"
}</msg>
<status status="PASS" starttime="20241013 17:05:08.025" endtime="20241013 17:05:08.516"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:08.519" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-1522277137/multipartKey4",
    "UploadId": "152aff82-ed7d-415f-aa2a-a77102177c5f-113301199812563309"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:08.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:08.525" level="INFO">${output} = 152aff82-ed7d-415f-aa2a-a77102177c5f-113301199812563309</msg>
<status status="PASS" starttime="20241013 17:05:08.517" endtime="20241013 17:05:08.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:08.526" level="INFO">152aff82-ed7d-415f-aa2a-a77102177c5f-113301199812563309</msg>
<status status="PASS" starttime="20241013 17:05:08.525" endtime="20241013 17:05:08.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:08.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:08.526" endtime="20241013 17:05:08.526"/>
</kw>
<msg timestamp="20241013 17:05:08.527" level="INFO">${uploadID} = 152aff82-ed7d-415f-aa2a-a77102177c5f-113301199812563309</msg>
<status status="PASS" starttime="20241013 17:05:08.516" endtime="20241013 17:05:08.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:08.527" endtime="20241013 17:05:08.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:08.527" endtime="20241013 17:05:08.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:08.528" endtime="20241013 17:05:08.528"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:08.531" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-1522277137/multipartKey4 --upload-id 152aff82-ed7d-415f-aa2a-a77102177c5f-113301199812563309 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:08.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:08.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:08.529" endtime="20241013 17:05:08.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:08.992" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:08.991" endtime="20241013 17:05:08.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:08.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:08.992" endtime="20241013 17:05:08.992"/>
</kw>
<msg timestamp="20241013 17:05:08.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:08.529" endtime="20241013 17:05:08.993"/>
</kw>
<msg timestamp="20241013 17:05:08.993" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:05:08.528" endtime="20241013 17:05:08.993"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:08.022" endtime="20241013 17:05:08.993"/>
</test>
<test id="s1-s6-s6-t8" name="Test abort Multipart upload with invalid uploadId" line="250">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:08.995" level="INFO">${randStr} = 3142069691</msg>
<status status="PASS" starttime="20241013 17:05:08.995" endtime="20241013 17:05:08.995"/>
</kw>
<msg timestamp="20241013 17:05:08.995" level="INFO">${random} = ozone-test-3142069691</msg>
<status status="PASS" starttime="20241013 17:05:08.995" endtime="20241013 17:05:08.995"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:08.996" level="INFO">${PREFIX} = ozone-test-3142069691</msg>
<status status="PASS" starttime="20241013 17:05:08.996" endtime="20241013 17:05:08.996"/>
</kw>
<status status="PASS" starttime="20241013 17:05:08.994" endtime="20241013 17:05:08.996"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:08.999" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-3142069691/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:09.480" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:09.480" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20241013 17:05:08.997" endtime="20241013 17:05:09.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:09.481" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20241013 17:05:09.480" endtime="20241013 17:05:09.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:09.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:09.481" endtime="20241013 17:05:09.482"/>
</kw>
<msg timestamp="20241013 17:05:09.482" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20241013 17:05:08.997" endtime="20241013 17:05:09.482"/>
</kw>
<msg timestamp="20241013 17:05:09.482" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20241013 17:05:08.996" endtime="20241013 17:05:09.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:08.994" endtime="20241013 17:05:09.482"/>
</test>
<test id="s1-s6-s6-t9" name="Upload part with Incorrect uploadID" line="253">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:09.485" level="INFO">${randStr} = 3556407637</msg>
<status status="PASS" starttime="20241013 17:05:09.484" endtime="20241013 17:05:09.485"/>
</kw>
<msg timestamp="20241013 17:05:09.485" level="INFO">${random} = ozone-test-3556407637</msg>
<status status="PASS" starttime="20241013 17:05:09.484" endtime="20241013 17:05:09.485"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:09.485" level="INFO">${PREFIX} = ozone-test-3556407637</msg>
<status status="PASS" starttime="20241013 17:05:09.485" endtime="20241013 17:05:09.485"/>
</kw>
<status status="PASS" starttime="20241013 17:05:09.483" endtime="20241013 17:05:09.485"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:09.489" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-3556407637/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:09.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:09.958" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3556407637/multipartKey",
    "UploadId": "82514308-5bd0-46f6-acc6-ec84e02d986e-113301199907393902"
}</msg>
<status status="PASS" starttime="20241013 17:05:09.487" endtime="20241013 17:05:09.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:09.959" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-3556407637/multipartKey",
    "UploadId": "82514308-5bd0-46f6-acc6-ec84e02d986e-113301199907393902"
}</msg>
<status status="PASS" starttime="20241013 17:05:09.958" endtime="20241013 17:05:09.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:09.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:09.959" endtime="20241013 17:05:09.960"/>
</kw>
<status status="PASS" starttime="20241013 17:05:09.486" endtime="20241013 17:05:09.960"/>
</kw>
<msg timestamp="20241013 17:05:09.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:09.486" endtime="20241013 17:05:09.960"/>
</kw>
<msg timestamp="20241013 17:05:09.960" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3556407637/multipartKey",
    "UploadId": "82514308-5bd0-46f6-acc6-ec84e02d986e-113301199907393902"
}</msg>
<status status="PASS" starttime="20241013 17:05:09.486" endtime="20241013 17:05:09.960"/>
</kw>
<msg timestamp="20241013 17:05:09.960" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-3556407637/multipartKey",
    "UploadId": "82514308-5bd0-46f6-acc6-ec84e02d986e-113301199907393902"
}</msg>
<status status="PASS" starttime="20241013 17:05:09.485" endtime="20241013 17:05:09.960"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:09.964" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:05:09.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:09.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:09.962" endtime="20241013 17:05:09.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:09.967" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:09.966" endtime="20241013 17:05:09.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:09.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:09.967" endtime="20241013 17:05:09.967"/>
</kw>
<status status="PASS" starttime="20241013 17:05:09.961" endtime="20241013 17:05:09.967"/>
</kw>
<msg timestamp="20241013 17:05:09.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:09.961" endtime="20241013 17:05:09.968"/>
</kw>
<status status="PASS" starttime="20241013 17:05:09.961" endtime="20241013 17:05:09.968"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:09.971" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-3556407637/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:10.442" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:10.442" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20241013 17:05:09.969" endtime="20241013 17:05:10.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:10.443" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20241013 17:05:10.443" endtime="20241013 17:05:10.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:10.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:10.444" endtime="20241013 17:05:10.444"/>
</kw>
<msg timestamp="20241013 17:05:10.444" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20241013 17:05:09.968" endtime="20241013 17:05:10.444"/>
</kw>
<msg timestamp="20241013 17:05:10.445" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20241013 17:05:09.968" endtime="20241013 17:05:10.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:10.445" endtime="20241013 17:05:10.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:09.483" endtime="20241013 17:05:10.445"/>
</test>
<test id="s1-s6-s6-t10" name="Test list parts" line="259">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:10.447" level="INFO">${randStr} = 1402675314</msg>
<status status="PASS" starttime="20241013 17:05:10.447" endtime="20241013 17:05:10.447"/>
</kw>
<msg timestamp="20241013 17:05:10.448" level="INFO">${random} = ozone-test-1402675314</msg>
<status status="PASS" starttime="20241013 17:05:10.447" endtime="20241013 17:05:10.448"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:10.448" level="INFO">${PREFIX} = ozone-test-1402675314</msg>
<status status="PASS" starttime="20241013 17:05:10.448" endtime="20241013 17:05:10.448"/>
</kw>
<status status="PASS" starttime="20241013 17:05:10.446" endtime="20241013 17:05:10.448"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:10.452" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-1402675314/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:10.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:10.915" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1402675314/multipartKey5",
    "UploadId": "214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320"
}</msg>
<status status="PASS" starttime="20241013 17:05:10.450" endtime="20241013 17:05:10.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:10.916" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-1402675314/multipartKey5",
    "UploadId": "214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320"
}</msg>
<status status="PASS" starttime="20241013 17:05:10.915" endtime="20241013 17:05:10.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:10.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:10.916" endtime="20241013 17:05:10.916"/>
</kw>
<status status="PASS" starttime="20241013 17:05:10.449" endtime="20241013 17:05:10.917"/>
</kw>
<msg timestamp="20241013 17:05:10.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:10.449" endtime="20241013 17:05:10.917"/>
</kw>
<msg timestamp="20241013 17:05:10.917" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1402675314/multipartKey5",
    "UploadId": "214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320"
}</msg>
<status status="PASS" starttime="20241013 17:05:10.449" endtime="20241013 17:05:10.917"/>
</kw>
<msg timestamp="20241013 17:05:10.917" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-1402675314/multipartKey5",
    "UploadId": "214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320"
}</msg>
<status status="PASS" starttime="20241013 17:05:10.448" endtime="20241013 17:05:10.917"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:10.920" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-1402675314/multipartKey5",
    "UploadId": "214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:10.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:10.926" level="INFO">${output} = 214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320</msg>
<status status="PASS" starttime="20241013 17:05:10.918" endtime="20241013 17:05:10.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:10.926" level="INFO">214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320</msg>
<status status="PASS" starttime="20241013 17:05:10.926" endtime="20241013 17:05:10.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:10.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:10.927" endtime="20241013 17:05:10.927"/>
</kw>
<msg timestamp="20241013 17:05:10.927" level="INFO">${uploadID} = 214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320</msg>
<status status="PASS" starttime="20241013 17:05:10.917" endtime="20241013 17:05:10.927"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:10.927" endtime="20241013 17:05:10.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:10.928" endtime="20241013 17:05:10.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:10.928" endtime="20241013 17:05:10.929"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:10.932" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1402675314/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:11.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:11.496" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:10.930" endtime="20241013 17:05:11.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:11.497" level="INFO">{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:11.497" endtime="20241013 17:05:11.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:11.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:11.498" endtime="20241013 17:05:11.498"/>
</kw>
<status status="PASS" starttime="20241013 17:05:10.930" endtime="20241013 17:05:11.498"/>
</kw>
<msg timestamp="20241013 17:05:11.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:10.930" endtime="20241013 17:05:11.498"/>
</kw>
<msg timestamp="20241013 17:05:11.498" level="INFO">${output} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:10.929" endtime="20241013 17:05:11.498"/>
</kw>
<msg timestamp="20241013 17:05:11.499" level="INFO">${result} = {
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}</msg>
<status status="PASS" starttime="20241013 17:05:10.929" endtime="20241013 17:05:11.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:11.502" level="INFO">Running command 'echo '{
    "ETag": "3083430ab1b1506ea36ca328eb7c1fc4"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:11.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:11.507" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:11.499" endtime="20241013 17:05:11.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:11.508" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:11.508" endtime="20241013 17:05:11.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:11.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:11.508" endtime="20241013 17:05:11.509"/>
</kw>
<msg timestamp="20241013 17:05:11.509" level="INFO">${eTag1} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:11.499" endtime="20241013 17:05:11.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:11.509" endtime="20241013 17:05:11.510"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:11.513" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20241013 17:05:11.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:11.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:11.511" endtime="20241013 17:05:11.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:11.516" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:11.515" endtime="20241013 17:05:11.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:11.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:11.516" endtime="20241013 17:05:11.516"/>
</kw>
<status status="PASS" starttime="20241013 17:05:11.510" endtime="20241013 17:05:11.516"/>
</kw>
<msg timestamp="20241013 17:05:11.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:11.510" endtime="20241013 17:05:11.517"/>
</kw>
<status status="PASS" starttime="20241013 17:05:11.510" endtime="20241013 17:05:11.517"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:11.520" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-1402675314/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:12.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:12.066" level="INFO">${output} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:05:11.518" endtime="20241013 17:05:12.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:12.067" level="INFO">{
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:05:12.066" endtime="20241013 17:05:12.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:12.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:12.067" endtime="20241013 17:05:12.068"/>
</kw>
<status status="PASS" starttime="20241013 17:05:11.518" endtime="20241013 17:05:12.068"/>
</kw>
<msg timestamp="20241013 17:05:12.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:11.518" endtime="20241013 17:05:12.068"/>
</kw>
<msg timestamp="20241013 17:05:12.068" level="INFO">${output} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:05:11.517" endtime="20241013 17:05:12.068"/>
</kw>
<msg timestamp="20241013 17:05:12.068" level="INFO">${result} = {
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}</msg>
<status status="PASS" starttime="20241013 17:05:11.517" endtime="20241013 17:05:12.068"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:12.071" level="INFO">Running command 'echo '{
    "ETag": "9e6cc3c0311e8eb9548e860d8caf6734"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:12.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:12.077" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:05:12.069" endtime="20241013 17:05:12.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:12.078" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:05:12.077" endtime="20241013 17:05:12.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:12.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:12.078" endtime="20241013 17:05:12.078"/>
</kw>
<msg timestamp="20241013 17:05:12.079" level="INFO">${eTag2} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:05:12.069" endtime="20241013 17:05:12.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:12.079" endtime="20241013 17:05:12.079"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:12.083" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-1402675314/multipartKey5 --upload-id 214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:12.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:12.549" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:05:12.081" endtime="20241013 17:05:12.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:12.550" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:05:12.011Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20241013 17:05:12.550" endtime="20241013 17:05:12.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:12.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:12.550" endtime="20241013 17:05:12.551"/>
</kw>
<status status="PASS" starttime="20241013 17:05:12.081" endtime="20241013 17:05:12.551"/>
</kw>
<msg timestamp="20241013 17:05:12.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:12.080" endtime="20241013 17:05:12.551"/>
</kw>
<msg timestamp="20241013 17:05:12.551" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:05:12.080" endtime="20241013 17:05:12.551"/>
</kw>
<msg timestamp="20241013 17:05:12.551" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:05:12.079" endtime="20241013 17:05:12.552"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:12.554" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:05:12.011Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:12.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:12.560" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:12.552" endtime="20241013 17:05:12.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:12.561" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:12.560" endtime="20241013 17:05:12.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:12.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:12.561" endtime="20241013 17:05:12.562"/>
</kw>
<msg timestamp="20241013 17:05:12.562" level="INFO">${part1} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:12.552" endtime="20241013 17:05:12.562"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:12.565" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:05:12.011Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:12.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:12.570" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:05:12.563" endtime="20241013 17:05:12.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:12.571" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:05:12.570" endtime="20241013 17:05:12.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:12.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:12.571" endtime="20241013 17:05:12.571"/>
</kw>
<msg timestamp="20241013 17:05:12.572" level="INFO">${part2} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:05:12.562" endtime="20241013 17:05:12.572"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:12.572" endtime="20241013 17:05:12.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:12.572" endtime="20241013 17:05:12.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:12.573" endtime="20241013 17:05:12.573"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:12.577" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-1402675314/multipartKey5 --upload-id 214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:13.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:13.043" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:05:12.575" endtime="20241013 17:05:13.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:13.044" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20241013 17:05:13.043" endtime="20241013 17:05:13.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:13.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:13.044" endtime="20241013 17:05:13.045"/>
</kw>
<status status="PASS" starttime="20241013 17:05:12.574" endtime="20241013 17:05:13.045"/>
</kw>
<msg timestamp="20241013 17:05:13.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:12.574" endtime="20241013 17:05:13.045"/>
</kw>
<msg timestamp="20241013 17:05:13.045" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:05:12.574" endtime="20241013 17:05:13.045"/>
</kw>
<msg timestamp="20241013 17:05:13.045" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20241013 17:05:12.573" endtime="20241013 17:05:13.045"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:13.048" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:13.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:13.054" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:13.046" endtime="20241013 17:05:13.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:13.055" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:13.054" endtime="20241013 17:05:13.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:13.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:13.055" endtime="20241013 17:05:13.055"/>
</kw>
<msg timestamp="20241013 17:05:13.056" level="INFO">${part1} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:13.045" endtime="20241013 17:05:13.056"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:13.058" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2024-10-13T17:05:11.451Z",
            "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:13.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:13.064" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20241013 17:05:13.056" endtime="20241013 17:05:13.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:13.064" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20241013 17:05:13.064" endtime="20241013 17:05:13.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:13.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:13.065" endtime="20241013 17:05:13.065"/>
</kw>
<msg timestamp="20241013 17:05:13.065" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20241013 17:05:13.056" endtime="20241013 17:05:13.065"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:13.065" endtime="20241013 17:05:13.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:13.066" endtime="20241013 17:05:13.066"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:13.070" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-1402675314/multipartKey5 --upload-id 214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:13.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:13.561" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:05:12.011Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
...</msg>
<status status="PASS" starttime="20241013 17:05:13.068" endtime="20241013 17:05:13.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:13.563" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:05:12.011Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20241013 17:05:13.562" endtime="20241013 17:05:13.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:13.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:13.563" endtime="20241013 17:05:13.564"/>
</kw>
<status status="PASS" starttime="20241013 17:05:13.068" endtime="20241013 17:05:13.564"/>
</kw>
<msg timestamp="20241013 17:05:13.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:13.067" endtime="20241013 17:05:13.564"/>
</kw>
<msg timestamp="20241013 17:05:13.564" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:05:12.011Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
...</msg>
<status status="PASS" starttime="20241013 17:05:13.067" endtime="20241013 17:05:13.564"/>
</kw>
<msg timestamp="20241013 17:05:13.565" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:05:12.011Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
...</msg>
<status status="PASS" starttime="20241013 17:05:13.066" endtime="20241013 17:05:13.565"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:13.569" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2024-10-13T17:05:12.011Z",
            "ETag": "9e6cc3c0311e8eb9548e860d8caf6734",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:13.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:13.588" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:05:13.565" endtime="20241013 17:05:13.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:13.589" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:05:13.589" endtime="20241013 17:05:13.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:13.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:13.590" endtime="20241013 17:05:13.590"/>
</kw>
<msg timestamp="20241013 17:05:13.591" level="INFO">${part2} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20241013 17:05:13.565" endtime="20241013 17:05:13.591"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:13.591" endtime="20241013 17:05:13.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:13.593" endtime="20241013 17:05:13.594"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:13.599" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-1402675314/multipartKey5 --upload-id 214fbf37-640e-4f9c-a53a-044628ee36d1-113301199970046320 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:14.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:14.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:13.595" endtime="20241013 17:05:14.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:14.070" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:14.070" endtime="20241013 17:05:14.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:14.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:14.070" endtime="20241013 17:05:14.071"/>
</kw>
<msg timestamp="20241013 17:05:14.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:13.595" endtime="20241013 17:05:14.071"/>
</kw>
<msg timestamp="20241013 17:05:14.071" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:05:13.594" endtime="20241013 17:05:14.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:10.446" endtime="20241013 17:05:14.071"/>
</test>
<test id="s1-s6-s6-t11" name="Test Multipart Upload with the simplified aws s3 cp API" line="300">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:14.074" level="INFO">${randStr} = 2126058067</msg>
<status status="PASS" starttime="20241013 17:05:14.073" endtime="20241013 17:05:14.074"/>
</kw>
<msg timestamp="20241013 17:05:14.074" level="INFO">${random} = ozone-test-2126058067</msg>
<status status="PASS" starttime="20241013 17:05:14.073" endtime="20241013 17:05:14.074"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:14.074" level="INFO">${PREFIX} = ozone-test-2126058067</msg>
<status status="PASS" starttime="20241013 17:05:14.074" endtime="20241013 17:05:14.074"/>
</kw>
<status status="PASS" starttime="20241013 17:05:14.073" endtime="20241013 17:05:14.074"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/22mb s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:14.078" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/22mb s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:15.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:15.034" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (13.1 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20241013 17:05:14.076" endtime="20241013 17:05:15.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:15.035" level="INFO">Completed 256.0 KiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (13.1 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (17.4 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (21.5 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (25.6 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (25.3 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (28.6 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (31.5 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (33.7 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (36.4 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (39.4 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (42.3 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (42.0 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (44.5 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (47.3 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (50.1 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (52.8 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (42.6 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (44.5 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (46.6 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (48.7 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (50.7 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (52.5 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (54.3 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (56.0 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (58.0 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (59.8 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (60.5 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (62.4 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (64.0 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (65.7 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (67.5 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (69.2 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (70.9 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (72.5 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (74.2 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (75.9 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (77.5 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (79.1 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (80.5 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (82.0 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (81.8 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (83.2 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (74.5 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (75.6 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (76.8 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (75.9 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (77.1 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (76.8 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (78.2 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (75.6 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (76.6 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (77.4 MiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (75.3 MiB/s) with 1 file(s) remaining 
Completed 14.0 MiB/22.0 MiB (74.0 MiB/s) with 1 file(s) remaining 
Completed 14.2 MiB/22.0 MiB (74.5 MiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (74.6 MiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (75.0 MiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (75.1 MiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (76.2 MiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (77.3 MiB/s) with 1 file(s) remaining 
Completed 15.8 MiB/22.0 MiB (76.3 MiB/s) with 1 file(s) remaining 
Completed 16.0 MiB/22.0 MiB (76.9 MiB/s) with 1 file(s) remaining 
Completed 16.2 MiB/22.0 MiB (76.9 MiB/s) with 1 file(s) remaining 
Completed 16.5 MiB/22.0 MiB (77.0 MiB/s) with 1 file(s) remaining 
Completed 16.8 MiB/22.0 MiB (76.5 MiB/s) with 1 file(s) remaining 
Completed 17.0 MiB/22.0 MiB (73.3 MiB/s) with 1 file(s) remaining 
Completed 17.2 MiB/22.0 MiB (72.1 MiB/s) with 1 file(s) remaining 
Completed 17.5 MiB/22.0 MiB (73.0 MiB/s) with 1 file(s) remaining 
Completed 17.8 MiB/22.0 MiB (73.8 MiB/s) with 1 file(s) remaining 
Completed 18.0 MiB/22.0 MiB (74.7 MiB/s) with 1 file(s) remaining 
Completed 18.2 MiB/22.0 MiB (75.7 MiB/s) with 1 file(s) remaining 
Completed 18.5 MiB/22.0 MiB (76.6 MiB/s) with 1 file(s) remaining 
Completed 18.8 MiB/22.0 MiB (77.5 MiB/s) with 1 file(s) remaining 
Completed 19.0 MiB/22.0 MiB (78.4 MiB/s) with 1 file(s) remaining 
Completed 19.2 MiB/22.0 MiB (79.3 MiB/s) with 1 file(s) remaining 
Completed 19.5 MiB/22.0 MiB (77.7 MiB/s) with 1 file(s) remaining 
Completed 19.8 MiB/22.0 MiB (78.4 MiB/s) with 1 file(s) remaining 
Completed 20.0 MiB/22.0 MiB (79.2 MiB/s) with 1 file(s) remaining 
Completed 20.2 MiB/22.0 MiB (80.0 MiB/s) with 1 file(s) remaining 
Completed 20.5 MiB/22.0 MiB (80.8 MiB/s) with 1 file(s) remaining 
Completed 20.8 MiB/22.0 MiB (81.6 MiB/s) with 1 file(s) remaining 
Completed 21.0 MiB/22.0 MiB (82.4 MiB/s) with 1 file(s) remaining 
Completed 21.2 MiB/22.0 MiB (83.2 MiB/s) with 1 file(s) remaining 
Completed 21.5 MiB/22.0 MiB (84.1 MiB/s) with 1 file(s) remaining 
Completed 21.8 MiB/22.0 MiB (83.9 MiB/s) with 1 file(s) remaining 
Completed 22.0 MiB/22.0 MiB (84.7 MiB/s) with 1 file(s) remaining 
upload: ../../tmp/22mb to s3://link/mpyawscli                     </msg>
<status status="PASS" starttime="20241013 17:05:15.034" endtime="20241013 17:05:15.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:15.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:15.035" endtime="20241013 17:05:15.036"/>
</kw>
<status status="PASS" starttime="20241013 17:05:14.075" endtime="20241013 17:05:15.036"/>
</kw>
<msg timestamp="20241013 17:05:15.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:14.075" endtime="20241013 17:05:15.036"/>
</kw>
<msg timestamp="20241013 17:05:15.036" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (13.1 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20241013 17:05:14.075" endtime="20241013 17:05:15.036"/>
</kw>
<status status="PASS" starttime="20241013 17:05:14.074" endtime="20241013 17:05:15.036"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:15.041" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://link/mpyawscli /tmp/22mb.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:29.586" level="INFO">${rc} = 1</msg>
<msg timestamp="20241013 17:05:29.586" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (10.9 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20241013 17:05:15.038" endtime="20241013 17:05:29.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:29.587" level="INFO">Completed 256.0 KiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (10.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (11.5 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (14.3 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (14.2 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (15.2 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (15.3 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (16.0 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (16.0 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (16.6 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (17.1 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (17.1 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (16.7 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (16.3 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (16.7 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (16.8 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (17.4 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (16.9 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (17.6 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (16.0 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (15.8 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (15.9 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (16.2 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (16.2 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (16.6 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (17.0 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (16.6 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (17.0 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (16.3 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (16.7 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (16.2 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (16.1 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (16.2 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (16.9 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (16.8 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (16.4 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (16.7 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (16.6 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (16.9 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (17.0 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (17.3 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (17.3 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (17.5 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (17.4 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (17.6 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (17.5 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (17.7 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (17.7 MiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (17.8 MiB/s) with 1 file(s) remaining 
Completed 14.0 MiB/22.0 MiB (17.9 MiB/s) with 1 file(s) remaining 
Completed 14.2 MiB/22.0 MiB (18.1 MiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (18.0 MiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (18.2 MiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (18.2 MiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (18.3 MiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (18.4 MiB/s) with 1 file(s) remaining 
Completed 15.8 MiB/22.0 MiB (18.5 MiB/s) with 1 file(s) remaining 
Completed 16.0 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining 
download failed: s3://link/mpyawscli to ../../tmp/22mb.result An error occurred (500) when calling the GetObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20241013 17:05:29.586" endtime="20241013 17:05:29.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:29.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20241013 17:05:29.588" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20241013 17:05:29.587" endtime="20241013 17:05:29.588"/>
</kw>
<status status="FAIL" starttime="20241013 17:05:15.038" endtime="20241013 17:05:29.588"/>
</kw>
<msg timestamp="20241013 17:05:29.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20241013 17:05:15.038" endtime="20241013 17:05:29.588"/>
</kw>
<status status="FAIL" starttime="20241013 17:05:15.037" endtime="20241013 17:05:29.588"/>
</kw>
<status status="FAIL" starttime="20241013 17:05:15.037" endtime="20241013 17:05:29.588"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<status status="NOT RUN" starttime="20241013 17:05:29.589" endtime="20241013 17:05:29.589"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/22mb</arg>
<arg>/tmp/22mb.result</arg>
<status status="NOT RUN" starttime="20241013 17:05:29.589" endtime="20241013 17:05:29.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20241013 17:05:14.072" endtime="20241013 17:05:29.589">1 != 0</status>
</test>
<test id="s1-s6-s6-t12" name="Test Multipart Upload Put With Copy" line="306">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:29.591" level="INFO">${randStr} = 5610722138</msg>
<status status="PASS" starttime="20241013 17:05:29.591" endtime="20241013 17:05:29.591"/>
</kw>
<msg timestamp="20241013 17:05:29.591" level="INFO">${random} = ozone-test-5610722138</msg>
<status status="PASS" starttime="20241013 17:05:29.590" endtime="20241013 17:05:29.591"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:29.592" level="INFO">${PREFIX} = ozone-test-5610722138</msg>
<status status="PASS" starttime="20241013 17:05:29.591" endtime="20241013 17:05:29.592"/>
</kw>
<status status="PASS" starttime="20241013 17:05:29.590" endtime="20241013 17:05:29.592"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:29.596" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5610722138/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:30.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:30.216" level="INFO">${output} = {
    "ETag": "\"3083430ab1b1506ea36ca328eb7c1fc4\""
}</msg>
<status status="PASS" starttime="20241013 17:05:29.593" endtime="20241013 17:05:30.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:30.218" level="INFO">{
    "ETag": "\"3083430ab1b1506ea36ca328eb7c1fc4\""
}</msg>
<status status="PASS" starttime="20241013 17:05:30.217" endtime="20241013 17:05:30.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:30.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:30.218" endtime="20241013 17:05:30.218"/>
</kw>
<status status="PASS" starttime="20241013 17:05:29.593" endtime="20241013 17:05:30.219"/>
</kw>
<msg timestamp="20241013 17:05:30.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:29.593" endtime="20241013 17:05:30.219"/>
</kw>
<msg timestamp="20241013 17:05:30.219" level="INFO">${output} = {
    "ETag": "\"3083430ab1b1506ea36ca328eb7c1fc4\""
}</msg>
<status status="PASS" starttime="20241013 17:05:29.592" endtime="20241013 17:05:30.219"/>
</kw>
<msg timestamp="20241013 17:05:30.219" level="INFO">${result} = {
    "ETag": "\"3083430ab1b1506ea36ca328eb7c1fc4\""
}</msg>
<status status="PASS" starttime="20241013 17:05:29.592" endtime="20241013 17:05:30.219"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:30.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-5610722138/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:30.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:30.723" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5610722138/copytest/destination",
    "UploadId": "7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272"
}</msg>
<status status="PASS" starttime="20241013 17:05:30.221" endtime="20241013 17:05:30.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:30.724" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-5610722138/copytest/destination",
    "UploadId": "7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272"
}</msg>
<status status="PASS" starttime="20241013 17:05:30.724" endtime="20241013 17:05:30.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:30.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:30.725" endtime="20241013 17:05:30.725"/>
</kw>
<status status="PASS" starttime="20241013 17:05:30.221" endtime="20241013 17:05:30.725"/>
</kw>
<msg timestamp="20241013 17:05:30.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:30.220" endtime="20241013 17:05:30.725"/>
</kw>
<msg timestamp="20241013 17:05:30.726" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5610722138/copytest/destination",
    "UploadId": "7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272"
}</msg>
<status status="PASS" starttime="20241013 17:05:30.220" endtime="20241013 17:05:30.726"/>
</kw>
<msg timestamp="20241013 17:05:30.726" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-5610722138/copytest/destination",
    "UploadId": "7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272"
}</msg>
<status status="PASS" starttime="20241013 17:05:30.220" endtime="20241013 17:05:30.726"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:30.729" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-5610722138/copytest/destination",
    "UploadId": "7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:30.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:30.735" level="INFO">${output} = 7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272</msg>
<status status="PASS" starttime="20241013 17:05:30.727" endtime="20241013 17:05:30.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:30.736" level="INFO">7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272</msg>
<status status="PASS" starttime="20241013 17:05:30.736" endtime="20241013 17:05:30.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:30.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:30.737" endtime="20241013 17:05:30.737"/>
</kw>
<msg timestamp="20241013 17:05:30.738" level="INFO">${uploadID} = 7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272</msg>
<status status="PASS" starttime="20241013 17:05:30.726" endtime="20241013 17:05:30.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:30.738" endtime="20241013 17:05:30.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:30.738" endtime="20241013 17:05:30.738"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:30.742" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-5610722138/copytest/destination --upload-id 7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272 --part-number 1 --copy-source link/ozone-test-5610722138/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:31.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:31.538" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
        "LastModified": "2024-10-13T17:05:31.486Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:30.740" endtime="20241013 17:05:31.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:31.540" level="INFO">{
    "CopyPartResult": {
        "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
        "LastModified": "2024-10-13T17:05:31.486Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:31.539" endtime="20241013 17:05:31.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:31.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:31.540" endtime="20241013 17:05:31.540"/>
</kw>
<status status="PASS" starttime="20241013 17:05:30.740" endtime="20241013 17:05:31.541"/>
</kw>
<msg timestamp="20241013 17:05:31.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:30.740" endtime="20241013 17:05:31.541"/>
</kw>
<msg timestamp="20241013 17:05:31.541" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
        "LastModified": "2024-10-13T17:05:31.486Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:30.739" endtime="20241013 17:05:31.541"/>
</kw>
<msg timestamp="20241013 17:05:31.541" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
        "LastModified": "2024-10-13T17:05:31.486Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:30.739" endtime="20241013 17:05:31.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:31.541" endtime="20241013 17:05:31.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:31.542" endtime="20241013 17:05:31.542"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:31.545" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "3083430ab1b1506ea36ca328eb7c1fc4",
        "LastModified": "2024-10-13T17:05:31.486Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:31.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:31.551" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:31.543" endtime="20241013 17:05:31.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:31.552" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:31.551" endtime="20241013 17:05:31.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:31.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:31.552" endtime="20241013 17:05:31.552"/>
</kw>
<msg timestamp="20241013 17:05:31.553" level="INFO">${eTag1} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:31.542" endtime="20241013 17:05:31.553"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:31.557" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7ba52a67-e661-402c-b9ff-09e24161ac5f-113301201267921272 --bucket link --key ozone-test-5610722138/copytest/destination --multipart-upload 'Parts=[{ETag=3083430ab1b1506ea36ca328eb7c1fc4,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:32.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:32.024" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5610722138/copytest/destination",
    "ETag": "\"1782de0e488a75df1103f8a3732f3256-1\""
}</msg>
<status status="PASS" starttime="20241013 17:05:31.555" endtime="20241013 17:05:32.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:32.025" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5610722138/copytest/destination",
    "ETag": "\"1782de0e488a75df1103f8a3732f3256-1\""
}</msg>
<status status="PASS" starttime="20241013 17:05:32.024" endtime="20241013 17:05:32.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:32.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:32.025" endtime="20241013 17:05:32.025"/>
</kw>
<status status="PASS" starttime="20241013 17:05:31.554" endtime="20241013 17:05:32.026"/>
</kw>
<msg timestamp="20241013 17:05:32.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:31.554" endtime="20241013 17:05:32.026"/>
</kw>
<msg timestamp="20241013 17:05:32.026" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5610722138/copytest/destination",
    "ETag": "\"1782de0e488a75df1103f8a3732f3256-1\""
}</msg>
<status status="PASS" starttime="20241013 17:05:31.554" endtime="20241013 17:05:32.026"/>
</kw>
<status status="PASS" starttime="20241013 17:05:31.553" endtime="20241013 17:05:32.026"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:32.030" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5610722138/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:32.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:32.705" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:31 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1782de0e488a75df1103f8a3732f3256-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:05:32.028" endtime="20241013 17:05:32.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:32.706" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:31 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1782de0e488a75df1103f8a3732f3256-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:32 GMT",
    "Metadata": {},
    "PartsCount": 1
}</msg>
<status status="PASS" starttime="20241013 17:05:32.705" endtime="20241013 17:05:32.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:32.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:32.706" endtime="20241013 17:05:32.707"/>
</kw>
<status status="PASS" starttime="20241013 17:05:32.027" endtime="20241013 17:05:32.707"/>
</kw>
<msg timestamp="20241013 17:05:32.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:32.027" endtime="20241013 17:05:32.707"/>
</kw>
<msg timestamp="20241013 17:05:32.707" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:31 GMT",
    "ContentLength": 5243904,
    "ETag": "\"1782de0e488a75df1103f8a3732f3256-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20241013 17:05:32.027" endtime="20241013 17:05:32.707"/>
</kw>
<status status="PASS" starttime="20241013 17:05:32.026" endtime="20241013 17:05:32.708"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:32.712" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:32.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:32.725" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:32.709" endtime="20241013 17:05:32.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:32.726" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:32.725" endtime="20241013 17:05:32.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:32.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:32.726" endtime="20241013 17:05:32.726"/>
</kw>
<status status="PASS" starttime="20241013 17:05:32.709" endtime="20241013 17:05:32.726"/>
</kw>
<msg timestamp="20241013 17:05:32.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:32.709" endtime="20241013 17:05:32.727"/>
</kw>
<msg timestamp="20241013 17:05:32.727" level="INFO">${checksumbefore} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:32.708" endtime="20241013 17:05:32.727"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:32.730" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:32.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:32.743" level="INFO">${output} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:32.728" endtime="20241013 17:05:32.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:32.744" level="INFO">3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:32.744" endtime="20241013 17:05:32.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:32.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:32.744" endtime="20241013 17:05:32.745"/>
</kw>
<status status="PASS" starttime="20241013 17:05:32.728" endtime="20241013 17:05:32.745"/>
</kw>
<msg timestamp="20241013 17:05:32.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:32.727" endtime="20241013 17:05:32.745"/>
</kw>
<msg timestamp="20241013 17:05:32.745" level="INFO">${checksumafter} = 3083430ab1b1506ea36ca328eb7c1fc4</msg>
<status status="PASS" starttime="20241013 17:05:32.727" endtime="20241013 17:05:32.745"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:32.745" endtime="20241013 17:05:32.746"/>
</kw>
<status status="PASS" starttime="20241013 17:05:32.708" endtime="20241013 17:05:32.746"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:29.589" endtime="20241013 17:05:32.746"/>
</test>
<test id="s1-s6-s6-t13" name="Test Multipart Upload Put With Copy and range" line="327">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:32.748" level="INFO">${randStr} = 9020054299</msg>
<status status="PASS" starttime="20241013 17:05:32.748" endtime="20241013 17:05:32.748"/>
</kw>
<msg timestamp="20241013 17:05:32.748" level="INFO">${random} = ozone-test-9020054299</msg>
<status status="PASS" starttime="20241013 17:05:32.747" endtime="20241013 17:05:32.748"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:32.749" level="INFO">${PREFIX} = ozone-test-9020054299</msg>
<status status="PASS" starttime="20241013 17:05:32.748" endtime="20241013 17:05:32.749"/>
</kw>
<status status="PASS" starttime="20241013 17:05:32.747" endtime="20241013 17:05:32.749"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:32.752" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-9020054299/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:33.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:33.350" level="INFO">${output} = {
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\""
}</msg>
<status status="PASS" starttime="20241013 17:05:32.750" endtime="20241013 17:05:33.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:33.353" level="INFO">{
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\""
}</msg>
<status status="PASS" starttime="20241013 17:05:33.351" endtime="20241013 17:05:33.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:33.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:33.353" endtime="20241013 17:05:33.353"/>
</kw>
<status status="PASS" starttime="20241013 17:05:32.750" endtime="20241013 17:05:33.354"/>
</kw>
<msg timestamp="20241013 17:05:33.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:32.750" endtime="20241013 17:05:33.354"/>
</kw>
<msg timestamp="20241013 17:05:33.354" level="INFO">${output} = {
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\""
}</msg>
<status status="PASS" starttime="20241013 17:05:32.749" endtime="20241013 17:05:33.354"/>
</kw>
<msg timestamp="20241013 17:05:33.354" level="INFO">${result} = {
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\""
}</msg>
<status status="PASS" starttime="20241013 17:05:32.749" endtime="20241013 17:05:33.354"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:33.358" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-9020054299/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:33.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:33.831" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9020054299/copyrange/destination",
    "UploadId": "39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771"
}</msg>
<status status="PASS" starttime="20241013 17:05:33.356" endtime="20241013 17:05:33.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:33.832" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-9020054299/copyrange/destination",
    "UploadId": "39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771"
}</msg>
<status status="PASS" starttime="20241013 17:05:33.831" endtime="20241013 17:05:33.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:33.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:33.832" endtime="20241013 17:05:33.833"/>
</kw>
<status status="PASS" starttime="20241013 17:05:33.355" endtime="20241013 17:05:33.833"/>
</kw>
<msg timestamp="20241013 17:05:33.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:33.355" endtime="20241013 17:05:33.833"/>
</kw>
<msg timestamp="20241013 17:05:33.833" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9020054299/copyrange/destination",
    "UploadId": "39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771"
}</msg>
<status status="PASS" starttime="20241013 17:05:33.355" endtime="20241013 17:05:33.833"/>
</kw>
<msg timestamp="20241013 17:05:33.833" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-9020054299/copyrange/destination",
    "UploadId": "39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771"
}</msg>
<status status="PASS" starttime="20241013 17:05:33.354" endtime="20241013 17:05:33.833"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:33.836" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-9020054299/copyrange/destination",
    "UploadId": "39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:33.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:33.842" level="INFO">${output} = 39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771</msg>
<status status="PASS" starttime="20241013 17:05:33.834" endtime="20241013 17:05:33.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:33.842" level="INFO">39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771</msg>
<status status="PASS" starttime="20241013 17:05:33.842" endtime="20241013 17:05:33.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:33.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:33.843" endtime="20241013 17:05:33.843"/>
</kw>
<msg timestamp="20241013 17:05:33.843" level="INFO">${uploadID} = 39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771</msg>
<status status="PASS" starttime="20241013 17:05:33.833" endtime="20241013 17:05:33.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:33.843" endtime="20241013 17:05:33.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:33.844" endtime="20241013 17:05:33.844"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:33.848" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-9020054299/copyrange/destination --upload-id 39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771 --part-number 1 --copy-source link/ozone-test-9020054299/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:34.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:34.889" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:34.846Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:33.846" endtime="20241013 17:05:34.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:34.890" level="INFO">{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:34.846Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:34.889" endtime="20241013 17:05:34.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:34.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:34.890" endtime="20241013 17:05:34.890"/>
</kw>
<status status="PASS" starttime="20241013 17:05:33.846" endtime="20241013 17:05:34.891"/>
</kw>
<msg timestamp="20241013 17:05:34.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:33.845" endtime="20241013 17:05:34.891"/>
</kw>
<msg timestamp="20241013 17:05:34.891" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:34.846Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:33.845" endtime="20241013 17:05:34.891"/>
</kw>
<msg timestamp="20241013 17:05:34.891" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:34.846Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:33.844" endtime="20241013 17:05:34.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:34.891" endtime="20241013 17:05:34.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:34.892" endtime="20241013 17:05:34.892"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:34.895" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:34.846Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:34.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:34.900" level="INFO">${output} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:34.893" endtime="20241013 17:05:34.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:34.901" level="INFO">18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:34.901" endtime="20241013 17:05:34.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:34.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:34.902" endtime="20241013 17:05:34.902"/>
</kw>
<msg timestamp="20241013 17:05:34.902" level="INFO">${eTag1} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:34.892" endtime="20241013 17:05:34.902"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:34.907" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-9020054299/copyrange/destination --upload-id 39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771 --part-number 2 --copy-source link/ozone-test-9020054299/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:35.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:35.414" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:35.368Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:34.905" endtime="20241013 17:05:35.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:35.415" level="INFO">{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:35.368Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:35.414" endtime="20241013 17:05:35.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:35.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:35.415" endtime="20241013 17:05:35.416"/>
</kw>
<status status="PASS" starttime="20241013 17:05:34.904" endtime="20241013 17:05:35.416"/>
</kw>
<msg timestamp="20241013 17:05:35.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:34.904" endtime="20241013 17:05:35.416"/>
</kw>
<msg timestamp="20241013 17:05:35.416" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:35.368Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:34.903" endtime="20241013 17:05:35.416"/>
</kw>
<msg timestamp="20241013 17:05:35.416" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:35.368Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:34.903" endtime="20241013 17:05:35.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:35.416" endtime="20241013 17:05:35.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:35.417" endtime="20241013 17:05:35.417"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:35.420" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:35.368Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:35.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:35.426" level="INFO">${output} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:35.418" endtime="20241013 17:05:35.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:35.426" level="INFO">18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:35.426" endtime="20241013 17:05:35.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:35.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:35.427" endtime="20241013 17:05:35.427"/>
</kw>
<msg timestamp="20241013 17:05:35.427" level="INFO">${eTag2} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:35.417" endtime="20241013 17:05:35.427"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:35.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 39b3178e-106f-4a92-9e6f-79359d524e67-113301201471803771 --bucket link --key ozone-test-9020054299/copyrange/destination --multipart-upload 'Parts=[{ETag=18e26f9f7429a1b896f810c844d003f7,PartNumber=1},{ETag=18e26f9f7429a1b896f810c844d003f7,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:35.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:35.899" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9020054299/copyrange/destination",
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\""
}</msg>
<status status="PASS" starttime="20241013 17:05:35.429" endtime="20241013 17:05:35.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:35.901" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9020054299/copyrange/destination",
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\""
}</msg>
<status status="PASS" starttime="20241013 17:05:35.900" endtime="20241013 17:05:35.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:35.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:35.901" endtime="20241013 17:05:35.901"/>
</kw>
<status status="PASS" starttime="20241013 17:05:35.429" endtime="20241013 17:05:35.901"/>
</kw>
<msg timestamp="20241013 17:05:35.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:35.429" endtime="20241013 17:05:35.901"/>
</kw>
<msg timestamp="20241013 17:05:35.902" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9020054299/copyrange/destination",
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\""
}</msg>
<status status="PASS" starttime="20241013 17:05:35.428" endtime="20241013 17:05:35.902"/>
</kw>
<status status="PASS" starttime="20241013 17:05:35.427" endtime="20241013 17:05:35.902"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:35.906" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-9020054299/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:36.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:36.865" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:35 GMT",
    "ContentLength": 10485760,
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20241013 17:05:35.903" endtime="20241013 17:05:36.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:36.866" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:35 GMT",
    "ContentLength": 10485760,
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:36 GMT",
    "Metadata": {},
    "PartsCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:05:36.865" endtime="20241013 17:05:36.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:36.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:36.866" endtime="20241013 17:05:36.867"/>
</kw>
<status status="PASS" starttime="20241013 17:05:35.903" endtime="20241013 17:05:36.867"/>
</kw>
<msg timestamp="20241013 17:05:36.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:35.903" endtime="20241013 17:05:36.867"/>
</kw>
<msg timestamp="20241013 17:05:36.868" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:35 GMT",
    "ContentLength": 10485760,
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20241013 17:05:35.902" endtime="20241013 17:05:36.868"/>
</kw>
<status status="PASS" starttime="20241013 17:05:35.902" endtime="20241013 17:05:36.868"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:36.873" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:36.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:36.897" level="INFO">${output} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:36.870" endtime="20241013 17:05:36.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:36.898" level="INFO">18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:36.897" endtime="20241013 17:05:36.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:36.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:36.898" endtime="20241013 17:05:36.899"/>
</kw>
<status status="PASS" starttime="20241013 17:05:36.869" endtime="20241013 17:05:36.899"/>
</kw>
<msg timestamp="20241013 17:05:36.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:36.869" endtime="20241013 17:05:36.899"/>
</kw>
<msg timestamp="20241013 17:05:36.899" level="INFO">${checksumbefore} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:36.869" endtime="20241013 17:05:36.899"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:36.904" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:36.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:36.928" level="INFO">${output} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:36.901" endtime="20241013 17:05:36.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:36.929" level="INFO">18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:36.928" endtime="20241013 17:05:36.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:36.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:36.929" endtime="20241013 17:05:36.930"/>
</kw>
<status status="PASS" starttime="20241013 17:05:36.901" endtime="20241013 17:05:36.930"/>
</kw>
<msg timestamp="20241013 17:05:36.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:36.900" endtime="20241013 17:05:36.930"/>
</kw>
<msg timestamp="20241013 17:05:36.930" level="INFO">${checksumafter} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:36.900" endtime="20241013 17:05:36.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:36.930" endtime="20241013 17:05:36.931"/>
</kw>
<status status="PASS" starttime="20241013 17:05:36.868" endtime="20241013 17:05:36.931"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:32.746" endtime="20241013 17:05:36.931"/>
</test>
<test id="s1-s6-s6-t14" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="353">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:36.933" level="INFO">${randStr} = 1605780083</msg>
<status status="PASS" starttime="20241013 17:05:36.933" endtime="20241013 17:05:36.933"/>
</kw>
<msg timestamp="20241013 17:05:36.933" level="INFO">${random} = ozone-test-1605780083</msg>
<status status="PASS" starttime="20241013 17:05:36.932" endtime="20241013 17:05:36.933"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:36.934" level="INFO">${PREFIX} = ozone-test-1605780083</msg>
<status status="PASS" starttime="20241013 17:05:36.933" endtime="20241013 17:05:36.934"/>
</kw>
<status status="PASS" starttime="20241013 17:05:36.932" endtime="20241013 17:05:36.934"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241013 17:05:36.934" level="INFO">${curDate} = 2024-10-13 17:05:36.934</msg>
<status status="PASS" starttime="20241013 17:05:36.934" endtime="20241013 17:05:36.934"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20241013 17:05:36.938" level="INFO">${beforeCreate} = 2024-10-12 17:05:36.934</msg>
<status status="PASS" starttime="20241013 17:05:36.935" endtime="20241013 17:05:36.938"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20241013 17:05:36.938" level="INFO">${tomorrow} = 2024-10-14 17:05:36.934</msg>
<status status="PASS" starttime="20241013 17:05:36.938" endtime="20241013 17:05:36.938"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:36.942" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-1605780083/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:37.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:37.619" level="INFO">${output} = {
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\""
}</msg>
<status status="PASS" starttime="20241013 17:05:36.940" endtime="20241013 17:05:37.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:37.621" level="INFO">{
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\""
}</msg>
<status status="PASS" starttime="20241013 17:05:37.620" endtime="20241013 17:05:37.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:37.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:37.621" endtime="20241013 17:05:37.622"/>
</kw>
<status status="PASS" starttime="20241013 17:05:36.939" endtime="20241013 17:05:37.622"/>
</kw>
<msg timestamp="20241013 17:05:37.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:36.939" endtime="20241013 17:05:37.622"/>
</kw>
<msg timestamp="20241013 17:05:37.622" level="INFO">${output} = {
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\""
}</msg>
<status status="PASS" starttime="20241013 17:05:36.939" endtime="20241013 17:05:37.622"/>
</kw>
<msg timestamp="20241013 17:05:37.622" level="INFO">${result} = {
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\""
}</msg>
<status status="PASS" starttime="20241013 17:05:36.938" endtime="20241013 17:05:37.622"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:37.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-1605780083/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:38.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:38.088" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1605780083/copyrange/destination",
    "UploadId": "67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527"
}</msg>
<status status="PASS" starttime="20241013 17:05:37.624" endtime="20241013 17:05:38.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:38.089" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-1605780083/copyrange/destination",
    "UploadId": "67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527"
}</msg>
<status status="PASS" starttime="20241013 17:05:38.088" endtime="20241013 17:05:38.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:38.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:38.089" endtime="20241013 17:05:38.090"/>
</kw>
<status status="PASS" starttime="20241013 17:05:37.624" endtime="20241013 17:05:38.090"/>
</kw>
<msg timestamp="20241013 17:05:38.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:37.624" endtime="20241013 17:05:38.090"/>
</kw>
<msg timestamp="20241013 17:05:38.090" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-1605780083/copyrange/destination",
    "UploadId": "67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527"
}</msg>
<status status="PASS" starttime="20241013 17:05:37.623" endtime="20241013 17:05:38.090"/>
</kw>
<msg timestamp="20241013 17:05:38.090" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-1605780083/copyrange/destination",
    "UploadId": "67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527"
}</msg>
<status status="PASS" starttime="20241013 17:05:37.622" endtime="20241013 17:05:38.090"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:38.094" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-1605780083/copyrange/destination",
    "UploadId": "67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:38.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:38.099" level="INFO">${output} = 67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527</msg>
<status status="PASS" starttime="20241013 17:05:38.091" endtime="20241013 17:05:38.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:38.100" level="INFO">67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527</msg>
<status status="PASS" starttime="20241013 17:05:38.100" endtime="20241013 17:05:38.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:38.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:38.100" endtime="20241013 17:05:38.101"/>
</kw>
<msg timestamp="20241013 17:05:38.101" level="INFO">${uploadID} = 67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527</msg>
<status status="PASS" starttime="20241013 17:05:38.091" endtime="20241013 17:05:38.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:38.101" endtime="20241013 17:05:38.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:38.102" endtime="20241013 17:05:38.102"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:38.106" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-1605780083/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:38.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:38.579" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20241013 17:05:38.104" endtime="20241013 17:05:38.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:38.580" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:05:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:05:38.580" endtime="20241013 17:05:38.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:38.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:38.581" endtime="20241013 17:05:38.581"/>
</kw>
<status status="PASS" starttime="20241013 17:05:38.103" endtime="20241013 17:05:38.581"/>
</kw>
<msg timestamp="20241013 17:05:38.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:38.103" endtime="20241013 17:05:38.581"/>
</kw>
<msg timestamp="20241013 17:05:38.581" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20241013 17:05:38.102" endtime="20241013 17:05:38.581"/>
</kw>
<msg timestamp="20241013 17:05:38.582" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20241013 17:05:38.102" endtime="20241013 17:05:38.582"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:38.584" level="INFO">Running command 'echo '{
    "LastModified": "Sun, 13 Oct 2024 17:05:37 GMT",
    "ContentLength": 10485760,
    "ETag": "\"18e26f9f7429a1b896f810c844d003f7\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:38 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:38.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:38.590" level="INFO">${output} = Sun, 13 Oct 2024 17:05:37 GMT</msg>
<status status="PASS" starttime="20241013 17:05:38.582" endtime="20241013 17:05:38.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:38.591" level="INFO">Sun, 13 Oct 2024 17:05:37 GMT</msg>
<status status="PASS" starttime="20241013 17:05:38.590" endtime="20241013 17:05:38.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:38.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:38.591" endtime="20241013 17:05:38.592"/>
</kw>
<msg timestamp="20241013 17:05:38.592" level="INFO">${lastModified} = Sun, 13 Oct 2024 17:05:37 GMT</msg>
<status status="PASS" starttime="20241013 17:05:38.582" endtime="20241013 17:05:38.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:38.592" endtime="20241013 17:05:38.592"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20241013 17:05:38.595" level="INFO">${lmDate} = 2024-10-13 17:05:37.000</msg>
<status status="PASS" starttime="20241013 17:05:38.592" endtime="20241013 17:05:38.595"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20241013 17:05:38.595" level="INFO">${afterCreate} = 2024-10-13 17:05:40.000</msg>
<status status="PASS" starttime="20241013 17:05:38.595" endtime="20241013 17:05:38.595"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241013 17:05:38.596" level="INFO">${latestDate} = 2024-10-13 17:05:38.596</msg>
<status status="PASS" starttime="20241013 17:05:38.596" endtime="20241013 17:05:38.596"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20241013 17:05:38.597" level="INFO">${sleepSeconds} = 1.404</msg>
<status status="PASS" starttime="20241013 17:05:38.596" endtime="20241013 17:05:38.597"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241013 17:05:40.002" level="INFO">Slept 1 second 404 milliseconds</msg>
<status status="PASS" starttime="20241013 17:05:38.597" endtime="20241013 17:05:40.002"/>
</kw>
<status status="PASS" starttime="20241013 17:05:38.597" endtime="20241013 17:05:40.002"/>
</kw>
<status status="PASS" starttime="20241013 17:05:38.595" endtime="20241013 17:05:40.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:40.006" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-1605780083/copyrange/destination --upload-id 67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527 --part-number 1 --copy-source link/ozone-test-1605780083/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2024-10-13 17:05:40.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:40.474" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:40.474" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:05:40.004" endtime="20241013 17:05:40.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:40.475" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:05:40.474" endtime="20241013 17:05:40.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:40.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:40.475" endtime="20241013 17:05:40.476"/>
</kw>
<msg timestamp="20241013 17:05:40.476" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:05:40.003" endtime="20241013 17:05:40.476"/>
</kw>
<msg timestamp="20241013 17:05:40.476" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:05:40.002" endtime="20241013 17:05:40.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:40.476" endtime="20241013 17:05:40.477"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:40.481" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-1605780083/copyrange/destination --upload-id 67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527 --part-number 2 --copy-source link/ozone-test-1605780083/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2024-10-12 17:05:36.934' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:40.954" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:40.955" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:05:40.478" endtime="20241013 17:05:40.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:40.956" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:05:40.955" endtime="20241013 17:05:40.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:40.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:40.956" endtime="20241013 17:05:40.956"/>
</kw>
<msg timestamp="20241013 17:05:40.957" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:05:40.478" endtime="20241013 17:05:40.957"/>
</kw>
<msg timestamp="20241013 17:05:40.957" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20241013 17:05:40.477" endtime="20241013 17:05:40.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:40.957" endtime="20241013 17:05:40.957"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:40.961" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-1605780083/copyrange/destination --upload-id 67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527 --part-number 1 --copy-source link/ozone-test-1605780083/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2024-10-12 17:05:36.934' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:41.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:41.936" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:41.893Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:40.959" endtime="20241013 17:05:41.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:41.937" level="INFO">{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:41.893Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:41.936" endtime="20241013 17:05:41.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:41.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:41.937" endtime="20241013 17:05:41.937"/>
</kw>
<msg timestamp="20241013 17:05:41.938" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:41.893Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:40.958" endtime="20241013 17:05:41.938"/>
</kw>
<msg timestamp="20241013 17:05:41.938" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:41.893Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:40.957" endtime="20241013 17:05:41.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:41.938" endtime="20241013 17:05:41.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:41.938" endtime="20241013 17:05:41.939"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:41.942" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:41.893Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:41.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:41.947" level="INFO">${output} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:41.939" endtime="20241013 17:05:41.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:41.948" level="INFO">18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:41.948" endtime="20241013 17:05:41.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:41.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:41.948" endtime="20241013 17:05:41.949"/>
</kw>
<msg timestamp="20241013 17:05:41.949" level="INFO">${eTag1} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:41.939" endtime="20241013 17:05:41.949"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:41.952" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-1605780083/copyrange/destination --upload-id 67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527 --part-number 2 --copy-source link/ozone-test-1605780083/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2024-10-13 17:05:40.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:42.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:42.465" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:42.419Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:41.950" endtime="20241013 17:05:42.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:42.466" level="INFO">{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:42.419Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:42.466" endtime="20241013 17:05:42.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:42.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:42.467" endtime="20241013 17:05:42.467"/>
</kw>
<msg timestamp="20241013 17:05:42.467" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:42.419Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:41.950" endtime="20241013 17:05:42.467"/>
</kw>
<msg timestamp="20241013 17:05:42.467" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:42.419Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:41.949" endtime="20241013 17:05:42.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:42.468" endtime="20241013 17:05:42.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:42.468" endtime="20241013 17:05:42.468"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:42.471" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:42.419Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:42.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:42.477" level="INFO">${output} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:42.469" endtime="20241013 17:05:42.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:42.478" level="INFO">18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:42.477" endtime="20241013 17:05:42.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:42.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:42.478" endtime="20241013 17:05:42.478"/>
</kw>
<msg timestamp="20241013 17:05:42.478" level="INFO">${eTag2} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:42.468" endtime="20241013 17:05:42.479"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:42.482" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-1605780083/copyrange/destination --upload-id 67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527 --part-number 1 --copy-source link/ozone-test-1605780083/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2024-10-14 17:05:36.934' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:43.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:43.450" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:43.406Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:42.480" endtime="20241013 17:05:43.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:43.451" level="INFO">{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:43.406Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:43.450" endtime="20241013 17:05:43.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:43.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:43.451" endtime="20241013 17:05:43.452"/>
</kw>
<msg timestamp="20241013 17:05:43.452" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:43.406Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:42.480" endtime="20241013 17:05:43.452"/>
</kw>
<msg timestamp="20241013 17:05:43.452" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:43.406Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:42.479" endtime="20241013 17:05:43.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:43.452" endtime="20241013 17:05:43.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:43.453" endtime="20241013 17:05:43.453"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:43.456" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "18e26f9f7429a1b896f810c844d003f7",
        "LastModified": "2024-10-13T17:05:43.406Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:43.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:43.461" level="INFO">${output} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:43.454" endtime="20241013 17:05:43.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:43.462" level="INFO">18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:43.462" endtime="20241013 17:05:43.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:43.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:43.462" endtime="20241013 17:05:43.463"/>
</kw>
<msg timestamp="20241013 17:05:43.463" level="INFO">${eTag1} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:43.453" endtime="20241013 17:05:43.463"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:43.467" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 67ef9565-b0ed-43f0-8d7c-6d9a8f63ea22-113301201750790527 --bucket link --key ozone-test-1605780083/copyrange/destination --multipart-upload 'Parts=[{ETag=18e26f9f7429a1b896f810c844d003f7,PartNumber=1},{ETag=18e26f9f7429a1b896f810c844d003f7,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:44.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:44.003" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1605780083/copyrange/destination",
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\""
}</msg>
<status status="PASS" starttime="20241013 17:05:43.465" endtime="20241013 17:05:44.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:44.004" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1605780083/copyrange/destination",
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\""
}</msg>
<status status="PASS" starttime="20241013 17:05:44.004" endtime="20241013 17:05:44.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:44.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:44.004" endtime="20241013 17:05:44.005"/>
</kw>
<status status="PASS" starttime="20241013 17:05:43.465" endtime="20241013 17:05:44.005"/>
</kw>
<msg timestamp="20241013 17:05:44.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:43.465" endtime="20241013 17:05:44.005"/>
</kw>
<msg timestamp="20241013 17:05:44.005" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-1605780083/copyrange/destination",
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\""
}</msg>
<status status="PASS" starttime="20241013 17:05:43.464" endtime="20241013 17:05:44.005"/>
</kw>
<status status="PASS" starttime="20241013 17:05:43.463" endtime="20241013 17:05:44.006"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:44.010" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-1605780083/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:44.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:44.906" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:43 GMT",
    "ContentLength": 10485760,
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20241013 17:05:44.007" endtime="20241013 17:05:44.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:44.907" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:43 GMT",
    "ContentLength": 10485760,
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:44 GMT",
    "Metadata": {},
    "PartsCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:05:44.906" endtime="20241013 17:05:44.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:44.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:44.907" endtime="20241013 17:05:44.908"/>
</kw>
<status status="PASS" starttime="20241013 17:05:44.007" endtime="20241013 17:05:44.908"/>
</kw>
<msg timestamp="20241013 17:05:44.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:44.007" endtime="20241013 17:05:44.908"/>
</kw>
<msg timestamp="20241013 17:05:44.908" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:43 GMT",
    "ContentLength": 10485760,
    "ETag": "\"8afc5d813f0cb42d6cd0bb4c450becae-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20241013 17:05:44.006" endtime="20241013 17:05:44.908"/>
</kw>
<status status="PASS" starttime="20241013 17:05:44.006" endtime="20241013 17:05:44.908"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:44.912" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:44.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:44.935" level="INFO">${output} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:44.910" endtime="20241013 17:05:44.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:44.936" level="INFO">18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:44.935" endtime="20241013 17:05:44.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:44.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:44.936" endtime="20241013 17:05:44.936"/>
</kw>
<status status="PASS" starttime="20241013 17:05:44.909" endtime="20241013 17:05:44.936"/>
</kw>
<msg timestamp="20241013 17:05:44.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:44.909" endtime="20241013 17:05:44.937"/>
</kw>
<msg timestamp="20241013 17:05:44.937" level="INFO">${checksumbefore} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:44.909" endtime="20241013 17:05:44.937"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:44.941" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:44.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:44.963" level="INFO">${output} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:44.938" endtime="20241013 17:05:44.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:44.964" level="INFO">18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:44.964" endtime="20241013 17:05:44.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:44.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:44.964" endtime="20241013 17:05:44.965"/>
</kw>
<status status="PASS" starttime="20241013 17:05:44.938" endtime="20241013 17:05:44.965"/>
</kw>
<msg timestamp="20241013 17:05:44.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:44.938" endtime="20241013 17:05:44.965"/>
</kw>
<msg timestamp="20241013 17:05:44.965" level="INFO">${checksumafter} = 18e26f9f7429a1b896f810c844d003f7</msg>
<status status="PASS" starttime="20241013 17:05:44.937" endtime="20241013 17:05:44.965"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:44.965" endtime="20241013 17:05:44.966"/>
</kw>
<status status="PASS" starttime="20241013 17:05:44.908" endtime="20241013 17:05:44.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:36.932" endtime="20241013 17:05:44.966"/>
</test>
<test id="s1-s6-s6-t15" name="Test Multipart Upload list" line="405">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:44.968" level="INFO">${randStr} = 8837869413</msg>
<status status="PASS" starttime="20241013 17:05:44.968" endtime="20241013 17:05:44.968"/>
</kw>
<msg timestamp="20241013 17:05:44.969" level="INFO">${random} = ozone-test-8837869413</msg>
<status status="PASS" starttime="20241013 17:05:44.968" endtime="20241013 17:05:44.969"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241013 17:05:44.969" level="INFO">${PREFIX} = ozone-test-8837869413</msg>
<status status="PASS" starttime="20241013 17:05:44.969" endtime="20241013 17:05:44.969"/>
</kw>
<status status="PASS" starttime="20241013 17:05:44.967" endtime="20241013 17:05:44.969"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:44.973" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-8837869413/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:45.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:45.441" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key1",
    "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347"
}</msg>
<status status="PASS" starttime="20241013 17:05:44.971" endtime="20241013 17:05:45.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:45.443" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key1",
    "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347"
}</msg>
<status status="PASS" starttime="20241013 17:05:45.442" endtime="20241013 17:05:45.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:45.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:45.443" endtime="20241013 17:05:45.444"/>
</kw>
<status status="PASS" starttime="20241013 17:05:44.970" endtime="20241013 17:05:45.444"/>
</kw>
<msg timestamp="20241013 17:05:45.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:44.970" endtime="20241013 17:05:45.444"/>
</kw>
<msg timestamp="20241013 17:05:45.444" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key1",
    "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347"
}</msg>
<status status="PASS" starttime="20241013 17:05:44.970" endtime="20241013 17:05:45.444"/>
</kw>
<msg timestamp="20241013 17:05:45.444" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key1",
    "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347"
}</msg>
<status status="PASS" starttime="20241013 17:05:44.969" endtime="20241013 17:05:45.445"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:45.448" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key1",
    "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:45.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:45.454" level="INFO">${output} = aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347</msg>
<status status="PASS" starttime="20241013 17:05:45.445" endtime="20241013 17:05:45.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:45.455" level="INFO">aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347</msg>
<status status="PASS" starttime="20241013 17:05:45.454" endtime="20241013 17:05:45.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:45.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:45.455" endtime="20241013 17:05:45.456"/>
</kw>
<msg timestamp="20241013 17:05:45.456" level="INFO">${uploadID1} = aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347</msg>
<status status="PASS" starttime="20241013 17:05:45.445" endtime="20241013 17:05:45.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:45.456" endtime="20241013 17:05:45.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:45.456" endtime="20241013 17:05:45.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:45.457" endtime="20241013 17:05:45.457"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:45.461" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-8837869413/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:45.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:45.930" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key2",
    "UploadId": "125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380"
}</msg>
<status status="PASS" starttime="20241013 17:05:45.459" endtime="20241013 17:05:45.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:45.931" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key2",
    "UploadId": "125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380"
}</msg>
<status status="PASS" starttime="20241013 17:05:45.931" endtime="20241013 17:05:45.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:45.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:45.932" endtime="20241013 17:05:45.932"/>
</kw>
<status status="PASS" starttime="20241013 17:05:45.459" endtime="20241013 17:05:45.932"/>
</kw>
<msg timestamp="20241013 17:05:45.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:45.458" endtime="20241013 17:05:45.932"/>
</kw>
<msg timestamp="20241013 17:05:45.933" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key2",
    "UploadId": "125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380"
}</msg>
<status status="PASS" starttime="20241013 17:05:45.458" endtime="20241013 17:05:45.933"/>
</kw>
<msg timestamp="20241013 17:05:45.933" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key2",
    "UploadId": "125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380"
}</msg>
<status status="PASS" starttime="20241013 17:05:45.457" endtime="20241013 17:05:45.933"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:45.936" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-8837869413/listtest/key2",
    "UploadId": "125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:45.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:45.942" level="INFO">${output} = 125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380</msg>
<status status="PASS" starttime="20241013 17:05:45.933" endtime="20241013 17:05:45.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:45.942" level="INFO">125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380</msg>
<status status="PASS" starttime="20241013 17:05:45.942" endtime="20241013 17:05:45.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:45.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:45.943" endtime="20241013 17:05:45.943"/>
</kw>
<msg timestamp="20241013 17:05:45.943" level="INFO">${uploadID2} = 125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380</msg>
<status status="PASS" starttime="20241013 17:05:45.933" endtime="20241013 17:05:45.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:45.943" endtime="20241013 17:05:45.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:45.944" endtime="20241013 17:05:45.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:45.944" endtime="20241013 17:05:45.945"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:45.948" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket link --prefix ozone-test-8837869413/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:46.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:46.424" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347",
            "Key": "ozone-test-8837869413/listtest/key1",
            "Initiated": "2024...</msg>
<status status="PASS" starttime="20241013 17:05:45.946" endtime="20241013 17:05:46.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:46.425" level="INFO">{
    "Uploads": [
        {
            "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347",
            "Key": "ozone-test-8837869413/listtest/key1",
            "Initiated": "2024-10-13T17:05:45.399Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380",
            "Key": "ozone-test-8837869413/listtest/key2",
            "Initiated": "2024-10-13T17:05:45.886Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:05:46.424" endtime="20241013 17:05:46.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:46.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:46.425" endtime="20241013 17:05:46.426"/>
</kw>
<status status="PASS" starttime="20241013 17:05:45.946" endtime="20241013 17:05:46.426"/>
</kw>
<msg timestamp="20241013 17:05:46.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:45.946" endtime="20241013 17:05:46.426"/>
</kw>
<msg timestamp="20241013 17:05:46.426" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347",
            "Key": "ozone-test-8837869413/listtest/key1",
            "Initiated": "2024...</msg>
<status status="PASS" starttime="20241013 17:05:45.945" endtime="20241013 17:05:46.426"/>
</kw>
<msg timestamp="20241013 17:05:46.426" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347",
            "Key": "ozone-test-8837869413/listtest/key1",
            "Initiated": "2024...</msg>
<status status="PASS" starttime="20241013 17:05:45.945" endtime="20241013 17:05:46.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:46.427" endtime="20241013 17:05:46.427"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:46.427" endtime="20241013 17:05:46.427"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:46.430" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "aefd177a-a03f-49cb-9b4e-8a7657e62fa5-113301202232873347",
            "Key": "ozone-test-8837869413/listtest/key1",
            "Initiated": "2024-10-13T17:05:45.399Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "125fbb1a-7ed5-4290-87bb-a6fa3c13fbf6-113301202264789380",
            "Key": "ozone-test-8837869413/listtest/key2",
            "Initiated": "2024-10-13T17:05:45.886Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:46.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:46.436" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:05:46.428" endtime="20241013 17:05:46.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:46.437" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:05:46.436" endtime="20241013 17:05:46.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:46.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:46.437" endtime="20241013 17:05:46.437"/>
</kw>
<msg timestamp="20241013 17:05:46.438" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20241013 17:05:46.427" endtime="20241013 17:05:46.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:46.438" endtime="20241013 17:05:46.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:44.967" endtime="20241013 17:05:46.438"/>
</test>
<kw name="Teardown Multipart Tests" type="TEARDOWN">
<kw name="Remove Files" library="OperatingSystem">
<arg>/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb</arg>
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<msg timestamp="20241013 17:05:46.440" level="INFO" html="true">File '&lt;a href="file:///tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb"&gt;/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20241013 17:05:46.440" endtime="20241013 17:05:46.440"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.440" endtime="20241013 17:05:46.441"/>
</kw>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20241013 17:04:42.690" endtime="20241013 17:05:46.441"/>
</suite>
<suite id="s1-s6-s7" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:05:46.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:46.452" endtime="20241013 17:05:46.453"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:05:46.453" endtime="20241013 17:05:46.453"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:05:46.453" endtime="20241013 17:05:46.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:46.453" endtime="20241013 17:05:46.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:46.453" endtime="20241013 17:05:46.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:46.453" endtime="20241013 17:05:46.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:46.454" endtime="20241013 17:05:46.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:46.454" endtime="20241013 17:05:46.454"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:05:46.454" endtime="20241013 17:05:46.454"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.452" endtime="20241013 17:05:46.454"/>
</kw>
<test id="s1-s6-s7-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:46.455" level="INFO">${postfix} = 17207</msg>
<status status="PASS" starttime="20241013 17:05:46.455" endtime="20241013 17:05:46.456"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 17:05:46.456" level="INFO">${DESTBUCKET} = destbucket-17207</msg>
<status status="PASS" starttime="20241013 17:05:46.456" endtime="20241013 17:05:46.456"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:46.459" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-17207 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:46.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:46.945" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-17207"
}</msg>
<status status="PASS" starttime="20241013 17:05:46.457" endtime="20241013 17:05:46.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:46.946" level="INFO">{
    "Location": "http://s3g:9878/destbucket-17207"
}</msg>
<status status="PASS" starttime="20241013 17:05:46.946" endtime="20241013 17:05:46.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:46.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:46.947" endtime="20241013 17:05:46.947"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.457" endtime="20241013 17:05:46.947"/>
</kw>
<msg timestamp="20241013 17:05:46.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:46.457" endtime="20241013 17:05:46.947"/>
</kw>
<msg timestamp="20241013 17:05:46.948" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-17207"
}</msg>
<status status="PASS" starttime="20241013 17:05:46.456" endtime="20241013 17:05:46.948"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.456" endtime="20241013 17:05:46.948"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.455" endtime="20241013 17:05:46.948"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.454" endtime="20241013 17:05:46.948"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:46.952" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20241013 17:05:46.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:46.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:46.949" endtime="20241013 17:05:46.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:46.957" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:46.957" endtime="20241013 17:05:46.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:46.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:46.958" endtime="20241013 17:05:46.958"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.949" endtime="20241013 17:05:46.958"/>
</kw>
<msg timestamp="20241013 17:05:46.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:46.949" endtime="20241013 17:05:46.958"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.948" endtime="20241013 17:05:46.959"/>
</kw>
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:46.962" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:46.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:46.967" level="INFO">${output} = b3155c846713187fb4d8d838f50fae53</msg>
<status status="PASS" starttime="20241013 17:05:46.960" endtime="20241013 17:05:46.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:46.967" level="INFO">b3155c846713187fb4d8d838f50fae53</msg>
<status status="PASS" starttime="20241013 17:05:46.967" endtime="20241013 17:05:46.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:46.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:46.968" endtime="20241013 17:05:46.968"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.960" endtime="20241013 17:05:46.968"/>
</kw>
<msg timestamp="20241013 17:05:46.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:46.959" endtime="20241013 17:05:46.968"/>
</kw>
<msg timestamp="20241013 17:05:46.969" level="INFO">${file_checksum} = b3155c846713187fb4d8d838f50fae53</msg>
<status status="PASS" starttime="20241013 17:05:46.959" endtime="20241013 17:05:46.969"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:46.973" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:47.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:47.489" level="INFO">${output} = {
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\""
}</msg>
<status status="PASS" starttime="20241013 17:05:46.970" endtime="20241013 17:05:47.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:47.490" level="INFO">{
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\""
}</msg>
<status status="PASS" starttime="20241013 17:05:47.490" endtime="20241013 17:05:47.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:47.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:47.491" endtime="20241013 17:05:47.491"/>
</kw>
<status status="PASS" starttime="20241013 17:05:46.970" endtime="20241013 17:05:47.491"/>
</kw>
<msg timestamp="20241013 17:05:47.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:46.970" endtime="20241013 17:05:47.492"/>
</kw>
<msg timestamp="20241013 17:05:47.492" level="INFO">${output} = {
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\""
}</msg>
<status status="PASS" starttime="20241013 17:05:46.969" endtime="20241013 17:05:47.492"/>
</kw>
<msg timestamp="20241013 17:05:47.492" level="INFO">${result} = {
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\""
}</msg>
<status status="PASS" starttime="20241013 17:05:46.969" endtime="20241013 17:05:47.492"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:47.495" level="INFO">Running command 'echo '{
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:47.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:47.501" level="INFO">${output} = "b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:47.493" endtime="20241013 17:05:47.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:47.502" level="INFO">"b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:47.501" endtime="20241013 17:05:47.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:47.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:47.502" endtime="20241013 17:05:47.502"/>
</kw>
<msg timestamp="20241013 17:05:47.503" level="INFO">${eTag} = "b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:47.492" endtime="20241013 17:05:47.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:47.503" endtime="20241013 17:05:47.503"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:47.508" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:47.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:47.999" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:47.425Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:05:47.506" endtime="20241013 17:05:47.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:48.001" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:47.425Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:05:48.000" endtime="20241013 17:05:48.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:48.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:48.001" endtime="20241013 17:05:48.001"/>
</kw>
<status status="PASS" starttime="20241013 17:05:47.505" endtime="20241013 17:05:48.001"/>
</kw>
<msg timestamp="20241013 17:05:48.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:47.505" endtime="20241013 17:05:48.002"/>
</kw>
<msg timestamp="20241013 17:05:48.002" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:47.425Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:05:47.504" endtime="20241013 17:05:48.002"/>
</kw>
<msg timestamp="20241013 17:05:48.002" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:47.425Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:05:47.503" endtime="20241013 17:05:48.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:48.002" endtime="20241013 17:05:48.003"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:48.007" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 --copy-source link/ozone-test-8837869413/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:48.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:48.529" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:48.474Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:48.005" endtime="20241013 17:05:48.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:48.530" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:48.474Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:48.530" endtime="20241013 17:05:48.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:48.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:48.531" endtime="20241013 17:05:48.531"/>
</kw>
<status status="PASS" starttime="20241013 17:05:48.004" endtime="20241013 17:05:48.531"/>
</kw>
<msg timestamp="20241013 17:05:48.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:48.004" endtime="20241013 17:05:48.531"/>
</kw>
<msg timestamp="20241013 17:05:48.532" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:48.474Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:48.003" endtime="20241013 17:05:48.532"/>
</kw>
<msg timestamp="20241013 17:05:48.532" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:48.474Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:48.003" endtime="20241013 17:05:48.532"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:48.535" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:48.474Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:48.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:48.541" level="INFO">${output} = "b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:48.532" endtime="20241013 17:05:48.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:48.542" level="INFO">"b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:48.541" endtime="20241013 17:05:48.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:48.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:48.542" endtime="20241013 17:05:48.542"/>
</kw>
<msg timestamp="20241013 17:05:48.543" level="INFO">${eTag} = "b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:48.532" endtime="20241013 17:05:48.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:48.543" endtime="20241013 17:05:48.543"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:48.547" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-17207 --prefix ozone-test-8837869413/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:49.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:49.022" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:48.474Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:05:48.545" endtime="20241013 17:05:49.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:49.023" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:48.474Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:05:49.022" endtime="20241013 17:05:49.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:49.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:49.023" endtime="20241013 17:05:49.024"/>
</kw>
<status status="PASS" starttime="20241013 17:05:48.545" endtime="20241013 17:05:49.024"/>
</kw>
<msg timestamp="20241013 17:05:49.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:48.544" endtime="20241013 17:05:49.024"/>
</kw>
<msg timestamp="20241013 17:05:49.024" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:48.474Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:05:48.544" endtime="20241013 17:05:49.024"/>
</kw>
<msg timestamp="20241013 17:05:49.024" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:48.474Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:05:48.543" endtime="20241013 17:05:49.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:49.025" endtime="20241013 17:05:49.025"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:49.029" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:49.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:49.518" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:48 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:49.027" endtime="20241013 17:05:49.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:49.520" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:05:48 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:49 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:49.519" endtime="20241013 17:05:49.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:49.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:49.520" endtime="20241013 17:05:49.520"/>
</kw>
<status status="PASS" starttime="20241013 17:05:49.026" endtime="20241013 17:05:49.520"/>
</kw>
<msg timestamp="20241013 17:05:49.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:49.026" endtime="20241013 17:05:49.521"/>
</kw>
<msg timestamp="20241013 17:05:49.521" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:48 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:49.026" endtime="20241013 17:05:49.521"/>
</kw>
<msg timestamp="20241013 17:05:49.521" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:48 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:49.025" endtime="20241013 17:05:49.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:49.521" endtime="20241013 17:05:49.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:49.522" endtime="20241013 17:05:49.522"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:49.522" endtime="20241013 17:05:49.522"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:49.523" endtime="20241013 17:05:49.523"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:49.528" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:50.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:50.025" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:48 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:05:49.526" endtime="20241013 17:05:50.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:50.026" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:48 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:49 GMT",
    "Metadata": {},
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:05:50.025" endtime="20241013 17:05:50.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:50.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:50.026" endtime="20241013 17:05:50.026"/>
</kw>
<status status="PASS" starttime="20241013 17:05:49.524" endtime="20241013 17:05:50.027"/>
</kw>
<msg timestamp="20241013 17:05:50.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:49.524" endtime="20241013 17:05:50.027"/>
</kw>
<msg timestamp="20241013 17:05:50.027" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:48 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:05:49.524" endtime="20241013 17:05:50.027"/>
</kw>
<msg timestamp="20241013 17:05:50.027" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:48 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:05:49.523" endtime="20241013 17:05:50.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:50.027" endtime="20241013 17:05:50.028"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:50.031" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:48 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:49 GMT",
    "Metadata": {},
    "TagCount": 2
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:50.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:50.036" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:05:50.028" endtime="20241013 17:05:50.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:50.037" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:05:50.037" endtime="20241013 17:05:50.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:50.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:50.038" endtime="20241013 17:05:50.038"/>
</kw>
<msg timestamp="20241013 17:05:50.038" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20241013 17:05:50.028" endtime="20241013 17:05:50.038"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:50.038" endtime="20241013 17:05:50.039"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:50.043" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 --copy-source link/ozone-test-8837869413/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:50.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:50.548" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:50.502Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:50.041" endtime="20241013 17:05:50.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:50.549" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:50.502Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:50.549" endtime="20241013 17:05:50.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:50.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:50.550" endtime="20241013 17:05:50.550"/>
</kw>
<status status="PASS" starttime="20241013 17:05:50.040" endtime="20241013 17:05:50.550"/>
</kw>
<msg timestamp="20241013 17:05:50.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:50.040" endtime="20241013 17:05:50.550"/>
</kw>
<msg timestamp="20241013 17:05:50.550" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:50.502Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:50.040" endtime="20241013 17:05:50.550"/>
</kw>
<msg timestamp="20241013 17:05:50.551" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:50.502Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:50.039" endtime="20241013 17:05:50.551"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:50.554" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:50.502Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:50.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:50.559" level="INFO">${output} = "b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:50.551" endtime="20241013 17:05:50.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:50.560" level="INFO">"b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:50.559" endtime="20241013 17:05:50.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:50.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:50.560" endtime="20241013 17:05:50.560"/>
</kw>
<msg timestamp="20241013 17:05:50.561" level="INFO">${eTag} = "b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:50.551" endtime="20241013 17:05:50.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:50.561" endtime="20241013 17:05:50.561"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:50.565" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-17207 --prefix ozone-test-8837869413/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:51.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:51.046" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:50.502Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:05:50.563" endtime="20241013 17:05:51.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:51.047" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:50.502Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:05:51.047" endtime="20241013 17:05:51.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:51.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:51.047" endtime="20241013 17:05:51.048"/>
</kw>
<status status="PASS" starttime="20241013 17:05:50.563" endtime="20241013 17:05:51.048"/>
</kw>
<msg timestamp="20241013 17:05:51.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:50.562" endtime="20241013 17:05:51.048"/>
</kw>
<msg timestamp="20241013 17:05:51.049" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:50.502Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:05:50.562" endtime="20241013 17:05:51.049"/>
</kw>
<msg timestamp="20241013 17:05:51.049" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/copyobject/key=value/f1",
            "LastModified": "2024-10-13T17:05:50.502Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20241013 17:05:50.561" endtime="20241013 17:05:51.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:51.049" endtime="20241013 17:05:51.049"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:51.054" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:51.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:51.524" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:50 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:51.051" endtime="20241013 17:05:51.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:51.525" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:05:50 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:51 GMT",
    "Metadata": {
        "custom-key3": "custom-value3",
        "custom-key4": "custom-value4"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:51.524" endtime="20241013 17:05:51.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:51.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:51.525" endtime="20241013 17:05:51.526"/>
</kw>
<status status="PASS" starttime="20241013 17:05:51.051" endtime="20241013 17:05:51.526"/>
</kw>
<msg timestamp="20241013 17:05:51.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:51.051" endtime="20241013 17:05:51.526"/>
</kw>
<msg timestamp="20241013 17:05:51.526" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:50 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:51.050" endtime="20241013 17:05:51.526"/>
</kw>
<msg timestamp="20241013 17:05:51.526" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:50 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:51.049" endtime="20241013 17:05:51.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:51.527" endtime="20241013 17:05:51.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:51.527" endtime="20241013 17:05:51.527"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:51.528" endtime="20241013 17:05:51.528"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:51.528" endtime="20241013 17:05:51.528"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:51.533" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:52.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:52.023" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:50 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:05:51.530" endtime="20241013 17:05:52.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:52.024" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:50 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:51 GMT",
    "Metadata": {},
    "TagCount": 1
}</msg>
<status status="PASS" starttime="20241013 17:05:52.024" endtime="20241013 17:05:52.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:52.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:52.024" endtime="20241013 17:05:52.025"/>
</kw>
<status status="PASS" starttime="20241013 17:05:51.530" endtime="20241013 17:05:52.025"/>
</kw>
<msg timestamp="20241013 17:05:52.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:51.530" endtime="20241013 17:05:52.025"/>
</kw>
<msg timestamp="20241013 17:05:52.025" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:50 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:05:51.529" endtime="20241013 17:05:52.025"/>
</kw>
<msg timestamp="20241013 17:05:52.026" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:50 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:05:51.529" endtime="20241013 17:05:52.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:52.026" endtime="20241013 17:05:52.026"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:52.030" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:05:50 GMT",
    "ContentLength": 29,
    "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:51 GMT",
    "Metadata": {},
    "TagCount": 1
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:52.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:52.035" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20241013 17:05:52.027" endtime="20241013 17:05:52.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:52.036" level="INFO">1</msg>
<status status="PASS" starttime="20241013 17:05:52.036" endtime="20241013 17:05:52.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:52.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:52.037" endtime="20241013 17:05:52.037"/>
</kw>
<msg timestamp="20241013 17:05:52.037" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20241013 17:05:52.026" endtime="20241013 17:05:52.037"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:52.037" endtime="20241013 17:05:52.038"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:46.454" endtime="20241013 17:05:52.038"/>
</test>
<test id="s1-s6-s7-t2" name="Copy Object Where Bucket is not available" line="90">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:52.043" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-8837869413/copyobject/key=value/f1 --copy-source link/ozone-test-8837869413/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:52.528" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:52.528" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:05:52.040" endtime="20241013 17:05:52.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:52.529" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:05:52.528" endtime="20241013 17:05:52.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:52.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:52.529" endtime="20241013 17:05:52.530"/>
</kw>
<msg timestamp="20241013 17:05:52.530" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:05:52.040" endtime="20241013 17:05:52.530"/>
</kw>
<msg timestamp="20241013 17:05:52.530" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:05:52.039" endtime="20241013 17:05:52.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:52.530" endtime="20241013 17:05:52.531"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:52.535" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-8837869413/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:53.006" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:53.006" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:05:52.532" endtime="20241013 17:05:53.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:53.008" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:05:53.007" endtime="20241013 17:05:53.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:53.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:53.008" endtime="20241013 17:05:53.009"/>
</kw>
<msg timestamp="20241013 17:05:53.009" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:05:52.531" endtime="20241013 17:05:53.009"/>
</kw>
<msg timestamp="20241013 17:05:53.009" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:05:52.531" endtime="20241013 17:05:53.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:53.009" endtime="20241013 17:05:53.010"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:52.039" endtime="20241013 17:05:53.010"/>
</test>
<test id="s1-s6-s7-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="96">
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:53.015" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:53.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:53.019" level="INFO">${output} = b3155c846713187fb4d8d838f50fae53</msg>
<status status="PASS" starttime="20241013 17:05:53.012" endtime="20241013 17:05:53.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:53.020" level="INFO">b3155c846713187fb4d8d838f50fae53</msg>
<status status="PASS" starttime="20241013 17:05:53.020" endtime="20241013 17:05:53.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:53.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:53.020" endtime="20241013 17:05:53.021"/>
</kw>
<status status="PASS" starttime="20241013 17:05:53.012" endtime="20241013 17:05:53.021"/>
</kw>
<msg timestamp="20241013 17:05:53.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:53.011" endtime="20241013 17:05:53.021"/>
</kw>
<msg timestamp="20241013 17:05:53.021" level="INFO">${file_checksum} = b3155c846713187fb4d8d838f50fae53</msg>
<status status="PASS" starttime="20241013 17:05:53.011" endtime="20241013 17:05:53.021"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:53.026" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 --copy-source destbucket-17207/ozone-test-8837869413/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:53.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:53.510" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:53.458Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:53.023" endtime="20241013 17:05:53.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:53.511" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:53.458Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:53.511" endtime="20241013 17:05:53.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:53.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:53.512" endtime="20241013 17:05:53.512"/>
</kw>
<status status="PASS" starttime="20241013 17:05:53.023" endtime="20241013 17:05:53.512"/>
</kw>
<msg timestamp="20241013 17:05:53.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:53.023" endtime="20241013 17:05:53.512"/>
</kw>
<msg timestamp="20241013 17:05:53.513" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:53.458Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:53.022" endtime="20241013 17:05:53.513"/>
</kw>
<msg timestamp="20241013 17:05:53.513" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:53.458Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:53.022" endtime="20241013 17:05:53.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:53.513" endtime="20241013 17:05:53.513"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:53.517" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"b3155c846713187fb4d8d838f50fae53\"",
        "LastModified": "2024-10-13T17:05:53.458Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:53.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:53.523" level="INFO">${output} = "b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:53.514" endtime="20241013 17:05:53.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:53.524" level="INFO">"b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:53.523" endtime="20241013 17:05:53.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:53.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:53.524" endtime="20241013 17:05:53.524"/>
</kw>
<msg timestamp="20241013 17:05:53.524" level="INFO">${eTag} = "b3155c846713187fb4d8d838f50fae53"</msg>
<status status="PASS" starttime="20241013 17:05:53.513" endtime="20241013 17:05:53.524"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:05:53.525" endtime="20241013 17:05:53.525"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:53.010" endtime="20241013 17:05:53.525"/>
</test>
<test id="s1-s6-s7-t4" name="Copy Object Where Key not available" line="103">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:53.530" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 --copy-source link/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:54.020" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:54.020" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20241013 17:05:53.527" endtime="20241013 17:05:54.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:54.021" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20241013 17:05:54.020" endtime="20241013 17:05:54.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:54.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:54.021" endtime="20241013 17:05:54.022"/>
</kw>
<msg timestamp="20241013 17:05:54.022" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20241013 17:05:53.527" endtime="20241013 17:05:54.022"/>
</kw>
<msg timestamp="20241013 17:05:54.022" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20241013 17:05:53.526" endtime="20241013 17:05:54.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:54.022" endtime="20241013 17:05:54.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:53.526" endtime="20241013 17:05:54.023"/>
</test>
<test id="s1-s6-s7-t5" name="Copy Object using an invalid copy directive" line="107">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:54.028" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 --copy-source link/ozone-test-8837869413/copyobject/key=value/f1 --metadata-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:54.504" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:54.504" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20241013 17:05:54.025" endtime="20241013 17:05:54.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:54.505" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20241013 17:05:54.504" endtime="20241013 17:05:54.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:54.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:54.505" endtime="20241013 17:05:54.506"/>
</kw>
<msg timestamp="20241013 17:05:54.506" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20241013 17:05:54.024" endtime="20241013 17:05:54.506"/>
</kw>
<msg timestamp="20241013 17:05:54.506" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20241013 17:05:54.024" endtime="20241013 17:05:54.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:54.507" endtime="20241013 17:05:54.507"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --tagging-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:54.511" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 --copy-source link/ozone-test-8837869413/copyobject/key=value/f1 --tagging-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:54.987" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:54.987" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20241013 17:05:54.508" endtime="20241013 17:05:54.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:54.988" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20241013 17:05:54.987" endtime="20241013 17:05:54.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:54.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:54.988" endtime="20241013 17:05:54.988"/>
</kw>
<msg timestamp="20241013 17:05:54.989" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20241013 17:05:54.508" endtime="20241013 17:05:54.989"/>
</kw>
<msg timestamp="20241013 17:05:54.989" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20241013 17:05:54.507" endtime="20241013 17:05:54.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:54.989" endtime="20241013 17:05:54.989"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:54.023" endtime="20241013 17:05:54.990"/>
</test>
<test id="s1-s6-s7-t6" name="Copy Object with user defined metadata size larger than 2 KB" line="113">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:54.994" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:05:54.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:54.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:54.992" endtime="20241013 17:05:54.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:54.997" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:54.997" endtime="20241013 17:05:54.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:54.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:54.997" endtime="20241013 17:05:54.998"/>
</kw>
<status status="PASS" starttime="20241013 17:05:54.991" endtime="20241013 17:05:54.998"/>
</kw>
<msg timestamp="20241013 17:05:54.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:54.991" endtime="20241013 17:05:54.998"/>
</kw>
<status status="PASS" starttime="20241013 17:05:54.991" endtime="20241013 17:05:54.998"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:05:55.002" level="INFO">${custom_metadata_value} = 0mJd6xlSDRQ2vgfcVaOoU5jlaxJTPGtZ3nQLeM1YB3O7pqpL9MxchqPCITjHyn7Zh2xbq2dfUYSnwQkF7EHFAn1mxzdiDUCW2us89hd5oJmNdPC1IFareILP3vVWVNLzRu5q6V0mH9eS4uJ2gOeQGt6N0su9zRcTs26U4jJj5uFm5WrRpTXks7p6Lb3pCGbVxXcTo5cY...</msg>
<status status="PASS" starttime="20241013 17:05:54.998" endtime="20241013 17:05:55.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key1=${custom_metadata_value}" --metadata-directive REPLACE</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:55.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-17207 --key ozone-test-8837869413/copyobject/key=value/f1 --copy-source link/ozone-test-8837869413/copyobject/key=value/f1 --metadata="custom-key1=0mJd6xlSDRQ2vgfcVaOoU5jlaxJTPGtZ3nQLeM1YB3O7pqpL9MxchqPCITjHyn7Zh2xbq2dfUYSnwQkF7EHFAn1mxzdiDUCW2us89hd5oJmNdPC1IFareILP3vVWVNLzRu5q6V0mH9eS4uJ2gOeQGt6N0su9zRcTs26U4jJj5uFm5WrRpTXks7p6Lb3pCGbVxXcTo5cYWtafRawiSauT57c9e9MghiNqPHD49SjxB3PnruaBH4UxKitMKRitJ068GdcTa8RpSk8VgaXjDPiwSzCscKkkTtxx6dj33eP3XJDFwJYJEJLOKUOIQ90uWBqMY5AHfpX1DO6kKjXoAcdXCsnwRBpHcm52dFsmGPX1FCJLuKVOLXSOm5JqXwhIxRnQGuh8sdn7he6zJ39foC6YFYx93LMvhNrvubstgaC5jgJAGDcpWnyWWpgKSaVcZTEqJ8M6J0eCIdxH92aIndj6lPCrJTquhD2rEU6Nd4Se7JRpJw4GrLNG4WrFTkaG8qsV8fIfeTinkzGQlgpNFDKvEEyx6zN1HYDui8JKctwZsI4nrfSCCkeokv49g4xt3mLfIvH9BtWurP35NKW89cg3Mpjpvp6ydgKeQq4zql88sdRiMLuwYqwnqjuazDFJfFmZ3aFTGivTvDlkUo0ynwZceau66WnY9JWaxPMh4PUkPu4qv2E66KEV8ZxsiXlbtt7iNXyOoTgUVTcLqZIfZm4E10SxQgeGnjFlMCDZxf17jlip0JTKcxVeovEYYer623qxnasaSBQ4VTKSPJXxwqmhlsVuenr0Z2od0ECi8Mne4ApdLAysJf69WYGEcDdYEHcmYYyO4WqM12r176DAV8FJQ4M4sowXZ3CWLspSA5jv2bSNHQuoAfD2nP9OpIl58d1g6wibWec7ZJRsFLiEw4aR12uWJUCTNoxO4V0KBKu9WziNqr70AwgSL64YU11bdFf4BFs5z20eKWDTLRhA83zezZYeOk32xWFsTZM4JgKuAdrHjCu8v1BS0AYo4xcBbEVT3CtWJMF3ZYZbCKYXUtOBHnXjkgxuqAdbljJq5rpqCXkfL3cS4gI5Lt7tHmWskqGKm15kW4EOK2JaDZc85xxB1KtMiTWgA3styt276c2Y87ubxOLoN1D4L1JnwJQCyrPePOGwSYm3gx3h9fHtLHmFUn2M3DHJSCYRuiwZF74F1C4E2TThWfvsXS6wCCgU8wbxudxCtZvihk76uKY5RQYlodL5VIme3fj4LOaRFBwxhmM8hICcdFwZiMuxi4Mdr5p8Yn0TlQ5BMBOXWiTODD2QRTj41kWEeRUa73wSzjek4LGCCOMAvy7ieolqgbweOfFnQE38R39pVUZqZNTfVoMYJnWA3ORNZPqGg0NTBv6IVuml242VSL2fL4IQ8WDgU32jEzBdJnzQBpbhYGqbHOx4FnXQiEtMfanAdSrG8lzifN0yXnZoB3Vtf63vScMQfGJoJT0mpmeIO8CyZV90kiMA7YLXWtuUB1fBKwJT1qrFcjG9I9hvGdhszy2kQ0NKUsvRtehnAhSOpEF2WC6kErMGsMGpQXF3bzBDGDbBvOcEev2zEtB7paPFctodQQKUoO0vfrkxmTbASGN9IE3r3cuu8ayQuuzVyr8PCGzBDyiBTDN8AFkdoJnXN0nckvboMbhIHW5HpzF50Gdu1cTks1Jt6qvoYcNGDii9WERki1f8wSZ4PuW8UlmMN3sHTLTJYh8HQmXZwYMDzW1y2EER3qa4zTcvzcZSDo8NZteaB5Tq0TUeUf2qBWqGYpM0r9TYS4zns1iiaCJ4kJSHfHKIUNolXYmavJZ8hmbNFGbNumsDuhJc7uNuB1i8iiJ0IUxxSB9O5HE6ZKsKN32OsKaw1VHNXMv8RRnFPqC1kvixgsOhKqTzMfWeXNREO3GzMAmFFQIn7UFaDjBx1qA1xcSDbHQwQUqu2LhZEyFLjVFQodgSCYZr1CoW0jHVb6txbjk4ydhNycnXLwZ5TUWeYmIeCwn3zwRf68UZffYAvtpzl01D8xM2z2LS8ZTEH7RSxkDub5UX92HYgRLfAtmu4eBi9Yv6zVhahbVPehQXmsJ8rVmCFGkOtgBYxg19ccl8uWI8LM5hD33dZG6BNSN7oIjJs6UC745BddIUe2R1x5R3kKLI4sJUrnTMfM71d5NqO3kde3ZSeWMp8KpZSGkOx4NvouCnHBnK81Hy8gCORWwtRjT6rwVRIpy6zIByfQrleDNDXYwGEZamyF6bemZ2DImAQXJ3cvxSsIARKm99o7GjGILD6rZ0TpQNEpsQ2jrxGizCYQ1hkSPKJgupt6qquor6Ns1VlzLio8LK0wkN4WGire6DvoNI34bSUTcGiOjgmlXHwWVaGPH0WLJRshcJt6hy3L1SpoDX3IfWrS6DufG7LFpU8RX2Q6Uxgr8GArV1jsIaDifYo78TscEo27FojuSRLjUQ2DYmJgTZBANQEHVuFaG0VLEIi9HCnXc3wxQvKwgx8hxyY3Tsue7dXTlkQW1711SCpNoClcnbNe19cynV4BKFYtAtCxTPZqlCS4HWpmYc7Xanui0A93lMAXfXQdQ44q2dBQbjzOeZGFFnDiJwltLZRuTeOebEU1OoHbHwBrgc7m3IXWM43HbBIyGkcLXlTiQaf6ua0LUxxkfVTdyNGysvG1ZfBRXXwrhISrRPBNS3Vx1cFSDZdJVAB492q3nM4ASLPo01Lks30HFMV1DdCdqOFzArX0uTPdCBpx46uSxsqC3depYaCpA1yidCbHoE038j9RjcQz9QZVm7f9XkxAbeRUlxlv3jyxPvzvOhP2371kZuC7HTStcL1HB8vpgAuePDwsCcKyOq0789Irq6LdsOUr0uoqxxw5VLrVR2g5HHuHRUT6lw91xhAoCnOvBZlSLKD6QPQzjJeNnetmZ1TUH4SinNoWY7VBOTPcETp2F0H0DKDHxjCKhIkQufP2rrtfhM8N2ckFdtE1QUD1E3dIZnwgS30vQGfsxS1pUa" --metadata-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:55.496" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:55.496" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:05:55.003" endtime="20241013 17:05:55.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:55.497" level="INFO">
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:05:55.496" endtime="20241013 17:05:55.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:55.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:55.497" endtime="20241013 17:05:55.498"/>
</kw>
<msg timestamp="20241013 17:05:55.498" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:05:55.003" endtime="20241013 17:05:55.498"/>
</kw>
<msg timestamp="20241013 17:05:55.498" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:05:55.002" endtime="20241013 17:05:55.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:55.498" endtime="20241013 17:05:55.499"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:54.990" endtime="20241013 17:05:55.499"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:05:46.443" endtime="20241013 17:05:55.500"/>
</suite>
<suite id="s1-s6-s8" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:05:55.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:55.512" endtime="20241013 17:05:55.512"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:05:55.512" endtime="20241013 17:05:55.512"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:05:55.512" endtime="20241013 17:05:55.512"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:55.513" endtime="20241013 17:05:55.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:55.513" endtime="20241013 17:05:55.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:55.513" endtime="20241013 17:05:55.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:55.513" endtime="20241013 17:05:55.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:05:55.513" endtime="20241013 17:05:55.513"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:05:55.513" endtime="20241013 17:05:55.513"/>
</kw>
<status status="PASS" starttime="20241013 17:05:55.511" endtime="20241013 17:05:55.513"/>
</kw>
<test id="s1-s6-s8-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:55.518" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:05:55.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:55.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:55.515" endtime="20241013 17:05:55.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:55.521" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:55.521" endtime="20241013 17:05:55.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:55.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:55.521" endtime="20241013 17:05:55.522"/>
</kw>
<status status="PASS" starttime="20241013 17:05:55.515" endtime="20241013 17:05:55.522"/>
</kw>
<msg timestamp="20241013 17:05:55.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:55.514" endtime="20241013 17:05:55.522"/>
</kw>
<status status="PASS" starttime="20241013 17:05:55.514" endtime="20241013 17:05:55.522"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:55.526" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:56.004" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:56.004" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:55.523" endtime="20241013 17:05:56.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:56.006" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:56.005" endtime="20241013 17:05:56.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:56.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:56.006" endtime="20241013 17:05:56.006"/>
</kw>
<msg timestamp="20241013 17:05:56.006" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:55.523" endtime="20241013 17:05:56.006"/>
</kw>
<msg timestamp="20241013 17:05:56.007" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:55.522" endtime="20241013 17:05:56.007"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:56.011" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:56.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:56.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:56.008" endtime="20241013 17:05:56.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:56.475" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:56.474" endtime="20241013 17:05:56.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:56.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:56.475" endtime="20241013 17:05:56.476"/>
</kw>
<status status="PASS" starttime="20241013 17:05:56.008" endtime="20241013 17:05:56.476"/>
</kw>
<msg timestamp="20241013 17:05:56.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:56.008" endtime="20241013 17:05:56.476"/>
</kw>
<msg timestamp="20241013 17:05:56.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:56.007" endtime="20241013 17:05:56.476"/>
</kw>
<msg timestamp="20241013 17:05:56.476" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:05:56.007" endtime="20241013 17:05:56.476"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:56.477" endtime="20241013 17:05:56.477"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:56.480" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:56.947" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:56.947" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:56.478" endtime="20241013 17:05:56.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:56.948" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:56.947" endtime="20241013 17:05:56.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:56.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:56.948" endtime="20241013 17:05:56.948"/>
</kw>
<msg timestamp="20241013 17:05:56.949" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:56.477" endtime="20241013 17:05:56.949"/>
</kw>
<msg timestamp="20241013 17:05:56.949" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:56.477" endtime="20241013 17:05:56.949"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:56.953" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:57.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:57.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:56.951" endtime="20241013 17:05:57.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:57.419" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:57.419" endtime="20241013 17:05:57.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:57.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:57.419" endtime="20241013 17:05:57.420"/>
</kw>
<status status="PASS" starttime="20241013 17:05:56.951" endtime="20241013 17:05:57.420"/>
</kw>
<msg timestamp="20241013 17:05:57.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:56.950" endtime="20241013 17:05:57.420"/>
</kw>
<msg timestamp="20241013 17:05:57.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:56.950" endtime="20241013 17:05:57.420"/>
</kw>
<msg timestamp="20241013 17:05:57.421" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:05:56.949" endtime="20241013 17:05:57.421"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:57.421" endtime="20241013 17:05:57.421"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:57.425" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:57.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:57.905" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:05:57.423" endtime="20241013 17:05:57.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:57.907" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:05:57.906" endtime="20241013 17:05:57.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:57.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:57.907" endtime="20241013 17:05:57.907"/>
</kw>
<status status="PASS" starttime="20241013 17:05:57.422" endtime="20241013 17:05:57.907"/>
</kw>
<msg timestamp="20241013 17:05:57.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:57.422" endtime="20241013 17:05:57.908"/>
</kw>
<msg timestamp="20241013 17:05:57.908" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:05:57.422" endtime="20241013 17:05:57.908"/>
</kw>
<msg timestamp="20241013 17:05:57.908" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:05:57.421" endtime="20241013 17:05:57.908"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:57.912" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:58.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:58.383" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:57.909" endtime="20241013 17:05:58.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:58.384" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:05:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:05:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:05:58.383" endtime="20241013 17:05:58.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:58.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:58.384" endtime="20241013 17:05:58.384"/>
</kw>
<msg timestamp="20241013 17:05:58.384" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:57.909" endtime="20241013 17:05:58.385"/>
</kw>
<status status="PASS" starttime="20241013 17:05:57.908" endtime="20241013 17:05:58.385"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:58.388" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:58.850" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:05:58.851" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:58.386" endtime="20241013 17:05:58.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:58.852" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:58.851" endtime="20241013 17:05:58.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:58.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:58.852" endtime="20241013 17:05:58.852"/>
</kw>
<msg timestamp="20241013 17:05:58.853" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:05:58.385" endtime="20241013 17:05:58.853"/>
</kw>
<status status="PASS" starttime="20241013 17:05:58.385" endtime="20241013 17:05:58.853"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:58.857" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:59.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:59.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:58.855" endtime="20241013 17:05:59.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:59.334" level="INFO"/>
<status status="PASS" starttime="20241013 17:05:59.333" endtime="20241013 17:05:59.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:59.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:59.334" endtime="20241013 17:05:59.335"/>
</kw>
<status status="PASS" starttime="20241013 17:05:58.854" endtime="20241013 17:05:59.335"/>
</kw>
<msg timestamp="20241013 17:05:59.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:58.854" endtime="20241013 17:05:59.335"/>
</kw>
<msg timestamp="20241013 17:05:59.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:05:58.854" endtime="20241013 17:05:59.335"/>
</kw>
<msg timestamp="20241013 17:05:59.335" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:05:58.853" endtime="20241013 17:05:59.335"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:05:59.336" endtime="20241013 17:05:59.336"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:59.340" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket link --key ozone-test-8837869413/word.txt --copy-source link/ozone-test-8837869413/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:05:59.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:05:59.844" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2024-10-13T17:05:59.790Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:59.338" endtime="20241013 17:05:59.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:05:59.845" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2024-10-13T17:05:59.790Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:59.845" endtime="20241013 17:05:59.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:05:59.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:05:59.846" endtime="20241013 17:05:59.846"/>
</kw>
<status status="PASS" starttime="20241013 17:05:59.337" endtime="20241013 17:05:59.846"/>
</kw>
<msg timestamp="20241013 17:05:59.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:05:59.337" endtime="20241013 17:05:59.846"/>
</kw>
<msg timestamp="20241013 17:05:59.847" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2024-10-13T17:05:59.790Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:59.337" endtime="20241013 17:05:59.847"/>
</kw>
<msg timestamp="20241013 17:05:59.847" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2024-10-13T17:05:59.790Z"
    }
}</msg>
<status status="PASS" starttime="20241013 17:05:59.336" endtime="20241013 17:05:59.847"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:05:59.851" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:00.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:00.328" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:59 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:59.848" endtime="20241013 17:06:00.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:00.329" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:05:59 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:00 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:00.328" endtime="20241013 17:06:00.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:00.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:00.329" endtime="20241013 17:06:00.329"/>
</kw>
<msg timestamp="20241013 17:06:00.330" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:05:59 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:05:59.847" endtime="20241013 17:06:00.330"/>
</kw>
<status status="PASS" starttime="20241013 17:05:59.847" endtime="20241013 17:06:00.330"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:00.334" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-8837869413/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:00.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:00.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:00.331" endtime="20241013 17:06:00.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:00.803" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:00.802" endtime="20241013 17:06:00.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:00.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:00.803" endtime="20241013 17:06:00.804"/>
</kw>
<status status="PASS" starttime="20241013 17:06:00.331" endtime="20241013 17:06:00.804"/>
</kw>
<msg timestamp="20241013 17:06:00.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:00.331" endtime="20241013 17:06:00.804"/>
</kw>
<msg timestamp="20241013 17:06:00.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:00.330" endtime="20241013 17:06:00.804"/>
</kw>
<status status="PASS" starttime="20241013 17:06:00.330" endtime="20241013 17:06:00.805"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:00.808" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:01.295" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:01.295" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:00.806" endtime="20241013 17:06:01.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:01.296" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:01.295" endtime="20241013 17:06:01.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:01.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:01.296" endtime="20241013 17:06:01.297"/>
</kw>
<msg timestamp="20241013 17:06:01.297" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:00.805" endtime="20241013 17:06:01.297"/>
</kw>
<status status="PASS" starttime="20241013 17:06:00.805" endtime="20241013 17:06:01.297"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:05:55.514" endtime="20241013 17:06:01.297"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:05:55.501" endtime="20241013 17:06:01.298"/>
</suite>
<suite id="s1-s6-s9" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:06:01.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:01.309" endtime="20241013 17:06:01.309"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:06:01.309" endtime="20241013 17:06:01.309"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:06:01.309" endtime="20241013 17:06:01.309"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:01.310" endtime="20241013 17:06:01.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:01.310" endtime="20241013 17:06:01.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:01.310" endtime="20241013 17:06:01.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:01.310" endtime="20241013 17:06:01.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:01.310" endtime="20241013 17:06:01.310"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:06:01.310" endtime="20241013 17:06:01.310"/>
</kw>
<status status="PASS" starttime="20241013 17:06:01.308" endtime="20241013 17:06:01.310"/>
</kw>
<test id="s1-s6-s9-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:01.315" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:06:01.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:01.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:01.312" endtime="20241013 17:06:01.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:01.320" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:01.319" endtime="20241013 17:06:01.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:01.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:01.320" endtime="20241013 17:06:01.320"/>
</kw>
<status status="PASS" starttime="20241013 17:06:01.312" endtime="20241013 17:06:01.321"/>
</kw>
<msg timestamp="20241013 17:06:01.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:01.311" endtime="20241013 17:06:01.321"/>
</kw>
<status status="PASS" starttime="20241013 17:06:01.311" endtime="20241013 17:06:01.321"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:01.325" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:01.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:01.826" level="INFO">${output} = {
    "ETag": "\"f1638a4b2b1e1e713658ab1388e684a9\""
}</msg>
<status status="PASS" starttime="20241013 17:06:01.323" endtime="20241013 17:06:01.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:01.827" level="INFO">{
    "ETag": "\"f1638a4b2b1e1e713658ab1388e684a9\""
}</msg>
<status status="PASS" starttime="20241013 17:06:01.826" endtime="20241013 17:06:01.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:01.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:01.827" endtime="20241013 17:06:01.827"/>
</kw>
<status status="PASS" starttime="20241013 17:06:01.322" endtime="20241013 17:06:01.828"/>
</kw>
<msg timestamp="20241013 17:06:01.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:01.322" endtime="20241013 17:06:01.828"/>
</kw>
<msg timestamp="20241013 17:06:01.828" level="INFO">${output} = {
    "ETag": "\"f1638a4b2b1e1e713658ab1388e684a9\""
}</msg>
<status status="PASS" starttime="20241013 17:06:01.322" endtime="20241013 17:06:01.828"/>
</kw>
<msg timestamp="20241013 17:06:01.828" level="INFO">${result} = {
    "ETag": "\"f1638a4b2b1e1e713658ab1388e684a9\""
}</msg>
<status status="PASS" starttime="20241013 17:06:01.321" endtime="20241013 17:06:01.828"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:01.833" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:02.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:02.318" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/deletetestapi/key=value/f1",
            "LastModified": "2024-10-13T17:06:01.778Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20241013 17:06:01.830" endtime="20241013 17:06:02.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:02.319" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8837869413/deletetestapi/key=value/f1",
            "LastModified": "2024-10-13T17:06:01.778Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:06:02.318" endtime="20241013 17:06:02.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:02.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:02.319" endtime="20241013 17:06:02.320"/>
</kw>
<status status="PASS" starttime="20241013 17:06:01.830" endtime="20241013 17:06:02.320"/>
</kw>
<msg timestamp="20241013 17:06:02.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:01.829" endtime="20241013 17:06:02.320"/>
</kw>
<msg timestamp="20241013 17:06:02.320" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/deletetestapi/key=value/f1",
            "LastModified": "2024-10-13T17:06:01.778Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20241013 17:06:01.829" endtime="20241013 17:06:02.320"/>
</kw>
<msg timestamp="20241013 17:06:02.320" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/deletetestapi/key=value/f1",
            "LastModified": "2024-10-13T17:06:01.778Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20241013 17:06:01.828" endtime="20241013 17:06:02.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:02.320" endtime="20241013 17:06:02.321"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:02.325" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-8837869413/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:02.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:02.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:02.323" endtime="20241013 17:06:02.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:02.798" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:02.797" endtime="20241013 17:06:02.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:02.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:02.798" endtime="20241013 17:06:02.799"/>
</kw>
<status status="PASS" starttime="20241013 17:06:02.322" endtime="20241013 17:06:02.799"/>
</kw>
<msg timestamp="20241013 17:06:02.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:02.322" endtime="20241013 17:06:02.799"/>
</kw>
<msg timestamp="20241013 17:06:02.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:02.322" endtime="20241013 17:06:02.799"/>
</kw>
<msg timestamp="20241013 17:06:02.799" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:06:02.321" endtime="20241013 17:06:02.799"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:02.803" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:03.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:03.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:02.801" endtime="20241013 17:06:03.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:03.284" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:03.284" endtime="20241013 17:06:03.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:03.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:03.285" endtime="20241013 17:06:03.285"/>
</kw>
<status status="PASS" starttime="20241013 17:06:02.801" endtime="20241013 17:06:03.285"/>
</kw>
<msg timestamp="20241013 17:06:03.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:02.801" endtime="20241013 17:06:03.285"/>
</kw>
<msg timestamp="20241013 17:06:03.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:02.800" endtime="20241013 17:06:03.286"/>
</kw>
<msg timestamp="20241013 17:06:03.286" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:06:02.800" endtime="20241013 17:06:03.286"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:03.286" endtime="20241013 17:06:03.286"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:01.311" endtime="20241013 17:06:03.287"/>
</test>
<test id="s1-s6-s9-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:03.292" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:03.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:03.781" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1605780083/
                           PRE ozone-test-1823792141/
             ...</msg>
<status status="PASS" starttime="20241013 17:06:03.289" endtime="20241013 17:06:03.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:03.782" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1605780083/
                           PRE ozone-test-1823792141/
                           PRE ozone-test-5437239636/
                           PRE ozone-test-5610722138/
                           PRE ozone-test-8837869413/
                           PRE ozone-test-9020054299/
                           PRE specialchars/
2024-10-13 17:04:30       4068 README1.md
2024-10-13 17:04:29       4068 README10.md
2024-10-13 17:04:31   20971522 fvmyoucrta
2024-10-13 17:05:14   23068672 mpyawscli
2024-10-13 17:04:30   10485761 multiUpload.1.gz
2024-10-13 17:04:30   10485761 multiUpload.2.gz
2024-10-13 17:04:26         29 testfile</msg>
<status status="PASS" starttime="20241013 17:06:03.782" endtime="20241013 17:06:03.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:03.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:03.783" endtime="20241013 17:06:03.783"/>
</kw>
<status status="PASS" starttime="20241013 17:06:03.289" endtime="20241013 17:06:03.783"/>
</kw>
<msg timestamp="20241013 17:06:03.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:03.289" endtime="20241013 17:06:03.783"/>
</kw>
<msg timestamp="20241013 17:06:03.784" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1605780083/
                           PRE ozone-test-1823792141/
             ...</msg>
<status status="PASS" starttime="20241013 17:06:03.288" endtime="20241013 17:06:03.784"/>
</kw>
<msg timestamp="20241013 17:06:03.784" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1605780083/
                           PRE ozone-test-1823792141/
             ...</msg>
<status status="PASS" starttime="20241013 17:06:03.288" endtime="20241013 17:06:03.784"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:03.784" endtime="20241013 17:06:03.784"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:03.789" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:04.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:04.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:03.786" endtime="20241013 17:06:04.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:04.259" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:04.259" endtime="20241013 17:06:04.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:04.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:04.259" endtime="20241013 17:06:04.260"/>
</kw>
<status status="PASS" starttime="20241013 17:06:03.786" endtime="20241013 17:06:04.260"/>
</kw>
<msg timestamp="20241013 17:06:04.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:03.786" endtime="20241013 17:06:04.260"/>
</kw>
<msg timestamp="20241013 17:06:04.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:03.785" endtime="20241013 17:06:04.260"/>
</kw>
<msg timestamp="20241013 17:06:04.261" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:06:03.784" endtime="20241013 17:06:04.261"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:04.265" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:04.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:04.723" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1605780083/
                           PRE ozone-test-1823792141/
             ...</msg>
<status status="PASS" starttime="20241013 17:06:04.262" endtime="20241013 17:06:04.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:04.724" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1605780083/
                           PRE ozone-test-1823792141/
                           PRE ozone-test-5437239636/
                           PRE ozone-test-5610722138/
                           PRE ozone-test-8837869413/
                           PRE ozone-test-9020054299/
                           PRE specialchars/
2024-10-13 17:04:30       4068 README1.md
2024-10-13 17:04:29       4068 README10.md
2024-10-13 17:04:31   20971522 fvmyoucrta
2024-10-13 17:05:14   23068672 mpyawscli
2024-10-13 17:04:30   10485761 multiUpload.1.gz
2024-10-13 17:04:30   10485761 multiUpload.2.gz
2024-10-13 17:04:26         29 testfile</msg>
<status status="PASS" starttime="20241013 17:06:04.723" endtime="20241013 17:06:04.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:04.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:04.724" endtime="20241013 17:06:04.724"/>
</kw>
<status status="PASS" starttime="20241013 17:06:04.262" endtime="20241013 17:06:04.724"/>
</kw>
<msg timestamp="20241013 17:06:04.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:04.262" endtime="20241013 17:06:04.725"/>
</kw>
<msg timestamp="20241013 17:06:04.725" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1605780083/
                           PRE ozone-test-1823792141/
             ...</msg>
<status status="PASS" starttime="20241013 17:06:04.261" endtime="20241013 17:06:04.725"/>
</kw>
<msg timestamp="20241013 17:06:04.725" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1605780083/
                           PRE ozone-test-1823792141/
             ...</msg>
<status status="PASS" starttime="20241013 17:06:04.261" endtime="20241013 17:06:04.725"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:04.725" endtime="20241013 17:06:04.725"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:03.287" endtime="20241013 17:06:04.725"/>
</test>
<test id="s1-s6-s9-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:04.730" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:06:04.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:04.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:04.728" endtime="20241013 17:06:04.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:04.735" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:04.735" endtime="20241013 17:06:04.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:04.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:04.735" endtime="20241013 17:06:04.736"/>
</kw>
<status status="PASS" starttime="20241013 17:06:04.727" endtime="20241013 17:06:04.736"/>
</kw>
<msg timestamp="20241013 17:06:04.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:04.727" endtime="20241013 17:06:04.736"/>
</kw>
<status status="PASS" starttime="20241013 17:06:04.727" endtime="20241013 17:06:04.736"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:04.741" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/ozone-test-8837869413/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:05.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:05.227" level="INFO">${output} = Completed 29 Bytes/29 Bytes (649 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-8837869413/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20241013 17:06:04.738" endtime="20241013 17:06:05.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:05.228" level="INFO">Completed 29 Bytes/29 Bytes (649 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-8837869413/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20241013 17:06:05.227" endtime="20241013 17:06:05.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:05.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:05.228" endtime="20241013 17:06:05.228"/>
</kw>
<status status="PASS" starttime="20241013 17:06:04.738" endtime="20241013 17:06:05.228"/>
</kw>
<msg timestamp="20241013 17:06:05.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:04.737" endtime="20241013 17:06:05.229"/>
</kw>
<msg timestamp="20241013 17:06:05.229" level="INFO">${output} = Completed 29 Bytes/29 Bytes (649 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-8837869413/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20241013 17:06:04.737" endtime="20241013 17:06:05.229"/>
</kw>
<msg timestamp="20241013 17:06:05.229" level="INFO">${result} = Completed 29 Bytes/29 Bytes (649 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-8837869413/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20241013 17:06:04.736" endtime="20241013 17:06:05.229"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:05.233" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-8837869413/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:05.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:05.689" level="INFO">${output} = 2024-10-13 17:06:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:06:05.231" endtime="20241013 17:06:05.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:05.690" level="INFO">2024-10-13 17:06:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:06:05.689" endtime="20241013 17:06:05.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:05.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:05.690" endtime="20241013 17:06:05.690"/>
</kw>
<status status="PASS" starttime="20241013 17:06:05.230" endtime="20241013 17:06:05.691"/>
</kw>
<msg timestamp="20241013 17:06:05.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:05.230" endtime="20241013 17:06:05.691"/>
</kw>
<msg timestamp="20241013 17:06:05.691" level="INFO">${output} = 2024-10-13 17:06:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:06:05.230" endtime="20241013 17:06:05.691"/>
</kw>
<msg timestamp="20241013 17:06:05.691" level="INFO">${result} = 2024-10-13 17:06:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:06:05.229" endtime="20241013 17:06:05.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:05.691" endtime="20241013 17:06:05.692"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:05.696" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-8837869413/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:06.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:06.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:05.693" endtime="20241013 17:06:06.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:06.173" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:06.172" endtime="20241013 17:06:06.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:06.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:06.173" endtime="20241013 17:06:06.173"/>
</kw>
<status status="PASS" starttime="20241013 17:06:05.693" endtime="20241013 17:06:06.174"/>
</kw>
<msg timestamp="20241013 17:06:06.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:05.693" endtime="20241013 17:06:06.174"/>
</kw>
<msg timestamp="20241013 17:06:06.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:05.692" endtime="20241013 17:06:06.174"/>
</kw>
<msg timestamp="20241013 17:06:06.174" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:06:05.692" endtime="20241013 17:06:06.174"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:06.178" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-8837869413/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:06.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:06.622" level="INFO">${output} = 2024-10-13 17:06:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:06:06.176" endtime="20241013 17:06:06.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:06.623" level="INFO">2024-10-13 17:06:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:06:06.622" endtime="20241013 17:06:06.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:06.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:06.623" endtime="20241013 17:06:06.624"/>
</kw>
<status status="PASS" starttime="20241013 17:06:06.176" endtime="20241013 17:06:06.624"/>
</kw>
<msg timestamp="20241013 17:06:06.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:06.175" endtime="20241013 17:06:06.624"/>
</kw>
<msg timestamp="20241013 17:06:06.624" level="INFO">${output} = 2024-10-13 17:06:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:06:06.175" endtime="20241013 17:06:06.624"/>
</kw>
<msg timestamp="20241013 17:06:06.624" level="INFO">${result} = 2024-10-13 17:06:05         29 f1</msg>
<status status="PASS" starttime="20241013 17:06:06.174" endtime="20241013 17:06:06.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:06.625" endtime="20241013 17:06:06.625"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:06.629" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-8837869413/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:07.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:07.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:06.627" endtime="20241013 17:06:07.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:07.116" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:07.115" endtime="20241013 17:06:07.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:07.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:07.116" endtime="20241013 17:06:07.116"/>
</kw>
<status status="PASS" starttime="20241013 17:06:06.627" endtime="20241013 17:06:07.116"/>
</kw>
<msg timestamp="20241013 17:06:07.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:06.626" endtime="20241013 17:06:07.117"/>
</kw>
<msg timestamp="20241013 17:06:07.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:06.626" endtime="20241013 17:06:07.117"/>
</kw>
<msg timestamp="20241013 17:06:07.117" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:06:06.625" endtime="20241013 17:06:07.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:04.726" endtime="20241013 17:06:07.117"/>
</test>
<test id="s1-s6-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:07.122" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:06:07.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:07.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:07.120" endtime="20241013 17:06:07.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:07.127" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:07.126" endtime="20241013 17:06:07.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:07.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:07.127" endtime="20241013 17:06:07.127"/>
</kw>
<status status="PASS" starttime="20241013 17:06:07.119" endtime="20241013 17:06:07.128"/>
</kw>
<msg timestamp="20241013 17:06:07.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:07.119" endtime="20241013 17:06:07.128"/>
</kw>
<status status="PASS" starttime="20241013 17:06:07.118" endtime="20241013 17:06:07.128"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:07.132" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/ozone-test-8837869413/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:07.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:07.624" level="INFO">${output} = Completed 29 Bytes/29 Bytes (756 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-8837869413/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20241013 17:06:07.130" endtime="20241013 17:06:07.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:07.625" level="INFO">Completed 29 Bytes/29 Bytes (756 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-8837869413/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20241013 17:06:07.624" endtime="20241013 17:06:07.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:07.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:07.625" endtime="20241013 17:06:07.625"/>
</kw>
<status status="PASS" starttime="20241013 17:06:07.129" endtime="20241013 17:06:07.626"/>
</kw>
<msg timestamp="20241013 17:06:07.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:07.129" endtime="20241013 17:06:07.626"/>
</kw>
<msg timestamp="20241013 17:06:07.626" level="INFO">${output} = Completed 29 Bytes/29 Bytes (756 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-8837869413/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20241013 17:06:07.129" endtime="20241013 17:06:07.626"/>
</kw>
<msg timestamp="20241013 17:06:07.626" level="INFO">${result} = Completed 29 Bytes/29 Bytes (756 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-8837869413/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20241013 17:06:07.128" endtime="20241013 17:06:07.626"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:07.630" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-8837869413/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:08.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:08.096" level="INFO">${output} = 2024-10-13 17:06:07         29 filefile</msg>
<status status="PASS" starttime="20241013 17:06:07.628" endtime="20241013 17:06:08.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:08.097" level="INFO">2024-10-13 17:06:07         29 filefile</msg>
<status status="PASS" starttime="20241013 17:06:08.097" endtime="20241013 17:06:08.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:08.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:08.097" endtime="20241013 17:06:08.098"/>
</kw>
<status status="PASS" starttime="20241013 17:06:07.628" endtime="20241013 17:06:08.098"/>
</kw>
<msg timestamp="20241013 17:06:08.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:07.627" endtime="20241013 17:06:08.098"/>
</kw>
<msg timestamp="20241013 17:06:08.098" level="INFO">${output} = 2024-10-13 17:06:07         29 filefile</msg>
<status status="PASS" starttime="20241013 17:06:07.627" endtime="20241013 17:06:08.098"/>
</kw>
<msg timestamp="20241013 17:06:08.099" level="INFO">${result} = 2024-10-13 17:06:07         29 filefile</msg>
<status status="PASS" starttime="20241013 17:06:07.626" endtime="20241013 17:06:08.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:08.099" endtime="20241013 17:06:08.099"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:08.104" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-8837869413/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:08.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:08.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:08.101" endtime="20241013 17:06:08.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:08.578" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:08.578" endtime="20241013 17:06:08.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:08.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:08.579" endtime="20241013 17:06:08.579"/>
</kw>
<status status="PASS" starttime="20241013 17:06:08.101" endtime="20241013 17:06:08.579"/>
</kw>
<msg timestamp="20241013 17:06:08.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:08.100" endtime="20241013 17:06:08.580"/>
</kw>
<msg timestamp="20241013 17:06:08.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:08.100" endtime="20241013 17:06:08.580"/>
</kw>
<msg timestamp="20241013 17:06:08.580" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:06:08.099" endtime="20241013 17:06:08.580"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:08.584" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-8837869413/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:09.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:09.038" level="INFO">${output} = 2024-10-13 17:06:07         29 filefile</msg>
<status status="PASS" starttime="20241013 17:06:08.582" endtime="20241013 17:06:09.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:09.039" level="INFO">2024-10-13 17:06:07         29 filefile</msg>
<status status="PASS" starttime="20241013 17:06:09.038" endtime="20241013 17:06:09.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:09.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:09.039" endtime="20241013 17:06:09.040"/>
</kw>
<status status="PASS" starttime="20241013 17:06:08.581" endtime="20241013 17:06:09.040"/>
</kw>
<msg timestamp="20241013 17:06:09.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:08.581" endtime="20241013 17:06:09.040"/>
</kw>
<msg timestamp="20241013 17:06:09.040" level="INFO">${output} = 2024-10-13 17:06:07         29 filefile</msg>
<status status="PASS" starttime="20241013 17:06:08.581" endtime="20241013 17:06:09.040"/>
</kw>
<msg timestamp="20241013 17:06:09.040" level="INFO">${result} = 2024-10-13 17:06:07         29 filefile</msg>
<status status="PASS" starttime="20241013 17:06:08.580" endtime="20241013 17:06:09.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:09.040" endtime="20241013 17:06:09.041"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:09.045" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-8837869413/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:09.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:09.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:09.043" endtime="20241013 17:06:09.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:09.526" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:09.526" endtime="20241013 17:06:09.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:09.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:09.526" endtime="20241013 17:06:09.527"/>
</kw>
<status status="PASS" starttime="20241013 17:06:09.042" endtime="20241013 17:06:09.527"/>
</kw>
<msg timestamp="20241013 17:06:09.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:09.042" endtime="20241013 17:06:09.527"/>
</kw>
<msg timestamp="20241013 17:06:09.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:09.042" endtime="20241013 17:06:09.527"/>
</kw>
<msg timestamp="20241013 17:06:09.528" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:06:09.041" endtime="20241013 17:06:09.528"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:07.118" endtime="20241013 17:06:09.528"/>
</test>
<test id="s1-s6-s9-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:09.532" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:10.002" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:10.002" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:06:09.530" endtime="20241013 17:06:10.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:10.003" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:06:10.002" endtime="20241013 17:06:10.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:10.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:10.003" endtime="20241013 17:06:10.004"/>
</kw>
<msg timestamp="20241013 17:06:10.004" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:06:09.529" endtime="20241013 17:06:10.004"/>
</kw>
<msg timestamp="20241013 17:06:10.004" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20241013 17:06:09.529" endtime="20241013 17:06:10.004"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:10.004" endtime="20241013 17:06:10.005"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:09.528" endtime="20241013 17:06:10.005"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:06:01.299" endtime="20241013 17:06:10.006"/>
</suite>
<suite id="s1-s6-s10" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:06:10.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:10.016" endtime="20241013 17:06:10.017"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:06:10.017" endtime="20241013 17:06:10.017"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:06:10.017" endtime="20241013 17:06:10.017"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:10.017" endtime="20241013 17:06:10.017"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:10.017" endtime="20241013 17:06:10.017"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:10.017" endtime="20241013 17:06:10.018"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:10.018" endtime="20241013 17:06:10.018"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:10.018" endtime="20241013 17:06:10.018"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:06:10.018" endtime="20241013 17:06:10.018"/>
</kw>
<status status="PASS" starttime="20241013 17:06:10.016" endtime="20241013 17:06:10.018"/>
</kw>
<test id="s1-s6-s10-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:10.022" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:06:10.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:10.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:10.019" endtime="20241013 17:06:10.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:10.025" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:10.024" endtime="20241013 17:06:10.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:10.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:10.025" endtime="20241013 17:06:10.026"/>
</kw>
<status status="PASS" starttime="20241013 17:06:10.019" endtime="20241013 17:06:10.026"/>
</kw>
<msg timestamp="20241013 17:06:10.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:10.019" endtime="20241013 17:06:10.026"/>
</kw>
<status status="PASS" starttime="20241013 17:06:10.019" endtime="20241013 17:06:10.026"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:10.029" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:10.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:10.509" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:10.027" endtime="20241013 17:06:10.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:10.510" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:10.510" endtime="20241013 17:06:10.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:10.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:10.511" endtime="20241013 17:06:10.511"/>
</kw>
<msg timestamp="20241013 17:06:10.511" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:10.027" endtime="20241013 17:06:10.511"/>
</kw>
<msg timestamp="20241013 17:06:10.512" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:10.026" endtime="20241013 17:06:10.512"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:10.515" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:10.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:10.967" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:10 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:10.513" endtime="20241013 17:06:10.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:10.968" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:06:10 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:10 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:10.967" endtime="20241013 17:06:10.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:10.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:10.968" endtime="20241013 17:06:10.969"/>
</kw>
<msg timestamp="20241013 17:06:10.969" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:10 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:10.512" endtime="20241013 17:06:10.969"/>
</kw>
<msg timestamp="20241013 17:06:10.969" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:10 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:10.512" endtime="20241013 17:06:10.969"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:10.973" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-8837869413/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:11.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:11.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:10.970" endtime="20241013 17:06:11.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:11.439" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:11.438" endtime="20241013 17:06:11.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:11.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:11.439" endtime="20241013 17:06:11.439"/>
</kw>
<msg timestamp="20241013 17:06:11.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:10.970" endtime="20241013 17:06:11.440"/>
</kw>
<msg timestamp="20241013 17:06:11.440" level="INFO">${result} = </msg>
<status status="PASS" starttime="20241013 17:06:10.969" endtime="20241013 17:06:11.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:10.018" endtime="20241013 17:06:11.440"/>
</test>
<test id="s1-s6-s10-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:11.445" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link-non-existent --key ozone-test-8837869413/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:11.915" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:11.915" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:11.442" endtime="20241013 17:06:11.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:11.916" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:11.916" endtime="20241013 17:06:11.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:11.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:11.916" endtime="20241013 17:06:11.917"/>
</kw>
<msg timestamp="20241013 17:06:11.917" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:11.442" endtime="20241013 17:06:11.917"/>
</kw>
<msg timestamp="20241013 17:06:11.917" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:11.441" endtime="20241013 17:06:11.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:11.918" endtime="20241013 17:06:11.918"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:11.918" endtime="20241013 17:06:11.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:11.440" endtime="20241013 17:06:11.918"/>
</test>
<test id="s1-s6-s10-t3" name="Head object where path is a directory" line="44">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:06:11.920" endtime="20241013 17:06:11.920"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:11.924" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:12.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:12.429" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:11.921" endtime="20241013 17:06:12.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:12.431" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:12.430" endtime="20241013 17:06:12.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:12.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:12.431" endtime="20241013 17:06:12.431"/>
</kw>
<msg timestamp="20241013 17:06:12.432" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:11.921" endtime="20241013 17:06:12.432"/>
</kw>
<msg timestamp="20241013 17:06:12.432" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:11.920" endtime="20241013 17:06:12.432"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:12.436" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:12.899" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:12.900" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:12.434" endtime="20241013 17:06:12.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:12.901" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:12.900" endtime="20241013 17:06:12.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:12.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:12.901" endtime="20241013 17:06:12.901"/>
</kw>
<msg timestamp="20241013 17:06:12.901" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:12.433" endtime="20241013 17:06:12.901"/>
</kw>
<msg timestamp="20241013 17:06:12.902" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:12.432" endtime="20241013 17:06:12.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:12.902" endtime="20241013 17:06:12.902"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:12.902" endtime="20241013 17:06:12.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:11.919" endtime="20241013 17:06:12.903"/>
</test>
<test id="s1-s6-s10-t4" name="Head directory objects" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:06:12.904" endtime="20241013 17:06:12.904"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:12.907" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:13.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:13.428" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:12.905" endtime="20241013 17:06:13.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:13.429" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:13.428" endtime="20241013 17:06:13.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:13.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:13.429" endtime="20241013 17:06:13.430"/>
</kw>
<msg timestamp="20241013 17:06:13.430" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:12.905" endtime="20241013 17:06:13.430"/>
</kw>
<msg timestamp="20241013 17:06:13.430" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:12.904" endtime="20241013 17:06:13.430"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:13.434" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:13.943" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:13.943" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:13.431" endtime="20241013 17:06:13.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:13.944" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:13.943" endtime="20241013 17:06:13.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:13.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:13.944" endtime="20241013 17:06:13.945"/>
</kw>
<msg timestamp="20241013 17:06:13.945" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:13.431" endtime="20241013 17:06:13.945"/>
</kw>
<msg timestamp="20241013 17:06:13.945" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:13.430" endtime="20241013 17:06:13.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:13.945" endtime="20241013 17:06:13.946"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:13.946" endtime="20241013 17:06:13.946"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:13.949" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:14.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:14.421" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:13.947" endtime="20241013 17:06:14.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:14.423" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:06:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:14 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:14.422" endtime="20241013 17:06:14.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:14.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:14.423" endtime="20241013 17:06:14.423"/>
</kw>
<msg timestamp="20241013 17:06:14.423" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:13.947" endtime="20241013 17:06:14.423"/>
</kw>
<msg timestamp="20241013 17:06:14.424" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:13.946" endtime="20241013 17:06:14.424"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:12.903" endtime="20241013 17:06:14.424"/>
</test>
<test id="s1-s6-s10-t5" name="Head non existing key" line="59">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:14.428" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:14.881" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:14.881" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:14.426" endtime="20241013 17:06:14.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:14.882" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:14.881" endtime="20241013 17:06:14.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:14.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:14.882" endtime="20241013 17:06:14.883"/>
</kw>
<msg timestamp="20241013 17:06:14.883" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:14.425" endtime="20241013 17:06:14.883"/>
</kw>
<msg timestamp="20241013 17:06:14.883" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20241013 17:06:14.425" endtime="20241013 17:06:14.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:14.883" endtime="20241013 17:06:14.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:14.884" endtime="20241013 17:06:14.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:14.424" endtime="20241013 17:06:14.884"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:06:10.007" endtime="20241013 17:06:14.885"/>
</suite>
<suite id="s1-s6-s11" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:06:14.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:14.896" endtime="20241013 17:06:14.896"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:06:14.896" endtime="20241013 17:06:14.896"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:06:14.896" endtime="20241013 17:06:14.896"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:14.896" endtime="20241013 17:06:14.896"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:14.897" endtime="20241013 17:06:14.897"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:14.897" endtime="20241013 17:06:14.897"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:14.897" endtime="20241013 17:06:14.897"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:14.897" endtime="20241013 17:06:14.897"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:06:14.897" endtime="20241013 17:06:14.897"/>
</kw>
<status status="PASS" starttime="20241013 17:06:14.895" endtime="20241013 17:06:14.897"/>
</kw>
<test id="s1-s6-s11-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:14.901" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:06:14.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:14.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:14.899" endtime="20241013 17:06:14.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:14.906" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:14.906" endtime="20241013 17:06:14.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:14.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:14.906" endtime="20241013 17:06:14.907"/>
</kw>
<status status="PASS" starttime="20241013 17:06:14.898" endtime="20241013 17:06:14.907"/>
</kw>
<msg timestamp="20241013 17:06:14.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:14.898" endtime="20241013 17:06:14.907"/>
</kw>
<status status="PASS" starttime="20241013 17:06:14.898" endtime="20241013 17:06:14.907"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:14.911" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:15.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:15.426" level="INFO">${output} = {
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:14.909" endtime="20241013 17:06:15.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:15.428" level="INFO">{
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:15.427" endtime="20241013 17:06:15.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:15.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:15.428" endtime="20241013 17:06:15.429"/>
</kw>
<status status="PASS" starttime="20241013 17:06:14.909" endtime="20241013 17:06:15.429"/>
</kw>
<msg timestamp="20241013 17:06:15.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:14.908" endtime="20241013 17:06:15.429"/>
</kw>
<msg timestamp="20241013 17:06:15.429" level="INFO">${output} = {
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:14.908" endtime="20241013 17:06:15.429"/>
</kw>
<msg timestamp="20241013 17:06:15.430" level="INFO">${result} = {
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:14.907" endtime="20241013 17:06:15.430"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:15.436" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:15.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:15.971" level="INFO">${output} = {
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:15.433" endtime="20241013 17:06:15.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:15.972" level="INFO">{
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:15.972" endtime="20241013 17:06:15.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:15.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:15.973" endtime="20241013 17:06:15.973"/>
</kw>
<status status="PASS" starttime="20241013 17:06:15.432" endtime="20241013 17:06:15.973"/>
</kw>
<msg timestamp="20241013 17:06:15.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:15.432" endtime="20241013 17:06:15.973"/>
</kw>
<msg timestamp="20241013 17:06:15.974" level="INFO">${output} = {
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:15.431" endtime="20241013 17:06:15.974"/>
</kw>
<msg timestamp="20241013 17:06:15.974" level="INFO">${result} = {
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:15.430" endtime="20241013 17:06:15.974"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:15.979" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:16.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:16.478" level="INFO">${output} = {
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:15.976" endtime="20241013 17:06:16.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:16.479" level="INFO">{
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:16.478" endtime="20241013 17:06:16.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:16.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:16.479" endtime="20241013 17:06:16.479"/>
</kw>
<status status="PASS" starttime="20241013 17:06:15.976" endtime="20241013 17:06:16.479"/>
</kw>
<msg timestamp="20241013 17:06:16.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:15.975" endtime="20241013 17:06:16.480"/>
</kw>
<msg timestamp="20241013 17:06:16.480" level="INFO">${output} = {
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:15.975" endtime="20241013 17:06:16.480"/>
</kw>
<msg timestamp="20241013 17:06:16.480" level="INFO">${result} = {
    "ETag": "\"5d843e068831cf945eb585f8d9a05fd2\""
}</msg>
<status status="PASS" starttime="20241013 17:06:15.974" endtime="20241013 17:06:16.480"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:16.484" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:16.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:16.946" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f1",
            "LastModified": "2024-10-13T17:06:15.349Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:06:16.482" endtime="20241013 17:06:16.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:16.947" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f1",
            "LastModified": "2024-10-13T17:06:15.349Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f2",
            "LastModified": "2024-10-13T17:06:15.923Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:06:16.430Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:06:16.946" endtime="20241013 17:06:16.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:16.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:16.947" endtime="20241013 17:06:16.948"/>
</kw>
<status status="PASS" starttime="20241013 17:06:16.482" endtime="20241013 17:06:16.948"/>
</kw>
<msg timestamp="20241013 17:06:16.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:16.481" endtime="20241013 17:06:16.948"/>
</kw>
<msg timestamp="20241013 17:06:16.948" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f1",
            "LastModified": "2024-10-13T17:06:15.349Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:06:16.481" endtime="20241013 17:06:16.948"/>
</kw>
<msg timestamp="20241013 17:06:16.948" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f1",
            "LastModified": "2024-10-13T17:06:15.349Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:06:16.480" endtime="20241013 17:06:16.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:16.949" endtime="20241013 17:06:16.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:16.949" endtime="20241013 17:06:16.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:16.950" endtime="20241013 17:06:16.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:16.950" endtime="20241013 17:06:16.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:16.951" endtime="20241013 17:06:16.951"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:16.955" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket link --delete 'Objects=[{Key=ozone-test-8837869413/multidelete/key=value/f1},{Key=ozone-test-8837869413/multidelete/key=value/f2},{Key=ozone-test-8837869413/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:17.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:17.430" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20241013 17:06:16.953" endtime="20241013 17:06:17.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:17.431" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:06:17.430" endtime="20241013 17:06:17.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:17.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:17.431" endtime="20241013 17:06:17.431"/>
</kw>
<status status="PASS" starttime="20241013 17:06:16.953" endtime="20241013 17:06:17.432"/>
</kw>
<msg timestamp="20241013 17:06:17.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:16.952" endtime="20241013 17:06:17.432"/>
</kw>
<msg timestamp="20241013 17:06:17.432" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20241013 17:06:16.952" endtime="20241013 17:06:17.432"/>
</kw>
<msg timestamp="20241013 17:06:17.432" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20241013 17:06:16.951" endtime="20241013 17:06:17.432"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:17.432" endtime="20241013 17:06:17.433"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:17.437" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:17.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:17.905" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:06:16.430Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:06:17.434" endtime="20241013 17:06:17.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:17.906" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:06:16.430Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:06:17.906" endtime="20241013 17:06:17.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:17.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:17.907" endtime="20241013 17:06:17.907"/>
</kw>
<status status="PASS" starttime="20241013 17:06:17.434" endtime="20241013 17:06:17.907"/>
</kw>
<msg timestamp="20241013 17:06:17.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:17.434" endtime="20241013 17:06:17.908"/>
</kw>
<msg timestamp="20241013 17:06:17.908" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:06:16.430Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:06:17.433" endtime="20241013 17:06:17.908"/>
</kw>
<msg timestamp="20241013 17:06:17.908" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/multidelete/key=value/f3",
            "LastModified": "2024-10-13T17:06:16.430Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20241013 17:06:17.433" endtime="20241013 17:06:17.908"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:17.908" endtime="20241013 17:06:17.909"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:17.909" endtime="20241013 17:06:17.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:17.909" endtime="20241013 17:06:17.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:17.910" endtime="20241013 17:06:17.910"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:17.910" endtime="20241013 17:06:17.910"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:14.897" endtime="20241013 17:06:17.910"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:06:14.887" endtime="20241013 17:06:17.911"/>
</suite>
<suite id="s1-s6-s12" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241013 17:06:17.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:17.921" endtime="20241013 17:06:17.921"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:06:17.921" endtime="20241013 17:06:17.922"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20241013 17:06:17.922" endtime="20241013 17:06:17.922"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:17.922" endtime="20241013 17:06:17.922"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:17.922" endtime="20241013 17:06:17.922"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:17.922" endtime="20241013 17:06:17.922"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:17.922" endtime="20241013 17:06:17.922"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241013 17:06:17.922" endtime="20241013 17:06:17.922"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241013 17:06:17.923" endtime="20241013 17:06:17.923"/>
</kw>
<status status="PASS" starttime="20241013 17:06:17.921" endtime="20241013 17:06:17.923"/>
</kw>
<test id="s1-s6-s12-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:17.927" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20241013 17:06:17.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:17.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:17.924" endtime="20241013 17:06:17.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:17.930" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:17.929" endtime="20241013 17:06:17.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:17.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:17.930" endtime="20241013 17:06:17.930"/>
</kw>
<status status="PASS" starttime="20241013 17:06:17.924" endtime="20241013 17:06:17.930"/>
</kw>
<msg timestamp="20241013 17:06:17.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:17.924" endtime="20241013 17:06:17.931"/>
</kw>
<status status="PASS" starttime="20241013 17:06:17.923" endtime="20241013 17:06:17.931"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:17.935" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:18.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:18.411" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:17.932" endtime="20241013 17:06:18.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:18.412" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:18.411" endtime="20241013 17:06:18.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:18.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:18.412" endtime="20241013 17:06:18.413"/>
</kw>
<status status="PASS" starttime="20241013 17:06:17.932" endtime="20241013 17:06:18.413"/>
</kw>
<msg timestamp="20241013 17:06:18.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:17.932" endtime="20241013 17:06:18.413"/>
</kw>
<msg timestamp="20241013 17:06:18.413" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:17.931" endtime="20241013 17:06:18.413"/>
</kw>
<msg timestamp="20241013 17:06:18.413" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:17.931" endtime="20241013 17:06:18.413"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:18.417" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:18.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:18.884" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:06:18.368Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:06:18.415" endtime="20241013 17:06:18.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:18.885" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8837869413/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:06:18.368Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:06:18.884" endtime="20241013 17:06:18.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:18.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:18.885" endtime="20241013 17:06:18.886"/>
</kw>
<status status="PASS" starttime="20241013 17:06:18.415" endtime="20241013 17:06:18.886"/>
</kw>
<msg timestamp="20241013 17:06:18.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:18.414" endtime="20241013 17:06:18.886"/>
</kw>
<msg timestamp="20241013 17:06:18.886" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:06:18.368Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:06:18.414" endtime="20241013 17:06:18.886"/>
</kw>
<msg timestamp="20241013 17:06:18.886" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:06:18.368Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:06:18.413" endtime="20241013 17:06:18.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:18.887" endtime="20241013 17:06:18.887"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:18.891" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:18.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:18.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:18.888" endtime="20241013 17:06:18.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:18.895" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:18.895" endtime="20241013 17:06:18.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:18.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:18.896" endtime="20241013 17:06:18.897"/>
</kw>
<status status="PASS" starttime="20241013 17:06:18.888" endtime="20241013 17:06:18.897"/>
</kw>
<msg timestamp="20241013 17:06:18.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:18.888" endtime="20241013 17:06:18.897"/>
</kw>
<status status="PASS" starttime="20241013 17:06:18.887" endtime="20241013 17:06:18.898"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:18.901" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:19.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:19.374" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20241013 17:06:18.899" endtime="20241013 17:06:19.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:19.375" level="INFO">{
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20241013 17:06:19.375" endtime="20241013 17:06:19.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:19.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:19.376" endtime="20241013 17:06:19.376"/>
</kw>
<status status="PASS" starttime="20241013 17:06:18.899" endtime="20241013 17:06:19.376"/>
</kw>
<msg timestamp="20241013 17:06:19.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:18.899" endtime="20241013 17:06:19.376"/>
</kw>
<msg timestamp="20241013 17:06:19.376" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20241013 17:06:18.898" endtime="20241013 17:06:19.376"/>
</kw>
<msg timestamp="20241013 17:06:19.377" level="INFO">${result} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20241013 17:06:18.898" endtime="20241013 17:06:19.377"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:19.381" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-8837869413/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:19.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:19.839" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:06:18.368Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:06:19.378" endtime="20241013 17:06:19.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:19.840" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8837869413/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:06:18.368Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-8837869413/putobject/key=value/zerobyte",
            "LastModified": "2024-10-13T17:06:19.330Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20241013 17:06:19.839" endtime="20241013 17:06:19.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:19.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:19.840" endtime="20241013 17:06:19.841"/>
</kw>
<status status="PASS" starttime="20241013 17:06:19.378" endtime="20241013 17:06:19.841"/>
</kw>
<msg timestamp="20241013 17:06:19.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:19.378" endtime="20241013 17:06:19.841"/>
</kw>
<msg timestamp="20241013 17:06:19.841" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:06:18.368Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:06:19.377" endtime="20241013 17:06:19.841"/>
</kw>
<msg timestamp="20241013 17:06:19.841" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8837869413/putobject/key=value/f1",
            "LastModified": "2024-10-13T17:06:18.368Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20241013 17:06:19.377" endtime="20241013 17:06:19.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:19.842" endtime="20241013 17:06:19.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:17.923" endtime="20241013 17:06:19.842"/>
</test>
<test id="s1-s6-s12-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:19.847" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:20.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:20.341" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:19.845" endtime="20241013 17:06:20.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:20.343" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:20 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:20.342" endtime="20241013 17:06:20.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:20.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:20.343" endtime="20241013 17:06:20.343"/>
</kw>
<status status="PASS" starttime="20241013 17:06:19.844" endtime="20241013 17:06:20.343"/>
</kw>
<msg timestamp="20241013 17:06:20.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:19.844" endtime="20241013 17:06:20.344"/>
</kw>
<msg timestamp="20241013 17:06:20.344" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:19.844" endtime="20241013 17:06:20.344"/>
</kw>
<msg timestamp="20241013 17:06:20.344" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:19.843" endtime="20241013 17:06:20.344"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:20.348" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:20.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:20.353" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:06:20.346" endtime="20241013 17:06:20.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:20.354" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:06:20.353" endtime="20241013 17:06:20.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:20.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:20.354" endtime="20241013 17:06:20.354"/>
</kw>
<status status="PASS" starttime="20241013 17:06:20.346" endtime="20241013 17:06:20.354"/>
</kw>
<msg timestamp="20241013 17:06:20.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:20.345" endtime="20241013 17:06:20.354"/>
</kw>
<msg timestamp="20241013 17:06:20.355" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:06:20.345" endtime="20241013 17:06:20.355"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:20.358" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:20.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:20.362" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:06:20.356" endtime="20241013 17:06:20.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:20.363" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:06:20.362" endtime="20241013 17:06:20.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:20.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:20.363" endtime="20241013 17:06:20.364"/>
</kw>
<status status="PASS" starttime="20241013 17:06:20.355" endtime="20241013 17:06:20.364"/>
</kw>
<msg timestamp="20241013 17:06:20.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:20.355" endtime="20241013 17:06:20.364"/>
</kw>
<msg timestamp="20241013 17:06:20.364" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20241013 17:06:20.355" endtime="20241013 17:06:20.364"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:20.364" endtime="20241013 17:06:20.364"/>
</kw>
<status status="PASS" starttime="20241013 17:06:20.344" endtime="20241013 17:06:20.365"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte /tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:20.368" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/zerobyte /tmp/zerobyte.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:20.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:20.832" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:19 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:20.366" endtime="20241013 17:06:20.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:20.833" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:19 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:20 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:20.832" endtime="20241013 17:06:20.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:20.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:20.833" endtime="20241013 17:06:20.834"/>
</kw>
<status status="PASS" starttime="20241013 17:06:20.366" endtime="20241013 17:06:20.834"/>
</kw>
<msg timestamp="20241013 17:06:20.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:20.366" endtime="20241013 17:06:20.834"/>
</kw>
<msg timestamp="20241013 17:06:20.834" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:19 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:20.365" endtime="20241013 17:06:20.834"/>
</kw>
<msg timestamp="20241013 17:06:20.834" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:19 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:20.365" endtime="20241013 17:06:20.834"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/zerobyte</arg>
<arg>/tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:20.839" level="INFO">Running command 'md5sum /tmp/zerobyte | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:20.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:20.843" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:06:20.836" endtime="20241013 17:06:20.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:20.844" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:06:20.844" endtime="20241013 17:06:20.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:20.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:20.844" endtime="20241013 17:06:20.845"/>
</kw>
<status status="PASS" starttime="20241013 17:06:20.836" endtime="20241013 17:06:20.845"/>
</kw>
<msg timestamp="20241013 17:06:20.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:20.836" endtime="20241013 17:06:20.845"/>
</kw>
<msg timestamp="20241013 17:06:20.845" level="INFO">${checksumbefore} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:06:20.835" endtime="20241013 17:06:20.845"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:20.849" level="INFO">Running command 'md5sum /tmp/zerobyte.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:20.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:20.853" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:06:20.847" endtime="20241013 17:06:20.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:20.854" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:06:20.853" endtime="20241013 17:06:20.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:20.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:20.854" endtime="20241013 17:06:20.854"/>
</kw>
<status status="PASS" starttime="20241013 17:06:20.846" endtime="20241013 17:06:20.855"/>
</kw>
<msg timestamp="20241013 17:06:20.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:20.846" endtime="20241013 17:06:20.855"/>
</kw>
<msg timestamp="20241013 17:06:20.855" level="INFO">${checksumafter} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20241013 17:06:20.845" endtime="20241013 17:06:20.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:20.855" endtime="20241013 17:06:20.855"/>
</kw>
<status status="PASS" starttime="20241013 17:06:20.835" endtime="20241013 17:06:20.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:19.843" endtime="20241013 17:06:20.856"/>
</test>
<test id="s1-s6-s12-t3" name="Get object with wrong signature" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:06:20.857" endtime="20241013 17:06:20.857"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:20.860" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/link/ozone-test-8837869413/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:20.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:20.869" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20241013 17:06:20.858" endtime="20241013 17:06:20.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:20.870" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0   120k      0 --:--:-- --:--:-- --:--:--  120k
HTTP/1.1 403 Forbidden
Date: Sun, 13 Oct 2024 17:06:20 GMT
Cache-Control: no-cache
Expires: Sun, 13 Oct 2024 17:06:20 GMT
Pragma: no-cache
Content-Type: text/plain;charset=utf-8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: xhpUriaNJUCebE
x-amz-request-id: 9a4f99d5-7ecf-44fd-977e-775864a4efd6
Content-Length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20241013 17:06:20.869" endtime="20241013 17:06:20.870"/>
</kw>
<msg timestamp="20241013 17:06:20.870" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20241013 17:06:20.857" endtime="20241013 17:06:20.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:20.870" endtime="20241013 17:06:20.871"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:20.856" endtime="20241013 17:06:20.871"/>
</test>
<test id="s1-s6-s12-t4" name="Get Partial object from s3 with both start and endoffset" line="56">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:20.876" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:21.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:21.337" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:20.874" endtime="20241013 17:06:21.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:21.338" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:21.338" endtime="20241013 17:06:21.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:21.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:21.339" endtime="20241013 17:06:21.339"/>
</kw>
<status status="PASS" starttime="20241013 17:06:20.873" endtime="20241013 17:06:21.339"/>
</kw>
<msg timestamp="20241013 17:06:21.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:20.873" endtime="20241013 17:06:21.339"/>
</kw>
<msg timestamp="20241013 17:06:21.339" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:20.873" endtime="20241013 17:06:21.339"/>
</kw>
<msg timestamp="20241013 17:06:21.340" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:20.872" endtime="20241013 17:06:21.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:21.340" endtime="20241013 17:06:21.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:21.340" endtime="20241013 17:06:21.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:21.341" endtime="20241013 17:06:21.341"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:21.344" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:06:21.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:21.348" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20241013 17:06:21.342" endtime="20241013 17:06:21.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:21.349" level="INFO">Rando</msg>
<status status="PASS" starttime="20241013 17:06:21.349" endtime="20241013 17:06:21.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:21.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:21.349" endtime="20241013 17:06:21.350"/>
</kw>
<status status="PASS" starttime="20241013 17:06:21.342" endtime="20241013 17:06:21.350"/>
</kw>
<msg timestamp="20241013 17:06:21.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:21.341" endtime="20241013 17:06:21.350"/>
</kw>
<msg timestamp="20241013 17:06:21.350" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20241013 17:06:21.341" endtime="20241013 17:06:21.350"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:21.354" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:21.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:21.357" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20241013 17:06:21.352" endtime="20241013 17:06:21.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:21.358" level="INFO">Rando</msg>
<status status="PASS" starttime="20241013 17:06:21.358" endtime="20241013 17:06:21.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:21.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:21.359" endtime="20241013 17:06:21.359"/>
</kw>
<status status="PASS" starttime="20241013 17:06:21.351" endtime="20241013 17:06:21.359"/>
</kw>
<msg timestamp="20241013 17:06:21.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:21.351" endtime="20241013 17:06:21.359"/>
</kw>
<msg timestamp="20241013 17:06:21.359" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20241013 17:06:21.351" endtime="20241013 17:06:21.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:21.360" endtime="20241013 17:06:21.360"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:21.363" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:21.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:21.828" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:21.362" endtime="20241013 17:06:21.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:21.829" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:21.829" endtime="20241013 17:06:21.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:21.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:21.829" endtime="20241013 17:06:21.830"/>
</kw>
<status status="PASS" starttime="20241013 17:06:21.361" endtime="20241013 17:06:21.830"/>
</kw>
<msg timestamp="20241013 17:06:21.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:21.361" endtime="20241013 17:06:21.830"/>
</kw>
<msg timestamp="20241013 17:06:21.830" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:21.361" endtime="20241013 17:06:21.830"/>
</kw>
<msg timestamp="20241013 17:06:21.831" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:21.360" endtime="20241013 17:06:21.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:21.831" endtime="20241013 17:06:21.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:21.831" endtime="20241013 17:06:21.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:21.831" endtime="20241013 17:06:21.832"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:21.836" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:06:21.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:21.840" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20241013 17:06:21.833" endtime="20241013 17:06:21.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:21.841" level="INFO">ndo</msg>
<status status="PASS" starttime="20241013 17:06:21.841" endtime="20241013 17:06:21.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:21.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:21.842" endtime="20241013 17:06:21.842"/>
</kw>
<status status="PASS" starttime="20241013 17:06:21.833" endtime="20241013 17:06:21.842"/>
</kw>
<msg timestamp="20241013 17:06:21.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:21.832" endtime="20241013 17:06:21.842"/>
</kw>
<msg timestamp="20241013 17:06:21.843" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20241013 17:06:21.832" endtime="20241013 17:06:21.843"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:21.846" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:21.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:21.850" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20241013 17:06:21.844" endtime="20241013 17:06:21.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:21.851" level="INFO">ndo</msg>
<status status="PASS" starttime="20241013 17:06:21.850" endtime="20241013 17:06:21.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:21.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:21.851" endtime="20241013 17:06:21.852"/>
</kw>
<status status="PASS" starttime="20241013 17:06:21.844" endtime="20241013 17:06:21.852"/>
</kw>
<msg timestamp="20241013 17:06:21.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:21.843" endtime="20241013 17:06:21.852"/>
</kw>
<msg timestamp="20241013 17:06:21.852" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20241013 17:06:21.843" endtime="20241013 17:06:21.852"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:21.852" endtime="20241013 17:06:21.853"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:21.857" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:22.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:22.336" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:21.855" endtime="20241013 17:06:22.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:22.337" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:22.336" endtime="20241013 17:06:22.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:22.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:22.337" endtime="20241013 17:06:22.337"/>
</kw>
<status status="PASS" starttime="20241013 17:06:21.854" endtime="20241013 17:06:22.337"/>
</kw>
<msg timestamp="20241013 17:06:22.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:21.854" endtime="20241013 17:06:22.338"/>
</kw>
<msg timestamp="20241013 17:06:22.338" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:21.853" endtime="20241013 17:06:22.338"/>
</kw>
<msg timestamp="20241013 17:06:22.338" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:21.853" endtime="20241013 17:06:22.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:22.338" endtime="20241013 17:06:22.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:22.338" endtime="20241013 17:06:22.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:22.339" endtime="20241013 17:06:22.339"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:22.343" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:06:22.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:22.347" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20241013 17:06:22.341" endtime="20241013 17:06:22.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:22.348" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20241013 17:06:22.347" endtime="20241013 17:06:22.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:22.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:22.348" endtime="20241013 17:06:22.349"/>
</kw>
<status status="PASS" starttime="20241013 17:06:22.340" endtime="20241013 17:06:22.349"/>
</kw>
<msg timestamp="20241013 17:06:22.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:22.340" endtime="20241013 17:06:22.349"/>
</kw>
<msg timestamp="20241013 17:06:22.349" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20241013 17:06:22.339" endtime="20241013 17:06:22.349"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:22.352" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:22.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:22.356" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20241013 17:06:22.350" endtime="20241013 17:06:22.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:22.357" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20241013 17:06:22.356" endtime="20241013 17:06:22.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:22.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:22.357" endtime="20241013 17:06:22.358"/>
</kw>
<status status="PASS" starttime="20241013 17:06:22.350" endtime="20241013 17:06:22.358"/>
</kw>
<msg timestamp="20241013 17:06:22.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:22.350" endtime="20241013 17:06:22.358"/>
</kw>
<msg timestamp="20241013 17:06:22.358" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20241013 17:06:22.349" endtime="20241013 17:06:22.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:22.358" endtime="20241013 17:06:22.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:20.871" endtime="20241013 17:06:22.359"/>
</test>
<test id="s1-s6-s12-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="82">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:22.363" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:22.839" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:22.839" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:22.361" endtime="20241013 17:06:22.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:22.840" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:22.840" endtime="20241013 17:06:22.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:22.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:22.841" endtime="20241013 17:06:22.841"/>
</kw>
<msg timestamp="20241013 17:06:22.841" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:22.361" endtime="20241013 17:06:22.841"/>
</kw>
<msg timestamp="20241013 17:06:22.841" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:22.360" endtime="20241013 17:06:22.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:22.842" endtime="20241013 17:06:22.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:22.359" endtime="20241013 17:06:22.842"/>
</test>
<test id="s1-s6-s12-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="87">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:22.848" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:23.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:23.306" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:22.845" endtime="20241013 17:06:23.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:23.307" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:23.307" endtime="20241013 17:06:23.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:23.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:23.307" endtime="20241013 17:06:23.308"/>
</kw>
<status status="PASS" starttime="20241013 17:06:22.845" endtime="20241013 17:06:23.308"/>
</kw>
<msg timestamp="20241013 17:06:23.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:22.844" endtime="20241013 17:06:23.308"/>
</kw>
<msg timestamp="20241013 17:06:23.308" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:22.844" endtime="20241013 17:06:23.308"/>
</kw>
<msg timestamp="20241013 17:06:23.309" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:22.843" endtime="20241013 17:06:23.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:23.309" endtime="20241013 17:06:23.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:23.309" endtime="20241013 17:06:23.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:23.309" endtime="20241013 17:06:23.310"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:23.313" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:23.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:23.317" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.311" endtime="20241013 17:06:23.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:23.318" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.318" endtime="20241013 17:06:23.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:23.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:23.318" endtime="20241013 17:06:23.319"/>
</kw>
<status status="PASS" starttime="20241013 17:06:23.311" endtime="20241013 17:06:23.319"/>
</kw>
<msg timestamp="20241013 17:06:23.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:23.310" endtime="20241013 17:06:23.319"/>
</kw>
<msg timestamp="20241013 17:06:23.319" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.310" endtime="20241013 17:06:23.319"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:23.322" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:23.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:23.326" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.320" endtime="20241013 17:06:23.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:23.327" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.326" endtime="20241013 17:06:23.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:23.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:23.327" endtime="20241013 17:06:23.327"/>
</kw>
<status status="PASS" starttime="20241013 17:06:23.320" endtime="20241013 17:06:23.328"/>
</kw>
<msg timestamp="20241013 17:06:23.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:23.320" endtime="20241013 17:06:23.328"/>
</kw>
<msg timestamp="20241013 17:06:23.328" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.319" endtime="20241013 17:06:23.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:23.328" endtime="20241013 17:06:23.328"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:22.843" endtime="20241013 17:06:23.329"/>
</test>
<test id="s1-s6-s12-t7" name="Get Partial object from s3 with only start offset" line="96">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:23.334" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:23.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:23.817" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:23.332" endtime="20241013 17:06:23.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:23.818" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:23.818" endtime="20241013 17:06:23.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:23.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:23.819" endtime="20241013 17:06:23.819"/>
</kw>
<status status="PASS" starttime="20241013 17:06:23.331" endtime="20241013 17:06:23.819"/>
</kw>
<msg timestamp="20241013 17:06:23.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:23.331" endtime="20241013 17:06:23.820"/>
</kw>
<msg timestamp="20241013 17:06:23.820" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:23.331" endtime="20241013 17:06:23.820"/>
</kw>
<msg timestamp="20241013 17:06:23.820" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:23.330" endtime="20241013 17:06:23.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:23.820" endtime="20241013 17:06:23.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:23.821" endtime="20241013 17:06:23.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:23.821" endtime="20241013 17:06:23.821"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:23.825" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:23.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:23.829" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.823" endtime="20241013 17:06:23.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:23.830" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.829" endtime="20241013 17:06:23.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:23.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:23.830" endtime="20241013 17:06:23.831"/>
</kw>
<status status="PASS" starttime="20241013 17:06:23.822" endtime="20241013 17:06:23.831"/>
</kw>
<msg timestamp="20241013 17:06:23.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:23.822" endtime="20241013 17:06:23.831"/>
</kw>
<msg timestamp="20241013 17:06:23.831" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.821" endtime="20241013 17:06:23.831"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:23.834" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:23.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:23.838" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.832" endtime="20241013 17:06:23.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:23.839" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.838" endtime="20241013 17:06:23.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:23.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:23.839" endtime="20241013 17:06:23.840"/>
</kw>
<status status="PASS" starttime="20241013 17:06:23.832" endtime="20241013 17:06:23.840"/>
</kw>
<msg timestamp="20241013 17:06:23.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:23.832" endtime="20241013 17:06:23.840"/>
</kw>
<msg timestamp="20241013 17:06:23.840" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:23.831" endtime="20241013 17:06:23.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:23.840" endtime="20241013 17:06:23.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:23.329" endtime="20241013 17:06:23.841"/>
</test>
<test id="s1-s6-s12-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="105">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:23.846" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:24.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:24.317" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:23.844" endtime="20241013 17:06:24.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:24.318" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:24.317" endtime="20241013 17:06:24.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:24.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:24.318" endtime="20241013 17:06:24.319"/>
</kw>
<status status="PASS" starttime="20241013 17:06:23.843" endtime="20241013 17:06:24.319"/>
</kw>
<msg timestamp="20241013 17:06:24.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:23.843" endtime="20241013 17:06:24.319"/>
</kw>
<msg timestamp="20241013 17:06:24.319" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:23.843" endtime="20241013 17:06:24.319"/>
</kw>
<msg timestamp="20241013 17:06:24.319" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:23.842" endtime="20241013 17:06:24.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:24.320" endtime="20241013 17:06:24.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:24.320" endtime="20241013 17:06:24.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:24.320" endtime="20241013 17:06:24.321"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:24.324" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:06:24.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:24.328" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20241013 17:06:24.322" endtime="20241013 17:06:24.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:24.329" level="INFO">R</msg>
<status status="PASS" starttime="20241013 17:06:24.328" endtime="20241013 17:06:24.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:24.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:24.329" endtime="20241013 17:06:24.330"/>
</kw>
<status status="PASS" starttime="20241013 17:06:24.321" endtime="20241013 17:06:24.330"/>
</kw>
<msg timestamp="20241013 17:06:24.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:24.321" endtime="20241013 17:06:24.330"/>
</kw>
<msg timestamp="20241013 17:06:24.330" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20241013 17:06:24.321" endtime="20241013 17:06:24.330"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:24.333" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:24.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:24.337" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20241013 17:06:24.331" endtime="20241013 17:06:24.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:24.338" level="INFO">R</msg>
<status status="PASS" starttime="20241013 17:06:24.338" endtime="20241013 17:06:24.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:24.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:24.338" endtime="20241013 17:06:24.339"/>
</kw>
<status status="PASS" starttime="20241013 17:06:24.331" endtime="20241013 17:06:24.339"/>
</kw>
<msg timestamp="20241013 17:06:24.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:24.331" endtime="20241013 17:06:24.339"/>
</kw>
<msg timestamp="20241013 17:06:24.339" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20241013 17:06:24.330" endtime="20241013 17:06:24.339"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:24.339" endtime="20241013 17:06:24.340"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:24.343" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:24.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:24.807" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:24.341" endtime="20241013 17:06:24.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:24.808" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:24.807" endtime="20241013 17:06:24.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:24.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:24.808" endtime="20241013 17:06:24.808"/>
</kw>
<status status="PASS" starttime="20241013 17:06:24.341" endtime="20241013 17:06:24.809"/>
</kw>
<msg timestamp="20241013 17:06:24.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:24.341" endtime="20241013 17:06:24.809"/>
</kw>
<msg timestamp="20241013 17:06:24.809" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:24.340" endtime="20241013 17:06:24.809"/>
</kw>
<msg timestamp="20241013 17:06:24.809" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:24.340" endtime="20241013 17:06:24.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:24.809" endtime="20241013 17:06:24.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:24.810" endtime="20241013 17:06:24.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:24.810" endtime="20241013 17:06:24.810"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:24.814" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:06:24.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:24.818" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20241013 17:06:24.812" endtime="20241013 17:06:24.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:24.819" level="INFO">o</msg>
<status status="PASS" starttime="20241013 17:06:24.818" endtime="20241013 17:06:24.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:24.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:24.819" endtime="20241013 17:06:24.819"/>
</kw>
<status status="PASS" starttime="20241013 17:06:24.811" endtime="20241013 17:06:24.820"/>
</kw>
<msg timestamp="20241013 17:06:24.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:24.811" endtime="20241013 17:06:24.820"/>
</kw>
<msg timestamp="20241013 17:06:24.820" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20241013 17:06:24.811" endtime="20241013 17:06:24.820"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:24.824" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:24.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:24.827" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20241013 17:06:24.821" endtime="20241013 17:06:24.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:24.828" level="INFO">o</msg>
<status status="PASS" starttime="20241013 17:06:24.827" endtime="20241013 17:06:24.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:24.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:24.828" endtime="20241013 17:06:24.828"/>
</kw>
<status status="PASS" starttime="20241013 17:06:24.821" endtime="20241013 17:06:24.829"/>
</kw>
<msg timestamp="20241013 17:06:24.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:24.820" endtime="20241013 17:06:24.829"/>
</kw>
<msg timestamp="20241013 17:06:24.829" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20241013 17:06:24.820" endtime="20241013 17:06:24.829"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:24.829" endtime="20241013 17:06:24.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:23.841" endtime="20241013 17:06:24.830"/>
</test>
<test id="s1-s6-s12-t9" name="Get Partial object from s3 to get last n bytes" line="122">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:24.834" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:25.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:25.299" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:24.832" endtime="20241013 17:06:25.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:25.300" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:25.300" endtime="20241013 17:06:25.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:25.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:25.301" endtime="20241013 17:06:25.301"/>
</kw>
<status status="PASS" starttime="20241013 17:06:24.832" endtime="20241013 17:06:25.301"/>
</kw>
<msg timestamp="20241013 17:06:25.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:24.832" endtime="20241013 17:06:25.301"/>
</kw>
<msg timestamp="20241013 17:06:25.301" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:24.831" endtime="20241013 17:06:25.301"/>
</kw>
<msg timestamp="20241013 17:06:25.302" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20241013 17:06:24.831" endtime="20241013 17:06:25.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:25.302" endtime="20241013 17:06:25.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:25.302" endtime="20241013 17:06:25.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:25.303" endtime="20241013 17:06:25.303"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:25.306" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20241013 17:06:25.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:25.310" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20241013 17:06:25.304" endtime="20241013 17:06:25.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:25.311" level="INFO">ext</msg>
<status status="PASS" starttime="20241013 17:06:25.311" endtime="20241013 17:06:25.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:25.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:25.311" endtime="20241013 17:06:25.312"/>
</kw>
<status status="PASS" starttime="20241013 17:06:25.304" endtime="20241013 17:06:25.312"/>
</kw>
<msg timestamp="20241013 17:06:25.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:25.303" endtime="20241013 17:06:25.312"/>
</kw>
<msg timestamp="20241013 17:06:25.312" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20241013 17:06:25.303" endtime="20241013 17:06:25.312"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:25.315" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:25.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:25.319" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20241013 17:06:25.313" endtime="20241013 17:06:25.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:25.320" level="INFO">ext</msg>
<status status="PASS" starttime="20241013 17:06:25.320" endtime="20241013 17:06:25.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:25.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:25.320" endtime="20241013 17:06:25.321"/>
</kw>
<status status="PASS" starttime="20241013 17:06:25.313" endtime="20241013 17:06:25.321"/>
</kw>
<msg timestamp="20241013 17:06:25.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:25.313" endtime="20241013 17:06:25.321"/>
</kw>
<msg timestamp="20241013 17:06:25.321" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20241013 17:06:25.312" endtime="20241013 17:06:25.321"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:25.321" endtime="20241013 17:06:25.322"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:25.325" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:25.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:25.788" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:25.324" endtime="20241013 17:06:25.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:25.789" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:25.788" endtime="20241013 17:06:25.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:25.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:25.789" endtime="20241013 17:06:25.789"/>
</kw>
<status status="PASS" starttime="20241013 17:06:25.323" endtime="20241013 17:06:25.790"/>
</kw>
<msg timestamp="20241013 17:06:25.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:25.323" endtime="20241013 17:06:25.790"/>
</kw>
<msg timestamp="20241013 17:06:25.790" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:25.322" endtime="20241013 17:06:25.790"/>
</kw>
<msg timestamp="20241013 17:06:25.790" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:25.322" endtime="20241013 17:06:25.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:25.790" endtime="20241013 17:06:25.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:25.791" endtime="20241013 17:06:25.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:25.791" endtime="20241013 17:06:25.791"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:25.795" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:25.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:25.799" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:25.793" endtime="20241013 17:06:25.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:25.800" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:25.799" endtime="20241013 17:06:25.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:25.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:25.800" endtime="20241013 17:06:25.800"/>
</kw>
<status status="PASS" starttime="20241013 17:06:25.792" endtime="20241013 17:06:25.800"/>
</kw>
<msg timestamp="20241013 17:06:25.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:25.792" endtime="20241013 17:06:25.801"/>
</kw>
<msg timestamp="20241013 17:06:25.801" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:25.792" endtime="20241013 17:06:25.801"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:25.804" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:25.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:25.808" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:25.802" endtime="20241013 17:06:25.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:25.808" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:25.808" endtime="20241013 17:06:25.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:25.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:25.809" endtime="20241013 17:06:25.809"/>
</kw>
<status status="PASS" starttime="20241013 17:06:25.802" endtime="20241013 17:06:25.809"/>
</kw>
<msg timestamp="20241013 17:06:25.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:25.801" endtime="20241013 17:06:25.809"/>
</kw>
<msg timestamp="20241013 17:06:25.809" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:25.801" endtime="20241013 17:06:25.809"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:25.810" endtime="20241013 17:06:25.810"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:24.830" endtime="20241013 17:06:25.810"/>
</test>
<test id="s1-s6-s12-t10" name="Incorrect values for end and start offset" line="140">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:25.815" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:26.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:26.276" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:25.813" endtime="20241013 17:06:26.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:26.278" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:26.277" endtime="20241013 17:06:26.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:26.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:26.278" endtime="20241013 17:06:26.279"/>
</kw>
<status status="PASS" starttime="20241013 17:06:25.812" endtime="20241013 17:06:26.279"/>
</kw>
<msg timestamp="20241013 17:06:26.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:25.812" endtime="20241013 17:06:26.279"/>
</kw>
<msg timestamp="20241013 17:06:26.279" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:25.812" endtime="20241013 17:06:26.279"/>
</kw>
<msg timestamp="20241013 17:06:26.279" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:25.811" endtime="20241013 17:06:26.279"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:26.279" endtime="20241013 17:06:26.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:26.280" endtime="20241013 17:06:26.280"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:26.285" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:26.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:26.289" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.282" endtime="20241013 17:06:26.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:26.290" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.289" endtime="20241013 17:06:26.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:26.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:26.290" endtime="20241013 17:06:26.290"/>
</kw>
<status status="PASS" starttime="20241013 17:06:26.281" endtime="20241013 17:06:26.290"/>
</kw>
<msg timestamp="20241013 17:06:26.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:26.281" endtime="20241013 17:06:26.290"/>
</kw>
<msg timestamp="20241013 17:06:26.291" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.280" endtime="20241013 17:06:26.291"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:26.294" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:26.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:26.298" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.292" endtime="20241013 17:06:26.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:26.299" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.298" endtime="20241013 17:06:26.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:26.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:26.299" endtime="20241013 17:06:26.300"/>
</kw>
<status status="PASS" starttime="20241013 17:06:26.291" endtime="20241013 17:06:26.300"/>
</kw>
<msg timestamp="20241013 17:06:26.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:26.291" endtime="20241013 17:06:26.300"/>
</kw>
<msg timestamp="20241013 17:06:26.300" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.291" endtime="20241013 17:06:26.300"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:26.300" endtime="20241013 17:06:26.301"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:26.304" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:26.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:26.768" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:26.302" endtime="20241013 17:06:26.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:26.769" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20241013 17:06:26.768" endtime="20241013 17:06:26.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:26.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:26.769" endtime="20241013 17:06:26.769"/>
</kw>
<status status="PASS" starttime="20241013 17:06:26.302" endtime="20241013 17:06:26.770"/>
</kw>
<msg timestamp="20241013 17:06:26.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:26.302" endtime="20241013 17:06:26.770"/>
</kw>
<msg timestamp="20241013 17:06:26.770" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:26.301" endtime="20241013 17:06:26.770"/>
</kw>
<msg timestamp="20241013 17:06:26.770" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:18 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:26.301" endtime="20241013 17:06:26.770"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:26.770" endtime="20241013 17:06:26.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:26.771" endtime="20241013 17:06:26.771"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:26.775" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:26.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:26.779" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.773" endtime="20241013 17:06:26.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:26.780" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.780" endtime="20241013 17:06:26.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:26.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:26.780" endtime="20241013 17:06:26.781"/>
</kw>
<status status="PASS" starttime="20241013 17:06:26.772" endtime="20241013 17:06:26.781"/>
</kw>
<msg timestamp="20241013 17:06:26.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:26.772" endtime="20241013 17:06:26.781"/>
</kw>
<msg timestamp="20241013 17:06:26.781" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.771" endtime="20241013 17:06:26.781"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:26.785" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:26.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:26.788" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.783" endtime="20241013 17:06:26.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:26.789" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.789" endtime="20241013 17:06:26.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:26.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:26.790" endtime="20241013 17:06:26.790"/>
</kw>
<status status="PASS" starttime="20241013 17:06:26.782" endtime="20241013 17:06:26.790"/>
</kw>
<msg timestamp="20241013 17:06:26.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:26.782" endtime="20241013 17:06:26.790"/>
</kw>
<msg timestamp="20241013 17:06:26.790" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20241013 17:06:26.781" endtime="20241013 17:06:26.790"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:26.791" endtime="20241013 17:06:26.791"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:25.811" endtime="20241013 17:06:26.791"/>
</test>
<test id="s1-s6-s12-t11" name="Zero byte file" line="155">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:26.795" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:27.255" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:27.255" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:26.793" endtime="20241013 17:06:27.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:27.256" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:27.255" endtime="20241013 17:06:27.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:27.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:27.256" endtime="20241013 17:06:27.256"/>
</kw>
<msg timestamp="20241013 17:06:27.257" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:26.793" endtime="20241013 17:06:27.257"/>
</kw>
<msg timestamp="20241013 17:06:27.257" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:26.792" endtime="20241013 17:06:27.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:27.257" endtime="20241013 17:06:27.257"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:27.261" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:27.730" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:27.730" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:27.259" endtime="20241013 17:06:27.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:27.731" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:27.731" endtime="20241013 17:06:27.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:27.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:27.732" endtime="20241013 17:06:27.732"/>
</kw>
<msg timestamp="20241013 17:06:27.732" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:27.258" endtime="20241013 17:06:27.732"/>
</kw>
<msg timestamp="20241013 17:06:27.733" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:27.258" endtime="20241013 17:06:27.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:27.733" endtime="20241013 17:06:27.733"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:27.737" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:28.197" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:28.197" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:27.734" endtime="20241013 17:06:28.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:28.198" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:28.198" endtime="20241013 17:06:28.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:28.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:28.199" endtime="20241013 17:06:28.199"/>
</kw>
<msg timestamp="20241013 17:06:28.199" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:27.734" endtime="20241013 17:06:28.199"/>
</kw>
<msg timestamp="20241013 17:06:28.199" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20241013 17:06:27.733" endtime="20241013 17:06:28.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:28.200" endtime="20241013 17:06:28.200"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:26.792" endtime="20241013 17:06:28.200"/>
</test>
<test id="s1-s6-s12-t12" name="Create file with user defined metadata and tags" line="165">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:28.206" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:06:28.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:28.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:28.203" endtime="20241013 17:06:28.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:28.208" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:28.208" endtime="20241013 17:06:28.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:28.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:28.209" endtime="20241013 17:06:28.209"/>
</kw>
<status status="PASS" starttime="20241013 17:06:28.202" endtime="20241013 17:06:28.209"/>
</kw>
<msg timestamp="20241013 17:06:28.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:28.202" endtime="20241013 17:06:28.209"/>
</kw>
<status status="PASS" starttime="20241013 17:06:28.201" endtime="20241013 17:06:28.210"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:28.213" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:28.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:28.723" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:28.211" endtime="20241013 17:06:28.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:28.725" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:28.724" endtime="20241013 17:06:28.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:28.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:28.725" endtime="20241013 17:06:28.725"/>
</kw>
<status status="PASS" starttime="20241013 17:06:28.211" endtime="20241013 17:06:28.726"/>
</kw>
<msg timestamp="20241013 17:06:28.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:28.211" endtime="20241013 17:06:28.726"/>
</kw>
<msg timestamp="20241013 17:06:28.726" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:28.210" endtime="20241013 17:06:28.726"/>
</kw>
<status status="PASS" starttime="20241013 17:06:28.210" endtime="20241013 17:06:28.726"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:28.731" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:29.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:29.207" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:28.728" endtime="20241013 17:06:29.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:29.208" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:06:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:29 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20241013 17:06:29.207" endtime="20241013 17:06:29.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:29.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:29.208" endtime="20241013 17:06:29.208"/>
</kw>
<status status="PASS" starttime="20241013 17:06:28.728" endtime="20241013 17:06:29.208"/>
</kw>
<msg timestamp="20241013 17:06:29.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:28.727" endtime="20241013 17:06:29.209"/>
</kw>
<msg timestamp="20241013 17:06:29.209" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:28.727" endtime="20241013 17:06:29.209"/>
</kw>
<msg timestamp="20241013 17:06:29.209" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:28.726" endtime="20241013 17:06:29.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:29.209" endtime="20241013 17:06:29.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:29.210" endtime="20241013 17:06:29.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:29.213" level="INFO">Running command 'ozone sh key info /s3v/link/ozone-test-8837869413/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:33.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:33.481" level="INFO">${output} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-8837869413/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2024-10...</msg>
<status status="PASS" starttime="20241013 17:06:29.211" endtime="20241013 17:06:33.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:33.482" level="INFO">{
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-8837869413/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2024-10-13T17:06:28.641Z",
  "modificationTime" : "2024-10-13T17:06:28.666Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 113750153625604462,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 18683,
  "file" : true
}</msg>
<status status="PASS" starttime="20241013 17:06:33.482" endtime="20241013 17:06:33.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:33.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:33.483" endtime="20241013 17:06:33.483"/>
</kw>
<status status="PASS" starttime="20241013 17:06:29.211" endtime="20241013 17:06:33.483"/>
</kw>
<msg timestamp="20241013 17:06:33.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:29.210" endtime="20241013 17:06:33.483"/>
</kw>
<msg timestamp="20241013 17:06:33.484" level="INFO">${result} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-8837869413/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2024-10...</msg>
<status status="PASS" starttime="20241013 17:06:29.210" endtime="20241013 17:06:33.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:33.484" endtime="20241013 17:06:33.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:33.484" endtime="20241013 17:06:33.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:33.485" endtime="20241013 17:06:33.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:33.485" endtime="20241013 17:06:33.485"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:33.490" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:33.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:33.965" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:33.487" endtime="20241013 17:06:33.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:33.966" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:33 GMT",
    "Metadata": {},
    "TagCount": 2
}</msg>
<status status="PASS" starttime="20241013 17:06:33.965" endtime="20241013 17:06:33.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:33.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:33.966" endtime="20241013 17:06:33.966"/>
</kw>
<status status="PASS" starttime="20241013 17:06:33.487" endtime="20241013 17:06:33.967"/>
</kw>
<msg timestamp="20241013 17:06:33.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:33.486" endtime="20241013 17:06:33.967"/>
</kw>
<msg timestamp="20241013 17:06:33.967" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:33.486" endtime="20241013 17:06:33.967"/>
</kw>
<msg timestamp="20241013 17:06:33.967" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20241013 17:06:33.485" endtime="20241013 17:06:33.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:33.967" endtime="20241013 17:06:33.968"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:33.971" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 13 Oct 2024 17:06:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:33 GMT",
    "Metadata": {},
    "TagCount": 2
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:33.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:33.976" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20241013 17:06:33.968" endtime="20241013 17:06:33.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:33.977" level="INFO">2</msg>
<status status="PASS" starttime="20241013 17:06:33.976" endtime="20241013 17:06:33.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:33.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:33.977" endtime="20241013 17:06:33.977"/>
</kw>
<msg timestamp="20241013 17:06:33.978" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20241013 17:06:33.968" endtime="20241013 17:06:33.978"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241013 17:06:33.978" endtime="20241013 17:06:33.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:28.201" endtime="20241013 17:06:33.978"/>
</test>
<test id="s1-s6-s12-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="184">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:33.983" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:06:33.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:33.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:33.981" endtime="20241013 17:06:33.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:33.985" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:33.985" endtime="20241013 17:06:33.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:33.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:33.986" endtime="20241013 17:06:33.986"/>
</kw>
<status status="PASS" starttime="20241013 17:06:33.980" endtime="20241013 17:06:33.986"/>
</kw>
<msg timestamp="20241013 17:06:33.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:33.980" endtime="20241013 17:06:33.986"/>
</kw>
<status status="PASS" starttime="20241013 17:06:33.979" endtime="20241013 17:06:33.986"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:33.990" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:34.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:34.456" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:33.988" endtime="20241013 17:06:34.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:34.457" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:34.457" endtime="20241013 17:06:34.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:34.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:34.457" endtime="20241013 17:06:34.458"/>
</kw>
<status status="PASS" starttime="20241013 17:06:33.988" endtime="20241013 17:06:34.458"/>
</kw>
<msg timestamp="20241013 17:06:34.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:33.988" endtime="20241013 17:06:34.458"/>
</kw>
<msg timestamp="20241013 17:06:34.458" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20241013 17:06:33.987" endtime="20241013 17:06:34.458"/>
</kw>
<status status="PASS" starttime="20241013 17:06:33.987" endtime="20241013 17:06:34.459"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:34.463" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:34.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:34.926" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:34.460" endtime="20241013 17:06:34.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:34.927" level="INFO">{
    "LastModified": "Sun, 13 Oct 2024 17:06:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Sun, 13 Oct 2024 17:06:34 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20241013 17:06:34.926" endtime="20241013 17:06:34.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:34.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:34.927" endtime="20241013 17:06:34.927"/>
</kw>
<status status="PASS" starttime="20241013 17:06:34.460" endtime="20241013 17:06:34.928"/>
</kw>
<msg timestamp="20241013 17:06:34.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:34.460" endtime="20241013 17:06:34.928"/>
</kw>
<msg timestamp="20241013 17:06:34.928" level="INFO">${output} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:34.459" endtime="20241013 17:06:34.928"/>
</kw>
<msg timestamp="20241013 17:06:34.928" level="INFO">${result} = {
    "LastModified": "Sun, 13 Oct 2024 17:06:34 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20241013 17:06:34.459" endtime="20241013 17:06:34.928"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:34.928" endtime="20241013 17:06:34.929"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:34.929" endtime="20241013 17:06:34.929"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:33.979" endtime="20241013 17:06:34.929"/>
</test>
<test id="s1-s6-s12-t14" name="Create file with user defined metadata size larger than 2 KB" line="192">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:34.934" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:06:34.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:34.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:34.931" endtime="20241013 17:06:34.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:34.937" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:34.936" endtime="20241013 17:06:34.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:34.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:34.937" endtime="20241013 17:06:34.937"/>
</kw>
<status status="PASS" starttime="20241013 17:06:34.931" endtime="20241013 17:06:34.938"/>
</kw>
<msg timestamp="20241013 17:06:34.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:34.931" endtime="20241013 17:06:34.938"/>
</kw>
<status status="PASS" starttime="20241013 17:06:34.930" endtime="20241013 17:06:34.938"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:06:34.943" level="INFO">${custom_metadata_value} = xAZXhcaEqdpoOTr5x4hpzAOQGiqeeen4ErvFOD8L5Q38wZ5fmwR1bMIU016ZuzqmAe7lhzIRx8W65Pg1w4ey1MMTYkBwh98BnW40XulAH7TebAFJNfMOtYElpvF44bZwzn89mgqScsC9S2edCO1J21ztciafni1LPOSRXBQg70i7FhfMRFn5hrKg2S1IKI5JaGWbodnI...</msg>
<status status="PASS" starttime="20241013 17:06:34.938" endtime="20241013 17:06:34.943"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:34.948" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=xAZXhcaEqdpoOTr5x4hpzAOQGiqeeen4ErvFOD8L5Q38wZ5fmwR1bMIU016ZuzqmAe7lhzIRx8W65Pg1w4ey1MMTYkBwh98BnW40XulAH7TebAFJNfMOtYElpvF44bZwzn89mgqScsC9S2edCO1J21ztciafni1LPOSRXBQg70i7FhfMRFn5hrKg2S1IKI5JaGWbodnIJa4eChhhiPVNv4lgFUKS9Y7I9psXn07wegAZJTIlFaeVqt6det2xF4k5nsAcV8j6EEVfCUOwR8SW4yKIigF5jntTUfXhuXDkQsS53IGFNJq0DTEdAlLprK7skwoXUW5r9bTHLy6CYxHwlOGiAyi3Md5k3gM9eJQGVUzs0FpK5xG6XvP04OdtY4861TCXKzCcdVOCUQ8bjaLclmusrgGkrPFQhBxfz9dyxpXXOR71yKfiOgryUjSpQPkkMTZQ5DplB0MRIXLgmNE0hJpnhwPT5KO57OQrkYCKrSjWpXrJTcLXP7PveaaADZbjUevhk95FwWVJYOcyqPF9SksB0ppj5DGMfdYmZpN6vmnLGsGpVaW25SoLhUB2u8cwg3x0Mk1avl8RCIeshdBvl1H3N5jr3k3MVomDRqOUdicbSMK757ZkmRRgMSaHFsK7veWqlZDy8usBxeLLnlWbIRWEvBcb7VcgkqNlSYcyrIxz4yv0sGpEkC9Pyr9wMHEcDknoJeuVME5EpFkqdbcKc8jziAMN4rmqomZV2ShWWPlLlu9eluOZ1W5Tg3DdLnEOLeX2hMrglaWXcWiGNMEoY3Rhpsa6eAhRaknt3Hxjl3igsIDwAt8cHCSgM1VmRne9xwqsrSmNaxWBtCwev4BAjSCKNmW1WK7CD3dGUwt69kU2yxSC3BnC7Icikk17bwJLNyMuR9p3wbXB95D2X0qS8Bi9Bh2sIktp4gmU7GZKEHhNqm3sL4teRUyR8qpvbNrDrqt0dBlxAty8yEKt0zLzzr3qi7EWePzHzK1XOsEaedr31ODW6YOyKRitZAeT7IFcknGOLoyQMjDRryXveKa6usOXVYfpE7K4MId5vJr6w1nZWdCFs42WxFLMW93oN8csza29vjJhxnzSVUMjF2e8cvPDvVFhcULvNFUwyWH1rohoyT1q463JnBQ0rBrVubRgnqPo5z2DBNGqL5YQBqmMpVuMSiNdDTlG8ZQXlSpnDGfQJReY0XatpJ6yaXCRGnys3LHwqAHggklxSh4eMXrfn09t1pi1HYt4RAEvp7Mj3XeC5zbTUj34GIaMBhbk6fpE8YDPbk8Y0a4zfllC9PHsUNud7ySojhAe6vFSfbPZuzI1ZYPZUABvjQ92yJshAvGaaA0pNDlH938C0YRHKAHOxZOcHjNWSnja8gCryeUlqXBKf3wRcFguDLTByKRy0BazaYfAT4QlZTQjdy4448RiaPxvHseFl8TUxW1L6AEtGD4oGogiG55AA1cUINC9RmQHSc5Abh4xtjEX9utFhgnikWUC4OCCShEP93myb1eadDirbpYnIZl9Leqg8I4DaqIffuLxFwfTUCF4bkbHb2lkjwFu2JFsAmJ8syRoVBCP24r7S0iF76jMMJwpRr57GU0syXMzcUz3KtEgqMAXSuxm9pEYp7wMEyzIOfmCUyl8lK5pq9XVcNKhSpzkX4JLN3LExlfOhAJearq4HDCeIMYHe1zrdezQg17jT7ns5Ym376le5snVxyGHXVvIwTCMGWB54vRKY54huvRJjGg1ffHINp22ohUsCDNT74eVwQi8Rpj65Y0NGiG9XWdgBHg6KBNXIGZuDkDn0WMWAC9Ks96qbQYZAYjKqkpj0EYaY13Qv6PhPaaHhEm4HXoY8x79y46fqK9erjllEl0Uji9HAeaNMAFOuoVjMQn16wJKuEqDkezzZJY06CW5DQpCLl9MpeWJlkHTMFgdJEwRkbfyGBwjCdXgfZEB6nNXvhMS7bqDnh5i95cEs8ZwV5encjp6zH6EiTkZ16Jp5jaT3rqsIP6nDKQZ6NTnbYq830P7EsvC3V44D1SbRuyDVzpWKLquCZLVdZKgwnYNZgGAf1Gf4GlQIgwdao7lxhVjl5Nengqp7jn2VfTg6HihmfQD7d90dyxrjhnI8z4UKERzG9owKDRJpsIBrlRdqqQwlVQ8RggLLs7QG9gq3Zn87Q57o1zdANmMCNDb6wc9yrmM9ROCnsfvE3XifB9j7GvH7cBzV8wgPwwmWRTzFVQwzSAzx7gv1B42QiCaG6LxT9NGoxCuYVRjcJEiKjl1vWOSECFwkOMfVL5626g0HD6e63mfPwzUOn7rIWrDjHgQmGuYI0etDv77oakaEFgwZWdGpXYtK54BikkQ7WS2tZEi2RX07CnBvcFgLiYoEunL6EI0RVVK1U67nnUeLiL3ETNOUQeLTN7w9JYSrYWkFUjDWAGvJqkFwO6VHUxH5zSM32qfebNlOS3zs96sFNT9CVh7suaZTWYr0QX3Zo0mQ6BQcJEYyHTomy29kEnQMCTXMulfo7I0NRIrXaWHpppuR6HjaW5I0Oi8FuOKuSsssITifU75wosyLQKa0OfzM4yh048omX4C6OPDgDgwNPSWdRJBTaE0lAuGMYFkfk92DI5UMf6WVL3s5k9RHdBg8Ra3juxyP6pC96R0cRTi7DH51gvoV1TiTbZlXpq10bQ7OD6A7QwswVgP6wx2AVAObKozBcTz3f7xz9XPiSnlDrZH3UgnK2n3MLD8yfHH5t1FuuTFxvhPjIsK06EsYJWHm9EChkrtj3KGbYVcSL3eh34b8DYJAjLlFRzBQMefieNfGASiENSTY6qa3fEX6ckRU5vQ1BJvbA55VkHKuyUo1tULCdpBgxWmtqt82YRWURZlH6qvxEs67g9Gfa1m4BvRjeA7fsQSnJREwPNRxyorNcuTs5jxtu2Tq3q6kCcE1TMa9orJIDIocfmDXajtMkoZrCqjL2l7mlM5o0rMqhtfGBzUuTgbn1nlyyVKDG67zYLmJXAVbDz9" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:35.424" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:35.424" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:06:34.945" endtime="20241013 17:06:35.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:35.425" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:06:35.424" endtime="20241013 17:06:35.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:35.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:35.425" endtime="20241013 17:06:35.426"/>
</kw>
<msg timestamp="20241013 17:06:35.426" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:06:34.945" endtime="20241013 17:06:35.426"/>
</kw>
<msg timestamp="20241013 17:06:35.426" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20241013 17:06:34.944" endtime="20241013 17:06:35.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:35.426" endtime="20241013 17:06:35.427"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:35.427" endtime="20241013 17:06:35.427"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:34.930" endtime="20241013 17:06:35.427"/>
</test>
<test id="s1-s6-s12-t15" name="Create files invalid tags" line="199">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:35.432" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:35.887" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:35.887" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20241013 17:06:35.429" endtime="20241013 17:06:35.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:35.888" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20241013 17:06:35.888" endtime="20241013 17:06:35.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:35.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:35.889" endtime="20241013 17:06:35.889"/>
</kw>
<msg timestamp="20241013 17:06:35.889" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20241013 17:06:35.429" endtime="20241013 17:06:35.889"/>
</kw>
<msg timestamp="20241013 17:06:35.889" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20241013 17:06:35.428" endtime="20241013 17:06:35.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:35.889" endtime="20241013 17:06:35.890"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_key}</var>
<arg>129</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:06:35.890" level="INFO">${long_tag_key} = 2ISM2Vm4NOSxXxdcQVq520gqjjUtk1DXinSA40uqD2bdT0SmoV4lR8oYlZh10vTwIHy8wrfTm0gI1KdPhyK5l0EukxAZC2MzAm1XNGEwXS0DjFPiFjR42lA7J8HeCUWnY</msg>
<status status="PASS" starttime="20241013 17:06:35.890" endtime="20241013 17:06:35.890"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${long_tag_key}=tag-value1"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:35.894" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="2ISM2Vm4NOSxXxdcQVq520gqjjUtk1DXinSA40uqD2bdT0SmoV4lR8oYlZh10vTwIHy8wrfTm0gI1KdPhyK5l0EukxAZC2MzAm1XNGEwXS0DjFPiFjR42lA7J8HeCUWnY=tag-value1" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:36.353" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:36.353" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20241013 17:06:35.892" endtime="20241013 17:06:36.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:36.354" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20241013 17:06:36.353" endtime="20241013 17:06:36.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:36.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:36.354" endtime="20241013 17:06:36.355"/>
</kw>
<msg timestamp="20241013 17:06:36.355" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20241013 17:06:35.891" endtime="20241013 17:06:36.355"/>
</kw>
<msg timestamp="20241013 17:06:36.355" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20241013 17:06:35.891" endtime="20241013 17:06:36.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:36.355" endtime="20241013 17:06:36.356"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_value}</var>
<arg>257</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241013 17:06:36.356" level="INFO">${long_tag_value} = 58S1PXx4ZZ6MHidHxCOLpx8sss6NcTUlO7j9gN33kF6L7eMCK97tbP1j0STODC01IjolmA18uX5brwKknLrSBVMSd7YaeWttMpUUFYwgdW2jNl4ep3Okdi5Ns2ZlBtA242gm3lL4mhodDG35fKrKv9aZAWGtpSzcTItYGTap3FlwKrQWJepLoxD9NAona25e5T2frbEZ...</msg>
<status status="PASS" starttime="20241013 17:06:36.356" endtime="20241013 17:06:36.356"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=${long_tag_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:36.361" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=58S1PXx4ZZ6MHidHxCOLpx8sss6NcTUlO7j9gN33kF6L7eMCK97tbP1j0STODC01IjolmA18uX5brwKknLrSBVMSd7YaeWttMpUUFYwgdW2jNl4ep3Okdi5Ns2ZlBtA242gm3lL4mhodDG35fKrKv9aZAWGtpSzcTItYGTap3FlwKrQWJepLoxD9NAona25e5T2frbEZ11RD4qO7capXWqR9kC1QZLy7H3aEN3WwqzyK3uxwdkDc0E8jEv2sZNoXG" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:36.835" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:36.836" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20241013 17:06:36.358" endtime="20241013 17:06:36.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:36.837" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20241013 17:06:36.836" endtime="20241013 17:06:36.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:36.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:36.837" endtime="20241013 17:06:36.837"/>
</kw>
<msg timestamp="20241013 17:06:36.837" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20241013 17:06:36.357" endtime="20241013 17:06:36.837"/>
</kw>
<msg timestamp="20241013 17:06:36.838" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20241013 17:06:36.357" endtime="20241013 17:06:36.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:36.838" endtime="20241013 17:06:36.838"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:35.428" endtime="20241013 17:06:36.838"/>
</test>
<test id="s1-s6-s12-t16" name="Create files with too many tags" line="209">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:36.843" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20241013 17:06:36.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:36.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:36.840" endtime="20241013 17:06:36.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:36.846" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:36.845" endtime="20241013 17:06:36.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:36.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:36.846" endtime="20241013 17:06:36.846"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.840" endtime="20241013 17:06:36.846"/>
</kw>
<msg timestamp="20241013 17:06:36.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:36.840" endtime="20241013 17:06:36.846"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.839" endtime="20241013 17:06:36.847"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20241013 17:06:36.847" level="INFO">@{tags_list} = [ ]</msg>
<status status="PASS" starttime="20241013 17:06:36.847" endtime="20241013 17:06:36.847"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>11</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.847" endtime="20241013 17:06:36.848"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.847" endtime="20241013 17:06:36.848"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.848" endtime="20241013 17:06:36.849"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.848" endtime="20241013 17:06:36.849"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.849" endtime="20241013 17:06:36.849"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.849" endtime="20241013 17:06:36.849"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.849" endtime="20241013 17:06:36.850"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.849" endtime="20241013 17:06:36.850"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.850" endtime="20241013 17:06:36.850"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.850" endtime="20241013 17:06:36.850"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.851" endtime="20241013 17:06:36.851"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.850" endtime="20241013 17:06:36.851"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.851" endtime="20241013 17:06:36.852"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.851" endtime="20241013 17:06:36.852"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.852" endtime="20241013 17:06:36.852"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.852" endtime="20241013 17:06:36.852"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.853" endtime="20241013 17:06:36.853"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.852" endtime="20241013 17:06:36.853"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.853" endtime="20241013 17:06:36.853"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.853" endtime="20241013 17:06:36.853"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20241013 17:06:36.854" endtime="20241013 17:06:36.854"/>
</kw>
<status status="PASS" starttime="20241013 17:06:36.854" endtime="20241013 17:06:36.854"/>
</iter>
<status status="PASS" starttime="20241013 17:06:36.847" endtime="20241013 17:06:36.854"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${tags_over_limit}</var>
<arg>SEPARATOR=&amp;</arg>
<arg>@{tags_list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20241013 17:06:36.855" level="INFO">${tags_over_limit} = tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;ta...</msg>
<status status="PASS" starttime="20241013 17:06:36.854" endtime="20241013 17:06:36.855"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${tags_over_limit}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:36.858" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-8837869413/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;tag-key-9=tag-value-9&amp;tag-key-10=tag-value-10" 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:37.323" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:37.323" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20241013 17:06:36.856" endtime="20241013 17:06:37.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:37.324" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20241013 17:06:37.324" endtime="20241013 17:06:37.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:37.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:37.324" endtime="20241013 17:06:37.325"/>
</kw>
<msg timestamp="20241013 17:06:37.325" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20241013 17:06:36.855" endtime="20241013 17:06:37.325"/>
</kw>
<msg timestamp="20241013 17:06:37.325" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20241013 17:06:36.855" endtime="20241013 17:06:37.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:37.325" endtime="20241013 17:06:37.326"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:36.839" endtime="20241013 17:06:37.326"/>
</test>
<test id="s1-s6-s12-t17" name="Create small file and expect ETag (MD5) in a reponse header" line="220">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:37.331" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20241013 17:06:37.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:37.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:37.328" endtime="20241013 17:06:37.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:37.341" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:37.340" endtime="20241013 17:06:37.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:37.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:37.341" endtime="20241013 17:06:37.341"/>
</kw>
<status status="PASS" starttime="20241013 17:06:37.328" endtime="20241013 17:06:37.341"/>
</kw>
<msg timestamp="20241013 17:06:37.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:37.328" endtime="20241013 17:06:37.342"/>
</kw>
<status status="PASS" starttime="20241013 17:06:37.327" endtime="20241013 17:06:37.342"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:37.345" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:37.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:37.351" level="INFO">${output} = 3440af315c2b5f981af33be3bec5f28e</msg>
<status status="PASS" starttime="20241013 17:06:37.343" endtime="20241013 17:06:37.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:37.352" level="INFO">3440af315c2b5f981af33be3bec5f28e</msg>
<status status="PASS" starttime="20241013 17:06:37.351" endtime="20241013 17:06:37.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:37.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:37.352" endtime="20241013 17:06:37.352"/>
</kw>
<status status="PASS" starttime="20241013 17:06:37.343" endtime="20241013 17:06:37.353"/>
</kw>
<msg timestamp="20241013 17:06:37.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:37.342" endtime="20241013 17:06:37.353"/>
</kw>
<msg timestamp="20241013 17:06:37.353" level="INFO">${file_md5_checksum} = 3440af315c2b5f981af33be3bec5f28e</msg>
<status status="PASS" starttime="20241013 17:06:37.342" endtime="20241013 17:06:37.353"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:37.357" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:37.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:37.857" level="INFO">${output} = 2024-10-13 17:06:37,713 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:37,713 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:37.355" endtime="20241013 17:06:37.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:37.859" level="INFO">2024-10-13 17:06:37,713 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:37,713 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://link']
2024-10-13 17:06:37,714 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fc7ebc75d08&gt;
2024-10-13 17:06:37,714 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fc7ecac0a60&gt;
2024-10-13 17:06:37,714 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fc7eca9fe18&gt;
2024-10-13 17:06:37,715 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:06:37,719 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fc7ebda7730&gt;
2024-10-13 17:06:37,719 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fc7ebc80378&gt;
2024-10-13 17:06:37,719 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,719 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fc7ebc80378&gt;
2024-10-13 17:06:37,721 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,721 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,721 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc7eca6e940&gt;
2024-10-13 17:06:37,721 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,721 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc7eca6e940&gt;
2024-10-13 17:06:37,721 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc7eca6e940&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,722 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,723 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,723 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,723 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,723 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,723 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,723 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,723 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,723 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc7eca6e940&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc7eca6e940&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fc7eca6e940&gt;
2024-10-13 17:06:37,724 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,725 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,725 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,725 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,725 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fc7ebb59f60&gt;
2024-10-13 17:06:37,725 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:06:37,725 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2024-10-13 17:06:37,725 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2024-10-13 17:06:37,725 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2024-10-13 17:06:37,725 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2024-10-13 17:06:37,726 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2024-10-13 17:06:37,726 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:06:37,738 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:06:37,738 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fc7ed79f6a8&gt;
2024-10-13 17:06:37,739 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:06:37,749 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fc7edc7a620&gt;
2024-10-13 17:06:37,749 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fc7edc7a400&gt;
2024-10-13 17:06:37,750 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:37,752 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:37,752 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:06:37,753 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:37,753 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:37,754 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fc7ed79f6a8&gt;
2024-10-13 17:06:37,754 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fc7edc7a620&gt;
2024-10-13 17:06:37,755 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fc7edc7a400&gt;
2024-10-13 17:06:37,755 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:37,757 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:37,757 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:37,758 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:37,758 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fc7ed79f6a8&gt;
2024-10-13 17:06:37,759 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fc7edc7a620&gt;
2024-10-13 17:06:37,759 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fc7edc7a400&gt;
2024-10-13 17:06:37,760 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:37,762 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:37,762 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:37,763 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:37,763 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:06:37,764 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:37,765 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc7eb5380b8&gt;}) about to wait for the following futures []
2024-10-13 17:06:37,765 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc7eb5380b8&gt;}) done waiting for dependent futures
2024-10-13 17:06:37,765 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc7eb5380b8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc7eb5e7eb8&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fc7eb5280b8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fc7eb528128&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fc7eb5282b0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fc7eb5380b8&gt;}
2024-10-13 17:06:37,766 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fc7eb5282b0&gt; for transfer request: 0.
2024-10-13 17:06:37,766 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:37,766 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:06:37,766 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:06:37,766 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:37,767 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fc7eb5e7eb8&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc7eb538550&gt;, 'bucket': 'link', 'key': 'small_file', 'extra_args': {}}
2024-10-13 17:06:37,767 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fc7ed7369d8&gt;
2024-10-13 17:06:37,767 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fc7ed7b0e18&gt;
2024-10-13 17:06:37,767 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fc7ed7392f0&gt;
2024-10-13 17:06:37,767 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fc7ed7b0d90&gt;
2024-10-13 17:06:37,767 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fc7eb5f2438&gt;&gt;
2024-10-13 17:06:37,767 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fc7eb5f27f0&gt;&gt;
2024-10-13 17:06:37,767 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fc7ed7b0bf8&gt;
2024-10-13 17:06:37,768 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7fc7ee157400&gt;
2024-10-13 17:06:37,770 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fc7ed736158&gt;
2024-10-13 17:06:37,770 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:06:37,770 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fc7eb5f2438&gt;&gt;
2024-10-13 17:06:37,770 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fc7ed7b08c8&gt;
2024-10-13 17:06:37,770 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fc7ed739400&gt;
2024-10-13 17:06:37,770 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/link/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'NECvMVwrX5ga8zvjvsXyjg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fc7eb538550&gt;, 'url': 'http://s3g:9878/link/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fc7eb5f20f0&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:37,770 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fc7efcd9488&gt;
2024-10-13 17:06:37,771 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fc7eb5f20b8&gt;&gt;
2024-10-13 17:06:37,771 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fc7eb5f2860&gt;&gt;
2024-10-13 17:06:37,771 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fc7ed7b0ae8&gt;
2024-10-13 17:06:37,771 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fc7eb5f2860&gt;&gt;
2024-10-13 17:06:37,771 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:37,772 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:37,772 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/small_file

content-md5:NECvMVwrX5ga8zvjvsXyjg==
host:s3g:9878
x-amz-content-sha256:60e31c6d4d89ca2c5bcebd9097dd2f85296d6698f39080cc71d73470218cfa57
x-amz-date:20241013T170637Z

content-md5;host;x-amz-content-sha256;x-amz-date
60e31c6d4d89ca2c5bcebd9097dd2f85296d6698f39080cc71d73470218cfa57
2024-10-13 17:06:37,772 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170637Z
20241013/us-west-1/s3/aws4_request
577b51c05ff9b9297d4c96c1d9f5b560a53a374e9f1cd609d12d52c0ed7319e1
2024-10-13 17:06:37,772 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
ec7bd0ebfd9f9ccc4d64f3e137cbdf38e047e593c755e8cc7d3f443557331b48
2024-10-13 17:06:37,773 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fc7efcd9510&gt;
2024-10-13 17:06:37,773 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fc7ed739a60&gt;
2024-10-13 17:06:37,773 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'NECvMVwrX5ga8zvjvsXyjg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170637Z', 'X-Amz-Content-SHA256': b'60e31c6d4d89ca2c5bcebd9097dd2f85296d6698f39080cc71d73470218cfa57', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=ec7bd0ebfd9f9ccc4d64f3e137cbdf38e047e593c755e8cc7d3f443557331b48', 'amz-sdk-invocation-id': b'29e439df-e262-4330-b775-0ed881aef8f8', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2024-10-13 17:06:37,774 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:37,774 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:06:37,783 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (13.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (25.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (37.0 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:37,815 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/small_file HTTP/1.1" 200 0
2024-10-13 17:06:37,815 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:37 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:37 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"3440af315c2b5f981af33be3bec5f28e"', 'Server': 'Ozone', 'x-amz-id-2': 'BQnIrrK7', 'x-amz-request-id': 'de6d0f1a-04ff-49a6-9806-1945758f2d04', 'Content-Length': '0'}
2024-10-13 17:06:37,815 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:06:37,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fc7eb5f2470&gt;
2024-10-13 17:06:37,816 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:37,816 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fc7eb5f2438&gt;&gt;
2024-10-13 17:06:37,817 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fc7ebc758c8&gt;
Completed 976.6 KiB/976.6 KiB (18.7 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:37,817 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://link/small_file               
2024-10-13 17:06:37,817 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:06:37.858" endtime="20241013 17:06:37.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:37.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:37.859" endtime="20241013 17:06:37.859"/>
</kw>
<status status="PASS" starttime="20241013 17:06:37.354" endtime="20241013 17:06:37.860"/>
</kw>
<msg timestamp="20241013 17:06:37.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:37.354" endtime="20241013 17:06:37.860"/>
</kw>
<msg timestamp="20241013 17:06:37.860" level="INFO">${output} = 2024-10-13 17:06:37,713 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:37,713 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:37.353" endtime="20241013 17:06:37.861"/>
</kw>
<msg timestamp="20241013 17:06:37.861" level="INFO">${result} = 2024-10-13 17:06:37,713 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:37,713 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:37.353" endtime="20241013 17:06:37.861"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 17:06:37.861" endtime="20241013 17:06:37.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:37.326" endtime="20241013 17:06:37.862"/>
</test>
<test id="s1-s6-s12-t18" name="Download small file end expect ETag (MD5) in a response header" line="227">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:37.867" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:37.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:37.872" level="INFO">${output} = 3440af315c2b5f981af33be3bec5f28e</msg>
<status status="PASS" starttime="20241013 17:06:37.864" endtime="20241013 17:06:37.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:37.873" level="INFO">3440af315c2b5f981af33be3bec5f28e</msg>
<status status="PASS" starttime="20241013 17:06:37.873" endtime="20241013 17:06:37.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:37.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:37.873" endtime="20241013 17:06:37.874"/>
</kw>
<status status="PASS" starttime="20241013 17:06:37.864" endtime="20241013 17:06:37.874"/>
</kw>
<msg timestamp="20241013 17:06:37.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:37.863" endtime="20241013 17:06:37.874"/>
</kw>
<msg timestamp="20241013 17:06:37.874" level="INFO">${file_md5_checksum} = 3440af315c2b5f981af33be3bec5f28e</msg>
<status status="PASS" starttime="20241013 17:06:37.863" endtime="20241013 17:06:37.874"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:37.878" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://link/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:38.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:38.440" level="INFO">${output} = 2024-10-13 17:06:38,230 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:38,231 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:37.876" endtime="20241013 17:06:38.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:38.441" level="INFO">2024-10-13 17:06:38,230 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:38,231 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://link/small_file', '/tmp/small_file_downloaded']
2024-10-13 17:06:38,231 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fbecd352d08&gt;
2024-10-13 17:06:38,231 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fbece19da60&gt;
2024-10-13 17:06:38,231 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fbece17ce18&gt;
2024-10-13 17:06:38,232 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:06:38,236 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fbecd484730&gt;
2024-10-13 17:06:38,236 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fbecd35d378&gt;
2024-10-13 17:06:38,237 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,237 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fbecd35d378&gt;
2024-10-13 17:06:38,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,238 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbece14b9b0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbece14b9b0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbece14b9b0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,239 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,240 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbece14b9b0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,241 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbece14b9b0&gt;
2024-10-13 17:06:38,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,242 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fbece14b9b0&gt;
2024-10-13 17:06:38,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,242 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fbecd233fd0&gt;
2024-10-13 17:06:38,242 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:06:38,242 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2024-10-13 17:06:38,243 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2024-10-13 17:06:38,243 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2024-10-13 17:06:38,243 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2024-10-13 17:06:38,243 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2024-10-13 17:06:38,244 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:06:38,256 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:06:38,256 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fbecee7c6a8&gt;
2024-10-13 17:06:38,257 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:06:38,267 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fbecf357620&gt;
2024-10-13 17:06:38,267 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fbecf357400&gt;
2024-10-13 17:06:38,268 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:38,270 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:38,271 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:06:38,271 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:38,272 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:38,272 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fbecee7c6a8&gt;
2024-10-13 17:06:38,273 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fbecf357620&gt;
2024-10-13 17:06:38,273 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fbecf357400&gt;
2024-10-13 17:06:38,273 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:38,275 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:38,276 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:38,276 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:38,277 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fbecee7c6a8&gt;
2024-10-13 17:06:38,278 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fbecf357620&gt;
2024-10-13 17:06:38,278 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fbecf357400&gt;
2024-10-13 17:06:38,278 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:38,280 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:38,281 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:38,281 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:38,282 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:06:38,282 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fbecee8ce18&gt;
2024-10-13 17:06:38,283 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fbecee8cd90&gt;
2024-10-13 17:06:38,283 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fbeccc35a20&gt;&gt;
2024-10-13 17:06:38,283 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fbeccc35dd8&gt;&gt;
2024-10-13 17:06:38,283 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fbecee8cbf8&gt;
2024-10-13 17:06:38,283 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fbecee13158&gt;
2024-10-13 17:06:38,283 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fbeccc35a20&gt;&gt;
2024-10-13 17:06:38,283 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fbecee8c8c8&gt;
2024-10-13 17:06:38,283 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fbecee16400&gt;
2024-10-13 17:06:38,283 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/link/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fbeccc356d8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:38,284 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fbeccc356a0&gt;&gt;
2024-10-13 17:06:38,284 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fbeccc35e48&gt;&gt;
2024-10-13 17:06:38,284 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fbecee8cae8&gt;
2024-10-13 17:06:38,284 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fbeccc35e48&gt;&gt;
2024-10-13 17:06:38,284 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:38,284 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:38,284 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/link/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170638Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:06:38,285 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170638Z
20241013/us-west-1/s3/aws4_request
26fef6f39e02f575405323a02503d0ca43dd16c207695f67971deffc1910d8d2
2024-10-13 17:06:38,285 - MainThread - botocore.auth - DEBUG - Signature:
32b2cf5904788f282de3a8733a8dd7cde97d80bea438942f0b928d3e53d70e40
2024-10-13 17:06:38,285 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fbecee16a60&gt;
2024-10-13 17:06:38,285 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/link/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170638Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=32b2cf5904788f282de3a8733a8dd7cde97d80bea438942f0b928d3e53d70e40', 'amz-sdk-invocation-id': b'2c019030-589a-460c-90f1-0ee351c761e7', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:06:38,286 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:38,291 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /link/small_file HTTP/1.1" 200 0
2024-10-13 17:06:38,291 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:38 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:38 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"3440af315c2b5f981af33be3bec5f28e"', 'Last-Modified': 'Sun, 13 Oct 2024 17:06:37 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'rKYph7yftUSxTn8', 'x-amz-request-id': '245aff83-c0bf-4bb1-98c3-fc8bb5f3b89f', 'Content-Length': '1000000'}
2024-10-13 17:06:38,292 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:06:38,292 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fbeccc35a58&gt;
2024-10-13 17:06:38,292 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:38,292 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fbeccc35a20&gt;&gt;
2024-10-13 17:06:38,292 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fbecd3528c8&gt;
2024-10-13 17:06:38,293 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:38,294 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fbecba9b208&gt;}) about to wait for the following futures []
2024-10-13 17:06:38,294 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fbecba9b208&gt;}) done waiting for dependent futures
2024-10-13 17:06:38,294 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fbecba9b208&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fbecccc4f28&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fbeccc060b8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fbeccc06128&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fbeccc062b0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fbecba9b208&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fbeccc06668&gt;}
2024-10-13 17:06:38,295 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fbeccc062b0&gt; for transfer request: 0.
2024-10-13 17:06:38,295 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:38,295 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:06:38,295 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:38,295 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:06:38,296 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fbecccc4f28&gt;, 'bucket': 'link', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbeccc15be0&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fbeccc15f98&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbecba9b208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fbeccc15f28&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbecba9b208&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fbeccc15160&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbecba9b208&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fbeccc15940&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fbecba9b208&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fbeccc06c88&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-10-13 17:06:38,296 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fbecee8ce18&gt;
2024-10-13 17:06:38,296 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fbecee8cd90&gt;
2024-10-13 17:06:38,296 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fbeccccf4a8&gt;&gt;
2024-10-13 17:06:38,296 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fbeccccf860&gt;&gt;
2024-10-13 17:06:38,296 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fbecee8cbf8&gt;
2024-10-13 17:06:38,297 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fbecee13158&gt;
2024-10-13 17:06:38,297 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fbeccccf4a8&gt;&gt;
2024-10-13 17:06:38,297 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fbecee8c8c8&gt;
2024-10-13 17:06:38,297 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fbecee16400&gt;
2024-10-13 17:06:38,297 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/link/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fbeccccf160&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:38,298 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fbed13b6488&gt;
2024-10-13 17:06:38,298 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fbeccccf128&gt;&gt;
2024-10-13 17:06:38,298 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fbeccccf8d0&gt;&gt;
2024-10-13 17:06:38,299 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fbecee8cae8&gt;
2024-10-13 17:06:38,299 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fbeccccf8d0&gt;&gt;
2024-10-13 17:06:38,299 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:38,299 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:38,299 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/link/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170638Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:06:38,299 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170638Z
20241013/us-west-1/s3/aws4_request
638b4aec68e4ed370c674845c743c2f53740a1c5899e677739bf608c5a9bbaf6
2024-10-13 17:06:38,300 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
c786189b5b16d6a9abf7ff3f71c6de3fa35a73cbd96791f6d7ae57e8133e0894
2024-10-13 17:06:38,300 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fbed13b6510&gt;
2024-10-13 17:06:38,300 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fbecee16a60&gt;
2024-10-13 17:06:38,300 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/link/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170638Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=c786189b5b16d6a9abf7ff3f71c6de3fa35a73cbd96791f6d7ae57e8133e0894', 'amz-sdk-invocation-id': b'd64813b9-d265-49a4-a072-d31e5247f236', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:06:38,301 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:38,322 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /link/small_file HTTP/1.1" 200 1000000
2024-10-13 17:06:38,323 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:38 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:38 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"3440af315c2b5f981af33be3bec5f28e"', 'Last-Modified': 'Sun, 13 Oct 2024 17:06:37 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'tuhyZnl9k4lM', 'x-amz-request-id': 'f19e98a5-5a69-4a29-8ceb-3a0f2ec188b6', 'Content-Length': '1000000'}
2024-10-13 17:06:38,323 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fbec984b5f8&gt;
2024-10-13 17:06:38,323 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fbeccccf4e0&gt;
2024-10-13 17:06:38,323 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:38,323 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fbeccccf4a8&gt;&gt;
2024-10-13 17:06:38,324 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fbecd3528c8&gt;
Completed 256.0 KiB/976.6 KiB (6.1 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:38,336 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2024-10-13 17:06:38,336 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2024-10-13 17:06:38,337 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbeccc15be0&gt;, 'offset': 0}
2024-10-13 17:06:38,349 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2024-10-13 17:06:38,349 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2024-10-13 17:06:38,349 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbeccc15be0&gt;, 'offset': 262144}
Completed 512.0 KiB/976.6 KiB (9.3 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:38,367 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
Completed 768.0 KiB/976.6 KiB (10.4 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:38,368 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2024-10-13 17:06:38,369 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbeccc15be0&gt;, 'offset': 524288}
2024-10-13 17:06:38,393 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2024-10-13 17:06:38,393 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2024-10-13 17:06:38,393 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbeccc15be0&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (9.7 MiB/s) with 1 file(s) remaining 
2024-10-13 17:06:38,394 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2024-10-13 17:06:38,394 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2024-10-13 17:06:38,394 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fbeccc15be0&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fbeccc06128&gt;}
download: s3://link/small_file to ../../tmp/small_file_downloaded  
2024-10-13 17:06:38,395 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:38,396 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:06:38.440" endtime="20241013 17:06:38.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:38.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:38.441" endtime="20241013 17:06:38.442"/>
</kw>
<status status="PASS" starttime="20241013 17:06:37.876" endtime="20241013 17:06:38.442"/>
</kw>
<msg timestamp="20241013 17:06:38.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:37.876" endtime="20241013 17:06:38.442"/>
</kw>
<msg timestamp="20241013 17:06:38.443" level="INFO">${output} = 2024-10-13 17:06:38,230 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:38,231 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:37.875" endtime="20241013 17:06:38.443"/>
</kw>
<msg timestamp="20241013 17:06:38.443" level="INFO">${result} = 2024-10-13 17:06:38,230 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:38,231 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:37.875" endtime="20241013 17:06:38.443"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 17:06:38.443" endtime="20241013 17:06:38.444"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20241013 17:06:38.444" endtime="20241013 17:06:38.445"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:38.449" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:38.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:38.899" level="INFO">${output} = delete: s3://link/small_file</msg>
<status status="PASS" starttime="20241013 17:06:38.447" endtime="20241013 17:06:38.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:38.900" level="INFO">delete: s3://link/small_file</msg>
<status status="PASS" starttime="20241013 17:06:38.900" endtime="20241013 17:06:38.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:38.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:38.900" endtime="20241013 17:06:38.901"/>
</kw>
<status status="PASS" starttime="20241013 17:06:38.447" endtime="20241013 17:06:38.901"/>
</kw>
<msg timestamp="20241013 17:06:38.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:38.446" endtime="20241013 17:06:38.901"/>
</kw>
<msg timestamp="20241013 17:06:38.901" level="INFO">${output} = delete: s3://link/small_file</msg>
<status status="PASS" starttime="20241013 17:06:38.446" endtime="20241013 17:06:38.901"/>
</kw>
<status status="PASS" starttime="20241013 17:06:38.445" endtime="20241013 17:06:38.902"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:38.906" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:38.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:38.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:38.903" endtime="20241013 17:06:38.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:38.911" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:38.910" endtime="20241013 17:06:38.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:38.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:38.911" endtime="20241013 17:06:38.911"/>
</kw>
<status status="PASS" starttime="20241013 17:06:38.902" endtime="20241013 17:06:38.911"/>
</kw>
<msg timestamp="20241013 17:06:38.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:38.902" endtime="20241013 17:06:38.912"/>
</kw>
<status status="PASS" starttime="20241013 17:06:38.902" endtime="20241013 17:06:38.912"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:37.862" endtime="20241013 17:06:38.912"/>
</test>
<test id="s1-s6-s12-t19" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="236">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:38.916" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:38.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:38.922" level="INFO">${output} = 3440af315c2b5f981af33be3bec5f28e</msg>
<status status="PASS" starttime="20241013 17:06:38.914" endtime="20241013 17:06:38.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:38.923" level="INFO">3440af315c2b5f981af33be3bec5f28e</msg>
<status status="PASS" starttime="20241013 17:06:38.922" endtime="20241013 17:06:38.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:38.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:38.923" endtime="20241013 17:06:38.924"/>
</kw>
<status status="PASS" starttime="20241013 17:06:38.914" endtime="20241013 17:06:38.924"/>
</kw>
<msg timestamp="20241013 17:06:38.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:38.914" endtime="20241013 17:06:38.924"/>
</kw>
<msg timestamp="20241013 17:06:38.924" level="INFO">${file_md5_checksum} = 3440af315c2b5f981af33be3bec5f28e</msg>
<status status="PASS" starttime="20241013 17:06:38.913" endtime="20241013 17:06:38.924"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:38.928" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://link/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:39.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:39.457" level="INFO">${output} = 2024-10-13 17:06:39,283 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:39,284 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:38.926" endtime="20241013 17:06:39.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:39.458" level="INFO">2024-10-13 17:06:39,283 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:39,284 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://link/test_file']
2024-10-13 17:06:39,284 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f86c0c30d08&gt;
2024-10-13 17:06:39,284 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f86c1a7ba60&gt;
2024-10-13 17:06:39,284 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f86c1a5ae18&gt;
2024-10-13 17:06:39,285 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:06:39,289 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f86c0d62730&gt;
2024-10-13 17:06:39,289 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f86c0c3b378&gt;
2024-10-13 17:06:39,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,290 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f86c0c3b378&gt;
2024-10-13 17:06:39,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,292 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f86c1a299b0&gt;
2024-10-13 17:06:39,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,292 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f86c1a299b0&gt;
2024-10-13 17:06:39,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,292 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f86c1a299b0&gt;
2024-10-13 17:06:39,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,295 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f86c1a299b0&gt;
2024-10-13 17:06:39,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,295 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f86c1a299b0&gt;
2024-10-13 17:06:39,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,295 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f86c1a299b0&gt;
2024-10-13 17:06:39,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,296 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f86c1a299b0&gt;
2024-10-13 17:06:39,296 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2024-10-13 17:06:39,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f86c0b12f98&gt;
2024-10-13 17:06:39,296 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:06:39,296 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2024-10-13 17:06:39,296 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2024-10-13 17:06:39,297 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2024-10-13 17:06:39,297 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2024-10-13 17:06:39,297 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2024-10-13 17:06:39,298 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:06:39,309 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:06:39,309 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f86c275a6a8&gt;
2024-10-13 17:06:39,310 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:06:39,321 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f86c2c35620&gt;
2024-10-13 17:06:39,321 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f86c2c35400&gt;
2024-10-13 17:06:39,321 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,323 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:39,324 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:06:39,324 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:39,325 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,325 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f86c275a6a8&gt;
2024-10-13 17:06:39,326 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f86c2c35620&gt;
2024-10-13 17:06:39,326 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f86c2c35400&gt;
2024-10-13 17:06:39,326 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,328 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:39,329 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:39,330 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,330 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f86c275a6a8&gt;
2024-10-13 17:06:39,331 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f86c2c35620&gt;
2024-10-13 17:06:39,331 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f86c2c35400&gt;
2024-10-13 17:06:39,331 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,333 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:39,334 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:39,335 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,335 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:06:39,336 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:39,336 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f86c04f5128&gt;}) about to wait for the following futures []
2024-10-13 17:06:39,337 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f86c04f5128&gt;}) done waiting for dependent futures
2024-10-13 17:06:39,337 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f86c04f5128&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f86c05a4f98&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f86c04e5128&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f86c04e5198&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f86c04e5320&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f86c04f5128&gt;}
2024-10-13 17:06:39,337 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f86c04e5320&gt; for transfer request: 0.
2024-10-13 17:06:39,338 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:39,338 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2024-10-13 17:06:39,338 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2024-10-13 17:06:39,338 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f86c05a4f98&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f86c04f55c0&gt;, 'bucket': 'link', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2024-10-13 17:06:39,339 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f86c26f19d8&gt;
2024-10-13 17:06:39,339 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f86c276ae18&gt;
2024-10-13 17:06:39,339 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f86c26f42f0&gt;
2024-10-13 17:06:39,339 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f86c276ad90&gt;
2024-10-13 17:06:39,339 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f86c05af518&gt;&gt;
2024-10-13 17:06:39,339 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:39,339 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f86c05af8d0&gt;&gt;
2024-10-13 17:06:39,339 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f86c276abf8&gt;
2024-10-13 17:06:39,340 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f86c3112400&gt;
2024-10-13 17:06:39,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f86c26f1158&gt;
2024-10-13 17:06:39,342 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:06:39,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f86c05af518&gt;&gt;
2024-10-13 17:06:39,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f86c276a8c8&gt;
2024-10-13 17:06:39,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f86c26f4400&gt;
2024-10-13 17:06:39,342 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/link/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'NECvMVwrX5ga8zvjvsXyjg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f86c04f55c0&gt;, 'url': 'http://s3g:9878/link/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f86c05af1d0&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:39,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f86c4c94488&gt;
2024-10-13 17:06:39,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f86c05af198&gt;&gt;
2024-10-13 17:06:39,343 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f86c05af940&gt;&gt;
2024-10-13 17:06:39,343 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f86c276aae8&gt;
2024-10-13 17:06:39,343 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f86c05af940&gt;&gt;
2024-10-13 17:06:39,343 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:39,344 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:39,344 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/test_file

content-md5:NECvMVwrX5ga8zvjvsXyjg==
host:s3g:9878
x-amz-content-sha256:60e31c6d4d89ca2c5bcebd9097dd2f85296d6698f39080cc71d73470218cfa57
x-amz-date:20241013T170639Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
60e31c6d4d89ca2c5bcebd9097dd2f85296d6698f39080cc71d73470218cfa57
2024-10-13 17:06:39,344 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170639Z
20241013/us-west-1/s3/aws4_request
1f6cf64046137130c5e7ae8825161eed15874a1b60dc2fc5981a3a71fc228ac6
2024-10-13 17:06:39,344 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
f8d640b62989824db9340eb8a2e003fac0b25bb8390e92113805184267f3f46f
2024-10-13 17:06:39,345 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f86c4c94510&gt;
2024-10-13 17:06:39,345 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f86c26f4a60&gt;
2024-10-13 17:06:39,345 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'NECvMVwrX5ga8zvjvsXyjg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170639Z', 'X-Amz-Content-SHA256': b'60e31c6d4d89ca2c5bcebd9097dd2f85296d6698f39080cc71d73470218cfa57', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=f8d640b62989824db9340eb8a2e003fac0b25bb8390e92113805184267f3f46f', 'amz-sdk-invocation-id': b'209287de-3cae-404b-9cc4-1db7d72b79a7', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2024-10-13 17:06:39,346 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:39,346 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:06:39,358 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (11.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (22.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (32.3 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:39,389 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/test_file HTTP/1.1" 200 0
2024-10-13 17:06:39,390 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:39 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:39 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"3440af315c2b5f981af33be3bec5f28e"', 'Server': 'Ozone', 'x-amz-id-2': 'qUtxmqi7AXHu', 'x-amz-request-id': 'f27635a0-b776-4c08-bcb2-25b57cbeb8b6', 'Content-Length': '0'}
2024-10-13 17:06:39,390 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:06:39,391 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f86c05af550&gt;
2024-10-13 17:06:39,391 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:39,391 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f86c05af518&gt;&gt;
2024-10-13 17:06:39,391 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f86c0c308c8&gt;
Completed 976.6 KiB/976.6 KiB (17.8 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:39,392 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://link/test_file                
2024-10-13 17:06:39,392 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:06:39.457" endtime="20241013 17:06:39.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:39.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:39.459" endtime="20241013 17:06:39.460"/>
</kw>
<status status="PASS" starttime="20241013 17:06:38.926" endtime="20241013 17:06:39.460"/>
</kw>
<msg timestamp="20241013 17:06:39.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:38.925" endtime="20241013 17:06:39.460"/>
</kw>
<msg timestamp="20241013 17:06:39.461" level="INFO">${output} = 2024-10-13 17:06:39,283 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:39,284 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:38.925" endtime="20241013 17:06:39.461"/>
</kw>
<status status="PASS" starttime="20241013 17:06:38.924" endtime="20241013 17:06:39.461"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:39.468" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://link/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:40.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:40.023" level="INFO">${output} = 2024-10-13 17:06:39,854 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:39,854 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:39.463" endtime="20241013 17:06:40.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:40.025" level="INFO">2024-10-13 17:06:39,854 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:39,854 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://link/test_file', '/tmp/test_file_downloaded']
2024-10-13 17:06:39,854 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fb50c8c5d08&gt;
2024-10-13 17:06:39,854 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fb50d710a60&gt;
2024-10-13 17:06:39,855 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fb50d6efe18&gt;
2024-10-13 17:06:39,856 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:06:39,859 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fb50c9f7730&gt;
2024-10-13 17:06:39,860 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fb50c8cf378&gt;
2024-10-13 17:06:39,860 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,860 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fb50c8cf378&gt;
2024-10-13 17:06:39,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,862 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb50d6be9b0&gt;
2024-10-13 17:06:39,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,862 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb50d6be9b0&gt;
2024-10-13 17:06:39,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb50d6be9b0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb50d6be9b0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb50d6be9b0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb50d6be9b0&gt;
2024-10-13 17:06:39,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,866 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,866 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,866 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,866 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb50c7a7fd0&gt;
2024-10-13 17:06:39,866 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:06:39,866 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2024-10-13 17:06:39,866 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2024-10-13 17:06:39,866 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2024-10-13 17:06:39,866 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2024-10-13 17:06:39,867 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2024-10-13 17:06:39,867 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:06:39,879 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:06:39,879 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb50e3ef6a8&gt;
2024-10-13 17:06:39,881 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:06:39,891 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb50e8ca620&gt;
2024-10-13 17:06:39,891 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb50e8ca400&gt;
2024-10-13 17:06:39,891 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,893 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:39,894 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:06:39,895 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:39,895 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,896 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb50e3ef6a8&gt;
2024-10-13 17:06:39,896 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb50e8ca620&gt;
2024-10-13 17:06:39,896 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb50e8ca400&gt;
2024-10-13 17:06:39,897 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,899 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:39,899 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:39,900 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,900 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb50e3ef6a8&gt;
2024-10-13 17:06:39,901 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb50e8ca620&gt;
2024-10-13 17:06:39,901 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb50e8ca400&gt;
2024-10-13 17:06:39,902 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,904 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:39,904 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:39,905 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:39,905 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:06:39,906 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fb50e3ffe18&gt;
2024-10-13 17:06:39,906 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fb50e3ffd90&gt;
2024-10-13 17:06:39,906 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fb50c1a7a20&gt;&gt;
2024-10-13 17:06:39,906 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fb50c1a7dd8&gt;&gt;
2024-10-13 17:06:39,906 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fb50e3ffbf8&gt;
2024-10-13 17:06:39,907 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fb50e386158&gt;
2024-10-13 17:06:39,907 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fb50c1a7a20&gt;&gt;
2024-10-13 17:06:39,907 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fb50e3ff8c8&gt;
2024-10-13 17:06:39,907 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb50e389400&gt;
2024-10-13 17:06:39,907 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/link/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb50c1a76d8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:39,907 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb50c1a76a0&gt;&gt;
2024-10-13 17:06:39,907 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fb50c1a7e48&gt;&gt;
2024-10-13 17:06:39,907 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fb50e3ffae8&gt;
2024-10-13 17:06:39,907 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fb50c1a7e48&gt;&gt;
2024-10-13 17:06:39,908 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:39,908 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:39,908 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/link/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170639Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:06:39,908 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170639Z
20241013/us-west-1/s3/aws4_request
6978a40163d328b1c81315fbe343fce95d3e4be31e133426ecf81cc39775e6b8
2024-10-13 17:06:39,908 - MainThread - botocore.auth - DEBUG - Signature:
df83eeaacbdb225385392456df5298bef99232099ac05d9d5cd60045dbcabae0
2024-10-13 17:06:39,908 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fb50e389a60&gt;
2024-10-13 17:06:39,908 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/link/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170639Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=df83eeaacbdb225385392456df5298bef99232099ac05d9d5cd60045dbcabae0', 'amz-sdk-invocation-id': b'2c8cb5c9-4f35-4ea2-a154-10d98bd04a1c', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:06:39,909 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:39,914 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /link/test_file HTTP/1.1" 200 0
2024-10-13 17:06:39,914 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:39 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:39 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"3440af315c2b5f981af33be3bec5f28e"', 'Last-Modified': 'Sun, 13 Oct 2024 17:06:39 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': 'hP1DFw0A7Ikmb', 'x-amz-request-id': '94147781-e78f-44d9-b534-c18197ba2c22', 'Content-Length': '1000000'}
2024-10-13 17:06:39,914 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:06:39,915 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb50c1a7a58&gt;
2024-10-13 17:06:39,915 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:39,915 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fb50c1a7a20&gt;&gt;
2024-10-13 17:06:39,915 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fb50c8c58c8&gt;
2024-10-13 17:06:39,916 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:39,916 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb50c187b38&gt;}) about to wait for the following futures []
2024-10-13 17:06:39,917 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb50c187b38&gt;}) done waiting for dependent futures
2024-10-13 17:06:39,917 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb50c187b38&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb50c237f28&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fb50c1780b8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fb50c178128&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fb50c1782b0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb50c187b38&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fb50c1786a0&gt;}
2024-10-13 17:06:39,917 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fb50c1782b0&gt; for transfer request: 0.
2024-10-13 17:06:39,917 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:39,918 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:06:39,918 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:06:39,918 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb50c237f28&gt;, 'bucket': 'link', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb50c178cc0&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fb50c1879b0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fb50c187b38&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fb50c187fd0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fb50c187b38&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fb50c187f60&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fb50c187b38&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fb50c187b00&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fb50c187b38&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fb50c187978&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-10-13 17:06:39,918 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fb50e3ffe18&gt;
2024-10-13 17:06:39,918 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fb50e3ffd90&gt;
2024-10-13 17:06:39,918 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fb50c2424a8&gt;&gt;
2024-10-13 17:06:39,918 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fb50c242860&gt;&gt;
2024-10-13 17:06:39,918 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fb50e3ffbf8&gt;
2024-10-13 17:06:39,919 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:39,919 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fb50e386158&gt;
2024-10-13 17:06:39,919 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fb50c2424a8&gt;&gt;
2024-10-13 17:06:39,919 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fb50e3ff8c8&gt;
2024-10-13 17:06:39,919 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb50e389400&gt;
2024-10-13 17:06:39,919 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/link/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb50c242160&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:39,920 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fb510929488&gt;
2024-10-13 17:06:39,920 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb50c242128&gt;&gt;
2024-10-13 17:06:39,920 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fb50c2428d0&gt;&gt;
2024-10-13 17:06:39,920 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fb50e3ffae8&gt;
2024-10-13 17:06:39,920 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fb50c2428d0&gt;&gt;
2024-10-13 17:06:39,920 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:39,920 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:39,920 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/link/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170639Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:06:39,921 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170639Z
20241013/us-west-1/s3/aws4_request
f6ad240bd4cadf19474dd0f98110317ef1b222624b8e59d3e577c01fa80cd481
2024-10-13 17:06:39,921 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
224b2fdbcf7103a3c10791a16cc20ffe4c32f8531a945a1544c72de07d80797b
2024-10-13 17:06:39,921 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fb510929510&gt;
2024-10-13 17:06:39,921 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fb50e389a60&gt;
2024-10-13 17:06:39,921 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/link/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170639Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=224b2fdbcf7103a3c10791a16cc20ffe4c32f8531a945a1544c72de07d80797b', 'amz-sdk-invocation-id': b'd0e6fbaa-6754-4041-8697-47833fca84b0', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:06:39,921 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:39,928 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /link/test_file HTTP/1.1" 200 1000000
2024-10-13 17:06:39,929 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:39 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:39 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Accept-Ranges': 'bytes', 'ETag': '"3440af315c2b5f981af33be3bec5f28e"', 'Last-Modified': 'Sun, 13 Oct 2024 17:06:39 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'Xs9BMAhaA2gvOLb', 'x-amz-request-id': 'aee7a8d3-2b3e-4a82-bfb9-07f665595088', 'Content-Length': '1000000'}
2024-10-13 17:06:39,929 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fb508dbf588&gt;
2024-10-13 17:06:39,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb50c2424e0&gt;
2024-10-13 17:06:39,930 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:39,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fb50c2424a8&gt;&gt;
2024-10-13 17:06:39,930 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fb50c8c58c8&gt;
2024-10-13 17:06:39,936 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (14.4 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:39,936 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2024-10-13 17:06:39,937 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb50c178cc0&gt;, 'offset': 0}
2024-10-13 17:06:39,944 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2024-10-13 17:06:39,945 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
Completed 512.0 KiB/976.6 KiB (19.5 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:39,945 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb50c178cc0&gt;, 'offset': 262144}
2024-10-13 17:06:39,957 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2024-10-13 17:06:39,957 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2024-10-13 17:06:39,957 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb50c178cc0&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (19.8 MiB/s) with 1 file(s) remaining
Completed 976.6 KiB/976.6 KiB (20.3 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:39,966 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2024-10-13 17:06:39,966 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2024-10-13 17:06:39,966 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb50c178cc0&gt;, 'offset': 786432}
2024-10-13 17:06:39,966 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2024-10-13 17:06:39,966 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2024-10-13 17:06:39,967 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb50c178cc0&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fb50c178128&gt;}
download: s3://link/test_file to ../../tmp/test_file_downloaded    
2024-10-13 17:06:39,967 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:39,968 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:06:40.023" endtime="20241013 17:06:40.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:40.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:40.026" endtime="20241013 17:06:40.027"/>
</kw>
<status status="PASS" starttime="20241013 17:06:39.462" endtime="20241013 17:06:40.027"/>
</kw>
<msg timestamp="20241013 17:06:40.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:39.462" endtime="20241013 17:06:40.027"/>
</kw>
<msg timestamp="20241013 17:06:40.029" level="INFO">${output} = 2024-10-13 17:06:39,854 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:39,854 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:39.462" endtime="20241013 17:06:40.029"/>
</kw>
<msg timestamp="20241013 17:06:40.029" level="INFO">${result} = 2024-10-13 17:06:39,854 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:39,854 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:39.461" endtime="20241013 17:06:40.029"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:06:40.031" level="INFO">${match} = HEAD /link/test_file HTTP/1.1" 200 0
2024-10-13 17:06:39,914 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:39 GMT', 'Cache-Control': 'no-cache', 'Expires...</msg>
<msg timestamp="20241013 17:06:40.031" level="INFO">${ETag} = 3440af315c2b5f981af33be3bec5f28e</msg>
<msg timestamp="20241013 17:06:40.031" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20241013 17:06:40.030" endtime="20241013 17:06:40.031"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:06:40.031" endtime="20241013 17:06:40.032"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:06:40.032" endtime="20241013 17:06:40.032"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:06:40.032" endtime="20241013 17:06:40.033"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:40.038" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:40.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:40.486" level="INFO">${output} = delete: s3://link/test_file</msg>
<status status="PASS" starttime="20241013 17:06:40.035" endtime="20241013 17:06:40.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:40.487" level="INFO">delete: s3://link/test_file</msg>
<status status="PASS" starttime="20241013 17:06:40.486" endtime="20241013 17:06:40.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:40.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:40.487" endtime="20241013 17:06:40.487"/>
</kw>
<status status="PASS" starttime="20241013 17:06:40.034" endtime="20241013 17:06:40.488"/>
</kw>
<msg timestamp="20241013 17:06:40.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:40.034" endtime="20241013 17:06:40.488"/>
</kw>
<msg timestamp="20241013 17:06:40.488" level="INFO">${output} = delete: s3://link/test_file</msg>
<status status="PASS" starttime="20241013 17:06:40.034" endtime="20241013 17:06:40.488"/>
</kw>
<status status="PASS" starttime="20241013 17:06:40.033" endtime="20241013 17:06:40.488"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:40.492" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:40.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:40.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:40.489" endtime="20241013 17:06:40.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:40.497" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:40.496" endtime="20241013 17:06:40.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:40.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:40.497" endtime="20241013 17:06:40.497"/>
</kw>
<status status="PASS" starttime="20241013 17:06:40.489" endtime="20241013 17:06:40.497"/>
</kw>
<msg timestamp="20241013 17:06:40.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:40.489" endtime="20241013 17:06:40.497"/>
</kw>
<status status="PASS" starttime="20241013 17:06:40.488" endtime="20241013 17:06:40.498"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:40.501" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:40.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:40.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:40.499" endtime="20241013 17:06:40.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:40.506" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:40.505" endtime="20241013 17:06:40.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:40.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:40.506" endtime="20241013 17:06:40.506"/>
</kw>
<status status="PASS" starttime="20241013 17:06:40.498" endtime="20241013 17:06:40.506"/>
</kw>
<msg timestamp="20241013 17:06:40.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:40.498" endtime="20241013 17:06:40.507"/>
</kw>
<status status="PASS" starttime="20241013 17:06:40.498" endtime="20241013 17:06:40.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:38.912" endtime="20241013 17:06:40.507"/>
</test>
<test id="s1-s6-s12-t20" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="249">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:40.511" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20241013 17:06:40.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:40.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:40.509" endtime="20241013 17:06:40.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:40.562" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:40.562" endtime="20241013 17:06:40.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:40.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:40.562" endtime="20241013 17:06:40.563"/>
</kw>
<status status="PASS" starttime="20241013 17:06:40.509" endtime="20241013 17:06:40.563"/>
</kw>
<msg timestamp="20241013 17:06:40.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:40.508" endtime="20241013 17:06:40.563"/>
</kw>
<status status="PASS" starttime="20241013 17:06:40.508" endtime="20241013 17:06:40.563"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:40.567" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:41.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:41.324" level="INFO">${output} = 2024-10-13 17:06:40,915 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:40,916 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:40.565" endtime="20241013 17:06:41.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:41.325" level="INFO">2024-10-13 17:06:40,915 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:40,916 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://link/']
2024-10-13 17:06:40,916 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f0ad37f8d08&gt;
2024-10-13 17:06:40,916 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f0ad4643a60&gt;
2024-10-13 17:06:40,916 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f0ad4622e18&gt;
2024-10-13 17:06:40,917 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:06:40,921 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f0ad392a730&gt;
2024-10-13 17:06:40,921 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f0ad3803378&gt;
2024-10-13 17:06:40,921 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,922 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f0ad3803378&gt;
2024-10-13 17:06:40,923 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,923 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,923 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ad45f19b0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ad45f19b0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ad45f19b0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,924 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,925 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,925 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,925 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,925 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,925 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,925 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,925 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,925 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,925 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ad45f19b0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,926 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ad45f19b0&gt;
2024-10-13 17:06:40,927 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,927 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ad45f19b0&gt;
2024-10-13 17:06:40,927 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,927 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,927 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,927 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,927 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0ad36d9fd0&gt;
2024-10-13 17:06:40,928 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:06:40,928 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2024-10-13 17:06:40,928 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2024-10-13 17:06:40,928 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2024-10-13 17:06:40,928 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2024-10-13 17:06:40,928 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2024-10-13 17:06:40,929 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:06:40,941 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:06:40,941 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0ad53226a8&gt;
2024-10-13 17:06:40,942 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:06:40,953 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0ad57fd620&gt;
2024-10-13 17:06:40,953 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0ad57fd400&gt;
2024-10-13 17:06:40,953 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:40,955 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:40,956 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:06:40,957 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:40,957 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:40,958 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0ad53226a8&gt;
2024-10-13 17:06:40,958 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0ad57fd620&gt;
2024-10-13 17:06:40,958 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0ad57fd400&gt;
2024-10-13 17:06:40,959 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:40,961 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:40,961 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:40,962 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:40,962 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0ad53226a8&gt;
2024-10-13 17:06:40,963 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0ad57fd620&gt;
2024-10-13 17:06:40,963 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0ad57fd400&gt;
2024-10-13 17:06:40,964 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:40,966 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:40,966 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:40,967 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:40,967 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:06:40,968 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:40,969 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0ad30bb128&gt;}) about to wait for the following futures []
2024-10-13 17:06:40,969 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0ad30bb128&gt;}) done waiting for dependent futures
2024-10-13 17:06:40,969 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0ad30bb128&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0ad316af28&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f0ad30ab128&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f0ad30ab198&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f0ad30ab320&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0ad30bb128&gt;}
2024-10-13 17:06:40,970 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f0ad30ab320&gt; for transfer request: 0.
2024-10-13 17:06:40,970 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:40,970 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:06:40,971 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f0ad30ab320&gt; for transfer request: 0.
2024-10-13 17:06:40,971 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:06:40,971 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:40,971 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0ad316af28&gt;, 'bucket': 'link', 'key': 'big_file', 'extra_args': {}}
2024-10-13 17:06:40,971 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f0ad52b99d8&gt;
2024-10-13 17:06:40,971 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f0ad5333e18&gt;
2024-10-13 17:06:40,972 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f0ad5333d90&gt;
2024-10-13 17:06:40,972 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:40,972 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f0ad3175860&gt;&gt;
2024-10-13 17:06:40,972 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f0ad5333bf8&gt;
2024-10-13 17:06:40,972 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f0ad52b9158&gt;
2024-10-13 17:06:40,972 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:40,972 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f0ad53338c8&gt;
2024-10-13 17:06:40,973 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f0ad52bc400&gt;
2024-10-13 17:06:40,973 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/link/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f0ad3175160&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:40,973 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad30bb7b8&gt;]
2024-10-13 17:06:40,973 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f0ad785c488&gt;
2024-10-13 17:06:40,973 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad30bb7b8&gt;
2024-10-13 17:06:40,973 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f0ad3175128&gt;&gt;
2024-10-13 17:06:40,974 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ad31758d0&gt;&gt;
2024-10-13 17:06:40,974 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f0ad5333ae8&gt;
2024-10-13 17:06:40,974 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ad31758d0&gt;&gt;
2024-10-13 17:06:40,974 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:40,974 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:40,974 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/link/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170640Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:06:40,974 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170640Z
20241013/us-west-1/s3/aws4_request
40397b2857a2f397336469724e9ed83e0211bcfce44be1311c5626e0680c2e74
2024-10-13 17:06:40,974 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
b0cac380ee5c73e70b3b7d1b7b6f1ed7dc7728127a2d6437c889c346ec98a18c
2024-10-13 17:06:40,975 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f0ad785c510&gt;
2024-10-13 17:06:40,975 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f0ad52bca60&gt;
2024-10-13 17:06:40,975 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/link/big_file?uploads, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170640Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=b0cac380ee5c73e70b3b7d1b7b6f1ed7dc7728127a2d6437c889c346ec98a18c', 'amz-sdk-invocation-id': b'5d6694a6-0b04-4e46-bc31-4ea20ab329e6', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2024-10-13 17:06:40,976 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:40,973 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f0ad30ab320&gt; for transfer request: 0.
2024-10-13 17:06:40,976 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:40,976 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad30bb7b8&gt;]
2024-10-13 17:06:40,976 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad30bb7b8&gt;
2024-10-13 17:06:40,977 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f0ad30ab320&gt; for transfer request: 0.
2024-10-13 17:06:40,977 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:40,977 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad30bb7b8&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad0f407f0&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad0f61588&gt;]
2024-10-13 17:06:40,980 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:40,980 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad30bb7b8&gt;
2024-10-13 17:06:40,987 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /link/big_file?uploads HTTP/1.1" 200 282
2024-10-13 17:06:40,987 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:40 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:40 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'z4pxLxhoi', 'x-amz-request-id': '3d310628-2e5b-4762-9e48-5774b3065abb', 'Content-Length': '282'}
2024-10-13 17:06:40,987 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;link&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2024-10-13 17:06:40,988 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f0ad31754e0&gt;
2024-10-13 17:06:40,988 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:40,988 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:40,988 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f0ad37f88c8&gt;
2024-10-13 17:06:40,988 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:40,989 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:06:40,989 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:06:40,989 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0ad316af28&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0ad30bb908&gt;, 'bucket': 'link', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857'}
2024-10-13 17:06:40,990 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f0ad5333e18&gt;
2024-10-13 17:06:40,990 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f0ad52bc2f0&gt;
2024-10-13 17:06:40,990 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f0ad5333d90&gt;
2024-10-13 17:06:40,990 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:40,990 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f0ad3175860&gt;&gt;
2024-10-13 17:06:40,990 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f0ad5333bf8&gt;
2024-10-13 17:06:40,990 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f0ad5cda400&gt;
2024-10-13 17:06:40,989 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0ad316af28&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0ad0f40908&gt;, 'bucket': 'link', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857'}
2024-10-13 17:06:40,990 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f0ad5333e18&gt;
2024-10-13 17:06:40,990 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f0ad52bc2f0&gt;
2024-10-13 17:06:40,991 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f0ad5333d90&gt;
2024-10-13 17:06:40,991 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:40,991 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f0ad3175860&gt;&gt;
2024-10-13 17:06:40,991 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f0ad5333bf8&gt;
2024-10-13 17:06:40,991 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f0ad5cda400&gt;
2024-10-13 17:06:40,989 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad0f407f0&gt;
2024-10-13 17:06:40,995 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f0ad52b9158&gt;
2024-10-13 17:06:40,995 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:06:40,995 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:40,995 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f0ad53338c8&gt;
2024-10-13 17:06:40,995 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f0ad52bc400&gt;
2024-10-13 17:06:40,995 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/link/big_file', 'query_string': {'uploadId': '3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'sKT98eBlZwz+oe9Ar8huHQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0ad0f40908&gt;, 'url': 'http://s3g:9878/link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f0ad3175160&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:40,995 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f0ad785c488&gt;
2024-10-13 17:06:40,995 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f0ad3175128&gt;&gt;
2024-10-13 17:06:40,995 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ad31758d0&gt;&gt;
2024-10-13 17:06:40,996 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f0ad5333ae8&gt;
2024-10-13 17:06:40,996 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ad31758d0&gt;&gt;
2024-10-13 17:06:40,997 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:40,998 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/big_file
partNumber=2&amp;uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857
content-md5:sKT98eBlZwz+oe9Ar8huHQ==
host:s3g:9878
x-amz-content-sha256:cc451ef1d0b7f77eb3624923ebcbd60716aac034c2037086b49d32da3fe18275
x-amz-date:20241013T170640Z

content-md5;host;x-amz-content-sha256;x-amz-date
cc451ef1d0b7f77eb3624923ebcbd60716aac034c2037086b49d32da3fe18275
2024-10-13 17:06:40,998 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170640Z
20241013/us-west-1/s3/aws4_request
00d87e1478d3ed1809a299959cc7245ada6cee31e9d8c39b71e27ef3fab56d7c
2024-10-13 17:06:40,998 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
4ae6b703f3de7d699c8e517fd4b8283471f137ee45d5d3f50d282f14f571fbe2
2024-10-13 17:06:40,998 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f0ad785c510&gt;
2024-10-13 17:06:40,998 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f0ad52bca60&gt;
2024-10-13 17:06:40,998 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'sKT98eBlZwz+oe9Ar8huHQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170640Z', 'X-Amz-Content-SHA256': b'cc451ef1d0b7f77eb3624923ebcbd60716aac034c2037086b49d32da3fe18275', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=4ae6b703f3de7d699c8e517fd4b8283471f137ee45d5d3f50d282f14f571fbe2', 'amz-sdk-invocation-id': b'68d1aaba-d08d-4ac0-97f2-e04dc6bf159a', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2024-10-13 17:06:40,999 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:06:41,007 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (6.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (13.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (18.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (25.0 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (30.6 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (36.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,034 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f0ad52b9158&gt;
2024-10-13 17:06:41,034 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:06:41,034 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:41,034 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f0ad53338c8&gt;
2024-10-13 17:06:41,035 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f0ad52bc400&gt;
2024-10-13 17:06:41,035 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/link/big_file', 'query_string': {'uploadId': '3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'rgje9l/TVz4QUhfktF8Lvg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0ad30bb908&gt;, 'url': 'http://s3g:9878/link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f0ad3175160&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:41,035 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f0ad785c488&gt;
2024-10-13 17:06:41,035 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f0ad3175128&gt;&gt;
2024-10-13 17:06:41,035 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ad31758d0&gt;&gt;
2024-10-13 17:06:41,035 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f0ad5333ae8&gt;
2024-10-13 17:06:41,035 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ad31758d0&gt;&gt;
2024-10-13 17:06:41,045 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:41,045 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/big_file
partNumber=1&amp;uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857
content-md5:rgje9l/TVz4QUhfktF8Lvg==
host:s3g:9878
x-amz-content-sha256:5431da6d73012e61c382f685391708ad6696bc5f5bf2e370de2ea7a1adeb5adc
x-amz-date:20241013T170641Z

content-md5;host;x-amz-content-sha256;x-amz-date
5431da6d73012e61c382f685391708ad6696bc5f5bf2e370de2ea7a1adeb5adc
2024-10-13 17:06:41,045 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170641Z
20241013/us-west-1/s3/aws4_request
ed82a8fee365110fb30cd12f6b784db5295f596090f80f249f4998116eb7fed2
2024-10-13 17:06:41,045 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
5fe418ee8cbeaa71f3e2cb102a51b59b414266aa4a257cdef2b901798c1251b1
2024-10-13 17:06:41,045 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f0ad785c510&gt;
2024-10-13 17:06:41,046 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f0ad52bca60&gt;
2024-10-13 17:06:41,046 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'rgje9l/TVz4QUhfktF8Lvg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170641Z', 'X-Amz-Content-SHA256': b'5431da6d73012e61c382f685391708ad6696bc5f5bf2e370de2ea7a1adeb5adc', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=5fe418ee8cbeaa71f3e2cb102a51b59b414266aa4a257cdef2b901798c1251b1', 'amz-sdk-invocation-id': b'ca3bed1a-3e7f-43bb-8256-624ea6543319', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2024-10-13 17:06:41,046 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2024-10-13 17:06:41,047 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:06:41,061 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (18.3 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (20.2 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (22.5 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (23.3 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (25.5 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (27.5 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (28.6 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (30.6 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (32.6 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (34.0 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (35.9 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (37.7 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (39.5 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (41.2 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (43.1 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (45.0 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (46.8 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (48.4 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (50.0 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (51.4 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (52.6 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (54.1 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (55.5 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (57.1 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (58.7 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (60.2 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (61.8 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (63.4 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (64.7 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (66.3 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/9.5 MiB (67.7 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (68.9 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,115 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857&amp;partNumber=2 HTTP/1.1" 200 0
2024-10-13 17:06:41,115 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:40 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:40 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'b0a4fdf1e065670cfea1ef40afc86e1d', 'Server': 'Ozone', 'x-amz-id-2': 's2IPv4zCEv1gM', 'x-amz-request-id': '80696ebe-6eec-4f1f-a5ec-4d4fab1e7fde', 'Content-Length': '0'}
2024-10-13 17:06:41,115 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:06:41,116 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f0ad31754e0&gt;
2024-10-13 17:06:41,116 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:41,116 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:41,116 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f0ad37f88c8&gt;
2024-10-13 17:06:41,116 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.5 MiB/9.5 MiB (65.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,242 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857&amp;partNumber=1 HTTP/1.1" 200 0
2024-10-13 17:06:41,243 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': 'ae08def65fd3573e105217e4b45f0bbe', 'Server': 'Ozone', 'x-amz-id-2': 'RiPK6m9Y8PkOtR', 'x-amz-request-id': 'd53b4a16-69b3-408b-9692-085ce7033a5c', 'Content-Length': '0'}
2024-10-13 17:06:41,243 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:06:41,243 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f0ad31754e0&gt;
2024-10-13 17:06:41,243 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:41,244 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:41,244 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f0ad37f88c8&gt;
2024-10-13 17:06:41,244 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,244 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f0ad0f61588&gt;
2024-10-13 17:06:41,244 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:06:41,245 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0ad316af28&gt;, 'bucket': 'link', 'key': 'big_file', 'extra_args': {}, 'upload_id': '3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857', 'parts': [{'ETag': 'ae08def65fd3573e105217e4b45f0bbe', 'PartNumber': 1}, {'ETag': 'b0a4fdf1e065670cfea1ef40afc86e1d', 'PartNumber': 2}]}
2024-10-13 17:06:41,245 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f0ad5333d90&gt;
2024-10-13 17:06:41,245 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:41,245 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f0ad3175860&gt;&gt;
2024-10-13 17:06:41,246 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f0ad5333bf8&gt;
2024-10-13 17:06:41,246 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f0ad52b9158&gt;
2024-10-13 17:06:41,247 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:41,247 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f0ad53338c8&gt;
2024-10-13 17:06:41,247 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f0ad52bc400&gt;
2024-10-13 17:06:41,247 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/link/big_file', 'query_string': {'uploadId': '3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;ae08def65fd3573e105217e4b45f0bbe&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;b0a4fdf1e065670cfea1ef40afc86e1d&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'url': 'http://s3g:9878/link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f0ad3175160&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:41,247 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f0ad785c488&gt;
2024-10-13 17:06:41,247 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f0ad3175128&gt;&gt;
2024-10-13 17:06:41,248 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ad31758d0&gt;&gt;
2024-10-13 17:06:41,248 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f0ad5333ae8&gt;
2024-10-13 17:06:41,249 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ad31758d0&gt;&gt;
2024-10-13 17:06:41,250 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:41,250 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/link/big_file
uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857
host:s3g:9878
x-amz-content-sha256:aedf97b4bb093117d54a8b05e3444b08b9b37319cba1f202f358f0f94682545b
x-amz-date:20241013T170641Z

host;x-amz-content-sha256;x-amz-date
aedf97b4bb093117d54a8b05e3444b08b9b37319cba1f202f358f0f94682545b
2024-10-13 17:06:41,250 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170641Z
20241013/us-west-1/s3/aws4_request
7a904fe921b37228600824ac2cb2d6fbae9eef4ecdbf5fa2f0cd1f100f540d6a
2024-10-13 17:06:41,250 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
b5789d9c1e455cca730d5fbb8b253e7790c764052280f5d97e87cdf66f654bcf
2024-10-13 17:06:41,250 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f0ad785c510&gt;
2024-10-13 17:06:41,250 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f0ad52bca60&gt;
2024-10-13 17:06:41,250 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170641Z', 'X-Amz-Content-SHA256': b'aedf97b4bb093117d54a8b05e3444b08b9b37319cba1f202f358f0f94682545b', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=b5789d9c1e455cca730d5fbb8b253e7790c764052280f5d97e87cdf66f654bcf', 'amz-sdk-invocation-id': b'afd93d88-7c66-49fb-a054-bb787ca50d10', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2024-10-13 17:06:41,268 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857 HTTP/1.1" 200 280
2024-10-13 17:06:41,269 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'G7wMNTqNd', 'x-amz-request-id': 'a7a11493-9713-4666-a896-96e3c0278cc9', 'Content-Length': '280'}
2024-10-13 17:06:41,269 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;link&lt;/Location&gt;&lt;Bucket&gt;link&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"e7729f72968fa3d9ef53386eb7565255-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2024-10-13 17:06:41,269 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function check_for_200_error at 0x7f0ad53339d8&gt;
2024-10-13 17:06:41,269 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f0ad31754e0&gt;
2024-10-13 17:06:41,270 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:41,270 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ad31754a8&gt;&gt;
2024-10-13 17:06:41,270 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f0ad37f88c8&gt;
2024-10-13 17:06:41,270 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://link/big_file                 
2024-10-13 17:06:41,272 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:06:41.325" endtime="20241013 17:06:41.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:41.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:41.326" endtime="20241013 17:06:41.326"/>
</kw>
<status status="PASS" starttime="20241013 17:06:40.564" endtime="20241013 17:06:41.327"/>
</kw>
<msg timestamp="20241013 17:06:41.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:40.564" endtime="20241013 17:06:41.327"/>
</kw>
<msg timestamp="20241013 17:06:41.328" level="INFO">${output} = 2024-10-13 17:06:40,915 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:40,916 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:40.564" endtime="20241013 17:06:41.328"/>
</kw>
<msg timestamp="20241013 17:06:41.328" level="INFO">${result} = 2024-10-13 17:06:40,915 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:40,916 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:40.563" endtime="20241013 17:06:41.328"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:06:41.330" level="INFO">${match} = POST /link/big_file?uploadId=3f8422d0-3856-47d9-9728-852c7e0b59bc-113301205875560857 HTTP/1.1" 200 280
2024-10-13 17:06:41,269 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {...</msg>
<msg timestamp="20241013 17:06:41.330" level="INFO">${etag1} = e7729f72968fa3d9ef53386eb7565255-2</msg>
<status status="PASS" starttime="20241013 17:06:41.329" endtime="20241013 17:06:41.330"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:41.334" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://link/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:42.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:42.225" level="INFO">${output} = 2024-10-13 17:06:41,685 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:41,686 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:41.332" endtime="20241013 17:06:42.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:42.226" level="INFO">2024-10-13 17:06:41,685 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:41,686 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://link/big_file', '/tmp/big_file_downloaded']
2024-10-13 17:06:41,686 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7ff7e31abd08&gt;
2024-10-13 17:06:41,686 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7ff7e3ff6a60&gt;
2024-10-13 17:06:41,686 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7ff7e3fd5e18&gt;
2024-10-13 17:06:41,687 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:06:41,691 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7ff7e32dd730&gt;
2024-10-13 17:06:41,691 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7ff7e31b6378&gt;
2024-10-13 17:06:41,692 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,692 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7ff7e31b6378&gt;
2024-10-13 17:06:41,693 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,693 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,694 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff7e3fa49b0&gt;
2024-10-13 17:06:41,694 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,694 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff7e3fa49b0&gt;
2024-10-13 17:06:41,694 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,694 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,694 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,694 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff7e3fa49b0&gt;
2024-10-13 17:06:41,694 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,694 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,695 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff7e3fa49b0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,696 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,697 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,697 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff7e3fa49b0&gt;
2024-10-13 17:06:41,697 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,697 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff7e3fa49b0&gt;
2024-10-13 17:06:41,697 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,697 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,697 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,697 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,697 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff7e308dfd0&gt;
2024-10-13 17:06:41,698 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:06:41,698 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2024-10-13 17:06:41,698 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2024-10-13 17:06:41,698 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2024-10-13 17:06:41,698 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2024-10-13 17:06:41,698 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2024-10-13 17:06:41,699 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:06:41,711 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:06:41,711 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7ff7e4cd56a8&gt;
2024-10-13 17:06:41,712 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:06:41,722 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7ff7e51b0620&gt;
2024-10-13 17:06:41,722 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7ff7e51b0400&gt;
2024-10-13 17:06:41,722 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:41,724 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:41,725 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:06:41,726 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:41,726 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:41,726 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7ff7e4cd56a8&gt;
2024-10-13 17:06:41,727 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7ff7e51b0620&gt;
2024-10-13 17:06:41,727 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7ff7e51b0400&gt;
2024-10-13 17:06:41,727 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:41,729 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:41,730 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:41,731 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:41,731 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7ff7e4cd56a8&gt;
2024-10-13 17:06:41,732 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7ff7e51b0620&gt;
2024-10-13 17:06:41,732 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7ff7e51b0400&gt;
2024-10-13 17:06:41,732 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:41,734 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:41,735 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:41,735 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:41,736 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:06:41,736 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7ff7e4ce5e18&gt;
2024-10-13 17:06:41,736 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7ff7e4ce5d90&gt;
2024-10-13 17:06:41,737 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7ff7e2a8ea20&gt;&gt;
2024-10-13 17:06:41,737 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7ff7e2a8edd8&gt;&gt;
2024-10-13 17:06:41,737 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7ff7e4ce5bf8&gt;
2024-10-13 17:06:41,737 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7ff7e4c6c158&gt;
2024-10-13 17:06:41,737 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7ff7e2a8ea20&gt;&gt;
2024-10-13 17:06:41,737 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7ff7e4ce58c8&gt;
2024-10-13 17:06:41,737 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7ff7e4c6f400&gt;
2024-10-13 17:06:41,737 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/link/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7ff7e2a8e6d8&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:41,738 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7ff7e2a8e6a0&gt;&gt;
2024-10-13 17:06:41,738 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7ff7e2a8ee48&gt;&gt;
2024-10-13 17:06:41,738 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7ff7e4ce5ae8&gt;
2024-10-13 17:06:41,738 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7ff7e2a8ee48&gt;&gt;
2024-10-13 17:06:41,738 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:41,738 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:41,738 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/link/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170641Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:06:41,738 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170641Z
20241013/us-west-1/s3/aws4_request
57a8a48e0c37146dc72280b51818c2a161775572280aac045ddffb3057cd4a45
2024-10-13 17:06:41,738 - MainThread - botocore.auth - DEBUG - Signature:
13fd4b0109c19fc2387a1c042720420ca3c1e6bd08a5d97fa1b31037149dcd25
2024-10-13 17:06:41,739 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7ff7e4c6fa60&gt;
2024-10-13 17:06:41,739 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/link/big_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170641Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=13fd4b0109c19fc2387a1c042720420ca3c1e6bd08a5d97fa1b31037149dcd25', 'amz-sdk-invocation-id': b'15740857-648c-41d3-8e2f-55299ed70811', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:06:41,740 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:41,745 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /link/big_file HTTP/1.1" 200 0
2024-10-13 17:06:41,745 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"e7729f72968fa3d9ef53386eb7565255-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Server': 'Ozone', 'x-amz-id-2': '50puDa7iXRa', 'x-amz-request-id': '94e391bb-6728-4755-ab3a-3095dc192099', 'Content-Length': '10000000'}
2024-10-13 17:06:41,745 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:06:41,746 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7ff7e2a8ea58&gt;
2024-10-13 17:06:41,746 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:41,746 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7ff7e2a8ea20&gt;&gt;
2024-10-13 17:06:41,746 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7ff7e31ab8c8&gt;
2024-10-13 17:06:41,747 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:41,748 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;}) about to wait for the following futures []
2024-10-13 17:06:41,748 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;}) done waiting for dependent futures
2024-10-13 17:06:41,748 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7ff7e2b1df28&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7ff7e2a5f0b8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7ff7e2a5f128&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f2b0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt;}
2024-10-13 17:06:41,748 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f2b0&gt; for transfer request: 0.
2024-10-13 17:06:41,748 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:41,749 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2024-10-13 17:06:41,749 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2024-10-13 17:06:41,749 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7ff7e2b1df28&gt;, 'bucket': 'link', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7ff7e2a6dfd0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7ff7e2a6df60&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7ff7e2a6d198&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7ff7e2a6d978&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7ff7e2a5fcc0&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-10-13 17:06:41,749 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7ff7e4ce5e18&gt;
2024-10-13 17:06:41,749 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7ff7e4ce5d90&gt;
2024-10-13 17:06:41,750 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f2b0&gt; for transfer request: 0.
2024-10-13 17:06:41,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7ff7e2b284a8&gt;&gt;
2024-10-13 17:06:41,750 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:41,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7ff7e2b28860&gt;&gt;
2024-10-13 17:06:41,750 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2024-10-13 17:06:41,750 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7ff7e4ce5bf8&gt;
2024-10-13 17:06:41,751 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7ff7e4c6c158&gt;
2024-10-13 17:06:41,751 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7ff7e2b284a8&gt;&gt;
2024-10-13 17:06:41,751 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7ff7e4ce58c8&gt;
2024-10-13 17:06:41,750 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,751 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7ff7e4c6f400&gt;
2024-10-13 17:06:41,751 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/link/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7ff7e2b28160&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:41,750 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2024-10-13 17:06:41,752 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7ff7e720f488&gt;
2024-10-13 17:06:41,752 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7ff7e2b1df28&gt;, 'bucket': 'link', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7ff7e2a6dfd0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7ff7e2a6df60&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7ff7e2a6d198&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7ff7e2a6d978&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7ff7e18f4240&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7ff7e2a5fcc0&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2024-10-13 17:06:41,752 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7ff7e2b28128&gt;&gt;
2024-10-13 17:06:41,752 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7ff7e4ce5e18&gt;
2024-10-13 17:06:41,752 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7ff7e2b288d0&gt;&gt;
2024-10-13 17:06:41,752 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7ff7e4ce5d90&gt;
2024-10-13 17:06:41,752 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7ff7e4ce5ae8&gt;
2024-10-13 17:06:41,752 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7ff7e2b284a8&gt;&gt;
2024-10-13 17:06:41,753 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7ff7e2b288d0&gt;&gt;
2024-10-13 17:06:41,753 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7ff7e2b28860&gt;&gt;
2024-10-13 17:06:41,753 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:41,753 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7ff7e4ce5bf8&gt;
2024-10-13 17:06:41,753 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:41,753 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7ff7e4c6c158&gt;
2024-10-13 17:06:41,753 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/link/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170641Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:06:41,753 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7ff7e2b284a8&gt;&gt;
2024-10-13 17:06:41,754 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170641Z
20241013/us-west-1/s3/aws4_request
144971851b76711767653ae46173de12faa4a9d0aef37643deb27121935ec40e
2024-10-13 17:06:41,754 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7ff7e4ce58c8&gt;
2024-10-13 17:06:41,754 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
f6d3847512d8a873607635d823eee924380d6f189abf60d92c3d5f85a9906e91
2024-10-13 17:06:41,754 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7ff7e4c6f400&gt;
2024-10-13 17:06:41,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7ff7e720f510&gt;
2024-10-13 17:06:41,754 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/link/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/link/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7ff7e2b28160&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:41,754 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7ff7e4c6fa60&gt;
2024-10-13 17:06:41,754 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/link/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170641Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=f6d3847512d8a873607635d823eee924380d6f189abf60d92c3d5f85a9906e91', 'amz-sdk-invocation-id': b'339254e1-bb98-45e9-8309-363521240b3b', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:06:41,755 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:41,754 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7ff7e720f488&gt;
2024-10-13 17:06:41,755 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7ff7e2b28128&gt;&gt;
2024-10-13 17:06:41,755 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7ff7e2b288d0&gt;&gt;
2024-10-13 17:06:41,755 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7ff7e4ce5ae8&gt;
2024-10-13 17:06:41,755 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7ff7e2b288d0&gt;&gt;
2024-10-13 17:06:41,756 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:41,756 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/link/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20241013T170641Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2024-10-13 17:06:41,756 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170641Z
20241013/us-west-1/s3/aws4_request
ee6614538134ad8b1bd7fb1db16f0e8ea8c8d81fe5eaa8db89046fac678f977b
2024-10-13 17:06:41,756 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
63df97eb970fdc9d555dc10d1e7de30af39eb77c13a75e7ec4af923a0d85f4f9
2024-10-13 17:06:41,756 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7ff7e720f510&gt;
2024-10-13 17:06:41,756 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7ff7e4c6fa60&gt;
2024-10-13 17:06:41,756 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/link/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'X-Amz-Date': b'20241013T170641Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=63df97eb970fdc9d555dc10d1e7de30af39eb77c13a75e7ec4af923a0d85f4f9', 'amz-sdk-invocation-id': b'32b83ca3-90a8-4775-ae88-f66fdf7168ea', 'amz-sdk-request': b'attempt=1'}&gt;
2024-10-13 17:06:41,757 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2024-10-13 17:06:41,765 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /link/big_file HTTP/1.1" 206 1611392
2024-10-13 17:06:41,766 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"e7729f72968fa3d9ef53386eb7565255-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'IiMlYcjpGm9', 'x-amz-request-id': '6f656c27-48e3-4e38-b312-bfccf26f8dd1', 'Content-Length': '1611392'}
2024-10-13 17:06:41,765 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /link/big_file HTTP/1.1" 206 8388608
2024-10-13 17:06:41,766 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7ff7e06ae470&gt;
2024-10-13 17:06:41,767 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'Accept-Ranges': 'bytes', 'ETag': '"e7729f72968fa3d9ef53386eb7565255-2"', 'x-amz-mp-parts-count': '2', 'Last-Modified': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'FPBv9fVv', 'x-amz-request-id': '21e77395-8e88-41e9-b0d6-1e7ba247a6b6', 'Content-Length': '8388608'}
2024-10-13 17:06:41,768 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7ff7e06ae9b0&gt;
2024-10-13 17:06:41,769 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7ff7e2b284e0&gt;
2024-10-13 17:06:41,769 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:41,769 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7ff7e2b284a8&gt;&gt;
2024-10-13 17:06:41,769 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7ff7e31ab8c8&gt;
2024-10-13 17:06:41,768 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7ff7e2b284e0&gt;
2024-10-13 17:06:41,769 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:41,770 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7ff7e2b284a8&gt;&gt;
2024-10-13 17:06:41,770 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7ff7e31ab8c8&gt;
2024-10-13 17:06:41,777 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,777 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:41,778 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/9.5 MiB (8.8 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:41,779 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2024-10-13 17:06:41,779 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 0}
2024-10-13 17:06:41,780 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,786 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,786 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 512.0 KiB/9.5 MiB (13.2 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:41,787 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2024-10-13 17:06:41,787 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2024-10-13 17:06:41,787 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 8388608}
2024-10-13 17:06:41,788 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,802 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
Completed 768.0 KiB/9.5 MiB (14.0 MiB/s) with 1 file(s) remaining
2024-10-13 17:06:41,802 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:41,803 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2024-10-13 17:06:41,803 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2024-10-13 17:06:41,803 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 262144}
2024-10-13 17:06:41,804 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,813 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,813 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.0 MiB/9.5 MiB (15.4 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,814 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2024-10-13 17:06:41,814 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2024-10-13 17:06:41,814 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 8650752}
2024-10-13 17:06:41,815 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,821 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,821 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.2 MiB/9.5 MiB (17.2 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,821 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2024-10-13 17:06:41,821 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2024-10-13 17:06:41,822 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 524288}
2024-10-13 17:06:41,822 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,837 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,837 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.5 MiB/9.5 MiB (16.9 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,837 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2024-10-13 17:06:41,837 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2024-10-13 17:06:41,837 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 786432}
2024-10-13 17:06:41,838 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,859 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,859 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.8 MiB/9.5 MiB (15.8 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,859 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2024-10-13 17:06:41,859 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2024-10-13 17:06:41,859 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 8912896}
2024-10-13 17:06:41,860 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,860 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,861 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.0 MiB/9.5 MiB (17.8 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,861 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2024-10-13 17:06:41,861 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2024-10-13 17:06:41,861 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 1048576}
2024-10-13 17:06:41,862 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,876 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,876 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.2 MiB/9.5 MiB (17.6 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,876 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2024-10-13 17:06:41,877 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2024-10-13 17:06:41,877 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 1310720}
2024-10-13 17:06:41,877 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,890 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,890 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (17.7 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,890 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2024-10-13 17:06:41,890 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2024-10-13 17:06:41,891 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 9175040}
2024-10-13 17:06:41,892 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,892 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.8 MiB/9.5 MiB (19.1 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,892 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,892 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2024-10-13 17:06:41,893 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2024-10-13 17:06:41,893 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 1572864}
2024-10-13 17:06:41,893 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,909 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,909 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.0 MiB/9.5 MiB (18.6 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,910 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2024-10-13 17:06:41,910 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2024-10-13 17:06:41,910 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 1835008}
2024-10-13 17:06:41,910 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,918 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,918 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.2 MiB/9.5 MiB (19.2 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,918 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2024-10-13 17:06:41,918 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2024-10-13 17:06:41,918 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 9437184}
2024-10-13 17:06:41,919 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,932 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,932 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.5 MiB/9.5 MiB (19.1 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,932 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2024-10-13 17:06:41,932 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2024-10-13 17:06:41,932 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 2097152}
2024-10-13 17:06:41,933 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,941 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,941 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:41,942 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2024-10-13 17:06:41,942 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2024-10-13 17:06:41,942 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 9699328}
2024-10-13 17:06:41,942 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 3.8 MiB/9.5 MiB (19.4 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,946 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,946 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:41,947 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,947 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2024-10-13 17:06:41,947 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2024-10-13 17:06:41,948 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 9961472}
Completed 3.8 MiB/9.5 MiB (19.1 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,948 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,951 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,951 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.0 MiB/9.5 MiB (19.9 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,952 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2024-10-13 17:06:41,952 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2024-10-13 17:06:41,952 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 2359296}
2024-10-13 17:06:41,952 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,964 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,964 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.3 MiB/9.5 MiB (19.9 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,965 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2024-10-13 17:06:41,965 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2024-10-13 17:06:41,965 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 2621440}
2024-10-13 17:06:41,965 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,975 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,975 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.5 MiB/9.5 MiB (20.0 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,975 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2024-10-13 17:06:41,975 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2024-10-13 17:06:41,975 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 2883584}
2024-10-13 17:06:41,976 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,984 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,984 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.8 MiB/9.5 MiB (20.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,985 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2024-10-13 17:06:41,985 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2024-10-13 17:06:41,985 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 3145728}
2024-10-13 17:06:41,985 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:41,994 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:41,994 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.0 MiB/9.5 MiB (20.5 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:41,995 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2024-10-13 17:06:41,995 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2024-10-13 17:06:41,995 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 3407872}
2024-10-13 17:06:41,995 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,015 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,016 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.3 MiB/9.5 MiB (19.8 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,016 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2024-10-13 17:06:42,016 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2024-10-13 17:06:42,016 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 3670016}
2024-10-13 17:06:42,017 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,025 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,025 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.5 MiB/9.5 MiB (20.0 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2024-10-13 17:06:42,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2024-10-13 17:06:42,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 3932160}
2024-10-13 17:06:42,027 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,036 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,036 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.8 MiB/9.5 MiB (20.1 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2024-10-13 17:06:42,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2024-10-13 17:06:42,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 4194304}
2024-10-13 17:06:42,037 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,045 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,045 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.0 MiB/9.5 MiB (20.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,046 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2024-10-13 17:06:42,046 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2024-10-13 17:06:42,046 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 4456448}
2024-10-13 17:06:42,046 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,055 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,055 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.3 MiB/9.5 MiB (20.5 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,056 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2024-10-13 17:06:42,056 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2024-10-13 17:06:42,056 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 4718592}
2024-10-13 17:06:42,056 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,064 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,064 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.5 MiB/9.5 MiB (20.7 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,064 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2024-10-13 17:06:42,064 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2024-10-13 17:06:42,065 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 4980736}
2024-10-13 17:06:42,065 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,073 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,073 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.8 MiB/9.5 MiB (20.9 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,074 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
2024-10-13 17:06:42,074 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2024-10-13 17:06:42,074 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 5242880}
2024-10-13 17:06:42,074 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,082 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,082 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.0 MiB/9.5 MiB (21.1 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,082 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2024-10-13 17:06:42,082 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2024-10-13 17:06:42,082 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 5505024}
2024-10-13 17:06:42,083 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,090 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,090 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.3 MiB/9.5 MiB (21.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,090 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2024-10-13 17:06:42,090 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2024-10-13 17:06:42,091 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 5767168}
2024-10-13 17:06:42,091 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,098 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,098 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:42,099 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2024-10-13 17:06:42,099 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2024-10-13 17:06:42,099 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 6029312}
Completed 7.5 MiB/9.5 MiB (21.5 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,099 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,107 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,107 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:42,108 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2024-10-13 17:06:42,108 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2024-10-13 17:06:42,108 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 6291456}
Completed 7.8 MiB/9.5 MiB (21.7 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,108 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,116 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,116 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.0 MiB/9.5 MiB (21.8 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,117 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2024-10-13 17:06:42,117 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2024-10-13 17:06:42,117 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 6553600}
2024-10-13 17:06:42,117 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,125 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,125 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:42,125 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2024-10-13 17:06:42,125 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2024-10-13 17:06:42,125 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 6815744}
Completed 8.3 MiB/9.5 MiB (22.0 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,126 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,133 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,133 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.5 MiB/9.5 MiB (22.2 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,134 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2024-10-13 17:06:42,134 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2024-10-13 17:06:42,134 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 7077888}
2024-10-13 17:06:42,134 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,143 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,143 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.8 MiB/9.5 MiB (22.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,143 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2024-10-13 17:06:42,143 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2024-10-13 17:06:42,143 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 7340032}
2024-10-13 17:06:42,143 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,155 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
Completed 9.0 MiB/9.5 MiB (22.2 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,156 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:42,156 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2024-10-13 17:06:42,156 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2024-10-13 17:06:42,156 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 7602176}
2024-10-13 17:06:42,157 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,165 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
Completed 9.3 MiB/9.5 MiB (22.3 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,165 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:42,165 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2024-10-13 17:06:42,165 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2024-10-13 17:06:42,165 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 7864320}
2024-10-13 17:06:42,166 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,174 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
Completed 9.5 MiB/9.5 MiB (22.4 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:42,174 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:42,175 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff7e2a5f6a0&gt; for transfer request: 0.
2024-10-13 17:06:42,175 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:42,175 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,175 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2024-10-13 17:06:42,175 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2024-10-13 17:06:42,175 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'offset': 8126464}
2024-10-13 17:06:42,175 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,175 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2024-10-13 17:06:42,175 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2024-10-13 17:06:42,176 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7ff7e2a6dc18&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7ff7e2a5f128&gt;}
download: s3://link/big_file to ../../tmp/big_file_downloaded    
2024-10-13 17:06:42,181 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:42,181 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:06:42.225" endtime="20241013 17:06:42.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:42.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:42.227" endtime="20241013 17:06:42.227"/>
</kw>
<status status="PASS" starttime="20241013 17:06:41.331" endtime="20241013 17:06:42.228"/>
</kw>
<msg timestamp="20241013 17:06:42.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:41.331" endtime="20241013 17:06:42.228"/>
</kw>
<msg timestamp="20241013 17:06:42.230" level="INFO">${output} = 2024-10-13 17:06:41,685 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:41,686 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:41.331" endtime="20241013 17:06:42.230"/>
</kw>
<msg timestamp="20241013 17:06:42.230" level="INFO">${file_download_result} = 2024-10-13 17:06:41,685 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:41,686 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:41.330" endtime="20241013 17:06:42.230"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:06:42.231" level="INFO">${match} = GET /link/big_file HTTP/1.1" 206 1611392
2024-10-13 17:06:41,766 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:41 GMT', 'Cache-Control': 'no-...</msg>
<msg timestamp="20241013 17:06:42.232" level="INFO">${etag2} = e7729f72968fa3d9ef53386eb7565255-2</msg>
<status status="PASS" starttime="20241013 17:06:42.230" endtime="20241013 17:06:42.232"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:06:42.232" endtime="20241013 17:06:42.232"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:42.236" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:42.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:42.681" level="INFO">${output} = delete: s3://link/big_file</msg>
<status status="PASS" starttime="20241013 17:06:42.234" endtime="20241013 17:06:42.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:42.683" level="INFO">delete: s3://link/big_file</msg>
<status status="PASS" starttime="20241013 17:06:42.682" endtime="20241013 17:06:42.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:42.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:42.683" endtime="20241013 17:06:42.683"/>
</kw>
<status status="PASS" starttime="20241013 17:06:42.234" endtime="20241013 17:06:42.683"/>
</kw>
<msg timestamp="20241013 17:06:42.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:42.233" endtime="20241013 17:06:42.684"/>
</kw>
<msg timestamp="20241013 17:06:42.684" level="INFO">${output} = delete: s3://link/big_file</msg>
<status status="PASS" starttime="20241013 17:06:42.233" endtime="20241013 17:06:42.684"/>
</kw>
<status status="PASS" starttime="20241013 17:06:42.232" endtime="20241013 17:06:42.684"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:42.687" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:42.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:42.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:42.685" endtime="20241013 17:06:42.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:42.695" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:42.694" endtime="20241013 17:06:42.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:42.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:42.695" endtime="20241013 17:06:42.695"/>
</kw>
<status status="PASS" starttime="20241013 17:06:42.685" endtime="20241013 17:06:42.695"/>
</kw>
<msg timestamp="20241013 17:06:42.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:42.684" endtime="20241013 17:06:42.696"/>
</kw>
<status status="PASS" starttime="20241013 17:06:42.684" endtime="20241013 17:06:42.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:40.507" endtime="20241013 17:06:42.696"/>
</test>
<test id="s1-s6-s12-t21" name="Create key twice with different content and expect different ETags" line="260">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:42.700" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20241013 17:06:42.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:42.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:42.698" endtime="20241013 17:06:42.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:42.710" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:42.709" endtime="20241013 17:06:42.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:42.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:42.710" endtime="20241013 17:06:42.710"/>
</kw>
<status status="PASS" starttime="20241013 17:06:42.698" endtime="20241013 17:06:42.710"/>
</kw>
<msg timestamp="20241013 17:06:42.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:42.697" endtime="20241013 17:06:42.711"/>
</kw>
<status status="PASS" starttime="20241013 17:06:42.697" endtime="20241013 17:06:42.711"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:42.714" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20241013 17:06:42.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:42.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:42.712" endtime="20241013 17:06:42.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:42.724" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:42.723" endtime="20241013 17:06:42.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:42.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:42.724" endtime="20241013 17:06:42.724"/>
</kw>
<status status="PASS" starttime="20241013 17:06:42.712" endtime="20241013 17:06:42.724"/>
</kw>
<msg timestamp="20241013 17:06:42.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:42.711" endtime="20241013 17:06:42.724"/>
</kw>
<status status="PASS" starttime="20241013 17:06:42.711" endtime="20241013 17:06:42.725"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:42.728" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://link/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:43.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:43.234" level="INFO">${output} = 2024-10-13 17:06:43,080 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:43,080 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:42.726" endtime="20241013 17:06:43.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:43.236" level="INFO">2024-10-13 17:06:43,080 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:43,080 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://link/test_key_to_check_etag_differences']
2024-10-13 17:06:43,080 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7ff433f21d08&gt;
2024-10-13 17:06:43,081 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7ff434d6ca60&gt;
2024-10-13 17:06:43,081 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7ff434d4be18&gt;
2024-10-13 17:06:43,082 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:06:43,086 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7ff434053730&gt;
2024-10-13 17:06:43,086 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7ff433f2c378&gt;
2024-10-13 17:06:43,087 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,087 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7ff433f2c378&gt;
2024-10-13 17:06:43,088 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,088 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,088 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff434d1a9b0&gt;
2024-10-13 17:06:43,089 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,089 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff434d1a9b0&gt;
2024-10-13 17:06:43,089 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,089 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,089 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,089 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff434d1a9b0&gt;
2024-10-13 17:06:43,089 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,089 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,089 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,090 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,090 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,090 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,090 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,090 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,090 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,090 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,091 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,091 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,091 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,091 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,091 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,091 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,091 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,091 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,091 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff434d1a9b0&gt;
2024-10-13 17:06:43,092 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,092 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,092 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,092 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff434d1a9b0&gt;
2024-10-13 17:06:43,092 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,092 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7ff434d1a9b0&gt;
2024-10-13 17:06:43,092 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,092 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,092 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,093 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,093 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7ff433e03fd0&gt;
2024-10-13 17:06:43,093 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:06:43,093 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2024-10-13 17:06:43,093 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2024-10-13 17:06:43,093 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2024-10-13 17:06:43,093 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2024-10-13 17:06:43,093 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2024-10-13 17:06:43,094 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:06:43,106 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:06:43,107 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7ff435a4b6a8&gt;
2024-10-13 17:06:43,108 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:06:43,118 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7ff435f26620&gt;
2024-10-13 17:06:43,118 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7ff435f26400&gt;
2024-10-13 17:06:43,118 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,121 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:43,121 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:06:43,122 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:43,122 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,123 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7ff435a4b6a8&gt;
2024-10-13 17:06:43,123 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7ff435f26620&gt;
2024-10-13 17:06:43,124 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7ff435f26400&gt;
2024-10-13 17:06:43,124 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,126 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:43,126 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:43,127 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,127 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7ff435a4b6a8&gt;
2024-10-13 17:06:43,129 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7ff435f26620&gt;
2024-10-13 17:06:43,129 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7ff435f26400&gt;
2024-10-13 17:06:43,129 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,131 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:43,132 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:43,132 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,133 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:06:43,134 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:43,134 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff4337e40f0&gt;}) about to wait for the following futures []
2024-10-13 17:06:43,134 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff4337e40f0&gt;}) done waiting for dependent futures
2024-10-13 17:06:43,134 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff4337e40f0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7ff433893ef0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7ff4337d40b8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7ff4337d4128&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7ff4337d42b0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7ff4337e40f0&gt;}
2024-10-13 17:06:43,135 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7ff4337d42b0&gt; for transfer request: 0.
2024-10-13 17:06:43,135 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:43,136 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:06:43,136 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:43,136 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:06:43,136 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7ff433893ef0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7ff4337e4668&gt;, 'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2024-10-13 17:06:43,136 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7ff4359e29d8&gt;
2024-10-13 17:06:43,137 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7ff435a5ce18&gt;
2024-10-13 17:06:43,137 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7ff4359e52f0&gt;
2024-10-13 17:06:43,137 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7ff435a5cd90&gt;
2024-10-13 17:06:43,137 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7ff43389e470&gt;&gt;
2024-10-13 17:06:43,137 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7ff43389e828&gt;&gt;
2024-10-13 17:06:43,137 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7ff435a5cbf8&gt;
2024-10-13 17:06:43,137 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7ff436403400&gt;
2024-10-13 17:06:43,140 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7ff4359e2158&gt;
2024-10-13 17:06:43,140 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:06:43,140 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7ff43389e470&gt;&gt;
2024-10-13 17:06:43,140 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7ff435a5c8c8&gt;
2024-10-13 17:06:43,140 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7ff4359e5400&gt;
2024-10-13 17:06:43,140 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/link/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': 'AGjtfDm6kp6MXObA5kn0Uw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7ff4337e4668&gt;, 'url': 'http://s3g:9878/link/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7ff43389e128&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:43,140 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7ff437f85488&gt;
2024-10-13 17:06:43,141 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7ff43389e0f0&gt;&gt;
2024-10-13 17:06:43,141 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7ff43389e898&gt;&gt;
2024-10-13 17:06:43,141 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7ff435a5cae8&gt;
2024-10-13 17:06:43,141 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7ff43389e898&gt;&gt;
2024-10-13 17:06:43,141 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:43,143 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:43,143 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/test_key_to_check_etag_differences

content-md5:AGjtfDm6kp6MXObA5kn0Uw==
host:s3g:9878
x-amz-content-sha256:8520cc2fc8a436de8e2b96c2c6517dc9f5742b34ac03c9e1da19491ddb616d49
x-amz-date:20241013T170643Z

content-md5;host;x-amz-content-sha256;x-amz-date
8520cc2fc8a436de8e2b96c2c6517dc9f5742b34ac03c9e1da19491ddb616d49
2024-10-13 17:06:43,143 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170643Z
20241013/us-west-1/s3/aws4_request
9608ffeeb595578c84c03fce3d41262b097b6b35cbf09f32ead43e7903355e62
2024-10-13 17:06:43,143 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
7578480ee21e205f6224aa06d03b1917e2b2717cb451e8220b0efb8e896c9ca9
2024-10-13 17:06:43,143 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7ff437f85510&gt;
2024-10-13 17:06:43,143 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7ff4359e5a60&gt;
2024-10-13 17:06:43,143 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'AGjtfDm6kp6MXObA5kn0Uw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170643Z', 'X-Amz-Content-SHA256': b'8520cc2fc8a436de8e2b96c2c6517dc9f5742b34ac03c9e1da19491ddb616d49', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=7578480ee21e205f6224aa06d03b1917e2b2717cb451e8220b0efb8e896c9ca9', 'amz-sdk-invocation-id': b'349be62f-1878-4dfc-bba7-026820a4e969', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2024-10-13 17:06:43,144 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:43,145 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:06:43,154 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (12.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (24.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (35.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (45.7 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:43,179 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-10-13 17:06:43,179 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"0068ed7c39ba929e8c5ce6c0e649f453"', 'Server': 'Ozone', 'x-amz-id-2': 'L3y7wvaROzI', 'x-amz-request-id': '41851406-975b-413f-8621-067ef58575a1', 'Content-Length': '0'}
2024-10-13 17:06:43,179 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:06:43,180 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7ff43389e4a8&gt;
2024-10-13 17:06:43,180 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:43,181 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7ff43389e470&gt;&gt;
2024-10-13 17:06:43,181 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7ff433f218c8&gt;
2024-10-13 17:06:43,181 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://link/test_key_to_check_etag_differences
2024-10-13 17:06:43,181 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:06:43.235" endtime="20241013 17:06:43.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:43.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:43.236" endtime="20241013 17:06:43.237"/>
</kw>
<status status="PASS" starttime="20241013 17:06:42.726" endtime="20241013 17:06:43.237"/>
</kw>
<msg timestamp="20241013 17:06:43.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:42.726" endtime="20241013 17:06:43.237"/>
</kw>
<msg timestamp="20241013 17:06:43.238" level="INFO">${output} = 2024-10-13 17:06:43,080 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:43,080 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:42.725" endtime="20241013 17:06:43.238"/>
</kw>
<msg timestamp="20241013 17:06:43.238" level="INFO">${file1UploadResult} = 2024-10-13 17:06:43,080 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:43,080 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:42.725" endtime="20241013 17:06:43.238"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:06:43.240" level="INFO">${match} = PUT /link/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-10-13 17:06:43,179 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:43 GMT', '...</msg>
<msg timestamp="20241013 17:06:43.240" level="INFO">${etag1} = 0068ed7c39ba929e8c5ce6c0e649f453</msg>
<status status="PASS" starttime="20241013 17:06:43.239" endtime="20241013 17:06:43.240"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:43.245" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://link/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:43.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:43.803" level="INFO">${output} = 2024-10-13 17:06:43,659 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:43,659 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:43.242" endtime="20241013 17:06:43.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:43.804" level="INFO">2024-10-13 17:06:43,659 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:43,659 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://link/test_key_to_check_etag_differences']
2024-10-13 17:06:43,659 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fa6bf2b8d08&gt;
2024-10-13 17:06:43,659 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fa6c0103a60&gt;
2024-10-13 17:06:43,659 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fa6c00e2e18&gt;
2024-10-13 17:06:43,661 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2024-10-13 17:06:43,664 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fa6bf3ea730&gt;
2024-10-13 17:06:43,664 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fa6bf2c3378&gt;
2024-10-13 17:06:43,665 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,665 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fa6bf2c3378&gt;
2024-10-13 17:06:43,666 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,666 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,666 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6c00b19b0&gt;
2024-10-13 17:06:43,666 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6c00b19b0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6c00b19b0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,667 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,668 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6c00b19b0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6c00b19b0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6c00b19b0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,669 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,670 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6bf199fd0&gt;
2024-10-13 17:06:43,670 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2024-10-13 17:06:43,670 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role
2024-10-13 17:06:43,670 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity
2024-10-13 17:06:43,670 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso
2024-10-13 17:06:43,670 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file
2024-10-13 17:06:43,671 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2024-10-13 17:06:43,671 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2024-10-13 17:06:43,683 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2024-10-13 17:06:43,683 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa6c0de26a8&gt;
2024-10-13 17:06:43,685 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2024-10-13 17:06:43,696 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa6c12bd620&gt;
2024-10-13 17:06:43,696 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa6c12bd400&gt;
2024-10-13 17:06:43,696 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,699 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:43,699 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2024-10-13 17:06:43,700 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:43,701 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,701 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa6c0de26a8&gt;
2024-10-13 17:06:43,702 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa6c12bd620&gt;
2024-10-13 17:06:43,702 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa6c12bd400&gt;
2024-10-13 17:06:43,702 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,704 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:43,705 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:43,706 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,706 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa6c0de26a8&gt;
2024-10-13 17:06:43,707 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa6c12bd620&gt;
2024-10-13 17:06:43,707 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa6c12bd400&gt;
2024-10-13 17:06:43,708 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,710 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2024-10-13 17:06:43,711 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2024-10-13 17:06:43,711 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2024-10-13 17:06:43,712 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2024-10-13 17:06:43,712 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:43,713 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa6beb7b128&gt;}) about to wait for the following futures []
2024-10-13 17:06:43,713 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa6beb7b128&gt;}) done waiting for dependent futures
2024-10-13 17:06:43,713 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa6beb7b128&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa6bec2af28&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fa6beb6b0f0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa6beb6b160&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6beb6b2e8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa6beb7b128&gt;}
2024-10-13 17:06:43,714 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6beb6b2e8&gt; for transfer request: 0.
2024-10-13 17:06:43,714 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2024-10-13 17:06:43,714 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2024-10-13 17:06:43,714 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2024-10-13 17:06:43,715 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2024-10-13 17:06:43,715 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa6bec2af28&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa6beb7b588&gt;, 'bucket': 'link', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2024-10-13 17:06:43,715 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fa6c0d799d8&gt;
2024-10-13 17:06:43,715 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fa6c0df2e18&gt;
2024-10-13 17:06:43,716 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fa6c0d7c2f0&gt;
2024-10-13 17:06:43,716 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fa6c0df2d90&gt;
2024-10-13 17:06:43,716 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6bec344a8&gt;&gt;
2024-10-13 17:06:43,716 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa6bec34860&gt;&gt;
2024-10-13 17:06:43,716 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa6c0df2bf8&gt;
2024-10-13 17:06:43,716 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7fa6c179a400&gt;
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fa6c0d79158&gt;
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6bec344a8&gt;&gt;
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fa6c0df28c8&gt;
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa6c0d7c400&gt;
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/link/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': '5fZBlMyGrxpQPo15kerkLA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fa6beb7b588&gt;, 'url': 'http://s3g:9878/link/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa6bec34160&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'link'}}}
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fa6c331c488&gt;
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa6bec34128&gt;&gt;
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa6bec348d0&gt;&gt;
2024-10-13 17:06:43,719 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fa6c0df2ae8&gt;
2024-10-13 17:06:43,720 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa6bec348d0&gt;&gt;
2024-10-13 17:06:43,720 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2024-10-13 17:06:43,721 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2024-10-13 17:06:43,721 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/link/test_key_to_check_etag_differences

content-md5:5fZBlMyGrxpQPo15kerkLA==
host:s3g:9878
x-amz-content-sha256:27baa0ccfc81727bbab2b53dc02b6b3eb5db3489e61043bf85400579339f96dd
x-amz-date:20241013T170643Z

content-md5;host;x-amz-content-sha256;x-amz-date
27baa0ccfc81727bbab2b53dc02b6b3eb5db3489e61043bf85400579339f96dd
2024-10-13 17:06:43,721 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20241013T170643Z
20241013/us-west-1/s3/aws4_request
a3fab409d4d800f8a02a5de0d850301d8175c51d75f7159e1a9fa11a06676eb4
2024-10-13 17:06:43,721 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
4c61972b665734f2226294ab5746d0ea10bf099e9cc1184b247510bb743d0e6c
2024-10-13 17:06:43,722 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fa6c331c510&gt;
2024-10-13 17:06:43,722 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fa6c0d7ca60&gt;
2024-10-13 17:06:43,722 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/link/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10', 'Content-MD5': b'5fZBlMyGrxpQPo15kerkLA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20241013T170643Z', 'X-Amz-Content-SHA256': b'27baa0ccfc81727bbab2b53dc02b6b3eb5db3489e61043bf85400579339f96dd', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/s3g@EXAMPLE.COM/20241013/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=4c61972b665734f2226294ab5746d0ea10bf099e9cc1184b247510bb743d0e6c', 'amz-sdk-invocation-id': b'd82f5dc3-8118-4c4d-8be9-9206f92edde2', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2024-10-13 17:06:43,723 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2024-10-13 17:06:43,724 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2024-10-13 17:06:43,732 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (13.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (25.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (37.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (47.5 MiB/s) with 1 file(s) remaining  
2024-10-13 17:06:43,758 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /link/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-10-13 17:06:43,758 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:43 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Sun, 13 Oct 2024 17:06:43 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"e5f64194cc86af1a503e8d7991eae42c"', 'Server': 'Ozone', 'x-amz-id-2': 'utLUziFyS0', 'x-amz-request-id': '53662b14-66bf-4842-bdb7-e6dd510db096', 'Content-Length': '0'}
2024-10-13 17:06:43,758 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2024-10-13 17:06:43,759 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa6bec344e0&gt;
2024-10-13 17:06:43,759 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2024-10-13 17:06:43,759 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6bec344a8&gt;&gt;
2024-10-13 17:06:43,759 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fa6bf2b88c8&gt;
2024-10-13 17:06:43,759 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://link/test_key_to_check_etag_differences
2024-10-13 17:06:43,760 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20241013 17:06:43.804" endtime="20241013 17:06:43.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:43.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:43.805" endtime="20241013 17:06:43.805"/>
</kw>
<status status="PASS" starttime="20241013 17:06:43.242" endtime="20241013 17:06:43.805"/>
</kw>
<msg timestamp="20241013 17:06:43.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:43.241" endtime="20241013 17:06:43.805"/>
</kw>
<msg timestamp="20241013 17:06:43.806" level="INFO">${output} = 2024-10-13 17:06:43,659 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:43,659 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:43.241" endtime="20241013 17:06:43.806"/>
</kw>
<msg timestamp="20241013 17:06:43.806" level="INFO">${file2UploadResult} = 2024-10-13 17:06:43,659 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1073-azure botocore/1.26.10
2024-10-13 17:06:43,659 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20241013 17:06:43.240" endtime="20241013 17:06:43.806"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20241013 17:06:43.807" level="INFO">${match} = PUT /link/test_key_to_check_etag_differences HTTP/1.1" 200 0
2024-10-13 17:06:43,758 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Sun, 13 Oct 2024 17:06:43 GMT', '...</msg>
<msg timestamp="20241013 17:06:43.807" level="INFO">${etag2} = e5f64194cc86af1a503e8d7991eae42c</msg>
<status status="PASS" starttime="20241013 17:06:43.806" endtime="20241013 17:06:43.807"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20241013 17:06:43.807" endtime="20241013 17:06:43.807"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:43.811" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:44.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:44.272" level="INFO">${output} = delete: s3://link/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20241013 17:06:43.809" endtime="20241013 17:06:44.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:44.273" level="INFO">delete: s3://link/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20241013 17:06:44.272" endtime="20241013 17:06:44.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:44.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:44.273" endtime="20241013 17:06:44.274"/>
</kw>
<status status="PASS" starttime="20241013 17:06:43.809" endtime="20241013 17:06:44.274"/>
</kw>
<msg timestamp="20241013 17:06:44.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:43.808" endtime="20241013 17:06:44.274"/>
</kw>
<msg timestamp="20241013 17:06:44.274" level="INFO">${output} = delete: s3://link/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20241013 17:06:43.808" endtime="20241013 17:06:44.274"/>
</kw>
<status status="PASS" starttime="20241013 17:06:43.808" endtime="20241013 17:06:44.274"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:44.278" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:44.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:44.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:44.276" endtime="20241013 17:06:44.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:44.283" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:44.283" endtime="20241013 17:06:44.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:44.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:44.284" endtime="20241013 17:06:44.284"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.275" endtime="20241013 17:06:44.284"/>
</kw>
<msg timestamp="20241013 17:06:44.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:44.275" endtime="20241013 17:06:44.284"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.275" endtime="20241013 17:06:44.284"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:44.288" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:44.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:44.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:44.286" endtime="20241013 17:06:44.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:44.293" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:44.292" endtime="20241013 17:06:44.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:44.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:44.293" endtime="20241013 17:06:44.293"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.286" endtime="20241013 17:06:44.293"/>
</kw>
<msg timestamp="20241013 17:06:44.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:44.285" endtime="20241013 17:06:44.294"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.285" endtime="20241013 17:06:44.294"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241013 17:06:42.696" endtime="20241013 17:06:44.294"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20241013 17:06:17.912" endtime="20241013 17:06:44.295"/>
</suite>
<suite id="s1-s6-s13" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:06:44.304" endtime="20241013 17:06:44.304"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:44.308" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:44.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:44.311" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241013 17:06:44.306" endtime="20241013 17:06:44.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:44.312" level="INFO">s3g</msg>
<status status="PASS" starttime="20241013 17:06:44.311" endtime="20241013 17:06:44.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:44.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:44.312" endtime="20241013 17:06:44.312"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.305" endtime="20241013 17:06:44.312"/>
</kw>
<msg timestamp="20241013 17:06:44.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:44.305" endtime="20241013 17:06:44.313"/>
</kw>
<msg timestamp="20241013 17:06:44.313" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241013 17:06:44.305" endtime="20241013 17:06:44.313"/>
</kw>
<msg timestamp="20241013 17:06:44.313" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:06:44.304" endtime="20241013 17:06:44.313"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241013 17:06:44.313" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241013 17:06:44.313" endtime="20241013 17:06:44.313"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:44.317" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:44.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:44.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241013 17:06:44.315" endtime="20241013 17:06:44.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:44.400" level="INFO"/>
<status status="PASS" starttime="20241013 17:06:44.400" endtime="20241013 17:06:44.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:44.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:44.401" endtime="20241013 17:06:44.401"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.315" endtime="20241013 17:06:44.401"/>
</kw>
<msg timestamp="20241013 17:06:44.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:44.314" endtime="20241013 17:06:44.401"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.314" endtime="20241013 17:06:44.401"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.314" endtime="20241013 17:06:44.401"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.304" endtime="20241013 17:06:44.401"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.303" endtime="20241013 17:06:44.402"/>
</kw>
<test id="s1-s6-s13-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:06:44.402" endtime="20241013 17:06:44.403"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:44.406" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:47.676" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:47.676" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:06:44.404" endtime="20241013 17:06:47.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:47.677" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:06:47.677" endtime="20241013 17:06:47.677"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.403" endtime="20241013 17:06:47.678"/>
</kw>
<status status="PASS" starttime="20241013 17:06:44.403" endtime="20241013 17:06:47.678"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:47.682" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:50.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:50.777" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=bd7999c2feb0ae8b3ec4533207c10324b05a775d342d89877225f0e4eb0f95ae</msg>
<status status="PASS" starttime="20241013 17:06:47.679" endtime="20241013 17:06:50.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:50.778" level="INFO">awsAccessKey=testuser2
awsSecret=bd7999c2feb0ae8b3ec4533207c10324b05a775d342d89877225f0e4eb0f95ae</msg>
<status status="PASS" starttime="20241013 17:06:50.777" endtime="20241013 17:06:50.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:06:50.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:06:50.778" endtime="20241013 17:06:50.778"/>
</kw>
<status status="PASS" starttime="20241013 17:06:47.679" endtime="20241013 17:06:50.779"/>
</kw>
<msg timestamp="20241013 17:06:50.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:47.678" endtime="20241013 17:06:50.779"/>
</kw>
<msg timestamp="20241013 17:06:50.779" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=bd7999c2feb0ae8b3ec4533207c10324b05a775d342d89877225f0e4eb0f95ae</msg>
<status status="PASS" starttime="20241013 17:06:47.678" endtime="20241013 17:06:50.779"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:50.780" endtime="20241013 17:06:50.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:06:50.780" endtime="20241013 17:06:50.780"/>
</kw>
<status status="PASS" starttime="20241013 17:06:50.779" endtime="20241013 17:06:50.780"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:50.785" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:53.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:06:53.983" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:06:50.781" endtime="20241013 17:06:53.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:53.984" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:06:53.984" endtime="20241013 17:06:53.984"/>
</kw>
<status status="PASS" starttime="20241013 17:06:50.781" endtime="20241013 17:06:53.985"/>
</kw>
<status status="PASS" starttime="20241013 17:06:50.780" endtime="20241013 17:06:53.985"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241013 17:06:44.402" endtime="20241013 17:06:53.985"/>
</test>
<test id="s1-s6-s13-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:06:53.987" endtime="20241013 17:06:53.988"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241013 17:06:53.988" endtime="20241013 17:06:53.988"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:53.992" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:06:57.240" level="INFO">${rc} = 255</msg>
<msg timestamp="20241013 17:06:57.240" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:06:53.989" endtime="20241013 17:06:57.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:06:57.241" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20241013 17:06:57.241" endtime="20241013 17:06:57.241"/>
</kw>
<status status="PASS" starttime="20241013 17:06:53.989" endtime="20241013 17:06:57.241"/>
</kw>
<status status="PASS" starttime="20241013 17:06:53.988" endtime="20241013 17:06:57.242"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:06:57.246" level="INFO">Running command 'ozone s3 getsecret -u testuser2 --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:07:00.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:07:00.352" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=289689122fb3d4ddc888f549c2cbe9f580146b24c6ac94d4535ffed243c3bc08</msg>
<status status="PASS" starttime="20241013 17:06:57.243" endtime="20241013 17:07:00.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:07:00.353" level="INFO">awsAccessKey=testuser2
awsSecret=289689122fb3d4ddc888f549c2cbe9f580146b24c6ac94d4535ffed243c3bc08</msg>
<status status="PASS" starttime="20241013 17:07:00.352" endtime="20241013 17:07:00.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241013 17:07:00.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241013 17:07:00.353" endtime="20241013 17:07:00.354"/>
</kw>
<status status="PASS" starttime="20241013 17:06:57.242" endtime="20241013 17:07:00.354"/>
</kw>
<msg timestamp="20241013 17:07:00.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241013 17:06:57.242" endtime="20241013 17:07:00.354"/>
</kw>
<msg timestamp="20241013 17:07:00.354" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=289689122fb3d4ddc888f549c2cbe9f580146b24c6ac94d4535ffed243c3bc08</msg>
<status status="PASS" starttime="20241013 17:06:57.242" endtime="20241013 17:07:00.354"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:07:00.355" endtime="20241013 17:07:00.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241013 17:07:00.355" endtime="20241013 17:07:00.356"/>
</kw>
<status status="PASS" starttime="20241013 17:07:00.355" endtime="20241013 17:07:00.356"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241013 17:07:00.359" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20241013 17:07:03.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20241013 17:07:03.516" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:07:00.356" endtime="20241013 17:07:03.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241013 17:07:03.517" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20241013 17:07:03.516" endtime="20241013 17:07:03.517"/>
</kw>
<status status="PASS" starttime="20241013 17:07:00.356" endtime="20241013 17:07:03.517"/>
</kw>
<status status="PASS" starttime="20241013 17:07:00.356" endtime="20241013 17:07:03.517"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241013 17:06:53.986" endtime="20241013 17:07:03.518"/>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20241013 17:06:44.299" endtime="20241013 17:07:03.518"/>
</suite>
<suite id="s1-s6-s14" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<test id="s1-s6-s14-t1" name="S3 Gateway Generate Secret By Username" line="47">
<tag>robot:skip</tag>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20241013 17:07:03.529" endtime="20241013 17:07:03.529">Test skipped using 'robot:skip' tag.</status>
</test>
<test id="s1-s6-s14-t2" name="S3 Gateway Generate Secret By Username For Other User" line="54">
<tag>robot:skip</tag>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20241013 17:07:03.530" endtime="20241013 17:07:03.530">Test skipped using 'robot:skip' tag.</status>
</test>
<doc>S3 Secret Generate test</doc>
<status status="SKIP" starttime="20241013 17:07:03.520" endtime="20241013 17:07:03.530"/>
</suite>
<suite id="s1-s6-s15" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<test id="s1-s6-s15-t1" name="S3 Gateway Revoke Secret By Username" line="40">
<tag>robot:skip</tag>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20241013 17:07:03.539" endtime="20241013 17:07:03.539">Test skipped using 'robot:skip' tag.</status>
</test>
<test id="s1-s6-s15-t2" name="S3 Gateway Revoke Secret By Username For Other User" line="47">
<tag>robot:skip</tag>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20241013 17:07:03.540" endtime="20241013 17:07:03.540">Test skipped using 'robot:skip' tag.</status>
</test>
<doc>S3 Secret Revoke test</doc>
<status status="SKIP" starttime="20241013 17:07:03.531" endtime="20241013 17:07:03.541"/>
</suite>
<status status="FAIL" starttime="20241013 17:04:04.624" endtime="20241013 17:07:03.544"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1437019"/>
</suite>
<statistics>
<total>
<stat pass="224" fail="1" skip="8">All Tests</stat>
</total>
<tag>
<stat pass="12" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="224" fail="1" skip="8" id="s1" name="ozonesecure-ha">ozonesecure-ha</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha.Kinit</stat>
<stat pass="43" fail="0" skip="0" id="s1-s2" name="Freon">ozonesecure-ha.Freon</stat>
<stat pass="13" fail="0" skip="0" id="s1-s2-s1" name="echoRPCLoad">ozonesecure-ha.Freon.echoRPCLoad</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate-Chunk">ozonesecure-ha.Freon.Generate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s3" name="Generate">ozonesecure-ha.Freon.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s4" name="Hsync">ozonesecure-ha.Freon.Hsync</stat>
<stat pass="11" fail="0" skip="0" id="s1-s2-s5" name="Metadata-Generate">ozonesecure-ha.Freon.Metadata-Generate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s6" name="Read-Write-Key">ozonesecure-ha.Freon.Read-Write-Key</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s7" name="Remove">ozonesecure-ha.Freon.Remove</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Validate-Chunk">ozonesecure-ha.Freon.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Validate">ozonesecure-ha.Freon.Validate</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="ozonefs-o3fs-link">ozonesecure-ha.ozonefs-o3fs-link</stat>
<stat pass="18" fail="0" skip="0" id="s1-s4" name="Links">ozonesecure-ha.Links</stat>
<stat pass="76" fail="0" skip="4" id="s1-s5" name="s3-encrypted">ozonesecure-ha.s3-encrypted</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s1" name="Awss3">ozonesecure-ha.s3-encrypted.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s2" name="Boto3">ozonesecure-ha.s3-encrypted.Boto3</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5-s3" name="Bucketcreate">ozonesecure-ha.s3-encrypted.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s4" name="Bucketdelete">ozonesecure-ha.s3-encrypted.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s5" name="Buckethead">ozonesecure-ha.s3-encrypted.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s6" name="Bucketlist">ozonesecure-ha.s3-encrypted.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s7" name="Freon">ozonesecure-ha.s3-encrypted.Freon</stat>
<stat pass="15" fail="0" skip="0" id="s1-s5-s8" name="MultipartUpload">ozonesecure-ha.s3-encrypted.MultipartUpload</stat>
<stat pass="6" fail="0" skip="0" id="s1-s5-s9" name="Objectcopy">ozonesecure-ha.s3-encrypted.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s10" name="Objectcopys3A">ozonesecure-ha.s3-encrypted.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5-s11" name="Objectdelete">ozonesecure-ha.s3-encrypted.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5-s12" name="Objecthead">ozonesecure-ha.s3-encrypted.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s13" name="Objectmultidelete">ozonesecure-ha.s3-encrypted.Objectmultidelete</stat>
<stat pass="21" fail="0" skip="0" id="s1-s5-s14" name="Objectputget">ozonesecure-ha.s3-encrypted.Objectputget</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5-s15" name="S3 Getsecret">ozonesecure-ha.s3-encrypted.S3 Getsecret</stat>
<stat pass="2" fail="0" skip="2" id="s1-s5-s16" name="Secretgenerate">ozonesecure-ha.s3-encrypted.Secretgenerate</stat>
<stat pass="1" fail="0" skip="2" id="s1-s5-s17" name="Secretrevoke">ozonesecure-ha.s3-encrypted.Secretrevoke</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s18" name="Webui">ozonesecure-ha.s3-encrypted.Webui</stat>
<stat pass="63" fail="1" skip="4" id="s1-s6" name="s3-link">ozonesecure-ha.s3-link</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6-s1" name="Awss3">ozonesecure-ha.s3-link.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s2" name="Boto3">ozonesecure-ha.s3-link.Boto3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s3" name="Bucketdelete">ozonesecure-ha.s3-link.Bucketdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s4" name="Buckethead">ozonesecure-ha.s3-link.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6-s5" name="Bucketlist">ozonesecure-ha.s3-link.Bucketlist</stat>
<stat pass="14" fail="1" skip="0" id="s1-s6-s6" name="MultipartUpload">ozonesecure-ha.s3-link.MultipartUpload</stat>
<stat pass="6" fail="0" skip="0" id="s1-s6-s7" name="Objectcopy">ozonesecure-ha.s3-link.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s8" name="Objectcopys3A">ozonesecure-ha.s3-link.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s6-s9" name="Objectdelete">ozonesecure-ha.s3-link.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s6-s10" name="Objecthead">ozonesecure-ha.s3-link.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s11" name="Objectmultidelete">ozonesecure-ha.s3-link.Objectmultidelete</stat>
<stat pass="21" fail="0" skip="0" id="s1-s6-s12" name="Objectputget">ozonesecure-ha.s3-link.Objectputget</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6-s13" name="S3 Getsecret">ozonesecure-ha.s3-link.S3 Getsecret</stat>
<stat pass="0" fail="0" skip="2" id="s1-s6-s14" name="Secretgenerate">ozonesecure-ha.s3-link.Secretgenerate</stat>
<stat pass="0" fail="0" skip="2" id="s1-s6-s15" name="Secretrevoke">ozonesecure-ha.s3-link.Secretrevoke</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
