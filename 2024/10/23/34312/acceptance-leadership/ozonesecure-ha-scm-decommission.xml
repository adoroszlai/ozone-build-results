<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20241023 20:05:45.637" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241023 20:03:09.421" endtime="20241023 20:03:09.421"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:03:09.438" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:03:09.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:03:09.455" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241023 20:03:09.423" endtime="20241023 20:03:09.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:09.456" level="INFO">scm</msg>
<status status="PASS" starttime="20241023 20:03:09.455" endtime="20241023 20:03:09.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:03:09.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:03:09.456" endtime="20241023 20:03:09.457"/>
</kw>
<status status="PASS" starttime="20241023 20:03:09.422" endtime="20241023 20:03:09.457"/>
</kw>
<msg timestamp="20241023 20:03:09.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:03:09.422" endtime="20241023 20:03:09.458"/>
</kw>
<msg timestamp="20241023 20:03:09.458" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241023 20:03:09.422" endtime="20241023 20:03:09.458"/>
</kw>
<msg timestamp="20241023 20:03:09.458" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241023 20:03:09.421" endtime="20241023 20:03:09.458"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241023 20:03:09.459" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241023 20:03:09.458" endtime="20241023 20:03:09.459"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:03:09.471" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:03:09.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:03:09.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241023 20:03:09.461" endtime="20241023 20:03:09.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:09.553" level="INFO"/>
<status status="PASS" starttime="20241023 20:03:09.552" endtime="20241023 20:03:09.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:03:09.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:03:09.553" endtime="20241023 20:03:09.554"/>
</kw>
<status status="PASS" starttime="20241023 20:03:09.460" endtime="20241023 20:03:09.554"/>
</kw>
<msg timestamp="20241023 20:03:09.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:03:09.460" endtime="20241023 20:03:09.554"/>
</kw>
<status status="PASS" starttime="20241023 20:03:09.460" endtime="20241023 20:03:09.555"/>
</kw>
<status status="PASS" starttime="20241023 20:03:09.459" endtime="20241023 20:03:09.555"/>
</kw>
<status status="PASS" starttime="20241023 20:03:09.420" endtime="20241023 20:03:09.555"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241023 20:03:09.419" endtime="20241023 20:03:09.555"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20241023 20:03:09.353" endtime="20241023 20:03:09.556"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:03:15.684" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:03:19.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:03:19.690" level="INFO">${output} = scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm4.org:9894:FOLLOWER:05f6a191-21ea-46a2-af2e-63e1fc4fd...</msg>
<status status="PASS" starttime="20241023 20:03:15.681" endtime="20241023 20:03:19.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:19.691" level="INFO">scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm4.org:9894:FOLLOWER:05f6a191-21ea-46a2-af2e-63e1fc4fd83a:172.25.0.120
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:03:19.691" endtime="20241023 20:03:19.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:03:19.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:03:19.691" endtime="20241023 20:03:19.692"/>
</kw>
<status status="PASS" starttime="20241023 20:03:15.681" endtime="20241023 20:03:19.692"/>
</kw>
<msg timestamp="20241023 20:03:19.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:03:15.680" endtime="20241023 20:03:19.692"/>
</kw>
<msg timestamp="20241023 20:03:19.692" level="INFO">${result} = scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm4.org:9894:FOLLOWER:05f6a191-21ea-46a2-af2e-63e1fc4fd...</msg>
<status status="PASS" starttime="20241023 20:03:15.680" endtime="20241023 20:03:19.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:19.693" level="INFO">scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm4.org:9894:FOLLOWER:05f6a191-21ea-46a2-af2e-63e1fc4fd83a:172.25.0.120
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:03:19.693" endtime="20241023 20:03:19.693"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20241023 20:03:19.693" level="INFO">4 lines</msg>
<msg timestamp="20241023 20:03:19.693" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20241023 20:03:19.693" endtime="20241023 20:03:19.694"/>
</kw>
<msg timestamp="20241023 20:03:19.694" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20241023 20:03:15.680" endtime="20241023 20:03:19.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:19.694" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20241023 20:03:19.694" endtime="20241023 20:03:19.694"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20241023 20:03:19.695" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20241023 20:03:19.694" endtime="20241023 20:03:19.695"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241023 20:03:19.695" endtime="20241023 20:03:19.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241023 20:03:15.679" endtime="20241023 20:03:19.695"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:03:19.700" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:03:23.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:03:23.940" level="INFO">${output} = scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm4.org:9894:FOLLOWER:05f6a191-21ea-46a2-af2e-63e1fc4fd...</msg>
<status status="PASS" starttime="20241023 20:03:19.698" endtime="20241023 20:03:23.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:23.941" level="INFO">scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm4.org:9894:FOLLOWER:05f6a191-21ea-46a2-af2e-63e1fc4fd83a:172.25.0.120
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:03:23.941" endtime="20241023 20:03:23.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:03:23.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:03:23.942" endtime="20241023 20:03:23.942"/>
</kw>
<status status="PASS" starttime="20241023 20:03:19.697" endtime="20241023 20:03:23.942"/>
</kw>
<msg timestamp="20241023 20:03:23.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:03:19.697" endtime="20241023 20:03:23.943"/>
</kw>
<msg timestamp="20241023 20:03:23.943" level="INFO">${result} = scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm4.org:9894:FOLLOWER:05f6a191-21ea-46a2-af2e-63e1fc4fd...</msg>
<status status="PASS" starttime="20241023 20:03:19.697" endtime="20241023 20:03:23.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:23.943" level="INFO">scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm4.org:9894:FOLLOWER:05f6a191-21ea-46a2-af2e-63e1fc4fd83a:172.25.0.120
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:03:23.943" endtime="20241023 20:03:23.943"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20241023 20:03:23.944" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20241023 20:03:23.944" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:05f6a191-21ea-46a2-af2e-63e1fc4fd83a:172.25.0.120</msg>
<status status="PASS" starttime="20241023 20:03:23.943" endtime="20241023 20:03:23.944"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241023 20:03:23.944" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', '05f6a191-21ea-46a2-af2e-63e1fc4fd83a', '172.25.0.120']</msg>
<status status="PASS" starttime="20241023 20:03:23.944" endtime="20241023 20:03:23.944"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20241023 20:03:23.945" level="INFO">${scm4_uuid} = 05f6a191-21ea-46a2-af2e-63e1fc4fd83a</msg>
<status status="PASS" starttime="20241023 20:03:23.944" endtime="20241023 20:03:23.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:03:23.950" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 05f6a191-21ea-46a2-af2e-63e1fc4fd83a 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:03:34.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:03:34.588" level="INFO">${output} = Transfer leadership successfully to 05f6a191-21ea-46a2-af2e-63e1fc4fd83a.</msg>
<status status="PASS" starttime="20241023 20:03:23.947" endtime="20241023 20:03:34.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:34.589" level="INFO">Transfer leadership successfully to 05f6a191-21ea-46a2-af2e-63e1fc4fd83a.</msg>
<status status="PASS" starttime="20241023 20:03:34.589" endtime="20241023 20:03:34.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:03:34.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:03:34.590" endtime="20241023 20:03:34.590"/>
</kw>
<status status="PASS" starttime="20241023 20:03:23.946" endtime="20241023 20:03:34.590"/>
</kw>
<msg timestamp="20241023 20:03:34.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:03:23.946" endtime="20241023 20:03:34.591"/>
</kw>
<msg timestamp="20241023 20:03:34.591" level="INFO">${result} = Transfer leadership successfully to 05f6a191-21ea-46a2-af2e-63e1fc4fd83a.</msg>
<status status="PASS" starttime="20241023 20:03:23.945" endtime="20241023 20:03:34.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:34.591" level="INFO">Transfer leadership successfully to 05f6a191-21ea-46a2-af2e-63e1fc4fd83a.</msg>
<status status="PASS" starttime="20241023 20:03:34.591" endtime="20241023 20:03:34.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241023 20:03:34.592" endtime="20241023 20:03:34.592"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241023 20:03:19.696" endtime="20241023 20:03:34.592"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:03:34.597" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:03:41.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:03:41.285" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(BatchSize=1, CertCount=1)
SerialNumber      Valid From              ...</msg>
<status status="PASS" starttime="20241023 20:03:34.594" endtime="20241023 20:03:41.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:41.286" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Wed Oct 23 20:00:50 UTC 2024   Sat Dec 01 20:00:50 UTC 2029   CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=1 CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20241023 20:03:41.285" endtime="20241023 20:03:41.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:03:41.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:03:41.286" endtime="20241023 20:03:41.287"/>
</kw>
<status status="PASS" starttime="20241023 20:03:34.594" endtime="20241023 20:03:41.287"/>
</kw>
<msg timestamp="20241023 20:03:41.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:03:34.594" endtime="20241023 20:03:41.287"/>
</kw>
<msg timestamp="20241023 20:03:41.287" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(BatchSize=1, CertCount=1)
SerialNumber      Valid From              ...</msg>
<status status="PASS" starttime="20241023 20:03:34.593" endtime="20241023 20:03:41.287"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20241023 20:03:41.288" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20241023 20:03:41.288" level="INFO">${root_ca_cert} = 1                 Wed Oct 23 20:00:50 UTC 2024   Sat Dec 01 20:00:50 UTC 2029   CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=1 CN=scm...</msg>
<status status="PASS" starttime="20241023 20:03:41.288" endtime="20241023 20:03:41.288"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241023 20:03:41.289" level="INFO">${root_ca_cert_split} = ['1', 'Wed', 'Oct', '23', '20:00:50', 'UTC', '2024', 'Sat', 'Dec', '01', '20:00:50', 'UTC', '2029', 'CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,...</msg>
<status status="PASS" starttime="20241023 20:03:41.288" endtime="20241023 20:03:41.289"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20241023 20:03:41.290" level="INFO">${root_ca_cert_subject} = 23</msg>
<status status="PASS" starttime="20241023 20:03:41.289" endtime="20241023 20:03:41.290"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:03:41.295" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:03:47.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:03:47.666" level="INFO">${output} = Certificate list:(BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                              ...</msg>
<status status="PASS" starttime="20241023 20:03:41.291" endtime="20241023 20:03:47.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:03:47.667" level="INFO">Certificate list:(BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Wed Oct 23 20:00:50 UTC 2024   Sat Dec 01 20:00:50 UTC 2029   CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=1 CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=1
2                 Wed Oct 23 20:00:51 UTC 2024   Sat Dec 01 20:00:51 UTC 2029   CN=scm-sub@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=2 CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=1
3                 Wed Oct 23 20:01:11 UTC 2024   Thu Oct 23 20:01:11 UTC 2025   CN=recon@recon,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=3 CN=scm-sub@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=2
4                 Wed Oct 23 20:01:13 UTC 2024   Sat Dec 01 20:01:13 UTC 2029   CN=scm-sub@scm2.org,OU=b3ff08e5-4ede-41f3-b40a-e5666599e4ad,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=4 CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=1
5                 Wed Oct 23 20:01:27 UTC 2024   Sat Dec 01 20:01:27 UTC 2029   CN=scm-sub@scm3.org,OU=19b80b81-3c58-4b65-b3d8-a11b07f80cc5,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=5 CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=1
6                 Wed Oct 23 20:01:58 UTC 2024   Thu Oct 23 20:01:58 UTC 2025   CN=dn@a62ddf878b44,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=6 CN=scm-sub@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=2
7                 Wed Oct 23 20:01:58 UTC 2024   Thu Oct 23 20:01:58 UTC 2025   CN=dn@b3c1637fde94,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=7 CN=scm-sub@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=2
8                 Wed Oct 23 20:01:59 UTC 2024   Thu Oct 23 20:01:59 UTC 2025   CN=dn@91f3f5e62e0a,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=8 CN=scm-sub@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=2
9                 Wed Oct 23 20:01:59 UTC 2024   Thu Oct 23 20:01:59 UTC 2025   CN=om2,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=9       CN=scm-sub@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=2
10                Wed Oct 23 20:02:00 UTC 2024   Thu Oct 23 20:02:00 UTC 2025   CN=om1,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=10      CN=scm-sub@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=2
11                Wed Oct 23 20:02:01 UTC 2024   Thu Oct 23 20:02:01 UTC 2025   CN=om3,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=11      CN=scm-sub@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=2
12                Wed Oct 23 20:02:59 UTC 2024   Sat Dec 01 20:02:59 UTC 2029   CN=scm-sub@scm4.org,OU=05f6a191-21ea-46a2-af2e-63e1fc4fd83a,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=12 CN=scm@scm1.org,OU=fd3022ba-7796-45c2-b584-f7dcab7c2f93,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20241023 20:03:47.666" endtime="20241023 20:03:47.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:03:47.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:03:47.667" endtime="20241023 20:03:47.668"/>
</kw>
<status status="PASS" starttime="20241023 20:03:41.291" endtime="20241023 20:03:47.668"/>
</kw>
<msg timestamp="20241023 20:03:47.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:03:41.291" endtime="20241023 20:03:47.668"/>
</kw>
<msg timestamp="20241023 20:03:47.669" level="INFO">${output} = Certificate list:(BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                              ...</msg>
<status status="PASS" starttime="20241023 20:03:41.290" endtime="20241023 20:03:47.669"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20241023 20:03:47.669" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20241023 20:03:47.669" level="INFO">${scm4_cert} = 12                Wed Oct 23 20:02:59 UTC 2024   Sat Dec 01 20:02:59 UTC 2029   CN=scm-sub@scm4.org,OU=05f6a191-21ea-46a2-af2e-63e1fc4fd83a,O=CID-ec15997d-c274-4327-8576-c3926493db6f,SERIALNUMBER=12 C...</msg>
<status status="PASS" starttime="20241023 20:03:47.669" endtime="20241023 20:03:47.669"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241023 20:03:47.670" level="INFO">${scm4_cert_split} = ['12', 'Wed', 'Oct', '23', '20:02:59', 'UTC', '2024', 'Sat', 'Dec', '01', '20:02:59', 'UTC', '2029', 'CN=scm-sub@scm4.org,OU=05f6a191-21ea-46a2-af2e-63e1fc4fd83a,O=CID-ec15997d-c274-4327-8576-c3926493...</msg>
<status status="PASS" starttime="20241023 20:03:47.670" endtime="20241023 20:03:47.670"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20241023 20:03:47.671" level="INFO">${scm4_cert_issuer} = 20:02:59</msg>
<status status="PASS" starttime="20241023 20:03:47.670" endtime="20241023 20:03:47.671"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20241023 20:03:47.671" endtime="20241023 20:03:47.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241023 20:03:34.593" endtime="20241023 20:03:47.672"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241023 20:03:15.629" endtime="20241023 20:03:47.673"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241023 20:04:22.437" endtime="20241023 20:04:22.438"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:22.445" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:04:22.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:04:22.453" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20241023 20:04:22.440" endtime="20241023 20:04:22.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:22.454" level="INFO">scm</msg>
<status status="PASS" starttime="20241023 20:04:22.454" endtime="20241023 20:04:22.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:04:22.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:04:22.455" endtime="20241023 20:04:22.456"/>
</kw>
<status status="PASS" starttime="20241023 20:04:22.439" endtime="20241023 20:04:22.456"/>
</kw>
<msg timestamp="20241023 20:04:22.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:22.439" endtime="20241023 20:04:22.457"/>
</kw>
<msg timestamp="20241023 20:04:22.457" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20241023 20:04:22.439" endtime="20241023 20:04:22.457"/>
</kw>
<msg timestamp="20241023 20:04:22.457" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241023 20:04:22.438" endtime="20241023 20:04:22.457"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241023 20:04:22.458" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241023 20:04:22.457" endtime="20241023 20:04:22.458"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:22.463" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:04:22.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:04:22.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241023 20:04:22.460" endtime="20241023 20:04:22.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:22.489" level="INFO"/>
<status status="PASS" starttime="20241023 20:04:22.488" endtime="20241023 20:04:22.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:04:22.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:04:22.489" endtime="20241023 20:04:22.490"/>
</kw>
<status status="PASS" starttime="20241023 20:04:22.460" endtime="20241023 20:04:22.490"/>
</kw>
<msg timestamp="20241023 20:04:22.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:22.459" endtime="20241023 20:04:22.490"/>
</kw>
<status status="PASS" starttime="20241023 20:04:22.459" endtime="20241023 20:04:22.490"/>
</kw>
<status status="PASS" starttime="20241023 20:04:22.458" endtime="20241023 20:04:22.490"/>
</kw>
<status status="PASS" starttime="20241023 20:04:22.436" endtime="20241023 20:04:22.490"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20241023 20:04:22.436" endtime="20241023 20:04:22.491"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20241023 20:04:22.383" endtime="20241023 20:04:22.492"/>
</suite>
<suite id="s1-s4" name="Scm-Decommission" source="/opt/hadoop/smoketest/scmha/scm-decommission.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20241023 20:04:29.892" endtime="20241023 20:04:29.892"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:29.896" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:04:29.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:04:29.900" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20241023 20:04:29.893" endtime="20241023 20:04:29.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:29.901" level="INFO">s3g</msg>
<status status="PASS" starttime="20241023 20:04:29.900" endtime="20241023 20:04:29.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:04:29.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:04:29.901" endtime="20241023 20:04:29.901"/>
</kw>
<status status="PASS" starttime="20241023 20:04:29.893" endtime="20241023 20:04:29.902"/>
</kw>
<msg timestamp="20241023 20:04:29.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:29.892" endtime="20241023 20:04:29.902"/>
</kw>
<msg timestamp="20241023 20:04:29.902" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20241023 20:04:29.892" endtime="20241023 20:04:29.902"/>
</kw>
<msg timestamp="20241023 20:04:29.902" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241023 20:04:29.892" endtime="20241023 20:04:29.902"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241023 20:04:29.903" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20241023 20:04:29.902" endtime="20241023 20:04:29.903"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:29.907" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:04:29.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:04:29.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241023 20:04:29.904" endtime="20241023 20:04:29.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:29.948" level="INFO"/>
<status status="PASS" starttime="20241023 20:04:29.947" endtime="20241023 20:04:29.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:04:29.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:04:29.948" endtime="20241023 20:04:29.948"/>
</kw>
<status status="PASS" starttime="20241023 20:04:29.904" endtime="20241023 20:04:29.949"/>
</kw>
<msg timestamp="20241023 20:04:29.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:29.904" endtime="20241023 20:04:29.949"/>
</kw>
<status status="PASS" starttime="20241023 20:04:29.903" endtime="20241023 20:04:29.949"/>
</kw>
<status status="PASS" starttime="20241023 20:04:29.903" endtime="20241023 20:04:29.949"/>
</kw>
<status status="PASS" starttime="20241023 20:04:29.891" endtime="20241023 20:04:29.949"/>
</kw>
<status status="PASS" starttime="20241023 20:04:29.890" endtime="20241023 20:04:29.949"/>
</kw>
<test id="s1-s4-t1" name="Decommission SCM Primordial Node" line="66">
<kw name="Get Primordial SCM ID">
<var>${primordial_scm_id}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:29.955" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:04:36.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:04:36.136" level="INFO">${output} = scm3.org:9894:LEADER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:FOLLOWER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e...</msg>
<status status="PASS" starttime="20241023 20:04:29.952" endtime="20241023 20:04:36.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:36.137" level="INFO">scm3.org:9894:LEADER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:FOLLOWER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:04:36.136" endtime="20241023 20:04:36.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:04:36.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:04:36.137" endtime="20241023 20:04:36.138"/>
</kw>
<status status="PASS" starttime="20241023 20:04:29.951" endtime="20241023 20:04:36.138"/>
</kw>
<msg timestamp="20241023 20:04:36.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:29.951" endtime="20241023 20:04:36.138"/>
</kw>
<msg timestamp="20241023 20:04:36.138" level="INFO">${result} = scm3.org:9894:LEADER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:FOLLOWER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e...</msg>
<status status="PASS" starttime="20241023 20:04:29.951" endtime="20241023 20:04:36.138"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${primordial_node}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:LEADER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20241023 20:04:36.139" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20241023 20:04:36.139" level="INFO">${primordial_node} = scm3.org:9894:LEADER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118</msg>
<status status="PASS" starttime="20241023 20:04:36.138" endtime="20241023 20:04:36.139"/>
</kw>
<kw name="Split String" library="String">
<var>${primordial_split}</var>
<arg>${primordial_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241023 20:04:36.139" level="INFO">${primordial_split} = ['scm3.org', '9894', 'LEADER', '19b80b81-3c58-4b65-b3d8-a11b07f80cc5', '172.25.0.118']</msg>
<status status="PASS" starttime="20241023 20:04:36.139" endtime="20241023 20:04:36.139"/>
</kw>
<kw name="Strip String" library="String">
<var>${primordial_scmId}</var>
<arg>${primordial_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20241023 20:04:36.140" level="INFO">${primordial_scmId} = 19b80b81-3c58-4b65-b3d8-a11b07f80cc5</msg>
<status status="PASS" starttime="20241023 20:04:36.139" endtime="20241023 20:04:36.140"/>
</kw>
<msg timestamp="20241023 20:04:36.141" level="INFO">${primordial_scm_id} = 19b80b81-3c58-4b65-b3d8-a11b07f80cc5</msg>
<status status="PASS" starttime="20241023 20:04:29.950" endtime="20241023 20:04:36.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Primordial scm id : ${primordial_scm_id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:36.141" level="INFO">Primordial scm id : 19b80b81-3c58-4b65-b3d8-a11b07f80cc5</msg>
<status status="PASS" starttime="20241023 20:04:36.141" endtime="20241023 20:04:36.141"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${decomm_output}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:36.144" level="INFO">Running command 'ozone admin scm decommission --nodeid=19b80b81-3c58-4b65-b3d8-a11b07f80cc5 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:04:42.123" level="INFO">${rc} = 255</msg>
<msg timestamp="20241023 20:04:42.123" level="INFO">${output} = Error decommissioning Scm 19b80b81-3c58-4b65-b3d8-a11b07f80cc5, Cannot remove current leader.</msg>
<status status="PASS" starttime="20241023 20:04:36.142" endtime="20241023 20:04:42.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:42.124" level="INFO">Error decommissioning Scm 19b80b81-3c58-4b65-b3d8-a11b07f80cc5, Cannot remove current leader.</msg>
<status status="PASS" starttime="20241023 20:04:42.123" endtime="20241023 20:04:42.124"/>
</kw>
<msg timestamp="20241023 20:04:42.124" level="INFO">${decomm_output} = Error decommissioning Scm 19b80b81-3c58-4b65-b3d8-a11b07f80cc5, Cannot remove current leader.</msg>
<status status="PASS" starttime="20241023 20:04:36.141" endtime="20241023 20:04:42.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decomm_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:42.125" level="INFO">Error decommissioning Scm 19b80b81-3c58-4b65-b3d8-a11b07f80cc5, Cannot remove current leader.</msg>
<status status="PASS" starttime="20241023 20:04:42.124" endtime="20241023 20:04:42.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decomm_output}</arg>
<arg>Cannot remove current leader</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241023 20:04:42.125" endtime="20241023 20:04:42.125"/>
</kw>
<kw name="Create volume bucket and put key">
<var>${md5sum}</var>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:42.130" level="INFO">Running command 'ozone sh volume create /decom-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:04:47.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:04:47.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241023 20:04:42.127" endtime="20241023 20:04:47.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:47.100" level="INFO"/>
<status status="PASS" starttime="20241023 20:04:47.100" endtime="20241023 20:04:47.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:04:47.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:04:47.101" endtime="20241023 20:04:47.101"/>
</kw>
<status status="PASS" starttime="20241023 20:04:42.127" endtime="20241023 20:04:47.102"/>
</kw>
<msg timestamp="20241023 20:04:47.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:42.126" endtime="20241023 20:04:47.102"/>
</kw>
<status status="PASS" starttime="20241023 20:04:42.126" endtime="20241023 20:04:47.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:47.107" level="INFO">Running command 'ozone sh bucket create /decom-volume/decom-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:04:52.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:04:52.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241023 20:04:47.104" endtime="20241023 20:04:52.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:52.187" level="INFO"/>
<status status="PASS" starttime="20241023 20:04:52.186" endtime="20241023 20:04:52.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:04:52.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:04:52.188" endtime="20241023 20:04:52.188"/>
</kw>
<status status="PASS" starttime="20241023 20:04:47.103" endtime="20241023 20:04:52.188"/>
</kw>
<msg timestamp="20241023 20:04:52.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:47.103" endtime="20241023 20:04:52.188"/>
</kw>
<status status="PASS" starttime="20241023 20:04:47.102" endtime="20241023 20:04:52.188"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>/tmp/${TESTFILE}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20241023 20:04:52.189" level="INFO" html="true">Created file '&lt;a href="file:///tmp/testfiledecomm"&gt;/tmp/testfiledecomm&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20241023 20:04:52.189" endtime="20241023 20:04:52.189"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "This is a decommissioning test" &gt; /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:52.194" level="INFO">Running command 'echo "This is a decommissioning test" &gt; /tmp/testfiledecomm'.</msg>
<msg timestamp="20241023 20:04:52.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:04:52.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241023 20:04:52.191" endtime="20241023 20:04:52.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:52.197" level="INFO"/>
<status status="PASS" starttime="20241023 20:04:52.197" endtime="20241023 20:04:52.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:04:52.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:04:52.198" endtime="20241023 20:04:52.198"/>
</kw>
<status status="PASS" starttime="20241023 20:04:52.190" endtime="20241023 20:04:52.198"/>
</kw>
<msg timestamp="20241023 20:04:52.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:52.190" endtime="20241023 20:04:52.198"/>
</kw>
<status status="PASS" starttime="20241023 20:04:52.190" endtime="20241023 20:04:52.198"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum /tmp/${TESTFILE} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:52.203" level="INFO">Running command 'md5sum /tmp/testfiledecomm | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:04:52.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:04:52.208" level="INFO">${output} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20241023 20:04:52.200" endtime="20241023 20:04:52.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:04:52.209" level="INFO">ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20241023 20:04:52.209" endtime="20241023 20:04:52.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:04:52.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:04:52.210" endtime="20241023 20:04:52.210"/>
</kw>
<status status="PASS" starttime="20241023 20:04:52.199" endtime="20241023 20:04:52.210"/>
</kw>
<msg timestamp="20241023 20:04:52.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:52.199" endtime="20241023 20:04:52.210"/>
</kw>
<msg timestamp="20241023 20:04:52.211" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20241023 20:04:52.199" endtime="20241023 20:04:52.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:04:52.214" level="INFO">Running command 'ozone sh key put /decom-volume/decom-bucket/testfiledecomm /tmp/testfiledecomm 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:05:04.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:05:04.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241023 20:04:52.212" endtime="20241023 20:05:04.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:04.442" level="INFO"/>
<status status="PASS" starttime="20241023 20:05:04.442" endtime="20241023 20:05:04.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:05:04.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:05:04.443" endtime="20241023 20:05:04.443"/>
</kw>
<status status="PASS" starttime="20241023 20:04:52.211" endtime="20241023 20:05:04.443"/>
</kw>
<msg timestamp="20241023 20:05:04.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:04:52.211" endtime="20241023 20:05:04.443"/>
</kw>
<status status="PASS" starttime="20241023 20:04:52.211" endtime="20241023 20:05:04.443"/>
</kw>
<msg timestamp="20241023 20:05:04.444" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20241023 20:04:42.125" endtime="20241023 20:05:04.444"/>
</kw>
<kw name="Transfer Leader to non-primordial node Follower">
<var>${transfer_result}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:05:04.449" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:05:10.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:05:10.338" level="INFO">${output} = scm3.org:9894:LEADER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:FOLLOWER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e...</msg>
<status status="PASS" starttime="20241023 20:05:04.446" endtime="20241023 20:05:10.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:10.339" level="INFO">scm3.org:9894:LEADER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:FOLLOWER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:05:10.339" endtime="20241023 20:05:10.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:05:10.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:05:10.339" endtime="20241023 20:05:10.340"/>
</kw>
<status status="PASS" starttime="20241023 20:05:04.445" endtime="20241023 20:05:10.340"/>
</kw>
<msg timestamp="20241023 20:05:10.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:05:04.444" endtime="20241023 20:05:10.340"/>
</kw>
<msg timestamp="20241023 20:05:10.340" level="INFO">${result} = scm3.org:9894:LEADER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:FOLLOWER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e...</msg>
<status status="PASS" starttime="20241023 20:05:04.444" endtime="20241023 20:05:10.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:10.341" level="INFO">scm3.org:9894:LEADER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:FOLLOWER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:05:10.340" endtime="20241023 20:05:10.341"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${follower_nodes}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:FOLLOWER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20241023 20:05:10.341" level="INFO">2 out of 3 lines matched</msg>
<msg timestamp="20241023 20:05:10.342" level="INFO">${follower_nodes} = scm1.org:9894:FOLLOWER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:05:10.341" endtime="20241023 20:05:10.342"/>
</kw>
<kw name="Get Line" library="String">
<var>${follower_node}</var>
<arg>${follower_nodes}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20241023 20:05:10.342" level="INFO">${follower_node} = scm1.org:9894:FOLLOWER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116</msg>
<status status="PASS" starttime="20241023 20:05:10.342" endtime="20241023 20:05:10.342"/>
</kw>
<kw name="Split String" library="String">
<var>${follower_split}</var>
<arg>${follower_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241023 20:05:10.343" level="INFO">${follower_split} = ['scm1.org', '9894', 'FOLLOWER', 'fd3022ba-7796-45c2-b584-f7dcab7c2f93', '172.25.0.116']</msg>
<status status="PASS" starttime="20241023 20:05:10.342" endtime="20241023 20:05:10.343"/>
</kw>
<kw name="Strip String" library="String">
<var>${follower_scmId}</var>
<arg>${follower_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20241023 20:05:10.344" level="INFO">${follower_scmId} = fd3022ba-7796-45c2-b584-f7dcab7c2f93</msg>
<status status="PASS" starttime="20241023 20:05:10.343" endtime="20241023 20:05:10.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${follower_scmId}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:05:10.348" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n fd3022ba-7796-45c2-b584-f7dcab7c2f93 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:05:18.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:05:18.704" level="INFO">${output} = Transfer leadership successfully to fd3022ba-7796-45c2-b584-f7dcab7c2f93.</msg>
<status status="PASS" starttime="20241023 20:05:10.345" endtime="20241023 20:05:18.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:18.705" level="INFO">Transfer leadership successfully to fd3022ba-7796-45c2-b584-f7dcab7c2f93.</msg>
<status status="PASS" starttime="20241023 20:05:18.704" endtime="20241023 20:05:18.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:05:18.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:05:18.705" endtime="20241023 20:05:18.706"/>
</kw>
<status status="PASS" starttime="20241023 20:05:10.344" endtime="20241023 20:05:18.706"/>
</kw>
<msg timestamp="20241023 20:05:18.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:05:10.344" endtime="20241023 20:05:18.706"/>
</kw>
<msg timestamp="20241023 20:05:18.706" level="INFO">${result} = Transfer leadership successfully to fd3022ba-7796-45c2-b584-f7dcab7c2f93.</msg>
<status status="PASS" starttime="20241023 20:05:10.344" endtime="20241023 20:05:18.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:18.707" level="INFO">Transfer leadership successfully to fd3022ba-7796-45c2-b584-f7dcab7c2f93.</msg>
<status status="PASS" starttime="20241023 20:05:18.706" endtime="20241023 20:05:18.707"/>
</kw>
<msg timestamp="20241023 20:05:18.707" level="INFO">${transfer_result} = Transfer leadership successfully to fd3022ba-7796-45c2-b584-f7dcab7c2f93.</msg>
<status status="PASS" starttime="20241023 20:05:04.444" endtime="20241023 20:05:18.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${transfer_result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241023 20:05:18.707" endtime="20241023 20:05:18.707"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:05:18.711" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:05:22.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:05:22.508" level="INFO">${output} = scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e...</msg>
<status status="PASS" starttime="20241023 20:05:18.709" endtime="20241023 20:05:22.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:22.509" level="INFO">scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:05:22.508" endtime="20241023 20:05:22.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:05:22.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:05:22.509" endtime="20241023 20:05:22.509"/>
</kw>
<status status="PASS" starttime="20241023 20:05:18.708" endtime="20241023 20:05:22.510"/>
</kw>
<msg timestamp="20241023 20:05:22.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:05:18.708" endtime="20241023 20:05:22.510"/>
</kw>
<msg timestamp="20241023 20:05:22.510" level="INFO">${result} = scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e...</msg>
<status status="PASS" starttime="20241023 20:05:18.708" endtime="20241023 20:05:22.510"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20241023 20:05:22.511" level="INFO">3 out of 3 lines matched</msg>
<msg timestamp="20241023 20:05:22.511" level="INFO">${nodes_in_quorum} = scm3.org:9894:FOLLOWER:19b80b81-3c58-4b65-b3d8-a11b07f80cc5:172.25.0.118
scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e...</msg>
<status status="PASS" starttime="20241023 20:05:22.510" endtime="20241023 20:05:22.511"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20241023 20:05:22.511" level="INFO">3 lines</msg>
<msg timestamp="20241023 20:05:22.511" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20241023 20:05:22.511" endtime="20241023 20:05:22.511"/>
</kw>
<msg timestamp="20241023 20:05:22.511" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20241023 20:05:18.707" endtime="20241023 20:05:22.511"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_pre}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20241023 20:05:22.512" level="INFO">${node_count_pre} = 3</msg>
<status status="PASS" starttime="20241023 20:05:22.511" endtime="20241023 20:05:22.512"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${node_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241023 20:05:22.512" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20241023 20:05:22.512" endtime="20241023 20:05:22.512"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_expect}</var>
<arg>${n}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20241023 20:05:22.513" level="INFO">${node_count_expect} = 2</msg>
<status status="PASS" starttime="20241023 20:05:22.513" endtime="20241023 20:05:22.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count before SCM Decommission: ${node_count_pre}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:22.513" level="INFO">SCM Instance Count before SCM Decommission: 3</msg>
<status status="PASS" starttime="20241023 20:05:22.513" endtime="20241023 20:05:22.513"/>
</kw>
<kw name="Execute" library="os">
<var>${decommission_res}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:05:22.518" level="INFO">Running command 'ozone admin scm decommission --nodeid=19b80b81-3c58-4b65-b3d8-a11b07f80cc5 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:05:26.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:05:26.346" level="INFO">${output} = Decommissioned Scm 19b80b81-3c58-4b65-b3d8-a11b07f80cc5</msg>
<status status="PASS" starttime="20241023 20:05:22.515" endtime="20241023 20:05:26.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:26.347" level="INFO">Decommissioned Scm 19b80b81-3c58-4b65-b3d8-a11b07f80cc5</msg>
<status status="PASS" starttime="20241023 20:05:26.346" endtime="20241023 20:05:26.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:05:26.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:05:26.347" endtime="20241023 20:05:26.348"/>
</kw>
<status status="PASS" starttime="20241023 20:05:22.514" endtime="20241023 20:05:26.348"/>
</kw>
<msg timestamp="20241023 20:05:26.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:05:22.514" endtime="20241023 20:05:26.348"/>
</kw>
<msg timestamp="20241023 20:05:26.348" level="INFO">${decommission_res} = Decommissioned Scm 19b80b81-3c58-4b65-b3d8-a11b07f80cc5</msg>
<status status="PASS" starttime="20241023 20:05:22.513" endtime="20241023 20:05:26.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decommission_res}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:26.348" level="INFO">Decommissioned Scm 19b80b81-3c58-4b65-b3d8-a11b07f80cc5</msg>
<status status="PASS" starttime="20241023 20:05:26.348" endtime="20241023 20:05:26.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decommission_res}</arg>
<arg>Decommissioned</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241023 20:05:26.349" endtime="20241023 20:05:26.349"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:05:26.354" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:05:29.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:05:29.948" level="INFO">${output} = scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:05:26.351" endtime="20241023 20:05:29.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:29.949" level="INFO">scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:05:29.948" endtime="20241023 20:05:29.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:05:29.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:05:29.949" endtime="20241023 20:05:29.950"/>
</kw>
<status status="PASS" starttime="20241023 20:05:26.350" endtime="20241023 20:05:29.950"/>
</kw>
<msg timestamp="20241023 20:05:29.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:05:26.350" endtime="20241023 20:05:29.950"/>
</kw>
<msg timestamp="20241023 20:05:29.950" level="INFO">${result} = scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:05:26.350" endtime="20241023 20:05:29.950"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20241023 20:05:29.951" level="INFO">2 out of 2 lines matched</msg>
<msg timestamp="20241023 20:05:29.951" level="INFO">${nodes_in_quorum} = scm1.org:9894:LEADER:fd3022ba-7796-45c2-b584-f7dcab7c2f93:172.25.0.116
scm2.org:9894:FOLLOWER:b3ff08e5-4ede-41f3-b40a-e5666599e4ad:172.25.0.117</msg>
<status status="PASS" starttime="20241023 20:05:29.950" endtime="20241023 20:05:29.951"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20241023 20:05:29.951" level="INFO">2 lines</msg>
<msg timestamp="20241023 20:05:29.951" level="INFO">${node_count} = 2</msg>
<status status="PASS" starttime="20241023 20:05:29.951" endtime="20241023 20:05:29.951"/>
</kw>
<msg timestamp="20241023 20:05:29.951" level="INFO">${node_count} = 2</msg>
<status status="PASS" starttime="20241023 20:05:26.349" endtime="20241023 20:05:29.951"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_post}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20241023 20:05:29.952" level="INFO">${node_count_post} = 2</msg>
<status status="PASS" starttime="20241023 20:05:29.952" endtime="20241023 20:05:29.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count after SCM Decommission: ${node_count_post}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:29.952" level="INFO">SCM Instance Count after SCM Decommission: 2</msg>
<status status="PASS" starttime="20241023 20:05:29.952" endtime="20241023 20:05:29.952"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${node_count_expect}</arg>
<arg>${node_count_post}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241023 20:05:29.952" endtime="20241023 20:05:29.953"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/getdecomfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:05:29.957" level="INFO">Running command 'ozone sh key get /decom-volume/decom-bucket/testfiledecomm /tmp/getdecomfile 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:05:36.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:05:36.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241023 20:05:29.954" endtime="20241023 20:05:36.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:36.576" level="INFO"/>
<status status="PASS" starttime="20241023 20:05:36.575" endtime="20241023 20:05:36.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:05:36.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:05:36.576" endtime="20241023 20:05:36.577"/>
</kw>
<status status="PASS" starttime="20241023 20:05:29.954" endtime="20241023 20:05:36.577"/>
</kw>
<msg timestamp="20241023 20:05:36.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:05:29.954" endtime="20241023 20:05:36.577"/>
</kw>
<status status="PASS" starttime="20241023 20:05:29.953" endtime="20241023 20:05:36.577"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum_new}</var>
<arg>md5sum /tmp/getdecomfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241023 20:05:36.582" level="INFO">Running command 'md5sum /tmp/getdecomfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20241023 20:05:36.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20241023 20:05:36.589" level="INFO">${output} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20241023 20:05:36.579" endtime="20241023 20:05:36.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241023 20:05:36.590" level="INFO">ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20241023 20:05:36.589" endtime="20241023 20:05:36.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241023 20:05:36.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241023 20:05:36.590" endtime="20241023 20:05:36.591"/>
</kw>
<status status="PASS" starttime="20241023 20:05:36.578" endtime="20241023 20:05:36.591"/>
</kw>
<msg timestamp="20241023 20:05:36.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241023 20:05:36.578" endtime="20241023 20:05:36.591"/>
</kw>
<msg timestamp="20241023 20:05:36.591" level="INFO">${md5sum_new} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20241023 20:05:36.578" endtime="20241023 20:05:36.591"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${md5sum_new}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241023 20:05:36.591" endtime="20241023 20:05:36.592"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20241023 20:04:29.949" endtime="20241023 20:05:36.592"/>
</test>
<doc>Test Ozone SCM Decommissioning</doc>
<status status="PASS" starttime="20241023 20:04:29.843" endtime="20241023 20:05:36.593"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="99106"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Scm-Decommission">ozonesecure-ha-scm-decommission.Scm-Decommission</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
