<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20241028 21:43:19.958" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-balancer-ratis" source="/opt/hadoop/smoketest/balancer/testBalancer.robot">
<test id="s1-t1" name="Verify Container Balancer for RATIS/EC containers" line="149">
<kw name="Prepare For Tests">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:33:46.949" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:33:47.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:33:47.393" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.439298 s, 239 MB/s</msg>
<status status="PASS" starttime="20241028 21:33:46.947" endtime="20241028 21:33:47.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:33:47.394" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB, 100 MiB) copied, 0.439298 s, 239 MB/s</msg>
<status status="PASS" starttime="20241028 21:33:47.393" endtime="20241028 21:33:47.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:33:47.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:33:47.394" endtime="20241028 21:33:47.395"/>
</kw>
<status status="PASS" starttime="20241028 21:33:46.947" endtime="20241028 21:33:47.395"/>
</kw>
<msg timestamp="20241028 21:33:47.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:33:46.946" endtime="20241028 21:33:47.395"/>
</kw>
<status status="PASS" starttime="20241028 21:33:46.946" endtime="20241028 21:33:47.395"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241028 21:33:47.395" endtime="20241028 21:33:47.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:33:47.399" level="INFO">Running command 'ozone sh volume create /volume1 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:33:50.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:33:50.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:33:47.397" endtime="20241028 21:33:50.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:33:50.159" level="INFO"/>
<status status="PASS" starttime="20241028 21:33:50.159" endtime="20241028 21:33:50.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:33:50.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:33:50.160" endtime="20241028 21:33:50.161"/>
</kw>
<status status="PASS" starttime="20241028 21:33:47.396" endtime="20241028 21:33:50.161"/>
</kw>
<msg timestamp="20241028 21:33:50.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:33:47.396" endtime="20241028 21:33:50.161"/>
</kw>
<status status="PASS" starttime="20241028 21:33:47.396" endtime="20241028 21:33:50.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication ${REPLICATION} --type ${TYPE} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:33:50.166" level="INFO">Running command 'ozone sh bucket create --replication THREE --type RATIS /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:33:52.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:33:52.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:33:50.163" endtime="20241028 21:33:52.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:33:52.555" level="INFO"/>
<status status="PASS" starttime="20241028 21:33:52.555" endtime="20241028 21:33:52.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:33:52.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:33:52.556" endtime="20241028 21:33:52.556"/>
</kw>
<status status="PASS" starttime="20241028 21:33:50.162" endtime="20241028 21:33:52.556"/>
</kw>
<msg timestamp="20241028 21:33:52.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:33:50.162" endtime="20241028 21:33:52.556"/>
</kw>
<status status="PASS" starttime="20241028 21:33:50.161" endtime="20241028 21:33:52.557"/>
</kw>
<status status="PASS" starttime="20241028 21:33:46.946" endtime="20241028 21:33:52.557"/>
</kw>
<kw name="Datanode In Maintenance Mode">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode maintenance ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:33:52.561" level="INFO">Running command 'ozone admin datanode maintenance datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:33:54.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:33:54.787" level="INFO">${output} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20241028 21:33:52.558" endtime="20241028 21:33:54.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:33:54.789" level="INFO">Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20241028 21:33:54.788" endtime="20241028 21:33:54.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:33:54.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:33:54.789" endtime="20241028 21:33:54.790"/>
</kw>
<status status="PASS" starttime="20241028 21:33:52.558" endtime="20241028 21:33:54.790"/>
</kw>
<msg timestamp="20241028 21:33:54.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:33:52.558" endtime="20241028 21:33:54.790"/>
</kw>
<msg timestamp="20241028 21:33:54.790" level="INFO">${result} = Entering maintenance mode on datanode(s):
datanode1</msg>
<status status="PASS" starttime="20241028 21:33:52.557" endtime="20241028 21:33:54.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Entering maintenance mode on datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:33:54.790" endtime="20241028 21:33:54.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:33:54.793" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:33:57.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:33:57.111" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE</msg>
<status status="PASS" starttime="20241028 21:33:54.791" endtime="20241028 21:33:57.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:33:57.112" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE</msg>
<status status="PASS" starttime="20241028 21:33:57.112" endtime="20241028 21:33:57.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:33:57.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:33:57.113" endtime="20241028 21:33:57.113"/>
</kw>
<status status="PASS" starttime="20241028 21:33:54.791" endtime="20241028 21:33:57.113"/>
</kw>
<msg timestamp="20241028 21:33:57.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:33:54.791" endtime="20241028 21:33:57.113"/>
</kw>
<msg timestamp="20241028 21:33:57.113" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: ENTERING_MAINTENANCE</msg>
<status status="PASS" starttime="20241028 21:33:54.791" endtime="20241028 21:33:57.114"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:33:57.114" endtime="20241028 21:33:57.114"/>
</kw>
<status status="PASS" starttime="20241028 21:33:57.114" endtime="20241028 21:33:57.114"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Related pipelines are closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Related pipelines are closed">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \\(.*\\)$/\\1/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:33:57.118" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'|grep MAINT | sed -e 's/^.*pipelines: \(.*\)$/\1/' 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:33:59.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:33:59.407" level="INFO">${output} = No related pipelines or the node is not in Healthy state.</msg>
<status status="PASS" starttime="20241028 21:33:57.116" endtime="20241028 21:33:59.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:33:59.409" level="INFO">No related pipelines or the node is not in Healthy state.</msg>
<status status="PASS" starttime="20241028 21:33:59.408" endtime="20241028 21:33:59.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:33:59.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:33:59.409" endtime="20241028 21:33:59.409"/>
</kw>
<status status="PASS" starttime="20241028 21:33:57.116" endtime="20241028 21:33:59.409"/>
</kw>
<msg timestamp="20241028 21:33:59.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:33:57.115" endtime="20241028 21:33:59.410"/>
</kw>
<msg timestamp="20241028 21:33:59.410" level="INFO">${result} = No related pipelines or the node is not in Healthy state.</msg>
<status status="PASS" starttime="20241028 21:33:57.115" endtime="20241028 21:33:59.410"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>CLOSED</arg>
<arg>No related pipelines or the node is not in Healthy state.</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20241028 21:33:59.410" endtime="20241028 21:33:59.410"/>
</kw>
<status status="PASS" starttime="20241028 21:33:57.115" endtime="20241028 21:33:59.410"/>
</kw>
<status status="PASS" starttime="20241028 21:33:57.114" endtime="20241028 21:33:59.410"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241028 21:34:59.411" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20241028 21:33:59.410" endtime="20241028 21:34:59.411"/>
</kw>
<status status="PASS" starttime="20241028 21:33:52.557" endtime="20241028 21:34:59.411"/>
</kw>
<kw name="Get Uuid">
<var>${uuid}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep ${HOST} | sed -e 's/Datanode: //'|sed -e 's/ .*$//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:34:59.416" level="INFO">Running command 'ozone admin datanode list | awk -v RS= '{$1=$1}1'| grep datanode1 | sed -e 's/Datanode: //'|sed -e 's/ .*$//' 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:01.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:01.682" level="INFO">${output} = 7710218d-f5f3-4bee-856f-2aa6644444b6</msg>
<status status="PASS" starttime="20241028 21:34:59.413" endtime="20241028 21:35:01.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:01.683" level="INFO">7710218d-f5f3-4bee-856f-2aa6644444b6</msg>
<status status="PASS" starttime="20241028 21:35:01.682" endtime="20241028 21:35:01.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:01.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:01.683" endtime="20241028 21:35:01.684"/>
</kw>
<status status="PASS" starttime="20241028 21:34:59.413" endtime="20241028 21:35:01.684"/>
</kw>
<msg timestamp="20241028 21:35:01.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:34:59.413" endtime="20241028 21:35:01.684"/>
</kw>
<msg timestamp="20241028 21:35:01.684" level="INFO">${result} = 7710218d-f5f3-4bee-856f-2aa6644444b6</msg>
<status status="PASS" starttime="20241028 21:34:59.412" endtime="20241028 21:35:01.684"/>
</kw>
<msg timestamp="20241028 21:35:01.684" level="INFO">${uuid} = 7710218d-f5f3-4bee-856f-2aa6644444b6</msg>
<status status="PASS" starttime="20241028 21:34:59.412" endtime="20241028 21:35:01.684"/>
</kw>
<kw name="Datanode Usageinfo">
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode usageinfo --uuid=${uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:01.688" level="INFO">Running command 'ozone admin datanode usageinfo --uuid=7710218d-f5f3-4bee-856f-2aa6644444b6 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:03.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:03.957" level="INFO">${output} = Usage Information (1 Datanodes)

UUID         : 7710218d-f5f3-4bee-856f-2aa6644444b6 
IP Address   : 172.19.0.6 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 107363...</msg>
<status status="PASS" starttime="20241028 21:35:01.686" endtime="20241028 21:35:03.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:03.958" level="INFO">Usage Information (1 Datanodes)

UUID         : 7710218d-f5f3-4bee-856f-2aa6644444b6 
IP Address   : 172.19.0.6 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 1073634449 B (1023.90 MB) 
Total Used   : 4354048 B (4.15 MB) 
Total Used % : 0.41% 
Ozone Used   : 4354048 B (4.15 MB) 
Ozone Used % : 0.41% 
Remaining    : 1069280401 B (1019.75 MB) 
Remaining %  : 99.59% 
Pipeline(s)  : 0 
Container(s) : 0 
Container Pre-allocated : 0 B (0 B) 
Remaining Allocatable   : 1069280401 B (1019.75 MB) 
Free Space To Spare     : 104857600 B (100 MB) 
</msg>
<status status="PASS" starttime="20241028 21:35:03.957" endtime="20241028 21:35:03.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:03.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:03.958" endtime="20241028 21:35:03.959"/>
</kw>
<status status="PASS" starttime="20241028 21:35:01.686" endtime="20241028 21:35:03.959"/>
</kw>
<msg timestamp="20241028 21:35:03.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:01.685" endtime="20241028 21:35:03.959"/>
</kw>
<msg timestamp="20241028 21:35:03.959" level="INFO">${result} = Usage Information (1 Datanodes)

UUID         : 7710218d-f5f3-4bee-856f-2aa6644444b6 
IP Address   : 172.19.0.6 
Hostname     : ozone-balancer-datanode1-1.ozone-balancer_default 
Capacity     : 107363...</msg>
<status status="PASS" starttime="20241028 21:35:01.685" endtime="20241028 21:35:03.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Used</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:35:03.959" endtime="20241028 21:35:03.959"/>
</kw>
<status status="PASS" starttime="20241028 21:35:01.685" endtime="20241028 21:35:03.960"/>
</kw>
<kw name="Create Multiple Keys">
<arg>${KEYS}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/100mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:03.960" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20241028 21:35:03.960" endtime="20241028 21:35:03.960"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>${NUM_KEYS}</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:03.961" level="INFO">${fileName} = file-0.txt</msg>
<status status="PASS" starttime="20241028 21:35:03.961" endtime="20241028 21:35:03.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:03.962" level="INFO">${key} = /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20241028 21:35:03.962" endtime="20241028 21:35:03.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:03.962" level="INFO">file-0.txt</msg>
<status status="PASS" starttime="20241028 21:35:03.962" endtime="20241028 21:35:03.962"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:03.966" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /volume1/bucket1/file-0.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:11.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:11.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:03.964" endtime="20241028 21:35:11.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:11.608" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:11.607" endtime="20241028 21:35:11.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:11.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:11.608" endtime="20241028 21:35:11.609"/>
</kw>
<status status="PASS" starttime="20241028 21:35:03.964" endtime="20241028 21:35:11.609"/>
</kw>
<msg timestamp="20241028 21:35:11.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:03.964" endtime="20241028 21:35:11.609"/>
</kw>
<msg timestamp="20241028 21:35:11.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:03.963" endtime="20241028 21:35:11.609"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:35:11.609" endtime="20241028 21:35:11.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:11.610" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-0.txt</msg>
<status status="PASS" starttime="20241028 21:35:11.610" endtime="20241028 21:35:11.610"/>
</kw>
<status status="PASS" starttime="20241028 21:35:03.963" endtime="20241028 21:35:11.610"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241028 21:35:11.612" level="INFO">${postfix} = 06425</msg>
<status status="PASS" starttime="20241028 21:35:11.611" endtime="20241028 21:35:11.612"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:11.612" level="INFO">${tmpfile} = /tmp/tempkey-06425</msg>
<status status="PASS" starttime="20241028 21:35:11.612" endtime="20241028 21:35:11.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:11.615" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-0.txt /tmp/tempkey-06425 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:16.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:16.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:11.613" endtime="20241028 21:35:16.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:16.674" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:16.673" endtime="20241028 21:35:16.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:16.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:16.674" endtime="20241028 21:35:16.674"/>
</kw>
<status status="PASS" starttime="20241028 21:35:11.613" endtime="20241028 21:35:16.674"/>
</kw>
<msg timestamp="20241028 21:35:16.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:11.612" endtime="20241028 21:35:16.674"/>
</kw>
<status status="PASS" starttime="20241028 21:35:11.612" endtime="20241028 21:35:16.675"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20241028 21:35:16.677" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-06425 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:16.742" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20241028 21:35:16.675" endtime="20241028 21:35:16.742"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:16.746" level="INFO">Running command 'rm -f /tmp/tempkey-06425 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:16.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:16.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:16.744" endtime="20241028 21:35:16.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:16.775" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:16.774" endtime="20241028 21:35:16.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:16.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:16.775" endtime="20241028 21:35:16.776"/>
</kw>
<status status="PASS" starttime="20241028 21:35:16.744" endtime="20241028 21:35:16.776"/>
</kw>
<msg timestamp="20241028 21:35:16.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:16.743" endtime="20241028 21:35:16.776"/>
</kw>
<status status="PASS" starttime="20241028 21:35:16.743" endtime="20241028 21:35:16.776"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241028 21:35:16.777" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241028 21:35:16.776" endtime="20241028 21:35:16.777"/>
</kw>
<msg timestamp="20241028 21:35:16.777" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241028 21:35:11.611" endtime="20241028 21:35:16.777"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241028 21:35:16.777" endtime="20241028 21:35:16.777"/>
</kw>
<status status="PASS" starttime="20241028 21:35:11.610" endtime="20241028 21:35:16.777"/>
</kw>
<status status="PASS" starttime="20241028 21:35:03.961" endtime="20241028 21:35:16.777"/>
</iter>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:16.778" level="INFO">${fileName} = file-1.txt</msg>
<status status="PASS" starttime="20241028 21:35:16.778" endtime="20241028 21:35:16.778"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:16.778" level="INFO">${key} = /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20241028 21:35:16.778" endtime="20241028 21:35:16.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:16.779" level="INFO">file-1.txt</msg>
<status status="PASS" starttime="20241028 21:35:16.778" endtime="20241028 21:35:16.779"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:16.783" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /volume1/bucket1/file-1.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:23.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:23.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:16.781" endtime="20241028 21:35:23.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:23.015" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:23.011" endtime="20241028 21:35:23.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:23.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:23.015" endtime="20241028 21:35:23.015"/>
</kw>
<status status="PASS" starttime="20241028 21:35:16.780" endtime="20241028 21:35:23.016"/>
</kw>
<msg timestamp="20241028 21:35:23.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:16.780" endtime="20241028 21:35:23.016"/>
</kw>
<msg timestamp="20241028 21:35:23.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:16.779" endtime="20241028 21:35:23.016"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:35:23.016" endtime="20241028 21:35:23.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:23.017" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-1.txt</msg>
<status status="PASS" starttime="20241028 21:35:23.017" endtime="20241028 21:35:23.017"/>
</kw>
<status status="PASS" starttime="20241028 21:35:16.779" endtime="20241028 21:35:23.017"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241028 21:35:23.019" level="INFO">${postfix} = 24372</msg>
<status status="PASS" starttime="20241028 21:35:23.019" endtime="20241028 21:35:23.019"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:23.020" level="INFO">${tmpfile} = /tmp/tempkey-24372</msg>
<status status="PASS" starttime="20241028 21:35:23.020" endtime="20241028 21:35:23.020"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:23.024" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-1.txt /tmp/tempkey-24372 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:28.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:28.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:23.021" endtime="20241028 21:35:28.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:28.066" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:28.066" endtime="20241028 21:35:28.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:28.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:28.066" endtime="20241028 21:35:28.067"/>
</kw>
<status status="PASS" starttime="20241028 21:35:23.021" endtime="20241028 21:35:28.067"/>
</kw>
<msg timestamp="20241028 21:35:28.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:23.021" endtime="20241028 21:35:28.067"/>
</kw>
<status status="PASS" starttime="20241028 21:35:23.020" endtime="20241028 21:35:28.067"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20241028 21:35:28.069" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-24372 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:28.136" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20241028 21:35:28.067" endtime="20241028 21:35:28.136"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:28.140" level="INFO">Running command 'rm -f /tmp/tempkey-24372 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:28.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:28.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:28.138" endtime="20241028 21:35:28.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:28.169" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:28.169" endtime="20241028 21:35:28.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:28.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:28.170" endtime="20241028 21:35:28.170"/>
</kw>
<status status="PASS" starttime="20241028 21:35:28.138" endtime="20241028 21:35:28.170"/>
</kw>
<msg timestamp="20241028 21:35:28.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:28.137" endtime="20241028 21:35:28.170"/>
</kw>
<status status="PASS" starttime="20241028 21:35:28.137" endtime="20241028 21:35:28.171"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241028 21:35:28.171" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241028 21:35:28.171" endtime="20241028 21:35:28.171"/>
</kw>
<msg timestamp="20241028 21:35:28.171" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241028 21:35:23.018" endtime="20241028 21:35:28.171"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241028 21:35:28.171" endtime="20241028 21:35:28.172"/>
</kw>
<status status="PASS" starttime="20241028 21:35:23.018" endtime="20241028 21:35:28.172"/>
</kw>
<status status="PASS" starttime="20241028 21:35:16.777" endtime="20241028 21:35:28.172"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${fileName}</var>
<arg>file-${INDEX}.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:28.172" level="INFO">${fileName} = file-2.txt</msg>
<status status="PASS" starttime="20241028 21:35:28.172" endtime="20241028 21:35:28.172"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>/${VOLUME}/${BUCKET}/${fileName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:28.173" level="INFO">${key} = /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20241028 21:35:28.172" endtime="20241028 21:35:28.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${fileName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:28.173" level="INFO">file-2.txt</msg>
<status status="PASS" starttime="20241028 21:35:28.173" endtime="20241028 21:35:28.173"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=${REPLICATION} --type=${TYPE}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:28.179" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /volume1/bucket1/file-2.txt /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:34.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:34.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:28.175" endtime="20241028 21:35:34.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:34.111" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:34.111" endtime="20241028 21:35:34.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:34.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:34.111" endtime="20241028 21:35:34.112"/>
</kw>
<status status="PASS" starttime="20241028 21:35:28.175" endtime="20241028 21:35:34.112"/>
</kw>
<msg timestamp="20241028 21:35:34.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:28.174" endtime="20241028 21:35:34.112"/>
</kw>
<msg timestamp="20241028 21:35:34.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:28.174" endtime="20241028 21:35:34.112"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:35:34.112" endtime="20241028 21:35:34.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:34.113" level="INFO">Uploaded /tmp/100mb to /volume1/bucket1/file-2.txt</msg>
<status status="PASS" starttime="20241028 21:35:34.113" endtime="20241028 21:35:34.113"/>
</kw>
<status status="PASS" starttime="20241028 21:35:28.173" endtime="20241028 21:35:34.113"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20241028 21:35:34.115" level="INFO">${postfix} = 87562</msg>
<status status="PASS" starttime="20241028 21:35:34.114" endtime="20241028 21:35:34.115"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241028 21:35:34.115" level="INFO">${tmpfile} = /tmp/tempkey-87562</msg>
<status status="PASS" starttime="20241028 21:35:34.115" endtime="20241028 21:35:34.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:34.118" level="INFO">Running command 'ozone sh key get /volume1/bucket1/file-2.txt /tmp/tempkey-87562 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:38.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:38.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:34.116" endtime="20241028 21:35:38.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:38.992" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:38.991" endtime="20241028 21:35:38.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:38.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:38.992" endtime="20241028 21:35:38.992"/>
</kw>
<status status="PASS" starttime="20241028 21:35:34.116" endtime="20241028 21:35:38.992"/>
</kw>
<msg timestamp="20241028 21:35:38.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:34.116" endtime="20241028 21:35:38.993"/>
</kw>
<status status="PASS" starttime="20241028 21:35:34.115" endtime="20241028 21:35:38.993"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20241028 21:35:38.995" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-87562 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:39.062" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20241028 21:35:38.993" endtime="20241028 21:35:39.062"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:39.067" level="INFO">Running command 'rm -f /tmp/tempkey-87562 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:39.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:39.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:39.064" endtime="20241028 21:35:39.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:39.095" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:39.095" endtime="20241028 21:35:39.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:39.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:39.096" endtime="20241028 21:35:39.096"/>
</kw>
<status status="PASS" starttime="20241028 21:35:39.064" endtime="20241028 21:35:39.096"/>
</kw>
<msg timestamp="20241028 21:35:39.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:39.064" endtime="20241028 21:35:39.096"/>
</kw>
<status status="PASS" starttime="20241028 21:35:39.063" endtime="20241028 21:35:39.096"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241028 21:35:39.097" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241028 21:35:39.097" endtime="20241028 21:35:39.097"/>
</kw>
<msg timestamp="20241028 21:35:39.097" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241028 21:35:34.114" endtime="20241028 21:35:39.097"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241028 21:35:39.097" endtime="20241028 21:35:39.097"/>
</kw>
<status status="PASS" starttime="20241028 21:35:34.113" endtime="20241028 21:35:39.097"/>
</kw>
<status status="PASS" starttime="20241028 21:35:28.172" endtime="20241028 21:35:39.098"/>
</iter>
<status status="PASS" starttime="20241028 21:35:03.961" endtime="20241028 21:35:39.098"/>
</for>
<status status="PASS" starttime="20241028 21:35:03.960" endtime="20241028 21:35:39.098"/>
</kw>
<kw name="Close All Containers">
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>15</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.data == 3) | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:39.102" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.data == 3) | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:41.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:41.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:39.099" endtime="20241028 21:35:41.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:41.403" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:41.403" endtime="20241028 21:35:41.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:41.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:41.404" endtime="20241028 21:35:41.404"/>
</kw>
<status status="PASS" starttime="20241028 21:35:39.099" endtime="20241028 21:35:41.404"/>
</kw>
<msg timestamp="20241028 21:35:41.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:39.099" endtime="20241028 21:35:41.404"/>
</kw>
<msg timestamp="20241028 21:35:41.404" level="INFO">${container} = </msg>
<status status="PASS" starttime="20241028 21:35:39.098" endtime="20241028 21:35:41.405"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${container}" == "${EMPTY}"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20241028 21:35:41.406" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241028 21:35:41.405" endtime="20241028 21:35:41.406"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone admin container close "${container}"</arg>
<status status="NOT RUN" starttime="20241028 21:35:41.406" endtime="20241028 21:35:41.406"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${message}' != '${EMPTY}'</arg>
<arg>Should Contain</arg>
<arg>${message}</arg>
<arg>is in closing state</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20241028 21:35:41.406" endtime="20241028 21:35:41.406"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<status status="NOT RUN" starttime="20241028 21:35:41.406" endtime="20241028 21:35:41.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20241028 21:35:41.406" endtime="20241028 21:35:41.407"/>
</kw>
<status status="PASS" starttime="20241028 21:35:39.098" endtime="20241028 21:35:41.407"/>
</iter>
<status status="PASS" starttime="20241028 21:35:39.098" endtime="20241028 21:35:41.407"/>
</for>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>4min</arg>
<arg>10sec</arg>
<arg>All container is closed</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="All container is closed">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state OPEN</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:41.411" level="INFO">Running command 'ozone admin container list --state OPEN 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:43.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:43.699" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2024-10-28T21:35:06.509Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfK...</msg>
<status status="PASS" starttime="20241028 21:35:41.409" endtime="20241028 21:35:43.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:43.700" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2024-10-28T21:35:06.509Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2024-10-28T21:35:43.596833492Z",
  "owner" : "om",
  "containerID" : 1,
  "deleteTransactionId" : 0,
  "sequenceId" : 122,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2024-10-28T21:35:06.562Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2024-10-28T21:35:43.596861244Z",
  "owner" : "om",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 95,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2024-10-28T21:35:06.576Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2024-10-28T21:35:43.596874308Z",
  "owner" : "om",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 109,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20241028 21:35:43.699" endtime="20241028 21:35:43.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:43.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:43.700" endtime="20241028 21:35:43.701"/>
</kw>
<status status="PASS" starttime="20241028 21:35:41.408" endtime="20241028 21:35:43.701"/>
</kw>
<msg timestamp="20241028 21:35:43.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:41.408" endtime="20241028 21:35:43.701"/>
</kw>
<msg timestamp="20241028 21:35:43.701" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2024-10-28T21:35:06.509Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfK...</msg>
<status status="PASS" starttime="20241028 21:35:41.408" endtime="20241028 21:35:43.701"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20241028 21:35:43.702" level="INFO">Length is 1162</msg>
<msg timestamp="20241028 21:35:43.703" level="FAIL">'{
  "state" : "OPEN",
  "stateEnterTime" : "2024-10-28T21:35:06.509Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2024-10-28T21:35:43.596833492Z",
  "owner" : "om",
  "containerID" : 1,
  "deleteTransactionId" : 0,
  "sequenceId" : 122,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2024-10-28T21:35:06.562Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2024-10-28T21:35:43.596861244Z",
  "owner" : "om",
  "containerID" : 2,
  "deleteTransactionId" : 0,
  "sequenceId" : 95,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2024-10-28T21:35:06.576Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2024-10-28T21:35:43.596874308Z",
  "owner" : "om",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 109,
  "open" : true,
  "deleted" : false
}' should be empty.</msg>
<status status="FAIL" starttime="20241028 21:35:43.702" endtime="20241028 21:35:43.703"/>
</kw>
<status status="FAIL" starttime="20241028 21:35:41.407" endtime="20241028 21:35:43.703"/>
</kw>
<kw name="All container is closed">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state OPEN</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:53.707" level="INFO">Running command 'ozone admin container list --state OPEN 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:35:55.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:35:55.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:53.705" endtime="20241028 21:35:55.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:35:55.933" level="INFO"/>
<status status="PASS" starttime="20241028 21:35:55.932" endtime="20241028 21:35:55.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:35:55.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:35:55.933" endtime="20241028 21:35:55.933"/>
</kw>
<status status="PASS" starttime="20241028 21:35:53.705" endtime="20241028 21:35:55.934"/>
</kw>
<msg timestamp="20241028 21:35:55.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:53.704" endtime="20241028 21:35:55.934"/>
</kw>
<msg timestamp="20241028 21:35:55.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241028 21:35:53.704" endtime="20241028 21:35:55.934"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20241028 21:35:55.934" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20241028 21:35:55.934" endtime="20241028 21:35:55.934"/>
</kw>
<status status="PASS" starttime="20241028 21:35:53.703" endtime="20241028 21:35:55.934"/>
</kw>
<status status="PASS" starttime="20241028 21:35:41.407" endtime="20241028 21:35:55.934"/>
</kw>
<status status="PASS" starttime="20241028 21:35:39.098" endtime="20241028 21:35:55.934"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfo}</var>
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "$\{DATANODES\}" | jq -r '.[].datanodeDetails.uuid'); do ozone admin datanode usageinfo --uuid=$\{datanode\} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:35:55.938" level="INFO">Running command 'export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "${DATANODES}" | jq -r '.[].datanodeDetails.uuid'); do ozone admin datanode usageinfo --uuid=${datanode} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:36:07.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:36:07.522" level="INFO">${output} = {
  "92eec866-e90d-43df-8d23-22f95a5958ca": 466579456,
  "cad80921-b84b-4792-a5cc-8a980326aefe": 466579456,
  "4f120209-190a-4b5e-ab5a-e9fb13c3023a": 462385152,
  "7710218d-f5f3-4bee-856f-2aa6644444b6...</msg>
<status status="PASS" starttime="20241028 21:35:55.936" endtime="20241028 21:36:07.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:36:07.523" level="INFO">{
  "92eec866-e90d-43df-8d23-22f95a5958ca": 466579456,
  "cad80921-b84b-4792-a5cc-8a980326aefe": 466579456,
  "4f120209-190a-4b5e-ab5a-e9fb13c3023a": 462385152,
  "7710218d-f5f3-4bee-856f-2aa6644444b6": 4354048
}</msg>
<status status="PASS" starttime="20241028 21:36:07.522" endtime="20241028 21:36:07.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:36:07.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:36:07.523" endtime="20241028 21:36:07.524"/>
</kw>
<status status="PASS" starttime="20241028 21:35:55.936" endtime="20241028 21:36:07.524"/>
</kw>
<msg timestamp="20241028 21:36:07.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:35:55.936" endtime="20241028 21:36:07.524"/>
</kw>
<msg timestamp="20241028 21:36:07.524" level="INFO">${output} = {
  "92eec866-e90d-43df-8d23-22f95a5958ca": 466579456,
  "cad80921-b84b-4792-a5cc-8a980326aefe": 466579456,
  "4f120209-190a-4b5e-ab5a-e9fb13c3023a": 462385152,
  "7710218d-f5f3-4bee-856f-2aa6644444b6...</msg>
<status status="PASS" starttime="20241028 21:35:55.935" endtime="20241028 21:36:07.524"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${output}' | jq '. | to_entries | .[] | select(.key == "${uuid}") | .value'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:36:07.527" level="INFO">Running command 'echo '{
  "92eec866-e90d-43df-8d23-22f95a5958ca": 466579456,
  "cad80921-b84b-4792-a5cc-8a980326aefe": 466579456,
  "4f120209-190a-4b5e-ab5a-e9fb13c3023a": 462385152,
  "7710218d-f5f3-4bee-856f-2aa6644444b6": 4354048
}' | jq '. | to_entries | .[] | select(.key == "7710218d-f5f3-4bee-856f-2aa6644444b6") | .value' 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:36:07.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:36:07.533" level="INFO">${output} = 4354048</msg>
<status status="PASS" starttime="20241028 21:36:07.525" endtime="20241028 21:36:07.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:36:07.534" level="INFO">4354048</msg>
<status status="PASS" starttime="20241028 21:36:07.533" endtime="20241028 21:36:07.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:36:07.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:36:07.534" endtime="20241028 21:36:07.534"/>
</kw>
<status status="PASS" starttime="20241028 21:36:07.525" endtime="20241028 21:36:07.535"/>
</kw>
<msg timestamp="20241028 21:36:07.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:36:07.525" endtime="20241028 21:36:07.535"/>
</kw>
<msg timestamp="20241028 21:36:07.535" level="INFO">${result} = 4354048</msg>
<status status="PASS" starttime="20241028 21:36:07.524" endtime="20241028 21:36:07.535"/>
</kw>
<msg timestamp="20241028 21:36:07.535" level="INFO">${datanodeOzoneUsedBytesInfo} = 4354048</msg>
<status status="PASS" starttime="20241028 21:35:55.935" endtime="20241028 21:36:07.535"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo} &lt; ${SIZE}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241028 21:36:07.535" endtime="20241028 21:36:07.536"/>
</kw>
<kw name="Datanode Recommission">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode recommission ${HOST}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:36:07.539" level="INFO">Running command 'ozone admin datanode recommission datanode1 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:36:09.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:36:09.806" level="INFO">${output} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20241028 21:36:07.537" endtime="20241028 21:36:09.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:36:09.808" level="INFO">Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20241028 21:36:09.807" endtime="20241028 21:36:09.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:36:09.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:36:09.808" endtime="20241028 21:36:09.809"/>
</kw>
<status status="PASS" starttime="20241028 21:36:07.537" endtime="20241028 21:36:09.810"/>
</kw>
<msg timestamp="20241028 21:36:09.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:36:07.537" endtime="20241028 21:36:09.810"/>
</kw>
<msg timestamp="20241028 21:36:09.810" level="INFO">${result} = Started recommissioning datanode(s):
datanode1</msg>
<status status="PASS" starttime="20241028 21:36:07.536" endtime="20241028 21:36:09.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Started recommissioning datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:36:09.811" endtime="20241028 21:36:09.811"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Datanode Recommission is Finished</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode Recommission is Finished">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin datanode list | grep "Operational State:*"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:36:09.815" level="INFO">Running command 'ozone admin datanode list | grep "Operational State:*" 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:36:12.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:36:12.021" level="INFO">${output} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_MAINTENANCE</msg>
<status status="PASS" starttime="20241028 21:36:09.813" endtime="20241028 21:36:12.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:36:12.022" level="INFO">Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_MAINTENANCE</msg>
<status status="PASS" starttime="20241028 21:36:12.022" endtime="20241028 21:36:12.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:36:12.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:36:12.023" endtime="20241028 21:36:12.023"/>
</kw>
<status status="PASS" starttime="20241028 21:36:09.813" endtime="20241028 21:36:12.023"/>
</kw>
<msg timestamp="20241028 21:36:12.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:36:09.813" endtime="20241028 21:36:12.023"/>
</kw>
<msg timestamp="20241028 21:36:12.023" level="INFO">${result} = Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_SERVICE
Operational State: IN_MAINTENANCE</msg>
<status status="PASS" starttime="20241028 21:36:09.812" endtime="20241028 21:36:12.023"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ENTERING_MAINTENANCE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:36:12.024" endtime="20241028 21:36:12.024"/>
</kw>
<status status="PASS" starttime="20241028 21:36:09.812" endtime="20241028 21:36:12.024"/>
</kw>
<status status="PASS" starttime="20241028 21:36:09.811" endtime="20241028 21:36:12.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>300000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241028 21:41:12.025" level="INFO">Slept 5 minutes</msg>
<status status="PASS" starttime="20241028 21:36:12.024" endtime="20241028 21:41:12.025"/>
</kw>
<status status="PASS" starttime="20241028 21:36:07.536" endtime="20241028 21:41:12.025"/>
</kw>
<kw name="Run Container Balancer">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer start -t 1 -d 100 -i 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:41:12.029" level="INFO">Running command 'ozone admin containerbalancer start -t 1 -d 100 -i 1 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:41:14.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:41:14.135" level="INFO">${output} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20241028 21:41:12.027" endtime="20241028 21:41:14.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:41:14.136" level="INFO">Container Balancer started successfully.</msg>
<status status="PASS" starttime="20241028 21:41:14.135" endtime="20241028 21:41:14.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:41:14.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:41:14.136" endtime="20241028 21:41:14.136"/>
</kw>
<status status="PASS" starttime="20241028 21:41:12.026" endtime="20241028 21:41:14.137"/>
</kw>
<msg timestamp="20241028 21:41:14.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:41:12.026" endtime="20241028 21:41:14.137"/>
</kw>
<msg timestamp="20241028 21:41:14.137" level="INFO">${result} = Container Balancer started successfully.</msg>
<status status="PASS" starttime="20241028 21:41:12.026" endtime="20241028 21:41:14.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Container Balancer started successfully.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:14.137" endtime="20241028 21:41:14.137"/>
</kw>
<status status="PASS" starttime="20241028 21:41:12.025" endtime="20241028 21:41:14.137"/>
</kw>
<kw name="Run Balancer Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:41:14.142" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:41:16.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:41:16.220" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:14.139" endtime="20241028 21:41:16.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:41:16.221" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:16.220" endtime="20241028 21:41:16.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:41:16.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:41:16.221" endtime="20241028 21:41:16.222"/>
</kw>
<status status="PASS" starttime="20241028 21:41:14.139" endtime="20241028 21:41:16.222"/>
</kw>
<msg timestamp="20241028 21:41:16.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:41:14.138" endtime="20241028 21:41:16.222"/>
</kw>
<msg timestamp="20241028 21:41:16.222" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:14.138" endtime="20241028 21:41:16.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:16.222" endtime="20241028 21:41:16.223"/>
</kw>
<status status="PASS" starttime="20241028 21:41:14.138" endtime="20241028 21:41:16.223"/>
</kw>
<kw name="Run Balancer Verbose Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status -v</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:41:16.226" level="INFO">Running command 'ozone admin containerbalancer status -v 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:41:18.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:41:18.483" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2024-10-28 21:41:14

Container Balancer Configuration values:
Key                                                Value
Threshold                              ...</msg>
<status status="PASS" starttime="20241028 21:41:16.224" endtime="20241028 21:41:18.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:41:18.484" level="INFO">ContainerBalancer is Running.
Started at: 2024-10-28 21:41:14

Container Balancer Configuration values:
Key                                                Value
Threshold                                          1.0
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               1
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    70min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration result                                   IN_PROGRESS
Size scheduled to move                             0
Moved data size                                    0
Scheduled to move containers                       3
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
7710218d-f5f3-4bee-856f-2aa6644444b6 &lt;- 0
Exited data from nodes                             
92eec866-e90d-43df-8d23-22f95a5958ca -&gt; 0
4f120209-190a-4b5e-ab5a-e9fb13c3023a -&gt; 0
cad80921-b84b-4792-a5cc-8a980326aefe -&gt; 0
</msg>
<status status="PASS" starttime="20241028 21:41:18.483" endtime="20241028 21:41:18.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:41:18.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:41:18.484" endtime="20241028 21:41:18.484"/>
</kw>
<status status="PASS" starttime="20241028 21:41:16.224" endtime="20241028 21:41:18.484"/>
</kw>
<msg timestamp="20241028 21:41:18.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:41:16.224" endtime="20241028 21:41:18.485"/>
</kw>
<msg timestamp="20241028 21:41:18.485" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2024-10-28 21:41:14

Container Balancer Configuration values:
Key                                                Value
Threshold                              ...</msg>
<status status="PASS" starttime="20241028 21:41:16.223" endtime="20241028 21:41:18.485"/>
</kw>
<kw name="Verify Verbose Balancer Status">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:18.485" endtime="20241028 21:41:18.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:18.486" endtime="20241028 21:41:18.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:18.486" endtime="20241028 21:41:18.486"/>
</kw>
<status status="PASS" starttime="20241028 21:41:18.485" endtime="20241028 21:41:18.486"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<arg>IN_PROGRESS</arg>
<arg>3</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number</arg>
<arg>${number}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:18.487" endtime="20241028 21:41:18.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result</arg>
<arg>${status}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:18.487" endtime="20241028 21:41:18.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>${containers}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:18.488" endtime="20241028 21:41:18.488"/>
</kw>
<status status="PASS" starttime="20241028 21:41:18.486" endtime="20241028 21:41:18.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Current iteration info:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:18.488" endtime="20241028 21:41:18.488"/>
</kw>
<status status="PASS" starttime="20241028 21:41:16.223" endtime="20241028 21:41:18.488"/>
</kw>
<kw name="Run Balancer Verbose History Status">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status -v --history</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:41:18.492" level="INFO">Running command 'ozone admin containerbalancer status -v --history 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:41:20.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:41:20.652" level="INFO">${output} = ContainerBalancer is Running.
Started at: 2024-10-28 21:41:14

Container Balancer Configuration values:
Key                                                Value
Threshold                              ...</msg>
<status status="PASS" starttime="20241028 21:41:18.490" endtime="20241028 21:41:20.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:41:20.653" level="INFO">ContainerBalancer is Running.
Started at: 2024-10-28 21:41:14

Container Balancer Configuration values:
Key                                                Value
Threshold                                          1.0
Max Datanodes to Involve per Iteration(percent)    100
Max Size to Move per Iteration                     0GB
Max Size Entering Target per Iteration             26GB
Max Size Leaving Source per Iteration              26GB
Number of Iterations                               1
Time Limit for Single Container's Movement         65min
Time Limit for Single Container's Replication      50min
Interval between each Iteration                    70min
Whether to Enable Network Topology                 false
Whether to Trigger Refresh Datanode Usage Info     false
Container IDs to Exclude from Balancing            None
Datanodes Specified to be Balanced                 None
Datanodes Excluded from Balancing                  None

Current iteration info:
Key                                                Value
Iteration number                                   1
Iteration result                                   IN_PROGRESS
Size scheduled to move                             0
Moved data size                                    0
Scheduled to move containers                       3
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
7710218d-f5f3-4bee-856f-2aa6644444b6 &lt;- 0
Exited data from nodes                             
92eec866-e90d-43df-8d23-22f95a5958ca -&gt; 0
4f120209-190a-4b5e-ab5a-e9fb13c3023a -&gt; 0
cad80921-b84b-4792-a5cc-8a980326aefe -&gt; 0

Iteration history list:
Key                                                Value
Iteration number                                   1
Iteration result                                   IN_PROGRESS
Size scheduled to move                             0
Moved data size                                    0
Scheduled to move containers                       3
Already moved containers                           0
Failed to move containers                          0
Failed to move containers by timeout               0
Entered data to nodes                              
7710218d-f5f3-4bee-856f-2aa6644444b6 &lt;- 0
Exited data from nodes                             
92eec866-e90d-43df-8d23-22f95a5958ca -&gt; 0
4f120209-190a-4b5e-ab5a-e9fb13c3023a -&gt; 0
cad80921-b84b-4792-a5cc-8a980326aefe -&gt; 0
</msg>
<status status="PASS" starttime="20241028 21:41:20.653" endtime="20241028 21:41:20.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:41:20.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:41:20.654" endtime="20241028 21:41:20.654"/>
</kw>
<status status="PASS" starttime="20241028 21:41:18.489" endtime="20241028 21:41:20.654"/>
</kw>
<msg timestamp="20241028 21:41:20.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:41:18.489" endtime="20241028 21:41:20.654"/>
</kw>
<msg timestamp="20241028 21:41:20.654" level="INFO">${result} = ContainerBalancer is Running.
Started at: 2024-10-28 21:41:14

Container Balancer Configuration values:
Key                                                Value
Threshold                              ...</msg>
<status status="PASS" starttime="20241028 21:41:18.489" endtime="20241028 21:41:20.655"/>
</kw>
<kw name="Verify Verbose Balancer Status">
<arg>${result}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ContainerBalancer is Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:20.655" endtime="20241028 21:41:20.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Started at:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:20.655" endtime="20241028 21:41:20.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container Balancer Configuration values:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:20.656" endtime="20241028 21:41:20.656"/>
</kw>
<status status="PASS" starttime="20241028 21:41:20.655" endtime="20241028 21:41:20.656"/>
</kw>
<kw name="Verify Balancer Iteration">
<arg>${result}</arg>
<arg>1</arg>
<arg>IN_PROGRESS</arg>
<arg>3</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration number</arg>
<arg>${number}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:20.657" endtime="20241028 21:41:20.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Iteration result</arg>
<arg>${status}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:20.657" endtime="20241028 21:41:20.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Scheduled to move containers</arg>
<arg>${containers}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:20.657" endtime="20241028 21:41:20.658"/>
</kw>
<status status="PASS" starttime="20241028 21:41:20.656" endtime="20241028 21:41:20.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Iteration history list:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:41:20.658" endtime="20241028 21:41:20.658"/>
</kw>
<status status="PASS" starttime="20241028 21:41:18.488" endtime="20241028 21:41:20.658"/>
</kw>
<kw name="Wait Finish Of Balancing">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:41:20.661" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:41:22.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:41:22.696" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:20.659" endtime="20241028 21:41:22.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:41:22.697" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:22.697" endtime="20241028 21:41:22.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:41:22.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:41:22.698" endtime="20241028 21:41:22.698"/>
</kw>
<status status="PASS" starttime="20241028 21:41:20.659" endtime="20241028 21:41:22.698"/>
</kw>
<msg timestamp="20241028 21:41:22.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:41:20.659" endtime="20241028 21:41:22.698"/>
</kw>
<msg timestamp="20241028 21:41:22.698" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:20.658" endtime="20241028 21:41:22.698"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>6min</arg>
<arg>10sec</arg>
<arg>ContainerBalancer is Not Running</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:41:22.702" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:41:24.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:41:24.890" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:22.700" endtime="20241028 21:41:24.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:41:24.891" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:24.891" endtime="20241028 21:41:24.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:41:24.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:41:24.892" endtime="20241028 21:41:24.892"/>
</kw>
<status status="PASS" starttime="20241028 21:41:22.700" endtime="20241028 21:41:24.892"/>
</kw>
<msg timestamp="20241028 21:41:24.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:41:22.700" endtime="20241028 21:41:24.892"/>
</kw>
<msg timestamp="20241028 21:41:24.892" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:22.699" endtime="20241028 21:41:24.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20241028 21:41:24.893" level="FAIL">'ContainerBalancer is Running.' does not contain 'ContainerBalancer is Not Running.'</msg>
<status status="FAIL" starttime="20241028 21:41:24.893" endtime="20241028 21:41:24.893"/>
</kw>
<status status="FAIL" starttime="20241028 21:41:22.699" endtime="20241028 21:41:24.893"/>
</kw>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:41:34.897" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:41:36.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:41:36.972" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:34.895" endtime="20241028 21:41:36.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:41:36.973" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:36.972" endtime="20241028 21:41:36.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:41:36.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:41:36.973" endtime="20241028 21:41:36.973"/>
</kw>
<status status="PASS" starttime="20241028 21:41:34.895" endtime="20241028 21:41:36.974"/>
</kw>
<msg timestamp="20241028 21:41:36.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:41:34.894" endtime="20241028 21:41:36.974"/>
</kw>
<msg timestamp="20241028 21:41:36.974" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:34.894" endtime="20241028 21:41:36.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20241028 21:41:36.974" level="FAIL">'ContainerBalancer is Running.' does not contain 'ContainerBalancer is Not Running.'</msg>
<status status="FAIL" starttime="20241028 21:41:36.974" endtime="20241028 21:41:36.974"/>
</kw>
<status status="FAIL" starttime="20241028 21:41:34.893" endtime="20241028 21:41:36.975"/>
</kw>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:41:46.979" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:41:49.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:41:49.032" level="INFO">${output} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:46.977" endtime="20241028 21:41:49.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:41:49.033" level="INFO">ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:49.032" endtime="20241028 21:41:49.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:41:49.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:41:49.033" endtime="20241028 21:41:49.034"/>
</kw>
<status status="PASS" starttime="20241028 21:41:46.976" endtime="20241028 21:41:49.034"/>
</kw>
<msg timestamp="20241028 21:41:49.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:41:46.976" endtime="20241028 21:41:49.034"/>
</kw>
<msg timestamp="20241028 21:41:49.034" level="INFO">${result} = ContainerBalancer is Running.</msg>
<status status="PASS" starttime="20241028 21:41:46.976" endtime="20241028 21:41:49.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20241028 21:41:49.034" level="FAIL">'ContainerBalancer is Running.' does not contain 'ContainerBalancer is Not Running.'</msg>
<status status="FAIL" starttime="20241028 21:41:49.034" endtime="20241028 21:41:49.035"/>
</kw>
<status status="FAIL" starttime="20241028 21:41:46.975" endtime="20241028 21:41:49.035"/>
</kw>
<kw name="ContainerBalancer is Not Running">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin containerbalancer status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:41:59.040" level="INFO">Running command 'ozone admin containerbalancer status 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:42:01.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:42:01.107" level="INFO">${output} = ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20241028 21:41:59.038" endtime="20241028 21:42:01.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:42:01.108" level="INFO">ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20241028 21:42:01.107" endtime="20241028 21:42:01.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:42:01.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:42:01.108" endtime="20241028 21:42:01.109"/>
</kw>
<status status="PASS" starttime="20241028 21:41:59.037" endtime="20241028 21:42:01.109"/>
</kw>
<msg timestamp="20241028 21:42:01.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:41:59.037" endtime="20241028 21:42:01.109"/>
</kw>
<msg timestamp="20241028 21:42:01.109" level="INFO">${result} = ContainerBalancer is Not Running.</msg>
<status status="PASS" starttime="20241028 21:41:59.036" endtime="20241028 21:42:01.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContainerBalancer is Not Running.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241028 21:42:01.109" endtime="20241028 21:42:01.110"/>
</kw>
<status status="PASS" starttime="20241028 21:41:59.035" endtime="20241028 21:42:01.110"/>
</kw>
<status status="PASS" starttime="20241028 21:41:22.699" endtime="20241028 21:42:01.110"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>60000ms</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241028 21:43:01.110" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20241028 21:42:01.110" endtime="20241028 21:43:01.110"/>
</kw>
<status status="PASS" starttime="20241028 21:41:20.658" endtime="20241028 21:43:01.110"/>
</kw>
<kw name="Get Datanode Ozone Used Bytes Info">
<var>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</var>
<arg>${uuid}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "$\{DATANODES\}" | jq -r '.[].datanodeDetails.uuid'); do ozone admin datanode usageinfo --uuid=$\{datanode\} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:43:01.114" level="INFO">Running command 'export DATANODES=$(ozone admin datanode list --json) &amp;&amp; for datanode in $(echo "${DATANODES}" | jq -r '.[].datanodeDetails.uuid'); do ozone admin datanode usageinfo --uuid=${datanode} --json | jq '{(.[0].datanodeDetails.uuid) : .[0].ozoneUsed}'; done | jq -s add 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:43:12.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:43:12.227" level="INFO">${output} = {
  "92eec866-e90d-43df-8d23-22f95a5958ca": 361717760,
  "cad80921-b84b-4792-a5cc-8a980326aefe": 361717760,
  "4f120209-190a-4b5e-ab5a-e9fb13c3023a": 361717760,
  "7710218d-f5f3-4bee-856f-2aa6644444b6...</msg>
<status status="PASS" starttime="20241028 21:43:01.112" endtime="20241028 21:43:12.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:43:12.228" level="INFO">{
  "92eec866-e90d-43df-8d23-22f95a5958ca": 361717760,
  "cad80921-b84b-4792-a5cc-8a980326aefe": 361717760,
  "4f120209-190a-4b5e-ab5a-e9fb13c3023a": 361717760,
  "7710218d-f5f3-4bee-856f-2aa6644444b6": 319090688
}</msg>
<status status="PASS" starttime="20241028 21:43:12.227" endtime="20241028 21:43:12.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:43:12.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:43:12.228" endtime="20241028 21:43:12.228"/>
</kw>
<status status="PASS" starttime="20241028 21:43:01.112" endtime="20241028 21:43:12.229"/>
</kw>
<msg timestamp="20241028 21:43:12.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:43:01.112" endtime="20241028 21:43:12.229"/>
</kw>
<msg timestamp="20241028 21:43:12.229" level="INFO">${output} = {
  "92eec866-e90d-43df-8d23-22f95a5958ca": 361717760,
  "cad80921-b84b-4792-a5cc-8a980326aefe": 361717760,
  "4f120209-190a-4b5e-ab5a-e9fb13c3023a": 361717760,
  "7710218d-f5f3-4bee-856f-2aa6644444b6...</msg>
<status status="PASS" starttime="20241028 21:43:01.111" endtime="20241028 21:43:12.229"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>echo '${output}' | jq '. | to_entries | .[] | select(.key == "${uuid}") | .value'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20241028 21:43:12.232" level="INFO">Running command 'echo '{
  "92eec866-e90d-43df-8d23-22f95a5958ca": 361717760,
  "cad80921-b84b-4792-a5cc-8a980326aefe": 361717760,
  "4f120209-190a-4b5e-ab5a-e9fb13c3023a": 361717760,
  "7710218d-f5f3-4bee-856f-2aa6644444b6": 319090688
}' | jq '. | to_entries | .[] | select(.key == "7710218d-f5f3-4bee-856f-2aa6644444b6") | .value' 2&gt;&amp;1'.</msg>
<msg timestamp="20241028 21:43:12.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20241028 21:43:12.238" level="INFO">${output} = 319090688</msg>
<status status="PASS" starttime="20241028 21:43:12.230" endtime="20241028 21:43:12.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241028 21:43:12.239" level="INFO">319090688</msg>
<status status="PASS" starttime="20241028 21:43:12.238" endtime="20241028 21:43:12.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20241028 21:43:12.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20241028 21:43:12.239" endtime="20241028 21:43:12.239"/>
</kw>
<status status="PASS" starttime="20241028 21:43:12.230" endtime="20241028 21:43:12.239"/>
</kw>
<msg timestamp="20241028 21:43:12.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241028 21:43:12.230" endtime="20241028 21:43:12.240"/>
</kw>
<msg timestamp="20241028 21:43:12.240" level="INFO">${result} = 319090688</msg>
<status status="PASS" starttime="20241028 21:43:12.229" endtime="20241028 21:43:12.240"/>
</kw>
<msg timestamp="20241028 21:43:12.240" level="INFO">${datanodeOzoneUsedBytesInfoAfterContainerBalancing} = 319090688</msg>
<status status="PASS" starttime="20241028 21:43:01.111" endtime="20241028 21:43:12.240"/>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfo}</arg>
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing}</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<status status="PASS" starttime="20241028 21:43:12.240" endtime="20241028 21:43:12.241"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &lt; ${SIZE} * ${UPPER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241028 21:43:12.241" endtime="20241028 21:43:12.241"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${datanodeOzoneUsedBytesInfoAfterContainerBalancing} &gt; ${SIZE} * ${LOWER_LIMIT}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241028 21:43:12.241" endtime="20241028 21:43:12.242"/>
</kw>
<timeout value="20 minutes"/>
<status status="PASS" starttime="20241028 21:33:46.945" endtime="20241028 21:43:12.242"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20241028 21:33:46.889" endtime="20241028 21:43:12.243"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="ozone-balancer-ratis">ozone-balancer-ratis</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
