<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20240105 19:33:30.666" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:20.772" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:20.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:20.775" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240105 19:26:20.770" endtime="20240105 19:26:20.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:20.775" level="INFO">scm</msg>
<status status="PASS" starttime="20240105 19:26:20.775" endtime="20240105 19:26:20.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:20.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:20.776" endtime="20240105 19:26:20.776"/>
</kw>
<status status="PASS" starttime="20240105 19:26:20.769" endtime="20240105 19:26:20.776"/>
</kw>
<msg timestamp="20240105 19:26:20.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:20.769" endtime="20240105 19:26:20.777"/>
</kw>
<msg timestamp="20240105 19:26:20.777" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240105 19:26:20.769" endtime="20240105 19:26:20.778"/>
</kw>
<msg timestamp="20240105 19:26:20.778" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:20.768" endtime="20240105 19:26:20.778"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240105 19:26:20.778" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:20.778" endtime="20240105 19:26:20.778"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:20.781" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:20.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:20.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:20.780" endtime="20240105 19:26:20.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:20.806" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:20.806" endtime="20240105 19:26:20.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:20.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:20.806" endtime="20240105 19:26:20.807"/>
</kw>
<status status="PASS" starttime="20240105 19:26:20.779" endtime="20240105 19:26:20.807"/>
</kw>
<msg timestamp="20240105 19:26:20.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:20.779" endtime="20240105 19:26:20.808"/>
</kw>
<status status="PASS" starttime="20240105 19:26:20.779" endtime="20240105 19:26:20.808"/>
</kw>
<status status="PASS" starttime="20240105 19:26:20.778" endtime="20240105 19:26:20.808"/>
</kw>
<status status="PASS" starttime="20240105 19:26:20.768" endtime="20240105 19:26:20.808"/>
</kw>
<status status="PASS" starttime="20240105 19:26:20.768" endtime="20240105 19:26:20.808"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:20.810" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:20.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:20.812" level="INFO">${output} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20240105 19:26:20.809" endtime="20240105 19:26:20.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:20.812" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20240105 19:26:20.812" endtime="20240105 19:26:20.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:20.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:20.813" endtime="20240105 19:26:20.813"/>
</kw>
<status status="PASS" starttime="20240105 19:26:20.809" endtime="20240105 19:26:20.813"/>
</kw>
<msg timestamp="20240105 19:26:20.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:20.808" endtime="20240105 19:26:20.814"/>
</kw>
<msg timestamp="20240105 19:26:20.814" level="INFO">${result} = OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20240105 19:26:20.808" endtime="20240105 19:26:20.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:20.814" level="INFO">OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.om.ratis.enable=true
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_hdds.block.token.enabled=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20240105 19:26:20.814" endtime="20240105 19:26:20.815"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240105 19:26:20.815" endtime="20240105 19:26:20.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:20.817" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:22.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:22.962" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240105 19:26:20.816" endtime="20240105 19:26:22.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:22.964" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240105 19:26:22.963" endtime="20240105 19:26:22.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:22.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:22.964" endtime="20240105 19:26:22.965"/>
</kw>
<status status="PASS" starttime="20240105 19:26:20.816" endtime="20240105 19:26:22.966"/>
</kw>
<msg timestamp="20240105 19:26:22.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:20.815" endtime="20240105 19:26:22.966"/>
</kw>
<msg timestamp="20240105 19:26:22.967" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240105 19:26:20.815" endtime="20240105 19:26:22.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:22.968" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240105 19:26:22.967" endtime="20240105 19:26:22.968"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20240105 19:26:22.970" endtime="20240105 19:26:22.971"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240105 19:26:20.767" endtime="20240105 19:26:22.971"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:22.981" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:22.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:22.983" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240105 19:26:22.978" endtime="20240105 19:26:22.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:22.985" level="INFO">scm</msg>
<status status="PASS" starttime="20240105 19:26:22.984" endtime="20240105 19:26:22.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:22.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:22.985" endtime="20240105 19:26:22.986"/>
</kw>
<status status="PASS" starttime="20240105 19:26:22.978" endtime="20240105 19:26:22.986"/>
</kw>
<msg timestamp="20240105 19:26:22.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:22.978" endtime="20240105 19:26:22.987"/>
</kw>
<msg timestamp="20240105 19:26:22.987" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240105 19:26:22.977" endtime="20240105 19:26:22.987"/>
</kw>
<msg timestamp="20240105 19:26:22.988" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:22.977" endtime="20240105 19:26:22.988"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240105 19:26:22.988" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:22.988" endtime="20240105 19:26:22.988"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:22.993" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:23.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:23.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:22.991" endtime="20240105 19:26:23.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:23.034" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:23.034" endtime="20240105 19:26:23.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:23.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:23.035" endtime="20240105 19:26:23.036"/>
</kw>
<status status="PASS" starttime="20240105 19:26:22.990" endtime="20240105 19:26:23.036"/>
</kw>
<msg timestamp="20240105 19:26:23.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:22.990" endtime="20240105 19:26:23.037"/>
</kw>
<status status="PASS" starttime="20240105 19:26:22.989" endtime="20240105 19:26:23.037"/>
</kw>
<status status="PASS" starttime="20240105 19:26:22.988" endtime="20240105 19:26:23.037"/>
</kw>
<status status="PASS" starttime="20240105 19:26:22.977" endtime="20240105 19:26:23.037"/>
</kw>
<status status="PASS" starttime="20240105 19:26:22.976" endtime="20240105 19:26:23.037"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240105 19:26:23.038" endtime="20240105 19:26:23.038"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:23.043" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:25.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:25.157" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240105 19:26:23.040" endtime="20240105 19:26:25.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:25.158" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240105 19:26:25.157" endtime="20240105 19:26:25.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:25.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:25.158" endtime="20240105 19:26:25.158"/>
</kw>
<status status="PASS" starttime="20240105 19:26:23.039" endtime="20240105 19:26:25.158"/>
</kw>
<msg timestamp="20240105 19:26:25.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:23.039" endtime="20240105 19:26:25.159"/>
</kw>
<msg timestamp="20240105 19:26:25.159" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240105 19:26:23.038" endtime="20240105 19:26:25.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:25.159" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240105 19:26:25.159" endtime="20240105 19:26:25.159"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20240105 19:26:25.159" endtime="20240105 19:26:25.160"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240105 19:26:22.974" endtime="20240105 19:26:25.160"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20240105 19:26:20.729" endtime="20240105 19:26:25.161"/>
</suite>
<suite id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:28.091" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:28.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:28.093" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240105 19:26:28.089" endtime="20240105 19:26:28.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:28.093" level="INFO">scm</msg>
<status status="PASS" starttime="20240105 19:26:28.093" endtime="20240105 19:26:28.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:28.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:28.093" endtime="20240105 19:26:28.094"/>
</kw>
<status status="PASS" starttime="20240105 19:26:28.088" endtime="20240105 19:26:28.094"/>
</kw>
<msg timestamp="20240105 19:26:28.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:28.088" endtime="20240105 19:26:28.095"/>
</kw>
<msg timestamp="20240105 19:26:28.095" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240105 19:26:28.087" endtime="20240105 19:26:28.095"/>
</kw>
<msg timestamp="20240105 19:26:28.095" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:28.087" endtime="20240105 19:26:28.095"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240105 19:26:28.096" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:28.095" endtime="20240105 19:26:28.096"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:28.098" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:28.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:28.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:28.097" endtime="20240105 19:26:28.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:28.119" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:28.119" endtime="20240105 19:26:28.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:28.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:28.119" endtime="20240105 19:26:28.120"/>
</kw>
<status status="PASS" starttime="20240105 19:26:28.097" endtime="20240105 19:26:28.120"/>
</kw>
<msg timestamp="20240105 19:26:28.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:28.096" endtime="20240105 19:26:28.120"/>
</kw>
<status status="PASS" starttime="20240105 19:26:28.096" endtime="20240105 19:26:28.120"/>
</kw>
<status status="PASS" starttime="20240105 19:26:28.096" endtime="20240105 19:26:28.120"/>
</kw>
<status status="PASS" starttime="20240105 19:26:28.087" endtime="20240105 19:26:28.120"/>
</kw>
<status status="PASS" starttime="20240105 19:26:28.086" endtime="20240105 19:26:28.121"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:28.124" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:30.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:30.332" level="INFO">${output} = 2024-01-05 19:26:30,226 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20240105 19:26:28.123" endtime="20240105 19:26:30.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:30.333" level="INFO">2024-01-05 19:26:30,226 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20240105 19:26:30.333" endtime="20240105 19:26:30.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:30.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:30.334" endtime="20240105 19:26:30.334"/>
</kw>
<status status="PASS" starttime="20240105 19:26:28.122" endtime="20240105 19:26:30.334"/>
</kw>
<msg timestamp="20240105 19:26:30.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:28.122" endtime="20240105 19:26:30.335"/>
</kw>
<msg timestamp="20240105 19:26:30.335" level="INFO">${output} = 2024-01-05 19:26:30,226 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with testuser as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20240105 19:26:28.122" endtime="20240105 19:26:30.335"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:30.336" endtime="20240105 19:26:30.336"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:30.341" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:32.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:32.617" level="INFO">${output} = 2024-01-05 19:26:32,571 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20240105 19:26:30.338" endtime="20240105 19:26:32.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:32.618" level="INFO">2024-01-05 19:26:32,571 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20240105 19:26:32.617" endtime="20240105 19:26:32.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:32.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:32.618" endtime="20240105 19:26:32.619"/>
</kw>
<status status="PASS" starttime="20240105 19:26:30.338" endtime="20240105 19:26:32.620"/>
</kw>
<msg timestamp="20240105 19:26:32.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:30.337" endtime="20240105 19:26:32.620"/>
</kw>
<msg timestamp="20240105 19:26:32.620" level="INFO">${output} = 2024-01-05 19:26:32,571 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and E...</msg>
<status status="PASS" starttime="20240105 19:26:30.336" endtime="20240105 19:26:32.620"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:32.620" endtime="20240105 19:26:32.621"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240105 19:26:28.121" endtime="20240105 19:26:32.621"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:32.624" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240105 19:26:32.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:32.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:32.622" endtime="20240105 19:26:32.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:32.627" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:32.627" endtime="20240105 19:26:32.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:32.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:32.627" endtime="20240105 19:26:32.628"/>
</kw>
<status status="PASS" starttime="20240105 19:26:32.622" endtime="20240105 19:26:32.628"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:32.632" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:36.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:36.924" level="INFO">${output} = 2024-01-05 19:26:35,274 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-05 19:26:35,345 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240105 19:26:32.631" endtime="20240105 19:26:36.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:36.925" level="INFO">2024-01-05 19:26:35,274 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-05 19:26:35,345 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-05 19:26:35,345 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2024-01-05 19:26:35,526 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20240105 19:26:36.924" endtime="20240105 19:26:36.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:36.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:36.925" endtime="20240105 19:26:36.925"/>
</kw>
<status status="PASS" starttime="20240105 19:26:32.630" endtime="20240105 19:26:36.926"/>
</kw>
<msg timestamp="20240105 19:26:36.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:32.629" endtime="20240105 19:26:36.926"/>
</kw>
<msg timestamp="20240105 19:26:36.926" level="INFO">${output} = 2024-01-05 19:26:35,274 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-05 19:26:35,345 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240105 19:26:32.629" endtime="20240105 19:26:36.926"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:36.926" endtime="20240105 19:26:36.927"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:36.929" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:36.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:36.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:36.927" endtime="20240105 19:26:36.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:36.931" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:36.930" endtime="20240105 19:26:36.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:36.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:36.931" endtime="20240105 19:26:36.931"/>
</kw>
<status status="PASS" starttime="20240105 19:26:36.927" endtime="20240105 19:26:36.932"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240105 19:26:32.621" endtime="20240105 19:26:36.932"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:36.935" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:39.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:39.077" level="INFO">${output} = 2024-01-05 19:26:39,042 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20240105 19:26:36.934" endtime="20240105 19:26:39.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:39.077" level="INFO">2024-01-05 19:26:39,042 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20240105 19:26:39.077" endtime="20240105 19:26:39.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:39.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:39.078" endtime="20240105 19:26:39.078"/>
</kw>
<status status="PASS" starttime="20240105 19:26:36.934" endtime="20240105 19:26:39.078"/>
</kw>
<msg timestamp="20240105 19:26:39.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:36.933" endtime="20240105 19:26:39.079"/>
</kw>
<msg timestamp="20240105 19:26:39.079" level="INFO">${output} = 2024-01-05 19:26:39,042 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryptio...</msg>
<status status="PASS" starttime="20240105 19:26:36.933" endtime="20240105 19:26:39.079"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:39.079" endtime="20240105 19:26:39.079"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240105 19:26:36.932" endtime="20240105 19:26:39.079"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:39.082" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240105 19:26:39.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:39.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:39.081" endtime="20240105 19:26:39.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:39.084" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:39.084" endtime="20240105 19:26:39.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:39.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:39.084" endtime="20240105 19:26:39.085"/>
</kw>
<status status="PASS" starttime="20240105 19:26:39.081" endtime="20240105 19:26:39.085"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:39.087" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:43.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:43.032" level="INFO">${output} = 2024-01-05 19:26:41,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-05 19:26:41,803 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240105 19:26:39.086" endtime="20240105 19:26:43.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:43.033" level="INFO">2024-01-05 19:26:41,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-05 19:26:41,803 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-05 19:26:41,803 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2024-01-05 19:26:42,019 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20240105 19:26:43.032" endtime="20240105 19:26:43.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:43.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:43.033" endtime="20240105 19:26:43.033"/>
</kw>
<status status="PASS" starttime="20240105 19:26:39.086" endtime="20240105 19:26:43.034"/>
</kw>
<msg timestamp="20240105 19:26:43.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:39.085" endtime="20240105 19:26:43.034"/>
</kw>
<msg timestamp="20240105 19:26:43.034" level="INFO">${output} = 2024-01-05 19:26:41,736 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-05 19:26:41,803 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240105 19:26:39.085" endtime="20240105 19:26:43.034"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:43.034" endtime="20240105 19:26:43.035"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:43.037" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:43.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:43.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:43.035" endtime="20240105 19:26:43.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:43.039" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:43.038" endtime="20240105 19:26:43.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:43.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:43.039" endtime="20240105 19:26:43.039"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.035" endtime="20240105 19:26:43.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240105 19:26:39.080" endtime="20240105 19:26:43.040"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:43.044" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:43.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:43.046" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240105 19:26:43.043" endtime="20240105 19:26:43.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:43.047" level="INFO">scm</msg>
<status status="PASS" starttime="20240105 19:26:43.046" endtime="20240105 19:26:43.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:43.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:43.047" endtime="20240105 19:26:43.047"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.042" endtime="20240105 19:26:43.047"/>
</kw>
<msg timestamp="20240105 19:26:43.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:43.042" endtime="20240105 19:26:43.048"/>
</kw>
<msg timestamp="20240105 19:26:43.048" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240105 19:26:43.042" endtime="20240105 19:26:43.048"/>
</kw>
<msg timestamp="20240105 19:26:43.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:43.042" endtime="20240105 19:26:43.048"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240105 19:26:43.049" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:43.048" endtime="20240105 19:26:43.049"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:43.051" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:43.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:43.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:43.050" endtime="20240105 19:26:43.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:43.080" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:43.080" endtime="20240105 19:26:43.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:43.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:43.080" endtime="20240105 19:26:43.081"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.050" endtime="20240105 19:26:43.081"/>
</kw>
<msg timestamp="20240105 19:26:43.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:43.049" endtime="20240105 19:26:43.082"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.049" endtime="20240105 19:26:43.082"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.049" endtime="20240105 19:26:43.082"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.041" endtime="20240105 19:26:43.082"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.041" endtime="20240105 19:26:43.082"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:43.084" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:44.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:44.958" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:26:43.083" endtime="20240105 19:26:44.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:44.959" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:26:44.958" endtime="20240105 19:26:44.959"/>
</kw>
<msg timestamp="20240105 19:26:44.960" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:26:43.083" endtime="20240105 19:26:44.960"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20240105 19:26:44.962" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20240105 19:26:44.960" endtime="20240105 19:26:44.963"/>
</kw>
<msg timestamp="20240105 19:26:44.963" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20240105 19:26:44.960" endtime="20240105 19:26:44.963"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240105 19:26:44.963" endtime="20240105 19:26:44.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240105 19:26:44.963" endtime="20240105 19:26:44.963"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:26:44.963" endtime="20240105 19:26:44.964"/>
</branch>
<status status="PASS" starttime="20240105 19:26:44.963" endtime="20240105 19:26:44.964"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:26:44.964" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240105 19:26:44.964" endtime="20240105 19:26:44.965"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240105 19:26:44.965" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240105 19:26:44.965" endtime="20240105 19:26:44.965"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:26:44.966" level="INFO">${secret} = ['43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3']</msg>
<status status="PASS" starttime="20240105 19:26:44.965" endtime="20240105 19:26:44.966"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:26:44.967" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:44.966" endtime="20240105 19:26:44.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:26:44.969" level="INFO">${secret} = 43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:26:44.968" endtime="20240105 19:26:44.969"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:44.972" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:45.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:45.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:44.970" endtime="20240105 19:26:45.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:45.337" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:45.336" endtime="20240105 19:26:45.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:45.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:45.337" endtime="20240105 19:26:45.337"/>
</kw>
<status status="PASS" starttime="20240105 19:26:44.970" endtime="20240105 19:26:45.337"/>
</kw>
<msg timestamp="20240105 19:26:45.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:44.969" endtime="20240105 19:26:45.338"/>
</kw>
<status status="PASS" starttime="20240105 19:26:44.969" endtime="20240105 19:26:45.338"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:45.340" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:45.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:45.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:45.339" endtime="20240105 19:26:45.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:45.690" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:45.690" endtime="20240105 19:26:45.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:45.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:45.690" endtime="20240105 19:26:45.691"/>
</kw>
<status status="PASS" starttime="20240105 19:26:45.339" endtime="20240105 19:26:45.691"/>
</kw>
<msg timestamp="20240105 19:26:45.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:45.339" endtime="20240105 19:26:45.692"/>
</kw>
<status status="PASS" starttime="20240105 19:26:45.338" endtime="20240105 19:26:45.692"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:45.694" level="INFO">Running command 'aws configure set aws_secret_access_key 43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:46.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:46.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:45.693" endtime="20240105 19:26:46.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:46.113" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:46.112" endtime="20240105 19:26:46.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:46.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:46.113" endtime="20240105 19:26:46.113"/>
</kw>
<status status="PASS" starttime="20240105 19:26:45.693" endtime="20240105 19:26:46.113"/>
</kw>
<msg timestamp="20240105 19:26:46.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:45.692" endtime="20240105 19:26:46.114"/>
</kw>
<status status="PASS" starttime="20240105 19:26:45.692" endtime="20240105 19:26:46.114"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:46.117" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:46.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:46.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:46.115" endtime="20240105 19:26:46.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:46.472" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:46.471" endtime="20240105 19:26:46.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:46.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:46.472" endtime="20240105 19:26:46.472"/>
</kw>
<status status="PASS" starttime="20240105 19:26:46.115" endtime="20240105 19:26:46.473"/>
</kw>
<msg timestamp="20240105 19:26:46.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:46.115" endtime="20240105 19:26:46.473"/>
</kw>
<status status="PASS" starttime="20240105 19:26:46.114" endtime="20240105 19:26:46.473"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:46.476" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:46.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:46.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:46.474" endtime="20240105 19:26:46.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:46.826" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:46.825" endtime="20240105 19:26:46.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:46.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:46.826" endtime="20240105 19:26:46.826"/>
</kw>
<status status="PASS" starttime="20240105 19:26:46.474" endtime="20240105 19:26:46.826"/>
</kw>
<msg timestamp="20240105 19:26:46.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:46.474" endtime="20240105 19:26:46.827"/>
</kw>
<status status="PASS" starttime="20240105 19:26:46.473" endtime="20240105 19:26:46.827"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.082" endtime="20240105 19:26:46.827"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.082" endtime="20240105 19:26:46.827"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240105 19:26:46.827" endtime="20240105 19:26:46.828"/>
</kw>
<status status="PASS" starttime="20240105 19:26:43.041" endtime="20240105 19:26:46.828"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240105 19:26:46.829" level="INFO">${randStr} = 3436900954</msg>
<status status="PASS" starttime="20240105 19:26:46.828" endtime="20240105 19:26:46.829"/>
</kw>
<msg timestamp="20240105 19:26:46.829" level="INFO">${random} = ozone-test-3436900954</msg>
<status status="PASS" starttime="20240105 19:26:46.828" endtime="20240105 19:26:46.829"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:46.832" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-3436900954 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:48.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:48.259" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3436900954"
}</msg>
<status status="PASS" starttime="20240105 19:26:46.831" endtime="20240105 19:26:48.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:48.260" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3436900954"
}</msg>
<status status="PASS" starttime="20240105 19:26:48.260" endtime="20240105 19:26:48.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:48.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:48.260" endtime="20240105 19:26:48.261"/>
</kw>
<status status="PASS" starttime="20240105 19:26:46.830" endtime="20240105 19:26:48.261"/>
</kw>
<msg timestamp="20240105 19:26:48.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:46.830" endtime="20240105 19:26:48.262"/>
</kw>
<msg timestamp="20240105 19:26:48.262" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3436900954"
}</msg>
<status status="PASS" starttime="20240105 19:26:46.830" endtime="20240105 19:26:48.262"/>
</kw>
<msg timestamp="20240105 19:26:48.262" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-3436900954"
}</msg>
<status status="PASS" starttime="20240105 19:26:46.829" endtime="20240105 19:26:48.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:48.262" endtime="20240105 19:26:48.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:48.263" endtime="20240105 19:26:48.263"/>
</kw>
<msg timestamp="20240105 19:26:48.263" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20240105 19:26:46.829" endtime="20240105 19:26:48.263"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240105 19:26:48.263" endtime="20240105 19:26:48.263"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240105 19:26:43.040" endtime="20240105 19:26:48.264"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:48.267" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240105 19:26:48.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:48.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:48.265" endtime="20240105 19:26:48.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:48.268" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:48.268" endtime="20240105 19:26:48.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:48.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:48.268" endtime="20240105 19:26:48.269"/>
</kw>
<status status="PASS" starttime="20240105 19:26:48.265" endtime="20240105 19:26:48.269"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:48.271" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:49.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:49.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:48.270" endtime="20240105 19:26:49.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:49.476" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:49.476" endtime="20240105 19:26:49.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:49.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:49.476" endtime="20240105 19:26:49.477"/>
</kw>
<msg timestamp="20240105 19:26:49.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:48.270" endtime="20240105 19:26:49.477"/>
</kw>
<msg timestamp="20240105 19:26:49.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:48.269" endtime="20240105 19:26:49.477"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:49.477" endtime="20240105 19:26:49.478"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:49.480" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:49.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:49.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:49.478" endtime="20240105 19:26:49.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:49.482" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:49.481" endtime="20240105 19:26:49.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:49.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:49.482" endtime="20240105 19:26:49.482"/>
</kw>
<status status="PASS" starttime="20240105 19:26:49.478" endtime="20240105 19:26:49.483"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240105 19:26:48.264" endtime="20240105 19:26:49.483"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20240105 19:26:28.020" endtime="20240105 19:26:49.484"/>
</suite>
<suite id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:52.469" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:52.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:52.471" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240105 19:26:52.467" endtime="20240105 19:26:52.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:52.471" level="INFO">scm</msg>
<status status="PASS" starttime="20240105 19:26:52.471" endtime="20240105 19:26:52.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:52.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:52.472" endtime="20240105 19:26:52.472"/>
</kw>
<status status="PASS" starttime="20240105 19:26:52.466" endtime="20240105 19:26:52.472"/>
</kw>
<msg timestamp="20240105 19:26:52.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:52.466" endtime="20240105 19:26:52.473"/>
</kw>
<msg timestamp="20240105 19:26:52.473" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240105 19:26:52.466" endtime="20240105 19:26:52.473"/>
</kw>
<msg timestamp="20240105 19:26:52.474" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:52.465" endtime="20240105 19:26:52.474"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240105 19:26:52.474" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:52.474" endtime="20240105 19:26:52.474"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:52.476" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:52.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:52.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:52.475" endtime="20240105 19:26:52.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:52.504" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:52.504" endtime="20240105 19:26:52.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:52.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:52.504" endtime="20240105 19:26:52.505"/>
</kw>
<status status="PASS" starttime="20240105 19:26:52.475" endtime="20240105 19:26:52.505"/>
</kw>
<msg timestamp="20240105 19:26:52.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:52.475" endtime="20240105 19:26:52.505"/>
</kw>
<status status="PASS" starttime="20240105 19:26:52.474" endtime="20240105 19:26:52.505"/>
</kw>
<status status="PASS" starttime="20240105 19:26:52.474" endtime="20240105 19:26:52.506"/>
</kw>
<status status="PASS" starttime="20240105 19:26:52.465" endtime="20240105 19:26:52.506"/>
</kw>
<status status="PASS" starttime="20240105 19:26:52.465" endtime="20240105 19:26:52.506"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240105 19:26:52.507" level="INFO">${random} = 33895</msg>
<status status="PASS" starttime="20240105 19:26:52.507" endtime="20240105 19:26:52.507"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:52.510" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-33895 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:56.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:56.114" level="INFO">${output} = 2024-01-05 19:26:55,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-05 19:26:55,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240105 19:26:52.508" endtime="20240105 19:26:56.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:56.115" level="INFO">2024-01-05 19:26:55,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-05 19:26:55,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-05 19:26:55,117 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20240105 19:26:56.115" endtime="20240105 19:26:56.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:56.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:56.116" endtime="20240105 19:26:56.117"/>
</kw>
<status status="PASS" starttime="20240105 19:26:52.508" endtime="20240105 19:26:56.117"/>
</kw>
<msg timestamp="20240105 19:26:56.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:52.508" endtime="20240105 19:26:56.117"/>
</kw>
<msg timestamp="20240105 19:26:56.118" level="INFO">${output} = 2024-01-05 19:26:55,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-05 19:26:55,117 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240105 19:26:52.507" endtime="20240105 19:26:56.118"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:56.118" endtime="20240105 19:26:56.118"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:56.120" level="INFO">Running command 'cat /tmp/key-33895 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:56.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:56.122" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240105 19:26:56.119" endtime="20240105 19:26:56.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:56.122" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240105 19:26:56.122" endtime="20240105 19:26:56.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:56.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:56.122" endtime="20240105 19:26:56.123"/>
</kw>
<msg timestamp="20240105 19:26:56.123" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240105 19:26:56.118" endtime="20240105 19:26:56.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:26:56.123" endtime="20240105 19:26:56.123"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:56.125" level="INFO">Running command 'rm /tmp/key-33895 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:56.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:56.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:56.124" endtime="20240105 19:26:56.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:56.127" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:56.127" endtime="20240105 19:26:56.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:56.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:56.127" endtime="20240105 19:26:56.128"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.124" endtime="20240105 19:26:56.128"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240105 19:26:52.506" endtime="20240105 19:26:56.128"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:56.133" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:56.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:56.135" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240105 19:26:56.131" endtime="20240105 19:26:56.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:56.135" level="INFO">scm</msg>
<status status="PASS" starttime="20240105 19:26:56.135" endtime="20240105 19:26:56.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:56.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:56.135" endtime="20240105 19:26:56.136"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.131" endtime="20240105 19:26:56.136"/>
</kw>
<msg timestamp="20240105 19:26:56.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:56.131" endtime="20240105 19:26:56.136"/>
</kw>
<msg timestamp="20240105 19:26:56.137" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240105 19:26:56.131" endtime="20240105 19:26:56.137"/>
</kw>
<msg timestamp="20240105 19:26:56.137" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:56.130" endtime="20240105 19:26:56.137"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240105 19:26:56.137" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:56.137" endtime="20240105 19:26:56.137"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:56.140" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:56.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:56.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:56.139" endtime="20240105 19:26:56.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:56.164" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:56.163" endtime="20240105 19:26:56.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:56.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:56.164" endtime="20240105 19:26:56.165"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.138" endtime="20240105 19:26:56.165"/>
</kw>
<msg timestamp="20240105 19:26:56.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:56.138" endtime="20240105 19:26:56.165"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.138" endtime="20240105 19:26:56.165"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.137" endtime="20240105 19:26:56.165"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.130" endtime="20240105 19:26:56.166"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.130" endtime="20240105 19:26:56.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:56.168" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:58.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:58.002" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:26:56.167" endtime="20240105 19:26:58.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:58.002" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:26:58.002" endtime="20240105 19:26:58.002"/>
</kw>
<msg timestamp="20240105 19:26:58.003" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:26:56.166" endtime="20240105 19:26:58.003"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20240105 19:26:58.004" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20240105 19:26:58.003" endtime="20240105 19:26:58.004"/>
</kw>
<msg timestamp="20240105 19:26:58.004" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20240105 19:26:58.003" endtime="20240105 19:26:58.004"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240105 19:26:58.004" endtime="20240105 19:26:58.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240105 19:26:58.004" endtime="20240105 19:26:58.004"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:26:58.004" endtime="20240105 19:26:58.004"/>
</branch>
<status status="PASS" starttime="20240105 19:26:58.004" endtime="20240105 19:26:58.005"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:26:58.005" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240105 19:26:58.005" endtime="20240105 19:26:58.005"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240105 19:26:58.006" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240105 19:26:58.005" endtime="20240105 19:26:58.006"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:26:58.006" level="INFO">${secret} = ['43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3']</msg>
<status status="PASS" starttime="20240105 19:26:58.006" endtime="20240105 19:26:58.006"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:26:58.007" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:26:58.006" endtime="20240105 19:26:58.007"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:26:58.008" level="INFO">${secret} = 43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:26:58.007" endtime="20240105 19:26:58.008"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:58.011" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:58.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:58.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:58.009" endtime="20240105 19:26:58.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:58.356" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:58.356" endtime="20240105 19:26:58.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:58.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:58.356" endtime="20240105 19:26:58.357"/>
</kw>
<status status="PASS" starttime="20240105 19:26:58.009" endtime="20240105 19:26:58.357"/>
</kw>
<msg timestamp="20240105 19:26:58.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:58.009" endtime="20240105 19:26:58.358"/>
</kw>
<status status="PASS" starttime="20240105 19:26:58.008" endtime="20240105 19:26:58.358"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:58.360" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:58.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:58.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:58.359" endtime="20240105 19:26:58.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:58.704" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:58.703" endtime="20240105 19:26:58.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:58.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:58.704" endtime="20240105 19:26:58.704"/>
</kw>
<status status="PASS" starttime="20240105 19:26:58.358" endtime="20240105 19:26:58.704"/>
</kw>
<msg timestamp="20240105 19:26:58.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:58.358" endtime="20240105 19:26:58.705"/>
</kw>
<status status="PASS" starttime="20240105 19:26:58.358" endtime="20240105 19:26:58.705"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:58.707" level="INFO">Running command 'aws configure set aws_secret_access_key 43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:59.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:59.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:58.706" endtime="20240105 19:26:59.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:59.049" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:59.049" endtime="20240105 19:26:59.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:59.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:59.049" endtime="20240105 19:26:59.050"/>
</kw>
<status status="PASS" starttime="20240105 19:26:58.706" endtime="20240105 19:26:59.050"/>
</kw>
<msg timestamp="20240105 19:26:59.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:58.705" endtime="20240105 19:26:59.050"/>
</kw>
<status status="PASS" starttime="20240105 19:26:58.705" endtime="20240105 19:26:59.050"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:59.053" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:59.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:59.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:59.051" endtime="20240105 19:26:59.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:59.403" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:59.403" endtime="20240105 19:26:59.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:59.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:59.404" endtime="20240105 19:26:59.405"/>
</kw>
<status status="PASS" starttime="20240105 19:26:59.051" endtime="20240105 19:26:59.405"/>
</kw>
<msg timestamp="20240105 19:26:59.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:59.051" endtime="20240105 19:26:59.406"/>
</kw>
<status status="PASS" starttime="20240105 19:26:59.050" endtime="20240105 19:26:59.406"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:59.409" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:26:59.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:26:59.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:26:59.408" endtime="20240105 19:26:59.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:26:59.765" level="INFO"/>
<status status="PASS" starttime="20240105 19:26:59.764" endtime="20240105 19:26:59.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:26:59.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:26:59.765" endtime="20240105 19:26:59.765"/>
</kw>
<status status="PASS" starttime="20240105 19:26:59.407" endtime="20240105 19:26:59.766"/>
</kw>
<msg timestamp="20240105 19:26:59.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:26:59.407" endtime="20240105 19:26:59.766"/>
</kw>
<status status="PASS" starttime="20240105 19:26:59.406" endtime="20240105 19:26:59.766"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.166" endtime="20240105 19:26:59.766"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.166" endtime="20240105 19:26:59.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240105 19:26:59.767" endtime="20240105 19:26:59.767"/>
</kw>
<status status="PASS" starttime="20240105 19:26:56.129" endtime="20240105 19:26:59.767"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:26:59.769" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:00.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:00.341" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 05 Jan 2024 19:26:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240105 19:26:59.768" endtime="20240105 19:27:00.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:00.342" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 05 Jan 2024 19:26:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 05 Jan 2024 19:27:00 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240105 19:27:00.342" endtime="20240105 19:27:00.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:00.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:00.343" endtime="20240105 19:27:00.343"/>
</kw>
<msg timestamp="20240105 19:27:00.343" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 05 Jan 2024 19:26:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240105 19:26:59.768" endtime="20240105 19:27:00.343"/>
</kw>
<msg timestamp="20240105 19:27:00.344" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 05 Jan 2024 19:26:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240105 19:26:59.767" endtime="20240105 19:27:00.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:27:00.344" endtime="20240105 19:27:00.344"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:00.346" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:00.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:00.348" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240105 19:27:00.345" endtime="20240105 19:27:00.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:00.348" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240105 19:27:00.348" endtime="20240105 19:27:00.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:00.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:00.349" endtime="20240105 19:27:00.349"/>
</kw>
<msg timestamp="20240105 19:27:00.349" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240105 19:27:00.344" endtime="20240105 19:27:00.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:27:00.349" endtime="20240105 19:27:00.350"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:00.351" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:00.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:00.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:27:00.350" endtime="20240105 19:27:00.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:00.353" level="INFO"/>
<status status="PASS" starttime="20240105 19:27:00.353" endtime="20240105 19:27:00.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:00.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:00.353" endtime="20240105 19:27:00.354"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.350" endtime="20240105 19:27:00.354"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240105 19:26:56.129" endtime="20240105 19:27:00.354"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:00.359" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:00.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:00.361" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240105 19:27:00.358" endtime="20240105 19:27:00.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:00.361" level="INFO">scm</msg>
<status status="PASS" starttime="20240105 19:27:00.361" endtime="20240105 19:27:00.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:00.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:00.361" endtime="20240105 19:27:00.362"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.357" endtime="20240105 19:27:00.362"/>
</kw>
<msg timestamp="20240105 19:27:00.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:27:00.357" endtime="20240105 19:27:00.362"/>
</kw>
<msg timestamp="20240105 19:27:00.363" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240105 19:27:00.357" endtime="20240105 19:27:00.363"/>
</kw>
<msg timestamp="20240105 19:27:00.363" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:27:00.356" endtime="20240105 19:27:00.363"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240105 19:27:00.363" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:27:00.363" endtime="20240105 19:27:00.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:00.366" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:00.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:00.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:27:00.365" endtime="20240105 19:27:00.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:00.385" level="INFO"/>
<status status="PASS" starttime="20240105 19:27:00.385" endtime="20240105 19:27:00.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:00.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:00.385" endtime="20240105 19:27:00.386"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.364" endtime="20240105 19:27:00.386"/>
</kw>
<msg timestamp="20240105 19:27:00.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:27:00.364" endtime="20240105 19:27:00.386"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.364" endtime="20240105 19:27:00.387"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.363" endtime="20240105 19:27:00.387"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.356" endtime="20240105 19:27:00.387"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.356" endtime="20240105 19:27:00.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:00.389" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:02.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:02.144" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:27:00.388" endtime="20240105 19:27:02.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:02.145" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:27:02.144" endtime="20240105 19:27:02.145"/>
</kw>
<msg timestamp="20240105 19:27:02.145" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:27:00.388" endtime="20240105 19:27:02.145"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20240105 19:27:02.146" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20240105 19:27:02.146" endtime="20240105 19:27:02.146"/>
</kw>
<msg timestamp="20240105 19:27:02.147" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20240105 19:27:02.145" endtime="20240105 19:27:02.147"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240105 19:27:02.147" endtime="20240105 19:27:02.147"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240105 19:27:02.147" endtime="20240105 19:27:02.147"/>
</kw>
<status status="NOT RUN" starttime="20240105 19:27:02.147" endtime="20240105 19:27:02.147"/>
</branch>
<status status="PASS" starttime="20240105 19:27:02.147" endtime="20240105 19:27:02.147"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:27:02.148" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240105 19:27:02.147" endtime="20240105 19:27:02.148"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240105 19:27:02.148" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240105 19:27:02.148" endtime="20240105 19:27:02.148"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 19:27:02.148" level="INFO">${secret} = ['43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3']</msg>
<status status="PASS" starttime="20240105 19:27:02.148" endtime="20240105 19:27:02.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:27:02.149" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:27:02.149" endtime="20240105 19:27:02.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 19:27:02.150" level="INFO">${secret} = 43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3</msg>
<status status="PASS" starttime="20240105 19:27:02.150" endtime="20240105 19:27:02.150"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:02.153" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:02.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:02.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:27:02.151" endtime="20240105 19:27:02.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:02.508" level="INFO"/>
<status status="PASS" starttime="20240105 19:27:02.507" endtime="20240105 19:27:02.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:02.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:02.508" endtime="20240105 19:27:02.508"/>
</kw>
<status status="PASS" starttime="20240105 19:27:02.151" endtime="20240105 19:27:02.508"/>
</kw>
<msg timestamp="20240105 19:27:02.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:27:02.151" endtime="20240105 19:27:02.509"/>
</kw>
<status status="PASS" starttime="20240105 19:27:02.150" endtime="20240105 19:27:02.509"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:02.512" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:02.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:02.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:27:02.510" endtime="20240105 19:27:02.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:02.883" level="INFO"/>
<status status="PASS" starttime="20240105 19:27:02.882" endtime="20240105 19:27:02.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:02.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:02.883" endtime="20240105 19:27:02.884"/>
</kw>
<status status="PASS" starttime="20240105 19:27:02.510" endtime="20240105 19:27:02.884"/>
</kw>
<msg timestamp="20240105 19:27:02.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:27:02.510" endtime="20240105 19:27:02.885"/>
</kw>
<status status="PASS" starttime="20240105 19:27:02.509" endtime="20240105 19:27:02.885"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:02.889" level="INFO">Running command 'aws configure set aws_secret_access_key 43b986a2d485bd09fb9f83370017af3c9bfbda43f53be3b17b007af523da4fe3 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:03.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:03.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:27:02.887" endtime="20240105 19:27:03.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:03.249" level="INFO"/>
<status status="PASS" starttime="20240105 19:27:03.248" endtime="20240105 19:27:03.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:03.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:03.249" endtime="20240105 19:27:03.249"/>
</kw>
<status status="PASS" starttime="20240105 19:27:02.886" endtime="20240105 19:27:03.250"/>
</kw>
<msg timestamp="20240105 19:27:03.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:27:02.886" endtime="20240105 19:27:03.250"/>
</kw>
<status status="PASS" starttime="20240105 19:27:02.885" endtime="20240105 19:27:03.250"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:03.253" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:03.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:03.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:27:03.251" endtime="20240105 19:27:03.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:03.609" level="INFO"/>
<status status="PASS" starttime="20240105 19:27:03.608" endtime="20240105 19:27:03.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:03.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:03.609" endtime="20240105 19:27:03.609"/>
</kw>
<status status="PASS" starttime="20240105 19:27:03.251" endtime="20240105 19:27:03.610"/>
</kw>
<msg timestamp="20240105 19:27:03.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:27:03.251" endtime="20240105 19:27:03.610"/>
</kw>
<status status="PASS" starttime="20240105 19:27:03.250" endtime="20240105 19:27:03.610"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:03.613" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:03.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:03.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:27:03.611" endtime="20240105 19:27:03.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:03.964" level="INFO"/>
<status status="PASS" starttime="20240105 19:27:03.964" endtime="20240105 19:27:03.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:03.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:03.965" endtime="20240105 19:27:03.965"/>
</kw>
<status status="PASS" starttime="20240105 19:27:03.611" endtime="20240105 19:27:03.965"/>
</kw>
<msg timestamp="20240105 19:27:03.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:27:03.611" endtime="20240105 19:27:03.966"/>
</kw>
<status status="PASS" starttime="20240105 19:27:03.610" endtime="20240105 19:27:03.966"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.387" endtime="20240105 19:27:03.966"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.387" endtime="20240105 19:27:03.966"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240105 19:27:03.966" endtime="20240105 19:27:03.966"/>
</kw>
<status status="PASS" starttime="20240105 19:27:00.355" endtime="20240105 19:27:03.967"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:03.969" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:04.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:04.440" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 05 Jan 2024 19:26:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240105 19:27:03.968" endtime="20240105 19:27:04.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:04.441" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 05 Jan 2024 19:26:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 05 Jan 2024 19:27:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240105 19:27:04.440" endtime="20240105 19:27:04.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:04.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:04.441" endtime="20240105 19:27:04.442"/>
</kw>
<msg timestamp="20240105 19:27:04.442" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 05 Jan 2024 19:26:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240105 19:27:03.967" endtime="20240105 19:27:04.442"/>
</kw>
<msg timestamp="20240105 19:27:04.442" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 05 Jan 2024 19:26:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240105 19:27:03.967" endtime="20240105 19:27:04.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:27:04.442" endtime="20240105 19:27:04.443"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:04.444" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:04.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:04.446" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240105 19:27:04.443" endtime="20240105 19:27:04.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:04.447" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20240105 19:27:04.446" endtime="20240105 19:27:04.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:04.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:04.447" endtime="20240105 19:27:04.447"/>
</kw>
<msg timestamp="20240105 19:27:04.447" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240105 19:27:04.443" endtime="20240105 19:27:04.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 19:27:04.447" endtime="20240105 19:27:04.448"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:04.449" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:04.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:04.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:27:04.448" endtime="20240105 19:27:04.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:04.451" level="INFO"/>
<status status="PASS" starttime="20240105 19:27:04.451" endtime="20240105 19:27:04.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:04.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:04.452" endtime="20240105 19:27:04.452"/>
</kw>
<status status="PASS" starttime="20240105 19:27:04.448" endtime="20240105 19:27:04.452"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240105 19:27:00.355" endtime="20240105 19:27:04.452"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20240105 19:26:52.404" endtime="20240105 19:27:04.453"/>
</suite>
<suite id="s1-s4" name="1.3.0-1.4.0-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:07.455" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:07.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:07.457" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240105 19:27:07.452" endtime="20240105 19:27:07.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:07.458" level="INFO">scm</msg>
<status status="PASS" starttime="20240105 19:27:07.457" endtime="20240105 19:27:07.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:07.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:07.458" endtime="20240105 19:27:07.459"/>
</kw>
<status status="PASS" starttime="20240105 19:27:07.451" endtime="20240105 19:27:07.459"/>
</kw>
<msg timestamp="20240105 19:27:07.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:27:07.451" endtime="20240105 19:27:07.460"/>
</kw>
<msg timestamp="20240105 19:27:07.460" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240105 19:27:07.451" endtime="20240105 19:27:07.460"/>
</kw>
<msg timestamp="20240105 19:27:07.460" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:27:07.450" endtime="20240105 19:27:07.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240105 19:27:07.461" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240105 19:27:07.460" endtime="20240105 19:27:07.461"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:07.463" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:27:07.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20240105 19:27:07.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240105 19:27:07.462" endtime="20240105 19:27:07.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240105 19:27:07.484" level="INFO"/>
<status status="PASS" starttime="20240105 19:27:07.484" endtime="20240105 19:27:07.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240105 19:27:07.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240105 19:27:07.484" endtime="20240105 19:27:07.485"/>
</kw>
<status status="PASS" starttime="20240105 19:27:07.462" endtime="20240105 19:27:07.485"/>
</kw>
<msg timestamp="20240105 19:27:07.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240105 19:27:07.462" endtime="20240105 19:27:07.485"/>
</kw>
<status status="PASS" starttime="20240105 19:27:07.461" endtime="20240105 19:27:07.485"/>
</kw>
<status status="PASS" starttime="20240105 19:27:07.461" endtime="20240105 19:27:07.486"/>
</kw>
<status status="PASS" starttime="20240105 19:27:07.450" endtime="20240105 19:27:07.486"/>
</kw>
<status status="PASS" starttime="20240105 19:27:07.450" endtime="20240105 19:27:07.486"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240105 19:27:07.486" endtime="20240105 19:27:07.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240105 19:27:07.489" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240105 19:32:07.450" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20240105 19:27:07.487" endtime="20240105 19:32:07.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20240105 19:32:07.450" endtime="20240105 19:32:07.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20240105 19:32:07.451" endtime="20240105 19:32:07.451"/>
</kw>
<status status="FAIL" starttime="20240105 19:27:07.487" endtime="20240105 19:32:07.451"/>
</kw>
<msg timestamp="20240105 19:32:07.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20240105 19:27:07.487" endtime="20240105 19:32:07.451"/>
</kw>
<status status="FAIL" starttime="20240105 19:27:07.486" endtime="20240105 19:32:07.452"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240105 19:32:07.452" endtime="20240105 19:32:07.452"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20240105 19:27:07.449" endtime="20240105 19:32:07.452">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20240105 19:27:07.412" endtime="20240105 19:32:07.454"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="337987"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="11" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.3.0-1.4.0-1-original-check-finalization">upgrade.1.3.0-1.4.0-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.3.0-1.4.0-1-original-generate-old1">upgrade.1.3.0-1.4.0-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.3.0-1.4.0-1-original-validate-old1">upgrade.1.3.0-1.4.0-1-original-validate-old1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="1.3.0-1.4.0-1-original-prepare">upgrade.1.3.0-1.4.0-1-original-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
