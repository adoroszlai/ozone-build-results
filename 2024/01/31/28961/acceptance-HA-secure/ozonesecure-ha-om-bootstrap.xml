<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.0 (Python 3.8.10 on linux)" generated="2024-01-31T15:30:49.765129" rpa="false" schemaversion="5">
<suite id="s1" name="ozonesecure-ha-om-bootstrap">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:28:02.664000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:02.667000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:02.670000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:02.670000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:02.666000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:02.670000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:02.670000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:02.671000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:02.671000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:02.665000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:02.671000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:02.665000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:02.671000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:28:02.665000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:02.672000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:28:02.664000" elapsed="0.008000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:28:02.672000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:28:02.672000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:02.675000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:02.727000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:02.727000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:02.674000" elapsed="0.053000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:02.728000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:02.727000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:02.729000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:02.728000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:02.673000" elapsed="0.056000"/>
</kw>
<msg time="2024-01-31T15:28:02.729000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:02.673000" elapsed="0.056000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:28:02.673000" elapsed="0.056000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:28:02.672000" elapsed="0.057000"/>
</kw>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<status status="PASS" start="2024-01-31T15:28:02.663000" elapsed="0.066000"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" start="2024-01-31T15:28:02.663000" elapsed="0.066000"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" start="2024-01-31T15:28:02.619000" elapsed="0.111000"/>
</suite>
<suite id="s1-s2" name="Data-Creation-Before-Om-Bootstrap" source="/opt/hadoop/smoketest/omha/data-creation-before-om-bootstrap.robot">
<test id="s1-s2-t1" name="Volume-bucket init" line="77">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:28:07.703000" elapsed="0.001000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:07.707000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:07.709000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:07.709000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:07.705000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:07.710000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:07.709000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:07.710000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:07.710000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:07.705000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:07.711000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:07.704000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:28:07.711000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:28:07.704000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:28:07.711000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:28:07.704000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:28:07.712000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:28:07.711000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:07.715000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:07.765000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:07.765000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:07.713000" elapsed="0.053000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:07.766000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:07.766000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:07.767000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:07.766000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:07.713000" elapsed="0.054000"/>
</kw>
<msg time="2024-01-31T15:28:07.767000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:07.713000" elapsed="0.054000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:28:07.712000" elapsed="0.055000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:28:07.712000" elapsed="0.055000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:28:07.703000" elapsed="0.064000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:28:07.702000" elapsed="0.065000"/>
</kw>
<kw name="Create volume and bucket">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:07.770000" level="INFO">Running command 'ozone sh volume create /vol1 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:11.936000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:11.936000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:07.769000" elapsed="4.167000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:11.937000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:11.936000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:11.938000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:11.937000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:07.769000" elapsed="4.169000"/>
</kw>
<msg time="2024-01-31T15:28:11.938000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:07.768000" elapsed="4.170000"/>
</kw>
<msg time="2024-01-31T15:28:11.938000" level="INFO">${vol_res} = </msg>
<var>${vol_res}</var>
<arg>ozone sh volume create /${volume}</arg>
<status status="PASS" start="2024-01-31T15:28:07.768000" elapsed="4.170000"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-01-31T15:28:11.940000" level="INFO">Length is 0</msg>
<arg>${vol_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-01-31T15:28:11.938000" elapsed="0.003000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:11.944000" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:16.135000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:16.136000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:11.942000" elapsed="4.194000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:16.137000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:16.136000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:16.137000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:16.137000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:11.942000" elapsed="4.195000"/>
</kw>
<msg time="2024-01-31T15:28:16.137000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:11.941000" elapsed="4.197000"/>
</kw>
<msg time="2024-01-31T15:28:16.138000" level="INFO">${bucket_res} = </msg>
<var>${bucket_res}</var>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<status status="PASS" start="2024-01-31T15:28:11.941000" elapsed="4.197000"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-01-31T15:28:16.138000" level="INFO">Length is 0</msg>
<arg>${bucket_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-01-31T15:28:16.138000" elapsed="0.000000"/>
</kw>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<status status="PASS" start="2024-01-31T15:28:07.768000" elapsed="8.370000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:28:07.702000" elapsed="8.436000"/>
</test>
<test id="s1-s2-t2" name="Create 100 metadata keys under /vol1/bucket1" line="80">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:28:16.141000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:16.144000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:16.146000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:16.146000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:16.143000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:16.147000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:16.147000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:16.148000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:16.147000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:16.142000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:16.148000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:16.142000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:16.148000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:28:16.141000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:28:16.148000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:28:16.141000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:28:16.149000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:28:16.148000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:16.152000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:16.185000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:16.185000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:16.150000" elapsed="0.035000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:16.186000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:16.185000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:16.186000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:16.186000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:16.150000" elapsed="0.037000"/>
</kw>
<msg time="2024-01-31T15:28:16.187000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:16.150000" elapsed="0.037000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:28:16.149000" elapsed="0.038000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:28:16.149000" elapsed="0.038000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:28:16.140000" elapsed="0.047000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:28:16.140000" elapsed="0.047000"/>
</kw>
<kw name="Create metadata keys">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:16.190000" level="INFO">Running command 'ozone freon omkg -t 10 -n 100 -v vol1 -b bucket1 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:23.413000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:23.413000" level="INFO">${output} = 2024-01-31 15:28:18,120 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-31 15:28:18,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:16.189000" elapsed="7.224000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:23.414000" level="INFO">2024-01-31 15:28:18,120 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-31 15:28:18,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-01-31 15:28:18,240 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-01-31 15:28:18,300 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ypmkagnzto and number-of-tests 100
2024-01-31 15:28:18,330 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-01-31 15:28:18,554 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2024-01-31 15:28:19,333 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-01-31 15:28:19,443 [main] INFO client.ClientTrustManager: Loading certificates for client.
2024-01-31 15:28:19,993 [main] INFO protocolPB.OmTransportFactory: Loading OM transport implementation org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransportFactory as specified by configuration.
2024-01-31 15:28:20,140 [pool-2-thread-2] WARN retry.RetryInvocationHandler: A failover has occurred since the start of call #5 $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862
2024-01-31 15:28:20,195 [pool-2-thread-10] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Suggested leader is OM:om2[om2/172.25.0.112].
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:785)
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:4122)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:485)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:156)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862. Trying to failover immediately. Current retry count: 0.
2024-01-31 15:28:20,204 [pool-2-thread-10] WARN retry.RetryInvocationHandler: A failover has occurred since the start of call #8 $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862
2024-01-31 15:28:20,204 [pool-2-thread-5] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Suggested leader is OM:om2[om2/172.25.0.112].
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:785)
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:4122)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:485)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:156)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862. Trying to failover immediately. Current retry count: 0.
2024-01-31 15:28:20,206 [pool-2-thread-5] WARN retry.RetryInvocationHandler: A failover has occurred since the start of call #10 $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862
2024-01-31 15:28:20,195 [pool-2-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Suggested leader is OM:om2[om2/172.25.0.112].
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:785)
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:4122)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:485)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:156)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862. Trying to failover immediately. Current retry count: 0.
2024-01-31 15:28:20,208 [pool-2-thread-1] WARN retry.RetryInvocationHandler: A failover has occurred since the start of call #13 $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862
2024-01-31 15:28:20,208 [pool-2-thread-7] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Suggested leader is OM:om2[om2/172.25.0.112].
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:785)
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:4122)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:485)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:156)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862. Trying to failover immediately. Current retry count: 0.
2024-01-31 15:28:20,208 [pool-2-thread-7] WARN retry.RetryInvocationHandler: A failover has occurred since the start of call #7 $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862
2024-01-31 15:28:20,209 [pool-2-thread-9] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Suggested leader is OM:om2[om2/172.25.0.112].
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:785)
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:4122)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:485)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:156)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862. Trying to failover immediately. Current retry count: 0.
2024-01-31 15:28:20,211 [pool-2-thread-9] WARN retry.RetryInvocationHandler: A failover has occurred since the start of call #9 $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862
2024-01-31 15:28:20,209 [pool-2-thread-8] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Suggested leader is OM:om2[om2/172.25.0.112].
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:785)
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:4122)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:485)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:156)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862. Trying to failover immediately. Current retry count: 0.
2024-01-31 15:28:20,212 [pool-2-thread-8] WARN retry.RetryInvocationHandler: A failover has occurred since the start of call #6 $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862
2024-01-31 15:28:20,216 [pool-2-thread-4] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Suggested leader is OM:om2[om2/172.25.0.112].
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:785)
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:4122)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:485)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:156)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862. Trying to failover immediately. Current retry count: 0.
2024-01-31 15:28:20,217 [pool-2-thread-4] WARN retry.RetryInvocationHandler: A failover has occurred since the start of call #11 $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862
2024-01-31 15:28:20,217 [pool-2-thread-6] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om1 is not the leader. Suggested leader is OM:om2[om2/172.25.0.112].
	at org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer.newOMNotLeaderException(OzoneManagerRatisServer.java:785)
	at org.apache.hadoop.ozone.om.OzoneManager.checkLeaderStatus(OzoneManager.java:4122)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:485)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:156)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862. Trying to failover immediately. Current retry count: 0.
2024-01-31 15:28:20,218 [pool-2-thread-6] WARN retry.RetryInvocationHandler: A failover has occurred since the start of call #4 $Proxy25.submitRequest over nodeId=om2,nodeAddress=om2:9862
2024-01-31 15:28:20,334 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2024-01-31 15:28:21,335 [Thread-5] INFO freon.ProgressBar: Progress: 21.00 % (21 out of 100)
2024-01-31 15:28:22,335 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (60 out of 100)
2024-01-31 15:28:23,335 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2024-01-31 15:28:23,367 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=118.599763, max=931.331189, mean=288.0546830157198, stddev=184.80164894354286, median=237.487218, p75=282.101446, p95=789.898508, p98=885.592354, p99=899.104477, p999=931.331189, mean_rate=29.698982358845463, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2024-01-31 15:28:23,367 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2024-01-31 15:28:23,368 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-01-31 15:28:23,368 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:23.414000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:23.415000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:23.415000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:16.189000" elapsed="7.227000"/>
</kw>
<msg time="2024-01-31T15:28:23.416000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:16.188000" elapsed="7.228000"/>
</kw>
<msg time="2024-01-31T15:28:23.416000" level="INFO">${freon_res} = 2024-01-31 15:28:18,120 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-01-31 15:28:18,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<var>${freon_res}</var>
<arg>ozone freon omkg -t ${threads} -n ${key_num} -v ${volume} -b ${bucket}</arg>
<status status="PASS" start="2024-01-31T15:28:16.188000" elapsed="7.228000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${freon_res}</arg>
<arg>Successful executions: ${key_num}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:28:23.417000" elapsed="0.000000"/>
</kw>
<arg>10</arg>
<arg>100</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<status status="PASS" start="2024-01-31T15:28:16.187000" elapsed="7.230000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:28:16.139000" elapsed="7.278000"/>
</test>
<test id="s1-s2-t3" name="Create snapshot 'snap1'" line="83">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:28:23.420000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:23.424000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:23.427000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:23.427000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:23.422000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:23.427000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:23.427000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:23.428000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:23.428000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:23.421000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:28:23.428000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:23.421000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:28:23.429000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:28:23.420000" elapsed="0.009000"/>
</kw>
<msg time="2024-01-31T15:28:23.429000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:28:23.420000" elapsed="0.009000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:28:23.429000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:28:23.429000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:23.432000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:23.490000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:23.490000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:23.431000" elapsed="0.060000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:23.491000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:23.491000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:23.492000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:23.492000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:23.431000" elapsed="0.061000"/>
</kw>
<msg time="2024-01-31T15:28:23.492000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:23.430000" elapsed="0.062000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:28:23.430000" elapsed="0.063000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:28:23.430000" elapsed="0.063000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:28:23.419000" elapsed="0.074000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:28:23.419000" elapsed="0.074000"/>
</kw>
<kw name="Create snapshot">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:23.496000" level="INFO">Running command 'ozone sh snapshot create /vol1/bucket1 snap1 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:28.100000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:28.100000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:23.495000" elapsed="4.605000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.102000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:28.101000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.102000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:28.102000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:23.494000" elapsed="4.609000"/>
</kw>
<msg time="2024-01-31T15:28:28.103000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:23.494000" elapsed="4.609000"/>
</kw>
<msg time="2024-01-31T15:28:28.103000" level="INFO">${snap_res} = </msg>
<var>${snap_res}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<status status="PASS" start="2024-01-31T15:28:23.494000" elapsed="4.609000"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.104000" level="INFO">Length is 0</msg>
<arg>${snap_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-01-31T15:28:28.103000" elapsed="0.001000"/>
</kw>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<status status="PASS" start="2024-01-31T15:28:23.493000" elapsed="4.611000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:28:23.418000" elapsed="4.686000"/>
</test>
<test id="s1-s2-t4" name="Create tmp file to be used for key creation" line="86">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:28:28.107000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:28.110000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:28.112000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:28.112000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:28.108000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.113000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:28.113000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.114000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:28.113000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:28.108000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:28.114000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:28.108000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:28.114000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:28:28.107000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:28:28.114000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:28:28.107000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.115000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:28:28.114000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:28.117000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:28.159000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:28.159000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:28.116000" elapsed="0.043000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.160000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:28.160000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.161000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:28.160000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:28.116000" elapsed="0.045000"/>
</kw>
<msg time="2024-01-31T15:28:28.161000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:28.115000" elapsed="0.046000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:28:28.115000" elapsed="0.046000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:28:28.115000" elapsed="0.046000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:28:28.106000" elapsed="0.055000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:28:28.106000" elapsed="0.055000"/>
</kw>
<kw name="Create tmp file">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:28.164000" level="INFO">Running command 'touch tmp.txt 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:28.166000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:28.166000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:28.163000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.167000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:28.166000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.167000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:28.167000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:28.163000" elapsed="0.004000"/>
</kw>
<msg time="2024-01-31T15:28:28.167000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:28.162000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:28.168000" level="INFO">${create_res} = </msg>
<var>${create_res}</var>
<arg>touch ${file_name}</arg>
<status status="PASS" start="2024-01-31T15:28:28.162000" elapsed="0.006000"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.168000" level="INFO">Length is 0</msg>
<arg>${create_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-01-31T15:28:28.168000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:28.171000" level="INFO">Running command 'ls -lah | grep 'tmp.txt' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:28.173000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:28.173000" level="INFO">${output} = -rw-r--r--  1 hadoop hadoop    0 Jan 31 15:28 tmp.txt</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:28.169000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.174000" level="INFO">-rw-r--r--  1 hadoop hadoop    0 Jan 31 15:28 tmp.txt</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:28.174000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.175000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:28.174000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:28.169000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:28.175000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:28.169000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:28.175000" level="INFO">${ls_grep_res} = -rw-r--r--  1 hadoop hadoop    0 Jan 31 15:28 tmp.txt</msg>
<var>${ls_grep_res}</var>
<arg>ls -lah | grep '${file_name}'</arg>
<status status="PASS" start="2024-01-31T15:28:28.168000" elapsed="0.007000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${ls_grep_res}</arg>
<arg>${file_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:28:28.175000" elapsed="0.001000"/>
</kw>
<arg>${TMP_FILE}</arg>
<status status="PASS" start="2024-01-31T15:28:28.161000" elapsed="0.015000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:28:28.105000" elapsed="0.071000"/>
</test>
<test id="s1-s2-t5" name="Create 2 actual keys with prefix 'sn', key contents the same as the key name" line="89">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:28:28.178000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:28.181000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:28.183000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:28.183000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:28.180000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.184000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:28.183000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.184000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:28.184000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:28.179000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:28.185000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:28.179000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:28.185000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:28:28.178000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:28:28.185000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:28:28.178000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.186000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:28:28.185000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:28.189000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:28.205000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:28.205000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:28.188000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.205000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:28.205000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.206000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:28.206000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:28.187000" elapsed="0.019000"/>
</kw>
<msg time="2024-01-31T15:28:28.206000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:28.187000" elapsed="0.019000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:28:28.186000" elapsed="0.021000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:28:28.186000" elapsed="0.021000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:28:28.177000" elapsed="0.030000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:28:28.177000" elapsed="0.030000"/>
</kw>
<kw name="Create actual keys">
<kw name="Create a key and set contents same as the keyName">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:28.211000" level="INFO">Running command 'echo "sn/key1" &gt; tmp.txt'.</msg>
<msg time="2024-01-31T15:28:28.212000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:28.212000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:28.210000" elapsed="0.002000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.213000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:28.213000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:28.214000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:28.213000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:28.209000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-31T15:28:28.214000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:28.209000" elapsed="0.005000"/>
</kw>
<arg>echo "${key_prefix}/${key_name}" &gt; ${tmp_file}</arg>
<status status="PASS" start="2024-01-31T15:28:28.209000" elapsed="0.005000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:28.217000" level="INFO">Running command 'ozone sh key put /vol1/bucket1/sn/key1 tmp.txt 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:35.611000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:35.611000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:28.215000" elapsed="7.396000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:35.612000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:35.611000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:35.612000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:35.612000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:28.215000" elapsed="7.398000"/>
</kw>
<msg time="2024-01-31T15:28:35.613000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:28.215000" elapsed="7.398000"/>
</kw>
<msg time="2024-01-31T15:28:35.613000" level="INFO">${key_res} = </msg>
<var>${key_res}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key_prefix}/${key_name} ${tmp_file}</arg>
<status status="PASS" start="2024-01-31T15:28:28.214000" elapsed="7.399000"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-01-31T15:28:35.613000" level="INFO">Length is 0</msg>
<arg>${key_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-01-31T15:28:35.613000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:35.616000" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/sn/key1 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:41.877000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:41.877000" level="INFO">${output} = sn/key1</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:35.615000" elapsed="6.262000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:41.878000" level="INFO">sn/key1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:41.877000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:41.878000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:41.878000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:35.614000" elapsed="6.264000"/>
</kw>
<msg time="2024-01-31T15:28:41.879000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:35.614000" elapsed="6.265000"/>
</kw>
<msg time="2024-01-31T15:28:41.879000" level="INFO">${key_cat_res} = sn/key1</msg>
<var>${key_cat_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/${key_prefix}/${key_name}</arg>
<status status="PASS" start="2024-01-31T15:28:35.614000" elapsed="6.265000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${key_cat_res}</arg>
<arg>${key_prefix}/${key_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:28:41.879000" elapsed="0.000000"/>
</kw>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${key_prefix}</arg>
<arg>${key_1}</arg>
<arg>${tmp_file}</arg>
<status status="PASS" start="2024-01-31T15:28:28.208000" elapsed="13.671000"/>
</kw>
<kw name="Create a key and set contents same as the keyName">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:41.883000" level="INFO">Running command 'echo "sn/key2" &gt; tmp.txt'.</msg>
<msg time="2024-01-31T15:28:41.884000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:41.884000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:41.881000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:41.885000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:41.885000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:41.886000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:41.885000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:41.881000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-31T15:28:41.886000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:41.881000" elapsed="0.005000"/>
</kw>
<arg>echo "${key_prefix}/${key_name}" &gt; ${tmp_file}</arg>
<status status="PASS" start="2024-01-31T15:28:41.880000" elapsed="0.006000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:41.889000" level="INFO">Running command 'ozone sh key put /vol1/bucket1/sn/key2 tmp.txt 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:50.785000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:50.785000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:41.888000" elapsed="8.897000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:50.786000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:50.785000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:50.786000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:50.786000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:41.887000" elapsed="8.900000"/>
</kw>
<msg time="2024-01-31T15:28:50.787000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:41.887000" elapsed="8.900000"/>
</kw>
<msg time="2024-01-31T15:28:50.787000" level="INFO">${key_res} = </msg>
<var>${key_res}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key_prefix}/${key_name} ${tmp_file}</arg>
<status status="PASS" start="2024-01-31T15:28:41.886000" elapsed="8.901000"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-01-31T15:28:50.787000" level="INFO">Length is 0</msg>
<arg>${key_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-01-31T15:28:50.787000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:50.791000" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/sn/key2 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:56.751000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:56.751000" level="INFO">${output} = sn/key2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:50.789000" elapsed="5.962000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:56.752000" level="INFO">sn/key2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:56.752000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:56.753000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:56.752000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:50.789000" elapsed="5.964000"/>
</kw>
<msg time="2024-01-31T15:28:56.753000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:50.788000" elapsed="5.965000"/>
</kw>
<msg time="2024-01-31T15:28:56.753000" level="INFO">${key_cat_res} = sn/key2</msg>
<var>${key_cat_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/${key_prefix}/${key_name}</arg>
<status status="PASS" start="2024-01-31T15:28:50.788000" elapsed="5.965000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${key_cat_res}</arg>
<arg>${key_prefix}/${key_name}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:28:56.754000" elapsed="0.000000"/>
</kw>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${key_prefix}</arg>
<arg>${key_2}</arg>
<arg>${tmp_file}</arg>
<status status="PASS" start="2024-01-31T15:28:41.880000" elapsed="14.874000"/>
</kw>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${KEY_PREFIX}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<arg>${TMP_FILE}</arg>
<status status="PASS" start="2024-01-31T15:28:28.207000" elapsed="28.547000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:28:28.176000" elapsed="28.578000"/>
</test>
<test id="s1-s2-t6" name="Create snapshot 'snap2'" line="92">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:28:56.756000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:56.759000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:56.762000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:56.762000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:56.758000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:56.762000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:56.762000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:56.763000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:56.763000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:56.758000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-31T15:28:56.763000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:56.757000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:28:56.764000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:28:56.757000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:28:56.764000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:28:56.757000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:28:56.764000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:28:56.764000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:56.767000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:28:56.779000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:28:56.779000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:56.766000" elapsed="0.013000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:28:56.780000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:28:56.780000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:28:56.781000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:28:56.781000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:56.766000" elapsed="0.015000"/>
</kw>
<msg time="2024-01-31T15:28:56.782000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:56.765000" elapsed="0.017000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:28:56.765000" elapsed="0.017000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:28:56.765000" elapsed="0.017000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:28:56.756000" elapsed="0.026000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:28:56.755000" elapsed="0.027000"/>
</kw>
<kw name="Create snapshot">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:28:56.787000" level="INFO">Running command 'ozone sh snapshot create /vol1/bucket1 snap2 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:01.396000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:01.396000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:28:56.785000" elapsed="4.611000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.397000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:01.397000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.398000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:01.397000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:28:56.784000" elapsed="4.614000"/>
</kw>
<msg time="2024-01-31T15:29:01.398000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:28:56.784000" elapsed="4.614000"/>
</kw>
<msg time="2024-01-31T15:29:01.398000" level="INFO">${snap_res} = </msg>
<var>${snap_res}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<status status="PASS" start="2024-01-31T15:28:56.783000" elapsed="4.615000"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.399000" level="INFO">Length is 0</msg>
<arg>${snap_res}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-01-31T15:29:01.398000" elapsed="0.001000"/>
</kw>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_2}</arg>
<status status="PASS" start="2024-01-31T15:28:56.782000" elapsed="4.617000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:28:56.755000" elapsed="4.644000"/>
</test>
<test id="s1-s2-t7" name="Cleanup tmp file" line="95">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:29:01.401000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:01.404000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:01.406000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:01.406000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:01.402000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.407000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:01.407000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.408000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:01.407000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:01.402000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:29:01.408000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:01.402000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:29:01.408000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:29:01.401000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:29:01.409000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:29:01.401000" elapsed="0.008000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.409000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:29:01.409000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:01.412000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:01.456000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:01.457000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:01.411000" elapsed="0.046000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.457000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:01.457000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.458000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:01.458000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:01.410000" elapsed="0.048000"/>
</kw>
<msg time="2024-01-31T15:29:01.458000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:01.410000" elapsed="0.048000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:29:01.410000" elapsed="0.048000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:29:01.409000" elapsed="0.050000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:29:01.400000" elapsed="0.059000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:29:01.400000" elapsed="0.059000"/>
</kw>
<kw name="Delete tmp file">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:01.462000" level="INFO">Running command 'rm tmp.txt 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:01.464000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:01.464000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:01.461000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.465000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:01.464000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.465000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:01.465000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:01.460000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:29:01.466000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:01.460000" elapsed="0.006000"/>
</kw>
<arg>rm ${file_name}</arg>
<status status="PASS" start="2024-01-31T15:29:01.459000" elapsed="0.007000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:01.468000" level="INFO">Running command '[[ -f tmp.txt ]] &amp;&amp; echo "File exists" || echo "File doesn't exist" 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:01.469000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:01.470000" level="INFO">${output} = File doesn't exist</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:01.467000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.470000" level="INFO">File doesn't exist</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:01.470000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:01.471000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:01.470000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:01.467000" elapsed="0.004000"/>
</kw>
<msg time="2024-01-31T15:29:01.471000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:01.466000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-31T15:29:01.471000" level="INFO">${file_exists} = File doesn't exist</msg>
<var>${file_exists}</var>
<arg>[[ -f ${file_name} ]] &amp;&amp; echo "File exists" || echo "File doesn't exist"</arg>
<status status="PASS" start="2024-01-31T15:29:01.466000" elapsed="0.005000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${file_exists}</arg>
<arg>File doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:29:01.471000" elapsed="0.001000"/>
</kw>
<arg>${TMP_FILE}</arg>
<status status="PASS" start="2024-01-31T15:29:01.459000" elapsed="0.013000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:29:01.399000" elapsed="0.073000"/>
</test>
<doc>Smoke test for creating data needed for om bootstrap load test.</doc>
<status status="PASS" start="2024-01-31T15:28:07.657000" elapsed="53.816000"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:29:31.933000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:31.936000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:31.939000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:31.939000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:31.935000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:31.940000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:31.939000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:31.940000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:31.940000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:31.935000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:29:31.941000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:31.934000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:29:31.941000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:29:31.934000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:29:31.941000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:29:31.934000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:29:31.941000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:29:31.941000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:31.944000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:31.958000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:31.958000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:31.943000" elapsed="0.015000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:31.959000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:31.959000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:31.960000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:31.959000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:31.943000" elapsed="0.017000"/>
</kw>
<msg time="2024-01-31T15:29:31.960000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:31.942000" elapsed="0.018000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:29:31.942000" elapsed="0.018000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:29:31.942000" elapsed="0.018000"/>
</kw>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<status status="PASS" start="2024-01-31T15:29:31.932000" elapsed="0.028000"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" start="2024-01-31T15:29:31.932000" elapsed="0.029000"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" start="2024-01-31T15:29:31.886000" elapsed="0.076000"/>
</suite>
<suite id="s1-s4" name="Data-Validation-After-Om-Bootstrap" source="/opt/hadoop/smoketest/omha/data-validation-after-om-bootstrap.robot">
<test id="s1-s4-t1" name="Check number of checkpoints made" line="85">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:29:36.957000" elapsed="0.001000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:36.961000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:36.963000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:36.963000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:36.959000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:36.964000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:36.963000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:36.964000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:36.964000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:36.959000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:29:36.965000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:36.958000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:29:36.965000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:29:36.958000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:29:36.965000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:29:36.958000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:29:36.966000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:29:36.965000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:36.969000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:36.991000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:36.991000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:36.967000" elapsed="0.024000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:36.992000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:36.991000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:36.992000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:36.992000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:36.967000" elapsed="0.026000"/>
</kw>
<msg time="2024-01-31T15:29:36.993000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:36.967000" elapsed="0.026000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:29:36.966000" elapsed="0.027000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:29:36.966000" elapsed="0.027000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:29:36.957000" elapsed="0.036000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:29:36.956000" elapsed="0.037000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Number of checkpoints equals 2">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:36.996000" level="INFO">Running command 'ls -lah /data/metadata/db.snapshots/checkpointState | grep 'om.db-' | wc -l 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:36.999000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:36.999000" level="INFO">${output} = 2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:36.995000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:37" level="INFO">2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:36.999000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:37" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:37" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:36.994000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:29:37.001000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:36.994000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:29:37.001000" level="INFO">${checkpoints} = 2</msg>
<var>${checkpoints}</var>
<arg>ls -lah /data/metadata/db.snapshots/checkpointState | grep 'om.db-' | wc -l</arg>
<status status="PASS" start="2024-01-31T15:29:36.994000" elapsed="0.007000"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${checkpoints} == 2</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2024-01-31T15:29:37.001000" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-01-31T15:29:36.994000" elapsed="0.008000"/>
</kw>
<arg>3min</arg>
<arg>5sec</arg>
<arg>Number of checkpoints equals 2</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:29:36.993000" elapsed="0.009000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:29:36.956000" elapsed="0.046000"/>
</test>
<test id="s1-s4-t2" name="Check current leader and transfer leadership to 'om3'" line="88">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:29:37.004000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:37.007000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:37.009000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:37.009000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:37.006000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:37.010000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:37.009000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:37.010000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:37.010000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:37.005000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-31T15:29:37.010000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:37.005000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-31T15:29:37.011000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:29:37.005000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:29:37.011000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:29:37.004000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:29:37.011000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:29:37.011000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:37.014000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:37.036000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:37.036000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:37.013000" elapsed="0.023000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:37.037000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:37.037000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:37.038000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:37.037000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:37.013000" elapsed="0.025000"/>
</kw>
<msg time="2024-01-31T15:29:37.038000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:37.012000" elapsed="0.026000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:29:37.012000" elapsed="0.026000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:29:37.011000" elapsed="0.027000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:29:37.003000" elapsed="0.035000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:29:37.003000" elapsed="0.035000"/>
</kw>
<kw name="Check current leader is different than OM">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:37.043000" level="INFO">Running command 'ozone admin om roles -id=omservice | grep 'LEADER' | awk -F ':' '{ print $1 }' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:41.283000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:41.283000" level="INFO">${output} = om2 </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:37.041000" elapsed="4.242000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:41.284000" level="INFO">om2 </msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:41.283000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:41.284000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:41.284000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:37.040000" elapsed="4.245000"/>
</kw>
<msg time="2024-01-31T15:29:41.285000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:37.039000" elapsed="4.246000"/>
</kw>
<msg time="2024-01-31T15:29:41.285000" level="INFO">${leader} = om2 </msg>
<var>${leader}</var>
<arg>ozone admin om roles -id=omservice | grep 'LEADER' | awk -F ':' '{ print $1 }'</arg>
<status status="PASS" start="2024-01-31T15:29:37.039000" elapsed="4.246000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${leader}</arg>
<arg>${om}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:29:41.285000" elapsed="0.000000"/>
</kw>
<arg>${BOOTSTRAPPED_OM}</arg>
<status status="PASS" start="2024-01-31T15:29:37.039000" elapsed="4.246000"/>
</kw>
<kw name="Transfer leadership to OM">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:41.289000" level="INFO">Running command 'ozone admin om transfer --service-id=omservice -n om3 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:58.942000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:58.942000" level="INFO">${output} = Transfer leadership successfully to om3.</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:41.287000" elapsed="17.655000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:58.943000" level="INFO">Transfer leadership successfully to om3.</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:58.942000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:58.943000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:58.943000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:41.287000" elapsed="17.657000"/>
</kw>
<msg time="2024-01-31T15:29:58.944000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:41.287000" elapsed="17.657000"/>
</kw>
<msg time="2024-01-31T15:29:58.944000" level="INFO">${result} = Transfer leadership successfully to om3.</msg>
<var>${result}</var>
<arg>ozone admin om transfer --service-id=omservice -n ${new_leader}</arg>
<status status="PASS" start="2024-01-31T15:29:41.286000" elapsed="17.658000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:29:58.944000" elapsed="0.001000"/>
</kw>
<arg>${BOOTSTRAPPED_OM}</arg>
<status status="PASS" start="2024-01-31T15:29:41.286000" elapsed="17.659000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:29:37.003000" elapsed="21.942000"/>
</test>
<test id="s1-s4-t3" name="Snapshots exist on 'om3'" line="92">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:29:58.947000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:58.950000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:58.953000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:58.953000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:58.949000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:58.953000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:58.953000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:58.954000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:58.954000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:58.948000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:29:58.954000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:58.948000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:29:58.954000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:29:58.948000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:29:58.955000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:29:58.947000" elapsed="0.008000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:29:58.955000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:29:58.955000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:58.959000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:29:58.976000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:29:58.976000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:58.957000" elapsed="0.019000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:29:58.977000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:29:58.976000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:29:58.977000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:29:58.977000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:58.957000" elapsed="0.021000"/>
</kw>
<msg time="2024-01-31T15:29:58.978000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:58.956000" elapsed="0.022000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:29:58.956000" elapsed="0.022000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:29:58.955000" elapsed="0.023000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:29:58.946000" elapsed="0.032000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:29:58.946000" elapsed="0.032000"/>
</kw>
<kw name="Check snapshots on OM">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:29:58.982000" level="INFO">Running command 'ozone sh snapshot list /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:03.551000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:03.551000" level="INFO">${output} = [ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1706714907866,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "aaae07bb-f3f4-4b2f-ab06-1e52ced...</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:29:58.980000" elapsed="4.571000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.552000" level="INFO">[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1706714907866,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "aaae07bb-f3f4-4b2f-ab06-1e52ced00c72",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-aaae07bb-f3f4-4b2f-ab06-1e52ced00c72",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1706714941268,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "5362b879-80f8-41ad-a97c-a8f031ee47ff",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-5362b879-80f8-41ad-a97c-a8f031ee47ff",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:03.552000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.553000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:03.553000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:29:58.980000" elapsed="4.573000"/>
</kw>
<msg time="2024-01-31T15:30:03.553000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:29:58.979000" elapsed="4.574000"/>
</kw>
<msg time="2024-01-31T15:30:03.553000" level="INFO">${snap_list} = [ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1706714907866,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "aaae07bb-f3f4-4b2f-ab06-1e52ced...</msg>
<var>${snap_list}</var>
<arg>ozone sh snapshot list /${volume}/${bucket}</arg>
<status status="PASS" start="2024-01-31T15:29:58.979000" elapsed="4.575000"/>
</kw>
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${snap_list}</arg>
<arg>[ ]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:30:03.554000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:03.557000" level="INFO">Running command 'echo "[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1706714907866,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "aaae07bb-f3f4-4b2f-ab06-1e52ced00c72",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-aaae07bb-f3f4-4b2f-ab06-1e52ced00c72",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1706714941268,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "5362b879-80f8-41ad-a97c-a8f031ee47ff",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-5362b879-80f8-41ad-a97c-a8f031ee47ff",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]" | grep snap1 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:03.559000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:03.559000" level="INFO">${output} =   name : snap1,</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:03.555000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.560000" level="INFO">  name : snap1,</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:03.559000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.560000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:03.560000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:03.555000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:30:03.561000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:03.555000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:30:03.561000" level="INFO">${snap1_res} =   name : snap1,</msg>
<var>${snap1_res}</var>
<arg>echo "${snap_list}" | grep ${snap_1}</arg>
<status status="PASS" start="2024-01-31T15:30:03.554000" elapsed="0.007000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${snap1_res}</arg>
<arg>${snap_1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:30:03.561000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:03.564000" level="INFO">Running command 'echo "[ {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap1",
  "creationTime" : 1706714907866,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "aaae07bb-f3f4-4b2f-ab06-1e52ced00c72",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-aaae07bb-f3f4-4b2f-ab06-1e52ced00c72",
  "referencedSize" : 0,
  "referencedReplicatedSize" : 0,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
}, {
  "volumeName" : "vol1",
  "bucketName" : "bucket1",
  "name" : "snap2",
  "creationTime" : 1706714941268,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "5362b879-80f8-41ad-a97c-a8f031ee47ff",
  "snapshotPath" : "vol1/bucket1",
  "checkpointDir" : "-5362b879-80f8-41ad-a97c-a8f031ee47ff",
  "referencedSize" : 16,
  "referencedReplicatedSize" : 48,
  "exclusiveSize" : 0,
  "exclusiveReplicatedSize" : 0
} ]" | grep snap2 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:03.566000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:03.566000" level="INFO">${output} =   name : snap2,</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:03.563000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.567000" level="INFO">  name : snap2,</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:03.566000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.567000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:03.567000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:03.562000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:30:03.568000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:03.562000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:30:03.568000" level="INFO">${snap2_res} =   name : snap2,</msg>
<var>${snap2_res}</var>
<arg>echo "${snap_list}" | grep ${snap_2}</arg>
<status status="PASS" start="2024-01-31T15:30:03.561000" elapsed="0.007000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${snap2_res}</arg>
<arg>${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:30:03.568000" elapsed="0.000000"/>
</kw>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<arg>${SNAP_2}</arg>
<status status="PASS" start="2024-01-31T15:29:58.978000" elapsed="4.590000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:29:58.945000" elapsed="4.624000"/>
</test>
<test id="s1-s4-t4" name="Run snap diff on 'om3' and check diff keys" line="95">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:30:03.571000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:03.574000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:03.576000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:03.576000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:03.572000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.577000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:03.576000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.577000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:03.577000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:03.572000" elapsed="0.005000"/>
</kw>
<msg time="2024-01-31T15:30:03.578000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:03.572000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:30:03.578000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:30:03.571000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:30:03.578000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:30:03.571000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.578000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:30:03.578000" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:03.581000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:03.596000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:03.596000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:03.580000" elapsed="0.016000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.596000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:03.596000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:03.597000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:03.597000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:03.580000" elapsed="0.017000"/>
</kw>
<msg time="2024-01-31T15:30:03.597000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:03.580000" elapsed="0.017000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:30:03.579000" elapsed="0.018000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:30:03.579000" elapsed="0.019000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:30:03.570000" elapsed="0.028000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:30:03.570000" elapsed="0.028000"/>
</kw>
<kw name="Run snap diff and validate results">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Snap diff finished">
<kw name="Run snap diff and get response">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:03.602000" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:07.675000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:07.675000" level="INFO">${output} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:03.601000" elapsed="4.074000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:07.676000" level="INFO">Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:07.675000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:07.677000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:07.676000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:03.601000" elapsed="4.076000"/>
</kw>
<msg time="2024-01-31T15:30:07.677000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:03.600000" elapsed="4.077000"/>
</kw>
<msg time="2024-01-31T15:30:07.678000" level="INFO">${diff_res} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<status status="PASS" start="2024-01-31T15:30:03.600000" elapsed="4.078000"/>
</kw>
<msg time="2024-01-31T15:30:07.678000" level="INFO">${diff_res} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
</msg>
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<status status="PASS" start="2024-01-31T15:30:03.599000" elapsed="4.079000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-01-31T15:30:07.678000" level="FAIL">'Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.
' does not contain 'Difference between snapshot: snap1 and snapshot: snap2'</msg>
<arg>${diff_res}</arg>
<arg>Difference between snapshot: ${snap_1} and snapshot: ${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-01-31T15:30:07.678000" elapsed="0.001000"/>
</kw>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<status status="FAIL" start="2024-01-31T15:30:03.599000" elapsed="4.080000"/>
</kw>
<kw name="Snap diff finished">
<kw name="Run snap diff and get response">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:10.684000" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:14.916000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:14.916000" level="INFO">${output} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:10.682000" elapsed="4.234000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:14.917000" level="INFO">Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:14.917000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:14.918000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:14.917000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:10.681000" elapsed="4.237000"/>
</kw>
<msg time="2024-01-31T15:30:14.918000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:10.681000" elapsed="4.237000"/>
</kw>
<msg time="2024-01-31T15:30:14.918000" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<status status="PASS" start="2024-01-31T15:30:10.681000" elapsed="4.237000"/>
</kw>
<msg time="2024-01-31T15:30:14.919000" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<status status="PASS" start="2024-01-31T15:30:10.680000" elapsed="4.239000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${diff_res}</arg>
<arg>Difference between snapshot: ${snap_1} and snapshot: ${snap_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:30:14.919000" elapsed="0.000000"/>
</kw>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<status status="PASS" start="2024-01-31T15:30:10.679000" elapsed="4.240000"/>
</kw>
<arg>2min</arg>
<arg>3sec</arg>
<arg>Snap diff finished</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:30:03.599000" elapsed="11.320000"/>
</kw>
<kw name="Run snap diff and get response">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:14.923000" level="INFO">Running command 'ozone sh snapshot diff /vol1/bucket1 snap1 snap2 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:19.315000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:19.315000" level="INFO">${output} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:14.921000" elapsed="4.394000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.316000" level="INFO">Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:19.315000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.316000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:19.316000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:14.921000" elapsed="4.396000"/>
</kw>
<msg time="2024-01-31T15:30:19.317000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:14.921000" elapsed="4.396000"/>
</kw>
<msg time="2024-01-31T15:30:19.317000" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<var>${diff_res}</var>
<arg>ozone sh snapshot diff /${volume}/${bucket} ${snap_1} ${snap_2}</arg>
<status status="PASS" start="2024-01-31T15:30:14.920000" elapsed="4.397000"/>
</kw>
<msg time="2024-01-31T15:30:19.317000" level="INFO">${diff_res} = Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
</msg>
<var>${diff_res}</var>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${snap_1}</arg>
<arg>${snap_2}</arg>
<status status="PASS" start="2024-01-31T15:30:14.920000" elapsed="4.397000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:19.321000" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep 'key' | wc -l 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:19.324000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:19.324000" level="INFO">${output} = 2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:19.319000" elapsed="0.005000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.325000" level="INFO">2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:19.324000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.325000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:19.325000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:19.318000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:30:19.325000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:19.318000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-31T15:30:19.326000" level="INFO">${key_num} = 2</msg>
<var>${key_num}</var>
<arg>echo "${diff_res}" | grep 'key' | wc -l</arg>
<status status="PASS" start="2024-01-31T15:30:19.317000" elapsed="0.009000"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${key_num} == 2</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2024-01-31T15:30:19.326000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:19.329000" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep key1 | wc -l 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:19.334000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:19.334000" level="INFO">${output} = 1</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:19.328000" elapsed="0.006000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.335000" level="INFO">1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:19.334000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.335000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:19.335000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:19.327000" elapsed="0.008000"/>
</kw>
<msg time="2024-01-31T15:30:19.336000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:19.327000" elapsed="0.009000"/>
</kw>
<msg time="2024-01-31T15:30:19.336000" level="INFO">${diff_key1} = 1</msg>
<var>${diff_key1}</var>
<arg>echo "${diff_res}" | grep ${key_1} | wc -l</arg>
<status status="PASS" start="2024-01-31T15:30:19.326000" elapsed="0.010000"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${diff_key1} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2024-01-31T15:30:19.336000" elapsed="0.000000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:19.339000" level="INFO">Running command 'echo "Difference between snapshot: snap1 and snapshot: snap2
+	./sn
+	./sn/key1
+	./sn/key2
" | grep key2 | wc -l 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:19.341000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:19.341000" level="INFO">${output} = 1</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:19.338000" elapsed="0.003000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.342000" level="INFO">1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:19.341000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.342000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:19.342000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:19.337000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:30:19.343000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:19.337000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:30:19.343000" level="INFO">${diff_key2} = 1</msg>
<var>${diff_key2}</var>
<arg>echo "${diff_res}" | grep ${key_2} | wc -l</arg>
<status status="PASS" start="2024-01-31T15:30:19.337000" elapsed="0.006000"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${diff_key2} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2024-01-31T15:30:19.343000" elapsed="0.001000"/>
</kw>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_1}</arg>
<arg>${SNAP_2}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<status status="PASS" start="2024-01-31T15:30:03.598000" elapsed="15.746000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:30:03.569000" elapsed="15.775000"/>
</test>
<test id="s1-s4-t5" name="Cat snapshot keys and validate contents" line="98">
<kw name="Run Keyword If" owner="BuiltIn" type="SETUP">
<kw name="Kinit test user" owner="commonlib">
<kw name="Pass Execution If" owner="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-01-31T15:30:19.346000" elapsed="0.000000"/>
</kw>
<kw name="Get test user principal" owner="commonlib">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:19.349000" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:19.352000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:19.352000" level="INFO">${output} = om</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:19.348000" elapsed="0.004000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.353000" level="INFO">om</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:19.352000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.353000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:19.353000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:19.347000" elapsed="0.006000"/>
</kw>
<msg time="2024-01-31T15:30:19.353000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:19.347000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:30:19.354000" level="INFO">${instance} = om</msg>
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<status status="PASS" start="2024-01-31T15:30:19.347000" elapsed="0.007000"/>
</kw>
<msg time="2024-01-31T15:30:19.354000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<var>${TEST_USER}</var>
<arg>${user}</arg>
<status status="PASS" start="2024-01-31T15:30:19.347000" elapsed="0.007000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.354000" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-01-31T15:30:19.354000" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:19.357000" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:19.373000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:19.373000" level="INFO">${output} = </msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:19.356000" elapsed="0.017000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.374000" level="INFO"/>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:19.374000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:19.375000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:19.374000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:19.356000" elapsed="0.019000"/>
</kw>
<msg time="2024-01-31T15:30:19.375000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:19.355000" elapsed="0.020000"/>
</kw>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<status status="PASS" start="2024-01-31T15:30:19.355000" elapsed="0.020000"/>
</kw>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-01-31T15:30:19.355000" elapsed="0.020000"/>
</kw>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<status status="PASS" start="2024-01-31T15:30:19.346000" elapsed="0.029000"/>
</kw>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-01-31T15:30:19.345000" elapsed="0.030000"/>
</kw>
<kw name="Validate keys under snapshot">
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:19.379000" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/.snapshot/snap2/sn/key1 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:25.608000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:25.608000" level="INFO">${output} = sn/key1</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:19.377000" elapsed="6.231000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:25.609000" level="INFO">sn/key1</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:25.608000" elapsed="0.001000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:25.609000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:25.609000" elapsed="0.000000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:19.377000" elapsed="6.233000"/>
</kw>
<msg time="2024-01-31T15:30:25.610000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:19.377000" elapsed="6.233000"/>
</kw>
<msg time="2024-01-31T15:30:25.610000" level="INFO">${key1_res} = sn/key1</msg>
<var>${key1_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/.snapshot/${snap}/${key_prefix}/${key_1}</arg>
<status status="PASS" start="2024-01-31T15:30:19.376000" elapsed="6.234000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${key1_res}</arg>
<arg>${key_prefix}/${key_1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:30:25.610000" elapsed="0.001000"/>
</kw>
<kw name="Execute" owner="os">
<kw name="Run Keyword And Return" owner="BuiltIn">
<kw name="Execute and checkrc" owner="os">
<kw name="Run And Return Rc And Output" owner="OperatingSystem">
<msg time="2024-01-31T15:30:25.614000" level="INFO">Running command 'ozone sh key cat /vol1/bucket1/.snapshot/snap2/sn/key2 2&gt;&amp;1'.</msg>
<msg time="2024-01-31T15:30:31.481000" level="INFO">${rc} = 0</msg>
<msg time="2024-01-31T15:30:31.481000" level="INFO">${output} = sn/key2</msg>
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="PASS" start="2024-01-31T15:30:25.612000" elapsed="5.869000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-01-31T15:30:31.482000" level="INFO">sn/key2</msg>
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-01-31T15:30:31.482000" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-01-31T15:30:31.483000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-01-31T15:30:31.482000" elapsed="0.001000"/>
</kw>
<arg>${command}</arg>
<arg>0</arg>
<status status="PASS" start="2024-01-31T15:30:25.612000" elapsed="5.871000"/>
</kw>
<msg time="2024-01-31T15:30:31.483000" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<status status="PASS" start="2024-01-31T15:30:25.611000" elapsed="5.872000"/>
</kw>
<msg time="2024-01-31T15:30:31.483000" level="INFO">${key2_res} = sn/key2</msg>
<var>${key2_res}</var>
<arg>ozone sh key cat /${volume}/${bucket}/.snapshot/${snap}/${key_prefix}/${key_2}</arg>
<status status="PASS" start="2024-01-31T15:30:25.611000" elapsed="5.872000"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${key2_res}</arg>
<arg>${key_prefix}/${key_2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-01-31T15:30:31.484000" elapsed="0.000000"/>
</kw>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>${SNAP_2}</arg>
<arg>${KEY_PREFIX}</arg>
<arg>${KEY_1}</arg>
<arg>${KEY_2}</arg>
<status status="PASS" start="2024-01-31T15:30:19.376000" elapsed="12.108000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" start="2024-01-31T15:30:19.344000" elapsed="12.140000"/>
</test>
<doc>Smoke test for validating snapshot data after om bootstrap.</doc>
<status status="PASS" start="2024-01-31T15:29:36.912000" elapsed="54.573000"/>
</suite>
<status status="PASS" elapsed="108.576000"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozonesecure-ha-om-bootstrap">ozonesecure-ha-om-bootstrap</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-om-bootstrap.Kinit</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="Data-Creation-Before-Om-Bootstrap">ozonesecure-ha-om-bootstrap.Data-Creation-Before-Om-Bootstrap</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-om-bootstrap.Kinit</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="Data-Validation-After-Om-Bootstrap">ozonesecure-ha-om-bootstrap.Data-Validation-After-Om-Bootstrap</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
